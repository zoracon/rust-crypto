{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2","program":"/home/alexis/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio","--edition=2018","/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=bca09118475c9ad2","-C","extra-filename=-bca09118475c9ad2","--out-dir","/home/alexis/Documents/Rust/repo/Rust/xfiveohnine/target/rls/debug/deps","-L","dependency=/home/alexis/Documents/Rust/repo/Rust/xfiveohnine/target/rls/debug/deps","--extern","pin_project_lite=/home/alexis/Documents/Rust/repo/Rust/xfiveohnine/target/rls/debug/deps/libpin_project_lite-68d046109954eda1.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/alexis/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/alexis/Documents/Rust/repo/Rust/xfiveohnine/target/rls/debug/deps/libtokio-bca09118475c9ad2.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[15530191494279626425,15393668780484334596]},"crate_root":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src","external_crates":[{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[10344648486569477446,2454248652556920925]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14168888756904427512,16776303916459465465]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17407741297230913278,16283799328799007365]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4492142733197306814,14151866605630611617]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9785299734546160784,636286335322626912]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5680562745065174860,9217186745851755644]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1647702202987759035,15124534591008137148]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[16711431240759211485,3970175217288203291]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[125532023394459561,9172165323910118991]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[17639569287364244572,9623243733363078576]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[10466182059741283835,56412014413285874]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[6793855748667116046,87956666511033926]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15647227138251999113,1639002543540862534]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[10550792004909319356,1806099500584167781]}}],"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":0,"byte_end":15694,"line_start":1,"line_end":441,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":8293},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/macros/support.rs","byte_start":27388,"byte_end":27394,"line_start":7,"line_end":7,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":2,"index":30012},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/macros/support.rs","byte_start":27414,"byte_end":27417,"line_start":8,"line_end":8,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":2,"index":32445},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/macros/support.rs","byte_start":27438,"byte_end":27442,"line_start":9,"line_end":9,"column_start":20,"column_end":24},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":85},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":36258,"byte_end":36270,"line_start":188,"line_end":188,"column_start":31,"column_end":43},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":76}},{"kind":"Use","ref_id":{"krate":0,"index":113},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":36315,"byte_end":36324,"line_start":191,"line_end":191,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":76}},{"kind":"Use","ref_id":{"krate":0,"index":138},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":36369,"byte_end":36378,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":76}},{"kind":"Use","ref_id":{"krate":0,"index":162},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":36425,"byte_end":36435,"line_start":197,"line_end":197,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":76}},{"kind":"Use","ref_id":{"krate":0,"index":202},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":36476,"byte_end":36483,"line_start":200,"line_end":200,"column_start":25,"column_end":32},"alias_span":null,"name":"ReadBuf","value":"","parent":{"krate":0,"index":76}},{"kind":"Use","ref_id":{"krate":1,"index":2532},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":36653,"byte_end":36658,"line_start":205,"line_end":205,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":76}},{"kind":"Use","ref_id":{"krate":1,"index":6619},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":36660,"byte_end":36669,"line_start":205,"line_end":205,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":76}},{"kind":"Use","ref_id":{"krate":1,"index":2530},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":36671,"byte_end":36677,"line_start":205,"line_end":205,"column_start":37,"column_end":43},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":76}},{"kind":"Use","ref_id":{"krate":1,"index":6696},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":36679,"byte_end":36687,"line_start":205,"line_end":205,"column_start":45,"column_end":53},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":76}},{"kind":"Use","ref_id":{"krate":0,"index":245},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/mod.rs","byte_start":70521,"byte_end":70534,"line_start":28,"line_end":28,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":234}},{"kind":"Use","ref_id":{"krate":0,"index":76},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/prelude.rs","byte_start":96101,"byte_end":96105,"line_start":16,"line_end":16,"column_start":21,"column_end":25},"alias_span":null,"name":"self","value":"","parent":{"krate":0,"index":468}},{"kind":"Use","ref_id":{"krate":0,"index":85},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/prelude.rs","byte_start":96107,"byte_end":96119,"line_start":16,"line_end":16,"column_start":27,"column_end":39},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":468}},{"kind":"Use","ref_id":{"krate":0,"index":113},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/prelude.rs","byte_start":96121,"byte_end":96130,"line_start":16,"line_end":16,"column_start":41,"column_end":50},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":468}},{"kind":"Use","ref_id":{"krate":0,"index":162},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/prelude.rs","byte_start":96132,"byte_end":96142,"line_start":16,"line_end":16,"column_start":52,"column_end":62},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":468}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":0,"byte_end":15694,"line_start":1,"line_end":441,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":51},{"krate":0,"index":76},{"krate":0,"index":234},{"krate":0,"index":301},{"krate":0,"index":452},{"krate":0,"index":468},{"krate":0,"index":474},{"krate":0,"index":563},{"krate":0,"index":493},{"krate":0,"index":494}],"decl_id":null,"docs":" A runtime for writing reliable network applications without compromising speed.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: large_enum_variant, clippy\n        :: needless_doctest_main)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":55,"byte_end":167,"line_start":2,"line_end":6,"column_start":1,"column_end":3}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":168,"byte_end":274,"line_start":7,"line_end":12,"column_start":1,"column_end":3}},{"value":"! A runtime for writing reliable network applications without compromising speed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":483,"byte_end":566,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":567,"byte_end":570,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":571,"byte_end":651,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"! applications with the Rust programming language. At a high level, it","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":652,"byte_end":724,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"! provides a few major components:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":725,"byte_end":761,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":762,"byte_end":765,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! * Tools for [working with asynchronous tasks][tasks], including","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":766,"byte_end":833,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"!   [synchronization primitives and channels][sync] and [timeouts, sleeps, and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":834,"byte_end":914,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"!   intervals][time].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":915,"byte_end":938,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"! * APIs for [performing asynchronous I/O][io], including [TCP and UDP][net] sockets,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":939,"byte_end":1026,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"!   [filesystem][fs] operations, and [process] and [signal] management.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":1027,"byte_end":1100,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"! * A [runtime] for executing asynchronous code, including a task scheduler,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":1101,"byte_end":1179,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"!   an I/O driver backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":1180,"byte_end":1260,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"!   IOCP, etc...), and a high performance timer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":1261,"byte_end":1311,"line_start":33,"line_end":33,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":1312,"byte_end":1315,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! Guide level documentation is found on the [website].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":1316,"byte_end":1372,"line_start":35,"line_end":35,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":1373,"byte_end":1376,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! [tasks]: #working-with-tasks","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":1377,"byte_end":1409,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"! [sync]: crate::sync","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":1410,"byte_end":1433,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"! [time]: crate::time","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":1434,"byte_end":1457,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"! [io]: #asynchronous-io","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":1458,"byte_end":1484,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"! [net]: crate::net","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":1485,"byte_end":1506,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"! [fs]: crate::fs","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":1507,"byte_end":1526,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"! [process]: crate::process","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":1527,"byte_end":1556,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"! [signal]: crate::signal","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":1557,"byte_end":1584,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"! [fs]: crate::fs","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":1585,"byte_end":1604,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"! [runtime]: crate::runtime","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":1605,"byte_end":1634,"line_start":46,"line_end":46,"column_start":1,"column_end":30}},{"value":"! [website]: https://tokio.rs/tokio/tutorial","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":1635,"byte_end":1681,"line_start":47,"line_end":47,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":1682,"byte_end":1685,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! # A Tour of Tokio","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":1686,"byte_end":1707,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":1708,"byte_end":1711,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! Tokio consists of a number of modules that provide a range of functionality","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":1712,"byte_end":1791,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"! essential for implementing asynchronous applications in Rust. In this","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":1792,"byte_end":1865,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"! section, we will take a brief tour of Tokio, summarizing the major APIs and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":1866,"byte_end":1945,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"! their uses.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":1946,"byte_end":1961,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":1962,"byte_end":1965,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! The easiest way to get started is to enable all features. Do this by","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":1966,"byte_end":2038,"line_start":56,"line_end":56,"column_start":1,"column_end":73}},{"value":"! enabling the `full` feature flag:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":2039,"byte_end":2076,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":2077,"byte_end":2080,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":2081,"byte_end":2092,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"! tokio = { version = \"0.3\", features = [\"full\"] }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":2093,"byte_end":2145,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"! ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":2146,"byte_end":2153,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":2154,"byte_end":2157,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! ### Authoring applications","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":2158,"byte_end":2188,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":2189,"byte_end":2192,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"! Tokio is great for writing applications and most users in this case shouldn't","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":2193,"byte_end":2274,"line_start":65,"line_end":65,"column_start":1,"column_end":82}},{"value":"! worry too much about what features they should pick. If you're unsure, we suggest","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":2275,"byte_end":2360,"line_start":66,"line_end":66,"column_start":1,"column_end":86}},{"value":"! going with `full` to ensure that you don't run into any road blocks while you're","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":2361,"byte_end":2445,"line_start":67,"line_end":67,"column_start":1,"column_end":85}},{"value":"! building your application.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":2446,"byte_end":2476,"line_start":68,"line_end":68,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":2477,"byte_end":2480,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! #### Example","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":2481,"byte_end":2497,"line_start":70,"line_end":70,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":2498,"byte_end":2501,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"! This example shows the quickest way to get started with Tokio.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":2502,"byte_end":2568,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":2569,"byte_end":2572,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":2573,"byte_end":2584,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"! tokio = { version = \"0.3\", features = [\"full\"] }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":2585,"byte_end":2637,"line_start":75,"line_end":75,"column_start":1,"column_end":53}},{"value":"! ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":2638,"byte_end":2645,"line_start":76,"line_end":76,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":2646,"byte_end":2649,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"! ### Authoring libraries","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":2650,"byte_end":2677,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":2678,"byte_end":2681,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"! As a library author your goal should be to provide the lighest weight crate","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":2682,"byte_end":2761,"line_start":80,"line_end":80,"column_start":1,"column_end":80}},{"value":"! that is based on Tokio. To achieve this you should ensure that you only enable","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":2762,"byte_end":2844,"line_start":81,"line_end":81,"column_start":1,"column_end":83}},{"value":"! the features you need. This allows users to pick up your crate without having","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":2845,"byte_end":2926,"line_start":82,"line_end":82,"column_start":1,"column_end":82}},{"value":"! to enable unnecessary features.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":2927,"byte_end":2962,"line_start":83,"line_end":83,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":2963,"byte_end":2966,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"! #### Example","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":2967,"byte_end":2983,"line_start":85,"line_end":85,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":2984,"byte_end":2987,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"! This example shows how you may want to import features for a library that just","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":2988,"byte_end":3070,"line_start":87,"line_end":87,"column_start":1,"column_end":83}},{"value":"! needs to `tokio::spawn` and use a `TcpStream`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":3071,"byte_end":3121,"line_start":88,"line_end":88,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":3122,"byte_end":3125,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":3126,"byte_end":3137,"line_start":90,"line_end":90,"column_start":1,"column_end":12}},{"value":"! tokio = { version = \"0.3\", features = [\"rt\", \"net\"] }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":3138,"byte_end":3195,"line_start":91,"line_end":91,"column_start":1,"column_end":58}},{"value":"! ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":3196,"byte_end":3203,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":3204,"byte_end":3207,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"! ## Working With Tasks","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":3208,"byte_end":3233,"line_start":94,"line_end":94,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":3234,"byte_end":3237,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"! Asynchronous programs in Rust are based around lightweight, non-blocking","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":3238,"byte_end":3314,"line_start":96,"line_end":96,"column_start":1,"column_end":77}},{"value":"! units of execution called [_tasks_][tasks]. The [`tokio::task`] module provides","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":3315,"byte_end":3398,"line_start":97,"line_end":97,"column_start":1,"column_end":84}},{"value":"! important tools for working with tasks:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":3399,"byte_end":3442,"line_start":98,"line_end":98,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":3443,"byte_end":3446,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"! * The [`spawn`] function and [`JoinHandle`] type, for scheduling a new task","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":3447,"byte_end":3526,"line_start":100,"line_end":100,"column_start":1,"column_end":80}},{"value":"!   on the Tokio runtime and awaiting the output of a spawned task, respectively,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":3527,"byte_end":3610,"line_start":101,"line_end":101,"column_start":1,"column_end":84}},{"value":"! * Functions for [running blocking operations][blocking] in an asynchronous","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":3611,"byte_end":3689,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"!   task context.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":3690,"byte_end":3709,"line_start":103,"line_end":103,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":3710,"byte_end":3713,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"! The [`tokio::task`] module is present only when the \"rt\" feature flag","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":3714,"byte_end":3787,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"! is enabled.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":3788,"byte_end":3803,"line_start":106,"line_end":106,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":3804,"byte_end":3807,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! [tasks]: task/index.html#what-are-tasks","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":3808,"byte_end":3851,"line_start":108,"line_end":108,"column_start":1,"column_end":44}},{"value":"! [`tokio::task`]: crate::task","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":3852,"byte_end":3884,"line_start":109,"line_end":109,"column_start":1,"column_end":33}},{"value":"! [`spawn`]: crate::task::spawn()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":3885,"byte_end":3920,"line_start":110,"line_end":110,"column_start":1,"column_end":36}},{"value":"! [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":3921,"byte_end":3964,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"! [blocking]: task/index.html#blocking-and-yielding","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":3965,"byte_end":4018,"line_start":112,"line_end":112,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":4019,"byte_end":4022,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"! The [`tokio::sync`] module contains synchronization primitives to use when","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":4023,"byte_end":4101,"line_start":114,"line_end":114,"column_start":1,"column_end":79}},{"value":"! needing to communicate or share data. These include:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":4102,"byte_end":4158,"line_start":115,"line_end":115,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":4159,"byte_end":4162,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"! * channels ([`oneshot`], [`mpsc`], and [`watch`]), for sending values","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":4163,"byte_end":4236,"line_start":117,"line_end":117,"column_start":1,"column_end":74}},{"value":"!   between tasks,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":4237,"byte_end":4257,"line_start":118,"line_end":118,"column_start":1,"column_end":21}},{"value":"! * a non-blocking [`Mutex`], for controlling access to a shared, mutable","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":4258,"byte_end":4333,"line_start":119,"line_end":119,"column_start":1,"column_end":76}},{"value":"!   value,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":4334,"byte_end":4346,"line_start":120,"line_end":120,"column_start":1,"column_end":13}},{"value":"! * an asynchronous [`Barrier`] type, for multiple tasks to synchronize before","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":4347,"byte_end":4427,"line_start":121,"line_end":121,"column_start":1,"column_end":81}},{"value":"!   beginning a computation.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":4428,"byte_end":4458,"line_start":122,"line_end":122,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":4459,"byte_end":4462,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"! The `tokio::sync` module is present only when the \"sync\" feature flag is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":4463,"byte_end":4539,"line_start":124,"line_end":124,"column_start":1,"column_end":77}},{"value":"! enabled.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":4540,"byte_end":4552,"line_start":125,"line_end":125,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":4553,"byte_end":4556,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"! [`tokio::sync`]: crate::sync","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":4557,"byte_end":4589,"line_start":127,"line_end":127,"column_start":1,"column_end":33}},{"value":"! [`Mutex`]: crate::sync::Mutex","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":4590,"byte_end":4623,"line_start":128,"line_end":128,"column_start":1,"column_end":34}},{"value":"! [`Barrier`]: crate::sync::Barrier","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":4624,"byte_end":4661,"line_start":129,"line_end":129,"column_start":1,"column_end":38}},{"value":"! [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":4662,"byte_end":4699,"line_start":130,"line_end":130,"column_start":1,"column_end":38}},{"value":"! [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":4700,"byte_end":4731,"line_start":131,"line_end":131,"column_start":1,"column_end":32}},{"value":"! [`watch`]: crate::sync::watch","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":4732,"byte_end":4765,"line_start":132,"line_end":132,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":4766,"byte_end":4769,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"! The [`tokio::time`] module provides utilities for tracking time and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":4770,"byte_end":4841,"line_start":134,"line_end":134,"column_start":1,"column_end":72}},{"value":"! scheduling work. This includes functions for setting [timeouts][timeout] for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":4842,"byte_end":4922,"line_start":135,"line_end":135,"column_start":1,"column_end":81}},{"value":"! tasks, [sleeping][sleep] work to run in the future, or [repeating an operation at an","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":4923,"byte_end":5011,"line_start":136,"line_end":136,"column_start":1,"column_end":89}},{"value":"! interval][interval].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":5012,"byte_end":5036,"line_start":137,"line_end":137,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":5037,"byte_end":5040,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"! In order to use `tokio::time`, the \"time\" feature flag must be enabled.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":5041,"byte_end":5116,"line_start":139,"line_end":139,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":5117,"byte_end":5120,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"! [`tokio::time`]: crate::time","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":5121,"byte_end":5153,"line_start":141,"line_end":141,"column_start":1,"column_end":33}},{"value":"! [sleep]: crate::time::sleep()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":5154,"byte_end":5187,"line_start":142,"line_end":142,"column_start":1,"column_end":34}},{"value":"! [interval]: crate::time::interval()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":5188,"byte_end":5227,"line_start":143,"line_end":143,"column_start":1,"column_end":40}},{"value":"! [timeout]: crate::time::timeout()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":5228,"byte_end":5265,"line_start":144,"line_end":144,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":5266,"byte_end":5269,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"! Finally, Tokio provides a _runtime_ for executing asynchronous tasks. Most","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":5270,"byte_end":5348,"line_start":146,"line_end":146,"column_start":1,"column_end":79}},{"value":"! applications can use the [`#[tokio::main]`][main] macro to run their code on the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":5349,"byte_end":5433,"line_start":147,"line_end":147,"column_start":1,"column_end":85}},{"value":"! Tokio runtime. However, this macro provides only basic configuration options. As","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":5434,"byte_end":5518,"line_start":148,"line_end":148,"column_start":1,"column_end":85}},{"value":"! an alternative, the [`tokio::runtime`] module provides more powerful APIs for configuring","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":5519,"byte_end":5612,"line_start":149,"line_end":149,"column_start":1,"column_end":94}},{"value":"! and managing runtimes. You should use that module if the `#[tokio::main]` macro doesn't","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":5613,"byte_end":5704,"line_start":150,"line_end":150,"column_start":1,"column_end":92}},{"value":"! provide the functionality you need.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":5705,"byte_end":5744,"line_start":151,"line_end":151,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":5745,"byte_end":5748,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"! Using the runtime requires the \"rt\" or \"rt-multi-thread\" feature flags, to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":5749,"byte_end":5827,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"! enable the basic [single-threaded scheduler][rt] and the [thread-pool","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":5828,"byte_end":5901,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"! scheduler][rt-multi-thread], respectively. See the [`runtime` module","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":5902,"byte_end":5974,"line_start":155,"line_end":155,"column_start":1,"column_end":73}},{"value":"! documentation][rt-features] for details. In addition, the \"macros\" feature","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":5975,"byte_end":6053,"line_start":156,"line_end":156,"column_start":1,"column_end":79}},{"value":"! flag enables the `#[tokio::main]` and `#[tokio::test]` attributes.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":6054,"byte_end":6124,"line_start":157,"line_end":157,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":6125,"byte_end":6128,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"! [main]: attr.main.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":6129,"byte_end":6155,"line_start":159,"line_end":159,"column_start":1,"column_end":27}},{"value":"! [`tokio::runtime`]: crate::runtime","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":6156,"byte_end":6194,"line_start":160,"line_end":160,"column_start":1,"column_end":39}},{"value":"! [`Builder`]: crate::runtime::Builder","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":6195,"byte_end":6235,"line_start":161,"line_end":161,"column_start":1,"column_end":41}},{"value":"! [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":6236,"byte_end":6276,"line_start":162,"line_end":162,"column_start":1,"column_end":41}},{"value":"! [rt]: runtime/index.html#basic-scheduler","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":6277,"byte_end":6321,"line_start":163,"line_end":163,"column_start":1,"column_end":45}},{"value":"! [rt-multi-thread]: runtime/index.html#threaded-scheduler","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":6322,"byte_end":6382,"line_start":164,"line_end":164,"column_start":1,"column_end":61}},{"value":"! [rt-features]: runtime/index.html#runtime-scheduler","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":6383,"byte_end":6438,"line_start":165,"line_end":165,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":6439,"byte_end":6442,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"! ## CPU-bound tasks and blocking code","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":6443,"byte_end":6483,"line_start":167,"line_end":167,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":6484,"byte_end":6487,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"! Tokio is able to concurrently run many tasks on a few threads by repeatedly","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":6488,"byte_end":6567,"line_start":169,"line_end":169,"column_start":1,"column_end":80}},{"value":"! swapping the currently running task on each thread. However, this kind of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":6568,"byte_end":6645,"line_start":170,"line_end":170,"column_start":1,"column_end":78}},{"value":"! swapping can only happen at `.await` points, so code that spends a long time","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":6646,"byte_end":6726,"line_start":171,"line_end":171,"column_start":1,"column_end":81}},{"value":"! without reaching an `.await` will prevent other tasks from running. To","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":6727,"byte_end":6801,"line_start":172,"line_end":172,"column_start":1,"column_end":75}},{"value":"! combat this, Tokio provides two kinds of threads: Core threads and blocking","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":6802,"byte_end":6881,"line_start":173,"line_end":173,"column_start":1,"column_end":80}},{"value":"! threads. The core threads are where all asynchronous code runs, and Tokio","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":6882,"byte_end":6959,"line_start":174,"line_end":174,"column_start":1,"column_end":78}},{"value":"! will by default spawn one for each CPU core. The blocking threads are","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":6960,"byte_end":7033,"line_start":175,"line_end":175,"column_start":1,"column_end":74}},{"value":"! spawned on demand, and can be used to run blocking code that would otherwise","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":7034,"byte_end":7114,"line_start":176,"line_end":176,"column_start":1,"column_end":81}},{"value":"! block other tasks from running. Since it is not possible for Tokio to swap","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":7115,"byte_end":7193,"line_start":177,"line_end":177,"column_start":1,"column_end":79}},{"value":"! out blocking tasks, like it can do with asynchronous code, the upper limit","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":7194,"byte_end":7272,"line_start":178,"line_end":178,"column_start":1,"column_end":79}},{"value":"! on the number of blocking threads is very large. These limits can be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":7273,"byte_end":7345,"line_start":179,"line_end":179,"column_start":1,"column_end":73}},{"value":"! configured on the [`Builder`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":7346,"byte_end":7380,"line_start":180,"line_end":180,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":7381,"byte_end":7384,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"! To spawn a blocking task, you should use the [`spawn_blocking`] function.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":7385,"byte_end":7462,"line_start":182,"line_end":182,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":7463,"byte_end":7466,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"! [`Builder`]: crate::runtime::Builder","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":7467,"byte_end":7507,"line_start":184,"line_end":184,"column_start":1,"column_end":41}},{"value":"! [`spawn_blocking`]: crate::task::spawn_blocking()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":7508,"byte_end":7561,"line_start":185,"line_end":185,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":7562,"byte_end":7565,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":7566,"byte_end":7573,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"! #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":7574,"byte_end":7592,"line_start":188,"line_end":188,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":7593,"byte_end":7614,"line_start":189,"line_end":189,"column_start":1,"column_end":22}},{"value":"!     // This is running on a core thread.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":7615,"byte_end":7659,"line_start":190,"line_end":190,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":7660,"byte_end":7663,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"!     let blocking_task = tokio::task::spawn_blocking(|| {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":7664,"byte_end":7724,"line_start":192,"line_end":192,"column_start":1,"column_end":61}},{"value":"!         // This is running on a blocking thread.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":7725,"byte_end":7777,"line_start":193,"line_end":193,"column_start":1,"column_end":53}},{"value":"!         // Blocking here is ok.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":7778,"byte_end":7813,"line_start":194,"line_end":194,"column_start":1,"column_end":36}},{"value":"!     });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":7814,"byte_end":7825,"line_start":195,"line_end":195,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":7826,"byte_end":7829,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"!     // We can wait for the blocking task like this:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":7830,"byte_end":7885,"line_start":197,"line_end":197,"column_start":1,"column_end":56}},{"value":"!     // If the blocking task panics, the unwrap below will propagate the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":7886,"byte_end":7961,"line_start":198,"line_end":198,"column_start":1,"column_end":76}},{"value":"!     // panic.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":7962,"byte_end":7979,"line_start":199,"line_end":199,"column_start":1,"column_end":18}},{"value":"!     blocking_task.await.unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":7980,"byte_end":8017,"line_start":200,"line_end":200,"column_start":1,"column_end":38}},{"value":"! }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":8018,"byte_end":8023,"line_start":201,"line_end":201,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":8024,"byte_end":8031,"line_start":202,"line_end":202,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":8032,"byte_end":8035,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"! If your code is CPU-bound and you wish to limit the number of threads used","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":8036,"byte_end":8114,"line_start":204,"line_end":204,"column_start":1,"column_end":79}},{"value":"! to run it, you should run it on another thread pool such as [rayon]. You","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":8115,"byte_end":8191,"line_start":205,"line_end":205,"column_start":1,"column_end":77}},{"value":"! can use an [`oneshot`] channel to send the result back to Tokio when the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":8192,"byte_end":8268,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"! rayon task finishes.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":8269,"byte_end":8293,"line_start":207,"line_end":207,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":8294,"byte_end":8297,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"! [rayon]: https://docs.rs/rayon","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":8298,"byte_end":8332,"line_start":209,"line_end":209,"column_start":1,"column_end":35}},{"value":"! [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":8333,"byte_end":8370,"line_start":210,"line_end":210,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":8371,"byte_end":8374,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"! ## Asynchronous IO","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":8375,"byte_end":8397,"line_start":212,"line_end":212,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":8398,"byte_end":8401,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"! As well as scheduling and running tasks, Tokio provides everything you need","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":8402,"byte_end":8481,"line_start":214,"line_end":214,"column_start":1,"column_end":80}},{"value":"! to perform input and output asynchronously.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":8482,"byte_end":8529,"line_start":215,"line_end":215,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":8530,"byte_end":8533,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"! The [`tokio::io`] module provides Tokio's asynchronous core I/O primitives,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":8534,"byte_end":8613,"line_start":217,"line_end":217,"column_start":1,"column_end":80}},{"value":"! the [`AsyncRead`], [`AsyncWrite`], and [`AsyncBufRead`] traits. In addition,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":8614,"byte_end":8694,"line_start":218,"line_end":218,"column_start":1,"column_end":81}},{"value":"! when the \"io-util\" feature flag is enabled, it also provides combinators and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":8695,"byte_end":8775,"line_start":219,"line_end":219,"column_start":1,"column_end":81}},{"value":"! functions for working with these traits, forming as an asynchronous","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":8776,"byte_end":8847,"line_start":220,"line_end":220,"column_start":1,"column_end":72}},{"value":"! counterpart to [`std::io`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":8848,"byte_end":8879,"line_start":221,"line_end":221,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":8880,"byte_end":8883,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"! Tokio also includes APIs for performing various kinds of I/O and interacting","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":8884,"byte_end":8964,"line_start":223,"line_end":223,"column_start":1,"column_end":81}},{"value":"! with the operating system asynchronously. These include:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":8965,"byte_end":9025,"line_start":224,"line_end":224,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":9026,"byte_end":9029,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"! * [`tokio::net`], which contains non-blocking versions of [TCP], [UDP], and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":9030,"byte_end":9109,"line_start":226,"line_end":226,"column_start":1,"column_end":80}},{"value":"!   [Unix Domain Sockets][UDS] (enabled by the \"net\" feature flag),","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":9110,"byte_end":9179,"line_start":227,"line_end":227,"column_start":1,"column_end":70}},{"value":"! * [`tokio::fs`], similar to [`std::fs`] but for performing filesystem I/O","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":9180,"byte_end":9257,"line_start":228,"line_end":228,"column_start":1,"column_end":78}},{"value":"!   asynchronously (enabled by the \"fs\" feature flag),","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":9258,"byte_end":9314,"line_start":229,"line_end":229,"column_start":1,"column_end":57}},{"value":"! * [`tokio::signal`], for asynchronously handling Unix and Windows OS signals","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":9315,"byte_end":9395,"line_start":230,"line_end":230,"column_start":1,"column_end":81}},{"value":"!   (enabled by the \"signal\" feature flag),","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":9396,"byte_end":9441,"line_start":231,"line_end":231,"column_start":1,"column_end":46}},{"value":"! * [`tokio::process`], for spawning and managing child processes (enabled by","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":9442,"byte_end":9521,"line_start":232,"line_end":232,"column_start":1,"column_end":80}},{"value":"!   the \"process\" feature flag).","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":9522,"byte_end":9556,"line_start":233,"line_end":233,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":9557,"byte_end":9560,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"! [`tokio::io`]: crate::io","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":9561,"byte_end":9589,"line_start":235,"line_end":235,"column_start":1,"column_end":29}},{"value":"! [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":9590,"byte_end":9629,"line_start":236,"line_end":236,"column_start":1,"column_end":40}},{"value":"! [`AsyncWrite`]: crate::io::AsyncWrite","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":9630,"byte_end":9671,"line_start":237,"line_end":237,"column_start":1,"column_end":42}},{"value":"! [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":9672,"byte_end":9717,"line_start":238,"line_end":238,"column_start":1,"column_end":46}},{"value":"! [`std::io`]: std::io","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":9718,"byte_end":9742,"line_start":239,"line_end":239,"column_start":1,"column_end":25}},{"value":"! [`tokio::net`]: crate::net","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":9743,"byte_end":9773,"line_start":240,"line_end":240,"column_start":1,"column_end":31}},{"value":"! [TCP]: crate::net::tcp","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":9774,"byte_end":9800,"line_start":241,"line_end":241,"column_start":1,"column_end":27}},{"value":"! [UDP]: crate::net::udp","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":9801,"byte_end":9827,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"! [UDS]: crate::net::unix","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":9828,"byte_end":9855,"line_start":243,"line_end":243,"column_start":1,"column_end":28}},{"value":"! [`tokio::fs`]: crate::fs","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":9856,"byte_end":9884,"line_start":244,"line_end":244,"column_start":1,"column_end":29}},{"value":"! [`std::fs`]: std::fs","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":9885,"byte_end":9909,"line_start":245,"line_end":245,"column_start":1,"column_end":25}},{"value":"! [`tokio::signal`]: crate::signal","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":9910,"byte_end":9946,"line_start":246,"line_end":246,"column_start":1,"column_end":37}},{"value":"! [`tokio::process`]: crate::process","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":9947,"byte_end":9985,"line_start":247,"line_end":247,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":9986,"byte_end":9989,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":9990,"byte_end":10004,"line_start":249,"line_end":249,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":10005,"byte_end":10008,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"! A simple TCP echo server:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":10009,"byte_end":10038,"line_start":251,"line_end":251,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":10039,"byte_end":10042,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":10043,"byte_end":10056,"line_start":253,"line_end":253,"column_start":1,"column_end":14}},{"value":"! use tokio::net::TcpListener;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":10057,"byte_end":10089,"line_start":254,"line_end":254,"column_start":1,"column_end":33}},{"value":"! use tokio::prelude::*;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":10090,"byte_end":10116,"line_start":255,"line_end":255,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":10117,"byte_end":10120,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":10121,"byte_end":10139,"line_start":257,"line_end":257,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":10140,"byte_end":10203,"line_start":258,"line_end":258,"column_start":1,"column_end":64}},{"value":"!     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":10204,"byte_end":10270,"line_start":259,"line_end":259,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":10271,"byte_end":10274,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"!     loop {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":10275,"byte_end":10289,"line_start":261,"line_end":261,"column_start":1,"column_end":15}},{"value":"!         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":10290,"byte_end":10349,"line_start":262,"line_end":262,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":10350,"byte_end":10353,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"!         tokio::spawn(async move {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":10354,"byte_end":10391,"line_start":264,"line_end":264,"column_start":1,"column_end":38}},{"value":"!             let mut buf = [0; 1024];","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":10392,"byte_end":10432,"line_start":265,"line_end":265,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":10433,"byte_end":10436,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"!             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":10437,"byte_end":10517,"line_start":267,"line_end":267,"column_start":1,"column_end":81}},{"value":"!             loop {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":10518,"byte_end":10540,"line_start":268,"line_end":268,"column_start":1,"column_end":23}},{"value":"!                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":10541,"byte_end":10604,"line_start":269,"line_end":269,"column_start":1,"column_end":64}},{"value":"!                     // socket closed","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":10605,"byte_end":10645,"line_start":270,"line_end":270,"column_start":1,"column_end":41}},{"value":"!                     Ok(n) if n == 0 => return,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":10646,"byte_end":10696,"line_start":271,"line_end":271,"column_start":1,"column_end":51}},{"value":"!                     Ok(n) => n,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":10697,"byte_end":10732,"line_start":272,"line_end":272,"column_start":1,"column_end":36}},{"value":"!                     Err(e) => {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":10733,"byte_end":10768,"line_start":273,"line_end":273,"column_start":1,"column_end":36}},{"value":"!                         eprintln!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":10769,"byte_end":10852,"line_start":274,"line_end":274,"column_start":1,"column_end":84}},{"value":"!                         return;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":10853,"byte_end":10888,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"!                     }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":10889,"byte_end":10914,"line_start":276,"line_end":276,"column_start":1,"column_end":26}},{"value":"!                 };","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":10915,"byte_end":10937,"line_start":277,"line_end":277,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":10938,"byte_end":10941,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"!                 // Write the data back","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":10942,"byte_end":10984,"line_start":279,"line_end":279,"column_start":1,"column_end":43}},{"value":"!                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":10985,"byte_end":11057,"line_start":280,"line_end":280,"column_start":1,"column_end":73}},{"value":"!                     eprintln!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":11058,"byte_end":11136,"line_start":281,"line_end":281,"column_start":1,"column_end":79}},{"value":"!                     return;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":11137,"byte_end":11168,"line_start":282,"line_end":282,"column_start":1,"column_end":32}},{"value":"!                 }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":11169,"byte_end":11190,"line_start":283,"line_end":283,"column_start":1,"column_end":22}},{"value":"!             }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":11191,"byte_end":11208,"line_start":284,"line_end":284,"column_start":1,"column_end":18}},{"value":"!         });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":11209,"byte_end":11224,"line_start":285,"line_end":285,"column_start":1,"column_end":16}},{"value":"!     }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":11225,"byte_end":11234,"line_start":286,"line_end":286,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":11235,"byte_end":11240,"line_start":287,"line_end":287,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":11241,"byte_end":11248,"line_start":288,"line_end":288,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":11249,"byte_end":11252,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"! ## Feature flags","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":11253,"byte_end":11273,"line_start":290,"line_end":290,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":11274,"byte_end":11277,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"! Tokio uses a set of [feature flags] to reduce the amount of compiled code. It","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":11278,"byte_end":11359,"line_start":292,"line_end":292,"column_start":1,"column_end":82}},{"value":"! is possible to just enable certain features over others. By default, Tokio","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":11360,"byte_end":11438,"line_start":293,"line_end":293,"column_start":1,"column_end":79}},{"value":"! does not enable any features but allows one to enable a subset for their use","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":11439,"byte_end":11519,"line_start":294,"line_end":294,"column_start":1,"column_end":81}},{"value":"! case. Below is a list of the available feature flags. You may also notice","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":11520,"byte_end":11597,"line_start":295,"line_end":295,"column_start":1,"column_end":78}},{"value":"! above each function, struct and trait there is listed one or more feature flags","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":11598,"byte_end":11681,"line_start":296,"line_end":296,"column_start":1,"column_end":84}},{"value":"! that are required for that item to be used. If you are new to Tokio it is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":11682,"byte_end":11759,"line_start":297,"line_end":297,"column_start":1,"column_end":78}},{"value":"! recommended that you use the `full` feature flag which will enable all public APIs.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":11760,"byte_end":11847,"line_start":298,"line_end":298,"column_start":1,"column_end":88}},{"value":"! Beware though that this will pull in many extra dependencies that you may not","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":11848,"byte_end":11929,"line_start":299,"line_end":299,"column_start":1,"column_end":82}},{"value":"! need.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":11930,"byte_end":11939,"line_start":300,"line_end":300,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":11940,"byte_end":11943,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"! - `full`: Enables all Tokio public API features listed below.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":11944,"byte_end":12009,"line_start":302,"line_end":302,"column_start":1,"column_end":66}},{"value":"! - `rt`: Enables `tokio::spawn`, the basic (current thread) scheduler,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":12010,"byte_end":12083,"line_start":303,"line_end":303,"column_start":1,"column_end":74}},{"value":"!         and non-scheduler utilities.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":12084,"byte_end":12124,"line_start":304,"line_end":304,"column_start":1,"column_end":41}},{"value":"! - `rt-multi-thread`: Enables the heavier, multi-threaded, work-stealing scheduler.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":12125,"byte_end":12211,"line_start":305,"line_end":305,"column_start":1,"column_end":87}},{"value":"! - `io-util`: Enables the IO based `Ext` traits.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":12212,"byte_end":12263,"line_start":306,"line_end":306,"column_start":1,"column_end":52}},{"value":"! - `io-std`: Enable `Stdout`, `Stdin` and `Stderr` types.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":12264,"byte_end":12324,"line_start":307,"line_end":307,"column_start":1,"column_end":61}},{"value":"! - `net`: Enables `tokio::net` types such as `TcpStream`, `UnixStream` and `UdpSocket`,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":12325,"byte_end":12415,"line_start":308,"line_end":308,"column_start":1,"column_end":91}},{"value":"!          as well as (on Unix-like systems) `AsyncFd`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":12416,"byte_end":12472,"line_start":309,"line_end":309,"column_start":1,"column_end":57}},{"value":"! - `time`: Enables `tokio::time` types and allows the schedulers to enable","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":12473,"byte_end":12550,"line_start":310,"line_end":310,"column_start":1,"column_end":78}},{"value":"!           the built in timer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":12551,"byte_end":12584,"line_start":311,"line_end":311,"column_start":1,"column_end":34}},{"value":"! - `process`: Enables `tokio::process` types.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":12585,"byte_end":12633,"line_start":312,"line_end":312,"column_start":1,"column_end":49}},{"value":"! - `macros`: Enables `#[tokio::main]` and `#[tokio::test]` macros.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":12634,"byte_end":12703,"line_start":313,"line_end":313,"column_start":1,"column_end":70}},{"value":"! - `sync`: Enables all `tokio::sync` types.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":12704,"byte_end":12750,"line_start":314,"line_end":314,"column_start":1,"column_end":47}},{"value":"! - `stream`: Enables optional `Stream` implementations for types within Tokio.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":12751,"byte_end":12832,"line_start":315,"line_end":315,"column_start":1,"column_end":82}},{"value":"! - `signal`: Enables all `tokio::signal` types.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":12833,"byte_end":12883,"line_start":316,"line_end":316,"column_start":1,"column_end":51}},{"value":"! - `fs`: Enables `tokio::fs` types.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":12884,"byte_end":12922,"line_start":317,"line_end":317,"column_start":1,"column_end":39}},{"value":"! - `test-util`: Enables testing based infrastructure for the Tokio runtime.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":12923,"byte_end":13001,"line_start":318,"line_end":318,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":13002,"byte_end":13005,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"! _Note: `AsyncRead` and `AsyncWrite` traits do not require any features and are","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":13006,"byte_end":13088,"line_start":320,"line_end":320,"column_start":1,"column_end":83}},{"value":"! always available._","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":13089,"byte_end":13111,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":13112,"byte_end":13115,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"! ### Internal features","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":13116,"byte_end":13141,"line_start":323,"line_end":323,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":13142,"byte_end":13145,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"! These features do not expose any new API, but influence internal","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":13146,"byte_end":13214,"line_start":325,"line_end":325,"column_start":1,"column_end":69}},{"value":"! implementation aspects of Tokio, and can pull in additional","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":13215,"byte_end":13278,"line_start":326,"line_end":326,"column_start":1,"column_end":64}},{"value":"! dependencies.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":13279,"byte_end":13296,"line_start":327,"line_end":327,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":13297,"byte_end":13300,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"! - `parking_lot`: As a potential optimization, use the _parking_lot_ crate's","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":13301,"byte_end":13380,"line_start":329,"line_end":329,"column_start":1,"column_end":80}},{"value":"! synchronization primitives internally. MSRV may increase according to the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":13381,"byte_end":13458,"line_start":330,"line_end":330,"column_start":1,"column_end":78}},{"value":"! _parking_lot_ release in use.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":13459,"byte_end":13492,"line_start":331,"line_end":331,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":13493,"byte_end":13496,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"! [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":13497,"byte_end":13594,"line_start":333,"line_end":333,"column_start":1,"column_end":98}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/macros/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/macros/mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":47}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":13783,"byte_end":13795,"line_start":339,"line_end":339,"column_start":1,"column_end":13}},{"value":"allow(unused_macros)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/macros/mod.rs","byte_start":15731,"byte_end":15751,"line_start":1,"line_end":1,"column_start":36,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":47},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/macros/support.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"support","qualname":"::macros::support","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/macros/support.rs","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":514},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/future/ready.rs","byte_start":8011066,"byte_end":8011071,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ok`](ok()) function.","sig":null,"attributes":[{"value":"/ Future for the [`ok`](ok()) function.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/future/ready.rs","byte_start":8010837,"byte_end":8010878,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/future/ready.rs","byte_start":8010879,"byte_end":8010882,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `pub` in order to use the future as an associated type in a sealed trait.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/future/ready.rs","byte_start":8010883,"byte_end":8010960,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"allow(unreachable_pub)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/future/ready.rs","byte_start":8011029,"byte_end":8011054,"line_start":10,"line_end":10,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":76},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":228},{"krate":0,"index":229}],"decl_id":null,"docs":" Traits, helpers, and type definitions for asynchronous I/O functionality.","sig":null,"attributes":[{"value":"! Traits, helpers, and type definitions for asynchronous I/O functionality.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":28749,"byte_end":28826,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":28827,"byte_end":28830,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":28831,"byte_end":28902,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"! defines two traits, [`AsyncRead`] and [`AsyncWrite`], which are asynchronous","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":28903,"byte_end":28983,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"! versions of the [`Read`] and [`Write`] traits in the standard library.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":28984,"byte_end":29058,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":29059,"byte_end":29062,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! # AsyncRead and AsyncWrite","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":29063,"byte_end":29093,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":29094,"byte_end":29097,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! Like the standard library's [`Read`] and [`Write`] traits, [`AsyncRead`] and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":29098,"byte_end":29178,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"! [`AsyncWrite`] provide the most general interface for reading and writing","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":29179,"byte_end":29256,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"! input and output. Unlike the standard library's traits, however, they are","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":29257,"byte_end":29334,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"! _asynchronous_ &mdash; meaning that reading from or writing to a `tokio::io`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":29335,"byte_end":29415,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"! type will _yield_ to the Tokio scheduler when IO is not ready, rather than","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":29416,"byte_end":29494,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"! blocking. This allows other tasks to run while waiting on IO.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":29495,"byte_end":29560,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":29561,"byte_end":29564,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! Another difference is that `AsyncRead` and `AsyncWrite` only contain","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":29565,"byte_end":29637,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"! core methods needed to provide asynchronous reading and writing","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":29638,"byte_end":29705,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"! functionality. Instead, utility methods are defined in the [`AsyncReadExt`]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":29706,"byte_end":29785,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"! and [`AsyncWriteExt`] extension traits. These traits are automatically","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":29786,"byte_end":29860,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"! implemented for all values that implement `AsyncRead` and `AsyncWrite`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":29861,"byte_end":29935,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"! respectively.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":29936,"byte_end":29953,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":29954,"byte_end":29957,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! End users will rarely interact directly with `AsyncRead` and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":29958,"byte_end":30022,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"! `AsyncWrite`. Instead, they will use the async functions defined in the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":30023,"byte_end":30098,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"! extension traits. Library authors are expected to implement `AsyncRead`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":30099,"byte_end":30174,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"! and `AsyncWrite` in order to provide types that behave like byte streams.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":30175,"byte_end":30252,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":30253,"byte_end":30256,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! Even with these differences, Tokio's `AsyncRead` and `AsyncWrite` traits","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":30257,"byte_end":30333,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"! can be used in almost exactly the same manner as the standard library's","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":30334,"byte_end":30409,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"! `Read` and `Write`. Most types in the standard library that implement `Read`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":30410,"byte_end":30490,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"! and `Write` have asynchronous equivalents in `tokio` that implement","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":30491,"byte_end":30562,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"! `AsyncRead` and `AsyncWrite`, such as [`File`] and [`TcpStream`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":30563,"byte_end":30632,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":30633,"byte_end":30636,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! For example, the standard library documentation introduces `Read` by","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":30637,"byte_end":30709,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"! [demonstrating][std_example] reading some bytes from a [`std::fs::File`]. We","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":30710,"byte_end":30790,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"! can do the same with [`tokio::fs::File`][`File`]:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":30791,"byte_end":30844,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":30845,"byte_end":30848,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":30849,"byte_end":30862,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"! use tokio::io::{self, AsyncReadExt};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":30863,"byte_end":30903,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"! use tokio::fs::File;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":30904,"byte_end":30928,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":30929,"byte_end":30932,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":30933,"byte_end":30951,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"! async fn main() -> io::Result<()> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":30952,"byte_end":30991,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"!     let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":30992,"byte_end":31041,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"!     let mut buffer = [0; 10];","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":31042,"byte_end":31075,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":31076,"byte_end":31079,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"!     // read up to 10 bytes","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":31080,"byte_end":31110,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"!     let n = f.read(&mut buffer).await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":31111,"byte_end":31154,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":31155,"byte_end":31158,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"!     println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":31159,"byte_end":31209,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"!     Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":31210,"byte_end":31224,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":31225,"byte_end":31230,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":31231,"byte_end":31238,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":31239,"byte_end":31242,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! [`File`]: crate::fs::File","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":31243,"byte_end":31272,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"! [`TcpStream`]: crate::net::TcpStream","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":31273,"byte_end":31313,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"! [`std::fs::File`]: std::fs::File","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":31314,"byte_end":31350,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"! [std_example]: std::io#read-and-write","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":31351,"byte_end":31392,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":31393,"byte_end":31396,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! ## Buffered Readers and Writers","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":31397,"byte_end":31432,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":31433,"byte_end":31436,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":31437,"byte_end":31518,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"! making near-constant calls to the operating system. To help with this,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":31519,"byte_end":31593,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"! `std::io` comes with [support for _buffered_ readers and writers][stdbuf],","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":31594,"byte_end":31672,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"! and therefore, `tokio::io` does as well.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":31673,"byte_end":31717,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":31718,"byte_end":31721,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! Tokio provides an async version of the [`std::io::BufRead`] trait,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":31722,"byte_end":31792,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"! [`AsyncBufRead`]; and async [`BufReader`] and [`BufWriter`] structs, which","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":31793,"byte_end":31871,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"! wrap readers and writers. These wrappers use a buffer, reducing the number","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":31872,"byte_end":31950,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"! of calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":31951,"byte_end":32028,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":32029,"byte_end":32032,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"! For example, [`BufReader`] works with the [`AsyncBufRead`] trait to add","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":32033,"byte_end":32108,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"! extra methods to any async reader:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":32109,"byte_end":32147,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":32148,"byte_end":32151,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":32152,"byte_end":32165,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"! use tokio::io::{self, BufReader, AsyncBufReadExt};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":32166,"byte_end":32220,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"! use tokio::fs::File;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":32221,"byte_end":32245,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":32246,"byte_end":32249,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":32250,"byte_end":32268,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"! async fn main() -> io::Result<()> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":32269,"byte_end":32308,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"!     let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":32309,"byte_end":32354,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"!     let mut reader = BufReader::new(f);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":32355,"byte_end":32398,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"!     let mut buffer = String::new();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":32399,"byte_end":32438,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":32439,"byte_end":32442,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"!     // read a line into buffer","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":32443,"byte_end":32477,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"!     reader.read_line(&mut buffer).await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":32478,"byte_end":32523,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":32524,"byte_end":32527,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"!     println!(\"{}\", buffer);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":32528,"byte_end":32559,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"!     Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":32560,"byte_end":32574,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":32575,"byte_end":32580,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":32581,"byte_end":32588,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":32589,"byte_end":32592,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":32593,"byte_end":32674,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"! to [`write`](crate::io::AsyncWriteExt::write). However, you **must** flush","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":32675,"byte_end":32753,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"! [`BufWriter`] to ensure that any buffered data is written.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":32754,"byte_end":32816,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":32817,"byte_end":32820,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":32821,"byte_end":32834,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"! use tokio::io::{self, BufWriter, AsyncWriteExt};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":32835,"byte_end":32887,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"! use tokio::fs::File;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":32888,"byte_end":32912,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":32913,"byte_end":32916,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":32917,"byte_end":32935,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"! async fn main() -> io::Result<()> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":32936,"byte_end":32975,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"!     let f = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":32976,"byte_end":33023,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"!     {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":33024,"byte_end":33033,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"!         let mut writer = BufWriter::new(f);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":33034,"byte_end":33081,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":33082,"byte_end":33085,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"!         // Write a byte to the buffer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":33086,"byte_end":33128,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"!         writer.write(&[42u8]).await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":33129,"byte_end":33170,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":33171,"byte_end":33174,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"!         // Flush the buffer before it goes out of scope.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":33175,"byte_end":33235,"line_start":112,"line_end":112,"column_start":1,"column_end":61}},{"value":"!         writer.flush().await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":33236,"byte_end":33270,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":33271,"byte_end":33274,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"!     } // Unless flushed or shut down, the contents of the buffer is discarded on drop.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":33275,"byte_end":33365,"line_start":115,"line_end":115,"column_start":1,"column_end":91}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":33366,"byte_end":33369,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"!     Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":33370,"byte_end":33384,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":33385,"byte_end":33390,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":33391,"byte_end":33398,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":33399,"byte_end":33402,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"! [stdbuf]: std::io#bufreader-and-bufwriter","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":33403,"byte_end":33448,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"! [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":33449,"byte_end":33491,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"! [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":33492,"byte_end":33537,"line_start":123,"line_end":123,"column_start":1,"column_end":46}},{"value":"! [`BufReader`]: crate::io::BufReader","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":33538,"byte_end":33577,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"! [`BufWriter`]: crate::io::BufWriter","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":33578,"byte_end":33617,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":33618,"byte_end":33621,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"! ## Implementing AsyncRead and AsyncWrite","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":33622,"byte_end":33666,"line_start":127,"line_end":127,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":33667,"byte_end":33670,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"! Because they are traits, we can implement [`AsyncRead`] and [`AsyncWrite`] for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":33671,"byte_end":33753,"line_start":129,"line_end":129,"column_start":1,"column_end":83}},{"value":"! our own types, as well. Note that these traits must only be implemented for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":33754,"byte_end":33833,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"! non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":33834,"byte_end":33908,"line_start":131,"line_end":131,"column_start":1,"column_end":75}},{"value":"! other words, these types must never block the thread, and instead the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":33909,"byte_end":33982,"line_start":132,"line_end":132,"column_start":1,"column_end":74}},{"value":"! current task is notified when the I/O resource is ready.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":33983,"byte_end":34043,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":34044,"byte_end":34047,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"! ## Conversion to and from Sink/Stream","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":34048,"byte_end":34089,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":34090,"byte_end":34093,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"! It is often convenient to encapsulate the reading and writing of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":34094,"byte_end":34162,"line_start":137,"line_end":137,"column_start":1,"column_end":69}},{"value":"! bytes and instead work with a [`Sink`] or [`Stream`] of some data","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":34163,"byte_end":34232,"line_start":138,"line_end":138,"column_start":1,"column_end":70}},{"value":"! type that is encoded as bytes and/or decoded from bytes. Tokio","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":34233,"byte_end":34299,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"! provides some utility traits in the [tokio-util] crate that","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":34300,"byte_end":34363,"line_start":140,"line_end":140,"column_start":1,"column_end":64}},{"value":"! abstract the asynchronous buffering that is required and allows","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":34364,"byte_end":34431,"line_start":141,"line_end":141,"column_start":1,"column_end":68}},{"value":"! you to write [`Encoder`] and [`Decoder`] functions working with a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":34432,"byte_end":34501,"line_start":142,"line_end":142,"column_start":1,"column_end":70}},{"value":"! buffer of bytes, and then use that [\"codec\"] to transform anything","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":34502,"byte_end":34572,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"! that implements [`AsyncRead`] and [`AsyncWrite`] into a `Sink`/`Stream` of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":34573,"byte_end":34651,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"! your structured data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":34652,"byte_end":34677,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":34678,"byte_end":34681,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"! [tokio-util]: https://docs.rs/tokio-util/0.3/tokio_util/codec/index.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":34682,"byte_end":34758,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":34759,"byte_end":34762,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"! # Standard input and output","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":34763,"byte_end":34794,"line_start":149,"line_end":149,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":34795,"byte_end":34798,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"! Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":34799,"byte_end":34879,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"! These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":34880,"byte_end":34956,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"! implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":34957,"byte_end":35004,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":35005,"byte_end":35008,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"! Note that the standard input / output APIs  **must** be used from the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":35009,"byte_end":35082,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"! context of the Tokio runtime, as they require Tokio-specific features to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":35083,"byte_end":35159,"line_start":156,"line_end":156,"column_start":1,"column_end":77}},{"value":"! function. Calling these functions outside of a Tokio runtime will panic.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":35160,"byte_end":35236,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":35237,"byte_end":35240,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"! [input]: fn@stdin","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":35241,"byte_end":35262,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"! [output]: fn@stdout","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":35263,"byte_end":35286,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"! [error]: fn@stderr","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":35287,"byte_end":35309,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":35310,"byte_end":35313,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"! # `std` re-exports","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":35314,"byte_end":35336,"line_start":163,"line_end":163,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":35337,"byte_end":35340,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"! Additionally, [`Error`], [`ErrorKind`], [`Result`], and [`SeekFrom`] are","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":35341,"byte_end":35417,"line_start":165,"line_end":165,"column_start":1,"column_end":77}},{"value":"! re-exported from `std::io` for ease of use.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":35418,"byte_end":35465,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":35466,"byte_end":35469,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"! [`AsyncRead`]: trait@AsyncRead","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":35470,"byte_end":35504,"line_start":168,"line_end":168,"column_start":1,"column_end":35}},{"value":"! [`AsyncWrite`]: trait@AsyncWrite","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":35505,"byte_end":35541,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"! [`AsyncReadExt`]: trait@AsyncReadExt","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":35542,"byte_end":35582,"line_start":170,"line_end":170,"column_start":1,"column_end":41}},{"value":"! [`AsyncWriteExt`]: trait@AsyncWriteExt","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":35583,"byte_end":35625,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"! [\"codec\"]: https://docs.rs/tokio-util/0.3/tokio_util/codec/index.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":35626,"byte_end":35699,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"! [`Encoder`]: https://docs.rs/tokio-util/0.3/tokio_util/codec/trait.Encoder.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":35700,"byte_end":35783,"line_start":173,"line_end":173,"column_start":1,"column_end":84}},{"value":"! [`Decoder`]: https://docs.rs/tokio-util/0.3/tokio_util/codec/trait.Decoder.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":35784,"byte_end":35867,"line_start":174,"line_end":174,"column_start":1,"column_end":84}},{"value":"! [`Error`]: struct@Error","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":35868,"byte_end":35895,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"! [`ErrorKind`]: enum@ErrorKind","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":35896,"byte_end":35929,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"! [`Result`]: type@Result","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":35930,"byte_end":35957,"line_start":177,"line_end":177,"column_start":1,"column_end":28}},{"value":"! [`Read`]: std::io::Read","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":35958,"byte_end":35985,"line_start":178,"line_end":178,"column_start":1,"column_end":28}},{"value":"! [`SeekFrom`]: enum@SeekFrom","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":35986,"byte_end":36017,"line_start":179,"line_end":179,"column_start":1,"column_end":32}},{"value":"! [`Sink`]: https://docs.rs/futures/0.3/futures/sink/trait.Sink.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":36018,"byte_end":36088,"line_start":180,"line_end":180,"column_start":1,"column_end":71}},{"value":"! [`Stream`]: crate::stream::Stream","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":36089,"byte_end":36126,"line_start":181,"line_end":181,"column_start":1,"column_end":38}},{"value":"! [`Write`]: std::io::Write","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/mod.rs","byte_start":36127,"byte_end":36156,"line_start":182,"line_end":182,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":85},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":38753,"byte_end":38765,"line_start":23,"line_end":23,"column_start":11,"column_end":23},"name":"AsyncBufRead","qualname":"::io::async_buf_read::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87}],"decl_id":null,"docs":" Reads bytes asynchronously.","sig":null,"attributes":[{"value":"/ Reads bytes asynchronously.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":38076,"byte_end":38107,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":38108,"byte_end":38111,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to [`std::io::BufRead`], but integrates with","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":38112,"byte_end":38184,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ the asynchronous task system. In particular, the [`poll_fill_buf`] method,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":38185,"byte_end":38263,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ unlike [`BufRead::fill_buf`], will automatically queue the current task for wakeup","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":38264,"byte_end":38350,"line_start":12,"line_end":12,"column_start":1,"column_end":87}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":38351,"byte_end":38428,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":38429,"byte_end":38440,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":38441,"byte_end":38444,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncBufRead` values are provided by","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":38445,"byte_end":38513,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ [`AsyncBufReadExt`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":38514,"byte_end":38538,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":38539,"byte_end":38542,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":38543,"byte_end":38585,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":38586,"byte_end":38636,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ [`BufRead::fill_buf`]: std::io::BufRead::fill_buf","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":38637,"byte_end":38690,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ [`AsyncBufReadExt`]: crate::io::AsyncBufReadExt","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":38691,"byte_end":38742,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":39863,"byte_end":39876,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"::io::async_buf_read::AsyncBufRead::poll_fill_buf","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<&[u8]>>","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Attempts to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempts to return the contents of the internal buffer, filling it with more data","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":38783,"byte_end":38868,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":38873,"byte_end":38914,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":38919,"byte_end":38922,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":38927,"byte_end":38974,"line_start":27,"line_end":27,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":38979,"byte_end":38982,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":38987,"byte_end":39046,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":39051,"byte_end":39109,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":39114,"byte_end":39195,"line_start":31,"line_end":31,"column_start":5,"column_end":86}},{"value":"/ readable or is closed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":39200,"byte_end":39226,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":39231,"byte_end":39234,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":39239,"byte_end":39310,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":39315,"byte_end":39377,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":39382,"byte_end":39453,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":39458,"byte_end":39539,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":39544,"byte_end":39620,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":39625,"byte_end":39676,"line_start":39,"line_end":39,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":39681,"byte_end":39684,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":39689,"byte_end":39760,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":39765,"byte_end":39768,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":39773,"byte_end":39812,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":39817,"byte_end":39855,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":40779,"byte_end":40786,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::async_buf_read::AsyncBufRead::consume","value":"fn (self: Pin<&mut Self>, amt: usize) -> ()","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":39954,"byte_end":40028,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":40033,"byte_end":40100,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":40105,"byte_end":40108,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":40113,"byte_end":40184,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":40189,"byte_end":40258,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":40263,"byte_end":40337,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":40342,"byte_end":40419,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":40424,"byte_end":40494,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":40499,"byte_end":40552,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":40557,"byte_end":40560,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":40565,"byte_end":40637,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":40642,"byte_end":40664,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":40669,"byte_end":40672,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":40677,"byte_end":40716,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":40721,"byte_end":40771,"line_start":61,"line_end":61,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":113},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":44100,"byte_end":44109,"line_start":43,"line_end":43,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::io::async_read::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":114}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"/ Reads bytes from a source.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":42413,"byte_end":42443,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":42444,"byte_end":42447,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Read`] trait, but integrates with","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":42448,"byte_end":42527,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ the asynchronous task system. In particular, the [`poll_read`] method,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":42528,"byte_end":42602,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ unlike [`Read::read`], will automatically queue the current task for wakeup","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":42603,"byte_end":42682,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":42683,"byte_end":42760,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":42761,"byte_end":42772,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":42773,"byte_end":42776,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":42777,"byte_end":42854,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":42855,"byte_end":42873,"line_start":16,"line_end":16,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":42874,"byte_end":42877,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(()))` means that data was immediately read and placed into","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":42878,"byte_end":42958,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/   the output buffer. The amount of data read can be determined by the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":42959,"byte_end":43032,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/   increase in the length of the slice returned by `ReadBuf::filled`. If the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":43033,"byte_end":43112,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   difference is 0, EOF has been reached.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":43113,"byte_end":43157,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":43158,"byte_end":43161,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was read into the buffer","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":43162,"byte_end":43227,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":43228,"byte_end":43308,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":43309,"byte_end":43388,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":43389,"byte_end":43462,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":43463,"byte_end":43536,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":43537,"byte_end":43558,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":43559,"byte_end":43562,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":43563,"byte_end":43647,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":43648,"byte_end":43672,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":43673,"byte_end":43676,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":43677,"byte_end":43750,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":43751,"byte_end":43830,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":43831,"byte_end":43834,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncRead` values are provided by","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":43835,"byte_end":43900,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ [`AsyncReadExt`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":43901,"byte_end":43922,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":43923,"byte_end":43926,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":43927,"byte_end":43966,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`std::io::Read`]: std::io::Read","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":43967,"byte_end":44003,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ [`Read::read`]: std::io::Read::read","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":44004,"byte_end":44043,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ [`AsyncReadExt`]: crate::io::AsyncReadExt","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":44044,"byte_end":44089,"line_start":42,"line_end":42,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":44599,"byte_end":44608,"line_start":53,"line_end":53,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::async_read::AsyncRead::poll_read","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>, buf: &mut ReadBuf<'_>) -> Poll<io::Result<()>>","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" Attempts to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempts to read from the `AsyncRead` into `buf`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":44116,"byte_end":44169,"line_start":44,"line_end":44,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":44174,"byte_end":44177,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))` and fills `buf` with data","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":44182,"byte_end":44253,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ read. If no data was read (`buf.filled().is_empty()`) it implies that","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":44258,"byte_end":44331,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ EOF has been reached.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":44336,"byte_end":44361,"line_start":48,"line_end":48,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":44366,"byte_end":44369,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns `Poll::Pending`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":44374,"byte_end":44449,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ and arranges for the current task (via `cx.waker()`) to receive a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":44454,"byte_end":44523,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ notification when the object becomes readable or is closed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":44528,"byte_end":44591,"line_start":52,"line_end":52,"column_start":5,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":138},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":47204,"byte_end":47213,"line_start":18,"line_end":18,"column_start":11,"column_end":20},"name":"AsyncSeek","qualname":"::io::async_seek::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":46722,"byte_end":46752,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":46753,"byte_end":46756,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Seek`] trait, but integrates","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":46757,"byte_end":46831,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ with the asynchronous task system. In particular, the `start_seek`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":46832,"byte_end":46902,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ method, unlike [`Seek::seek`], will not block the calling thread.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":46903,"byte_end":46972,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":46973,"byte_end":46976,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncSeek` values are provided by","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":46977,"byte_end":47042,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ [`AsyncSeekExt`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":47043,"byte_end":47064,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":47065,"byte_end":47068,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Seek`]: std::io::Seek","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":47069,"byte_end":47105,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ [`Seek::seek`]: std::io::Seek::seek()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":47106,"byte_end":47147,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [`AsyncSeekExt`]: crate::io::AsyncSeekExt","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":47148,"byte_end":47193,"line_start":17,"line_end":17,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":47855,"byte_end":47865,"line_start":33,"line_end":33,"column_start":8,"column_end":18},"name":"start_seek","qualname":"::io::async_seek::AsyncSeek::start_seek","value":"fn (self: Pin<&mut Self>, position: SeekFrom) -> io::Result<()>","parent":{"krate":0,"index":138},"children":[],"decl_id":null,"docs":" Attempts to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempts to seek to an offset, in bytes, in a stream.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":47220,"byte_end":47277,"line_start":19,"line_end":19,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":47282,"byte_end":47285,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":47290,"byte_end":47363,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":47368,"byte_end":47394,"line_start":22,"line_end":22,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":47399,"byte_end":47402,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If this function returns successfully, then the job has been submitted.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":47407,"byte_end":47482,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ To find out when it completes, call `poll_complete`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":47487,"byte_end":47543,"line_start":25,"line_end":25,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":47548,"byte_end":47551,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":47556,"byte_end":47568,"line_start":27,"line_end":27,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":47573,"byte_end":47576,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This function can return [`io::ErrorKind::Other`] in case there is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":47581,"byte_end":47651,"line_start":29,"line_end":29,"column_start":5,"column_end":75}},{"value":"/ another seek in progress. To avoid this, it is advisable that any call","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":47656,"byte_end":47730,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ to `start_seek` is preceded by a call to `poll_complete` to ensure all","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":47735,"byte_end":47809,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ pending seeks have completed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":47814,"byte_end":47847,"line_start":32,"line_end":32,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":48388,"byte_end":48401,"line_start":46,"line_end":46,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::io::async_seek::AsyncSeek::poll_complete","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<u64>>","parent":{"krate":0,"index":138},"children":[],"decl_id":null,"docs":" Waits for a seek operation to complete.","sig":null,"attributes":[{"value":"/ Waits for a seek operation to complete.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":47932,"byte_end":47975,"line_start":35,"line_end":35,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":47980,"byte_end":47983,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":47988,"byte_end":48037,"line_start":37,"line_end":37,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":48042,"byte_end":48112,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`]. Repeatedly","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":48117,"byte_end":48189,"line_start":39,"line_end":39,"column_start":5,"column_end":77}},{"value":"/ calling this function without calling `start_seek` might return the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":48194,"byte_end":48265,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ same result.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":48270,"byte_end":48286,"line_start":41,"line_end":41,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":48291,"byte_end":48294,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":48299,"byte_end":48311,"line_start":43,"line_end":43,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":48316,"byte_end":48319,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":48324,"byte_end":48380,"line_start":45,"line_end":45,"column_start":5,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":162},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":51675,"byte_end":51685,"line_start":45,"line_end":45,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::io::async_write::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":49812,"byte_end":49844,"line_start":6,"line_end":6,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":49845,"byte_end":49848,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from [`std::io::Write`] and indicates that an I/O object is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":49849,"byte_end":49931,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":49932,"byte_end":50007,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":50008,"byte_end":50075,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":50076,"byte_end":50079,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the [`poll_write`] function will return one of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":50080,"byte_end":50160,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ the following:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":50161,"byte_end":50179,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":50180,"byte_end":50183,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":50184,"byte_end":50255,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/   written.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":50256,"byte_end":50270,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":50271,"byte_end":50274,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was written from the buffer","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":50275,"byte_end":50343,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":50344,"byte_end":50424,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":50425,"byte_end":50504,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":50505,"byte_end":50578,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":50579,"byte_end":50652,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":50653,"byte_end":50674,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":50675,"byte_end":50678,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":50679,"byte_end":50763,"line_start":25,"line_end":25,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":50764,"byte_end":50788,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":50789,"byte_end":50792,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the [`write`][stdwrite] method only works in","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":50793,"byte_end":50875,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/ the context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":50876,"byte_end":50959,"line_start":29,"line_end":29,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":50960,"byte_end":50963,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  [`Write::flush`][stdflush] method","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":50964,"byte_end":51048,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/ works very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":51049,"byte_end":51133,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":51134,"byte_end":51212,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":51213,"byte_end":51292,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":51293,"byte_end":51354,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":51355,"byte_end":51358,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncWrite` values are provided by","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":51359,"byte_end":51425,"line_start":37,"line_end":37,"column_start":1,"column_end":67}},{"value":"/ [`AsyncWriteExt`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":51426,"byte_end":51448,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":51449,"byte_end":51452,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Write`]: std::io::Write","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":51453,"byte_end":51491,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":51492,"byte_end":51536,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"/ [stdwrite]: std::io::Write::write()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":51537,"byte_end":51576,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/ [stdflush]: std::io::Write::flush()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":51577,"byte_end":51616,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWriteExt`]: crate::io::AsyncWriteExt","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":51617,"byte_end":51664,"line_start":44,"line_end":44,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":52069,"byte_end":52079,"line_start":54,"line_end":54,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::async_write::AsyncWrite::poll_write","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>, buf: &[u8]) -> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":51692,"byte_end":51746,"line_start":46,"line_end":46,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":51751,"byte_end":51754,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":51759,"byte_end":51820,"line_start":48,"line_end":48,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":51825,"byte_end":51828,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":51833,"byte_end":51895,"line_start":50,"line_end":50,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":51900,"byte_end":51958,"line_start":51,"line_end":51,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":51963,"byte_end":52030,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":52035,"byte_end":52061,"line_start":53,"line_end":53,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":52620,"byte_end":52630,"line_start":69,"line_end":69,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::io::async_write::AsyncWrite::poll_flush","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" Attempts to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempts to flush the object, ensuring that any buffered data reach","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":52207,"byte_end":52278,"line_start":60,"line_end":60,"column_start":5,"column_end":76}},{"value":"/ their destination.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":52283,"byte_end":52305,"line_start":61,"line_end":61,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":52310,"byte_end":52313,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":52318,"byte_end":52364,"line_start":63,"line_end":63,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":52369,"byte_end":52372,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":52377,"byte_end":52441,"line_start":65,"line_end":65,"column_start":5,"column_end":69}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":52446,"byte_end":52504,"line_start":66,"line_end":66,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":52509,"byte_end":52577,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":52582,"byte_end":52612,"line_start":68,"line_end":68,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":55916,"byte_end":55929,"line_start":129,"line_end":129,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"::io::async_write::AsyncWrite::poll_shutdown","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":52712,"byte_end":52786,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":52791,"byte_end":52839,"line_start":72,"line_end":72,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":52844,"byte_end":52847,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":52852,"byte_end":52923,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":52928,"byte_end":53004,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":53009,"byte_end":53085,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":53090,"byte_end":53165,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":53170,"byte_end":53241,"line_start":78,"line_end":78,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":53246,"byte_end":53322,"line_start":79,"line_end":79,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":53327,"byte_end":53355,"line_start":80,"line_end":80,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":53360,"byte_end":53363,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":53368,"byte_end":53429,"line_start":82,"line_end":82,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":53434,"byte_end":53505,"line_start":83,"line_end":83,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":53510,"byte_end":53582,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":53587,"byte_end":53662,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":53667,"byte_end":53740,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":53745,"byte_end":53820,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":53825,"byte_end":53897,"line_start":88,"line_end":88,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":53902,"byte_end":53913,"line_start":89,"line_end":89,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":53918,"byte_end":53921,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":53926,"byte_end":54000,"line_start":91,"line_end":91,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":54005,"byte_end":54077,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":54082,"byte_end":54151,"line_start":93,"line_end":93,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":54156,"byte_end":54224,"line_start":94,"line_end":94,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":54229,"byte_end":54290,"line_start":95,"line_end":95,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":54295,"byte_end":54298,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":54303,"byte_end":54321,"line_start":97,"line_end":97,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":54326,"byte_end":54329,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<io::Result<()>>` classified as such:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":54334,"byte_end":54404,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":54409,"byte_end":54412,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(()))` - indicates that the connection was","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":54417,"byte_end":54480,"line_start":101,"line_end":101,"column_start":5,"column_end":68}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":54485,"byte_end":54554,"line_start":102,"line_end":102,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":54559,"byte_end":54634,"line_start":103,"line_end":103,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":54639,"byte_end":54712,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":54717,"byte_end":54768,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":54773,"byte_end":54776,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` - indicates that shutdown is initiated but could","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":54781,"byte_end":54851,"line_start":107,"line_end":107,"column_start":5,"column_end":75}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":54856,"byte_end":54931,"line_start":108,"line_end":108,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":54936,"byte_end":55008,"line_start":109,"line_end":109,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":55013,"byte_end":55083,"line_start":110,"line_end":110,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":55088,"byte_end":55163,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":55168,"byte_end":55171,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(e))` - indicates a fatal error has happened with shutdown,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":55176,"byte_end":55257,"line_start":113,"line_end":113,"column_start":5,"column_end":86}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":55262,"byte_end":55337,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":55342,"byte_end":55409,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":55414,"byte_end":55417,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":55422,"byte_end":55434,"line_start":117,"line_end":117,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":55439,"byte_end":55442,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":55447,"byte_end":55518,"line_start":119,"line_end":119,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":55523,"byte_end":55589,"line_start":120,"line_end":120,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":55594,"byte_end":55668,"line_start":121,"line_end":121,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":55673,"byte_end":55737,"line_start":122,"line_end":122,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":55742,"byte_end":55781,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":55786,"byte_end":55789,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":55794,"byte_end":55806,"line_start":125,"line_end":125,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":55811,"byte_end":55814,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":55819,"byte_end":55894,"line_start":127,"line_end":127,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":55899,"byte_end":55908,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":202},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":61100,"byte_end":61107,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"ReadBuf","qualname":"::io::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206}],"decl_id":null,"docs":" A wrapper around a byte buffer that is incrementally filled and initialized.","sig":null,"attributes":[{"value":"/ A wrapper around a byte buffer that is incrementally filled and initialized.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":60152,"byte_end":60232,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":60233,"byte_end":60236,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a sort of \"double cursor\". It tracks three regions in the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":60237,"byte_end":60311,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ buffer: a region at the beginning of the buffer that has been logically","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":60312,"byte_end":60387,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ filled with data, a region that has been initialized at some point but not","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":60388,"byte_end":60466,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ yet logically filled, and a region at the end that may be uninitialized.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":60467,"byte_end":60543,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ The filled region is guaranteed to be a subset of the initialized region.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":60544,"byte_end":60621,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":60622,"byte_end":60625,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ In summary, the contents of the buffer can be visualized as:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":60626,"byte_end":60690,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":60691,"byte_end":60694,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```not_rust","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":60695,"byte_end":60710,"line_start":18,"line_end":18,"column_start":1,"column_end":16}},{"value":"/ [             capacity              ]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":60711,"byte_end":60752,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/ [ filled |         unfilled         ]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":60753,"byte_end":60794,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ [    initialized    | uninitialized ]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":60795,"byte_end":60836,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":60837,"byte_end":60844,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":60845,"byte_end":60848,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ It is undefined behavior to de-initialize any bytes from the uninitialized","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":60849,"byte_end":60927,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ region, since it is merely unknown whether this region is uninitialized or","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":60928,"byte_end":61006,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ not, and if part of it turns out to be initialized, it must stay initialized.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":61007,"byte_end":61088,"line_start":26,"line_end":26,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":61309,"byte_end":61312,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadBuf>::new","value":"fn (buf: &'a mut [u8]) -> ReadBuf<'a>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ReadBuf` from a fully initialized buffer.\n","sig":null,"attributes":[{"value":"/ Creates a new `ReadBuf` from a fully initialized buffer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":61223,"byte_end":61283,"line_start":34,"line_end":34,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":61288,"byte_end":61297,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":61758,"byte_end":61764,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"uninit","qualname":"<ReadBuf>::uninit","value":"fn (buf: &'a mut [MaybeUninit<u8>]) -> ReadBuf<'a>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ReadBuf` from a fully uninitialized buffer.","sig":null,"attributes":[{"value":"/ Creates a new `ReadBuf` from a fully uninitialized buffer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":61577,"byte_end":61639,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":61644,"byte_end":61647,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Use `assume_init` if part of the buffer is known to be already inintialized.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":61652,"byte_end":61732,"line_start":48,"line_end":48,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":61737,"byte_end":61746,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":61992,"byte_end":62000,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"capacity","qualname":"<ReadBuf>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the total capacity of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns the total capacity of the buffer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":61921,"byte_end":61966,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":61971,"byte_end":61980,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":62146,"byte_end":62152,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"filled","qualname":"<ReadBuf>::filled","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the filled portion of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the filled portion of the buffer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":62053,"byte_end":62120,"line_start":64,"line_end":64,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":62125,"byte_end":62134,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":62606,"byte_end":62616,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"filled_mut","qualname":"<ReadBuf>::filled_mut","value":"fn (&mut self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the filled portion of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the filled portion of the buffer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":62512,"byte_end":62580,"line_start":74,"line_end":74,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":62585,"byte_end":62594,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":63094,"byte_end":63098,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"take","qualname":"<ReadBuf>::take","value":"fn (&mut self, n: usize) -> ReadBuf<'_>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `ReadBuf` comprised of the unfilled section up to `n`.\n","sig":null,"attributes":[{"value":"/ Returns a new `ReadBuf` comprised of the unfilled section up to `n`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":62996,"byte_end":63068,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":63073,"byte_end":63082,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":63504,"byte_end":63515,"line_start":96,"line_end":96,"column_start":12,"column_end":23},"name":"initialized","qualname":"<ReadBuf>::initialized","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the initialized portion of the buffer.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the initialized portion of the buffer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":63356,"byte_end":63428,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":63433,"byte_end":63436,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ This includes the filled portion.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":63441,"byte_end":63478,"line_start":94,"line_end":94,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":63483,"byte_end":63492,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":64027,"byte_end":64042,"line_start":108,"line_end":108,"column_start":12,"column_end":27},"name":"initialized_mut","qualname":"<ReadBuf>::initialized_mut","value":"fn (&mut self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the initialized portion of the buffer.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the initialized portion of the buffer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":63878,"byte_end":63951,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":63956,"byte_end":63959,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This includes the filled portion.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":63964,"byte_end":64001,"line_start":106,"line_end":106,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":64006,"byte_end":64015,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":64803,"byte_end":64815,"line_start":124,"line_end":124,"column_start":19,"column_end":31},"name":"unfilled_mut","qualname":"<ReadBuf>::unfilled_mut","value":"fn (&mut self) -> &mut [MaybeUninit<u8>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the unfilled part of the buffer without ensuring that it has been fully\n initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the unfilled part of the buffer without ensuring that it has been fully","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":64425,"byte_end":64531,"line_start":116,"line_end":116,"column_start":5,"column_end":111}},{"value":"/ initialized.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":64536,"byte_end":64552,"line_start":117,"line_end":117,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":64557,"byte_end":64560,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":64565,"byte_end":64577,"line_start":119,"line_end":119,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":64582,"byte_end":64585,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ The caller must not de-initialize portions of the buffer that have already been initialized.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":64590,"byte_end":64686,"line_start":121,"line_end":121,"column_start":5,"column_end":101}},{"value":"/ This includes any bytes in the region marked as uninitialized by `ReadBuf`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":64691,"byte_end":64770,"line_start":122,"line_end":122,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":64775,"byte_end":64784,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":65177,"byte_end":65196,"line_start":133,"line_end":133,"column_start":12,"column_end":31},"name":"initialize_unfilled","qualname":"<ReadBuf>::initialize_unfilled","value":"fn (&mut self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the unfilled part of the buffer, ensuring it is fully initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the unfilled part of the buffer, ensuring it is fully initialized.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":64903,"byte_end":65004,"line_start":128,"line_end":128,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":65009,"byte_end":65012,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ Since `ReadBuf` tracks the region of the buffer that has been initialized, this is effectively \"free\" after","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":65017,"byte_end":65128,"line_start":130,"line_end":130,"column_start":5,"column_end":116}},{"value":"/ the first use.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":65133,"byte_end":65151,"line_start":131,"line_end":131,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":65156,"byte_end":65165,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":65534,"byte_end":65556,"line_start":144,"line_end":144,"column_start":12,"column_end":34},"name":"initialize_unfilled_to","qualname":"<ReadBuf>::initialize_unfilled_to","value":"fn (&mut self, n: usize) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the first `n` bytes of the unfilled part of the buffer, ensuring it is\n fully initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the first `n` bytes of the unfilled part of the buffer, ensuring it is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":65288,"byte_end":65393,"line_start":137,"line_end":137,"column_start":5,"column_end":110}},{"value":"/ fully initialized.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":65398,"byte_end":65420,"line_start":138,"line_end":138,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":65425,"byte_end":65428,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":65433,"byte_end":65445,"line_start":140,"line_end":140,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":65450,"byte_end":65453,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ Panics if `self.remaining()` is less than `n`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":65458,"byte_end":65508,"line_start":142,"line_end":142,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":65513,"byte_end":65522,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":66401,"byte_end":66410,"line_start":167,"line_end":167,"column_start":12,"column_end":21},"name":"remaining","qualname":"<ReadBuf>::remaining","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes at the end of the slice that have not yet been filled.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes at the end of the slice that have not yet been filled.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":66289,"byte_end":66375,"line_start":165,"line_end":165,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":66380,"byte_end":66389,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":66677,"byte_end":66682,"line_start":175,"line_end":175,"column_start":12,"column_end":17},"name":"clear","qualname":"<ReadBuf>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, resetting the filled region to empty.","sig":null,"attributes":[{"value":"/ Clears the buffer, resetting the filled region to empty.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":66478,"byte_end":66538,"line_start":171,"line_end":171,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":66543,"byte_end":66546,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed, and the contents of the buffer are not modified.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":66551,"byte_end":66651,"line_start":173,"line_end":173,"column_start":5,"column_end":105}},{"value":"inline","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":66656,"byte_end":66665,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":67011,"byte_end":67018,"line_start":187,"line_end":187,"column_start":12,"column_end":19},"name":"advance","qualname":"<ReadBuf>::advance","value":"fn (&mut self, n: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Advances the size of the filled region of the buffer.","sig":null,"attributes":[{"value":"/ Advances the size of the filled region of the buffer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":66732,"byte_end":66789,"line_start":179,"line_end":179,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":66794,"byte_end":66797,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":66802,"byte_end":66853,"line_start":181,"line_end":181,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":66858,"byte_end":66861,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":66866,"byte_end":66878,"line_start":183,"line_end":183,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":66883,"byte_end":66886,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ Panics if the filled region of the buffer would become larger than the initialized region.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":66891,"byte_end":66985,"line_start":185,"line_end":185,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":66990,"byte_end":66999,"line_start":186,"line_end":186,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":67628,"byte_end":67638,"line_start":203,"line_end":203,"column_start":12,"column_end":22},"name":"set_filled","qualname":"<ReadBuf>::set_filled","value":"fn (&mut self, n: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the filled region of the buffer.","sig":null,"attributes":[{"value":"/ Sets the size of the filled region of the buffer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":67155,"byte_end":67208,"line_start":192,"line_end":192,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":67213,"byte_end":67216,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":67221,"byte_end":67272,"line_start":194,"line_end":194,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":67277,"byte_end":67280,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ Note that this can be used to *shrink* the filled region of the buffer in addition to growing it (for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":67285,"byte_end":67390,"line_start":196,"line_end":196,"column_start":5,"column_end":110}},{"value":"/ example, by a `AsyncRead` implementation that compresses data in-place).","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":67395,"byte_end":67471,"line_start":197,"line_end":197,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":67476,"byte_end":67479,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":67484,"byte_end":67496,"line_start":199,"line_end":199,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":67501,"byte_end":67504,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Panics if the filled region of the buffer would become larger than the intialized region.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":67509,"byte_end":67602,"line_start":201,"line_end":201,"column_start":5,"column_end":98}},{"value":"inline","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":67607,"byte_end":67616,"line_start":202,"line_end":202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":68242,"byte_end":68253,"line_start":220,"line_end":220,"column_start":19,"column_end":30},"name":"assume_init","qualname":"<ReadBuf>::assume_init","value":"fn (&mut self, n: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Asserts that the first `n` unfilled bytes of the buffer are initialized.","sig":null,"attributes":[{"value":"/ Asserts that the first `n` unfilled bytes of the buffer are initialized.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":67822,"byte_end":67898,"line_start":211,"line_end":211,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":67903,"byte_end":67906,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ `ReadBuf` assumes that bytes are never de-initialized, so this method does nothing when called with fewer","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":67911,"byte_end":68020,"line_start":213,"line_end":213,"column_start":5,"column_end":114}},{"value":"/ bytes than are already known to be initialized.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":68025,"byte_end":68076,"line_start":214,"line_end":214,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":68081,"byte_end":68084,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":68089,"byte_end":68101,"line_start":216,"line_end":216,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":68106,"byte_end":68109,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that `n` unfilled bytes of the buffer have already been initialized.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":68114,"byte_end":68209,"line_start":218,"line_end":218,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":68214,"byte_end":68223,"line_start":219,"line_end":219,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":68633,"byte_end":68642,"line_start":233,"line_end":233,"column_start":12,"column_end":21},"name":"put_slice","qualname":"<ReadBuf>::put_slice","value":"fn (&mut self, buf: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends data to the buffer, advancing the written position and possibly also the initialized position.","sig":null,"attributes":[{"value":"/ Appends data to the buffer, advancing the written position and possibly also the initialized position.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":68405,"byte_end":68511,"line_start":227,"line_end":227,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":68516,"byte_end":68519,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":68524,"byte_end":68536,"line_start":229,"line_end":229,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":68541,"byte_end":68544,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ Panics if `self.remaining()` is less than `buf.len()`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":68549,"byte_end":68607,"line_start":231,"line_end":231,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":68612,"byte_end":68621,"line_start":232,"line_end":232,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":234},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":300}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/mod.rs","byte_start":69560,"byte_end":69578,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"! TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/mod.rs","byte_start":69580,"byte_end":69618,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/mod.rs","byte_start":69619,"byte_end":69622,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/mod.rs","byte_start":69623,"byte_end":69706,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"! library, which can be used to implement networking protocols.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/mod.rs","byte_start":69707,"byte_end":69772,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/mod.rs","byte_start":69773,"byte_end":69776,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! # Organization","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/mod.rs","byte_start":69777,"byte_end":69795,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/mod.rs","byte_start":69796,"byte_end":69799,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/mod.rs","byte_start":69800,"byte_end":69888,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"! * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/mod.rs","byte_start":69889,"byte_end":69958,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"! * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/mod.rs","byte_start":69959,"byte_end":70047,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"! Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/mod.rs","byte_start":70048,"byte_end":70106,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"! * [`UnixDatagram`] provides functionality for communication","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/mod.rs","byte_start":70107,"byte_end":70170,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"! over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/mod.rs","byte_start":70171,"byte_end":70236,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/mod.rs","byte_start":70238,"byte_end":70241,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! [`TcpListener`]: TcpListener","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/mod.rs","byte_start":70242,"byte_end":70274,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"! [`TcpStream`]: TcpStream","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/mod.rs","byte_start":70275,"byte_end":70303,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"! [`UdpSocket`]: UdpSocket","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/mod.rs","byte_start":70304,"byte_end":70332,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"! [`UnixListener`]: UnixListener","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/mod.rs","byte_start":70333,"byte_end":70367,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"! [`UnixStream`]: UnixStream","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/mod.rs","byte_start":70368,"byte_end":70398,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"! [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/mod.rs","byte_start":70399,"byte_end":70433,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":245},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":71767,"byte_end":71780,"line_start":22,"line_end":22,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs: sealed::ToSocketAddrsPriv","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves without blocking to one or more `SocketAddr` values.","sig":null,"attributes":[{"value":"/ Converts or resolves without blocking to one or more `SocketAddr` values.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":71079,"byte_end":71156,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":71157,"byte_end":71160,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # DNS","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":71161,"byte_end":71170,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":71171,"byte_end":71174,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Implementations of `ToSocketAddrs` for string types require a DNS lookup.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":71175,"byte_end":71252,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ These implementations are only provided when Tokio is used with the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":71253,"byte_end":71324,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ **`net`** feature flag.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":71325,"byte_end":71352,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":71353,"byte_end":71356,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Calling","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":71357,"byte_end":71370,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":71371,"byte_end":71374,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait is only used as an argument to Tokio functions that","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":71375,"byte_end":71452,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ need to reference a target socket address. To perform a `SocketAddr`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":71453,"byte_end":71525,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ conversion directly, use [`lookup_host()`](super::lookup_host()).","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":71526,"byte_end":71595,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":71596,"byte_end":71599,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and is intended to be opaque. The details of the trait","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":71600,"byte_end":71679,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ will change. Stabilization is pending enhancements to the Rust language.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":71680,"byte_end":71756,"line_start":21,"line_end":21,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":294},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":78220,"byte_end":78237,"line_start":250,"line_end":250,"column_start":15,"column_end":32},"name":"ToSocketAddrsPriv","qualname":"::net::addr::sealed::ToSocketAddrsPriv","value":"ToSocketAddrsPriv","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":295},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":78253,"byte_end":78257,"line_start":251,"line_end":251,"column_start":14,"column_end":18},"name":"Iter","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Send + 'static;","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":296},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":78318,"byte_end":78324,"line_start":252,"line_end":252,"column_start":14,"column_end":20},"name":"Future","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Future","value":"type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":78396,"byte_end":78411,"line_start":254,"line_end":254,"column_start":12,"column_end":27},"name":"to_socket_addrs","qualname":"::net::addr::sealed::ToSocketAddrsPriv::to_socket_addrs","value":"fn (&self, internal: Internal) -> Self::Future","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":298},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":78522,"byte_end":78530,"line_start":258,"line_end":258,"column_start":16,"column_end":24},"name":"Internal","qualname":"::net::addr::sealed::Internal","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":78467,"byte_end":78506,"line_start":257,"line_end":257,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":456},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/park/mod.rs","byte_start":93400,"byte_end":93406,"line_start":50,"line_end":50,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":455},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/park/mod.rs","byte_start":93337,"byte_end":93390,"line_start":49,"line_end":49,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":457},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/park/mod.rs","byte_start":93459,"byte_end":93464,"line_start":53,"line_end":53,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error;","parent":{"krate":0,"index":455},"children":[],"decl_id":null,"docs":" Error returned by `park`\n","sig":null,"attributes":[{"value":"/ Error returned by `park`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/park/mod.rs","byte_start":93421,"byte_end":93449,"line_start":52,"line_end":52,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":468},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/prelude.rs","parent":null,"children":[{"krate":0,"index":469}],"decl_id":null,"docs":" A \"prelude\" for users of the `tokio` crate.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/prelude.rs","byte_start":95648,"byte_end":95666,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"! A \"prelude\" for users of the `tokio` crate.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/prelude.rs","byte_start":95668,"byte_end":95715,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/prelude.rs","byte_start":95716,"byte_end":95719,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This prelude is similar to the standard library's prelude in that you'll","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/prelude.rs","byte_start":95720,"byte_end":95796,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"! almost always want to import its entire contents, but unlike the standard","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/prelude.rs","byte_start":95797,"byte_end":95874,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"! library's prelude you'll have to do so manually:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/prelude.rs","byte_start":95875,"byte_end":95927,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/prelude.rs","byte_start":95928,"byte_end":95931,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/prelude.rs","byte_start":95932,"byte_end":95939,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"! # #![allow(warnings)]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/prelude.rs","byte_start":95940,"byte_end":95965,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"! use tokio::prelude::*;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/prelude.rs","byte_start":95966,"byte_end":95992,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"! ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/prelude.rs","byte_start":95993,"byte_end":96000,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/prelude.rs","byte_start":96001,"byte_end":96004,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! The prelude may grow over time as additional items see ubiquitous use.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/prelude.rs","byte_start":96005,"byte_end":96079,"line_start":14,"line_end":14,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":493},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","parent":null,"children":[],"decl_id":null,"docs":" Asynchronous green-threads.","sig":null,"attributes":[{"value":"! Asynchronous green-threads.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":106129,"byte_end":106160,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":106161,"byte_end":106164,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! ## What are Tasks?","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":106165,"byte_end":106187,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":106188,"byte_end":106191,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! A _task_ is a light weight, non-blocking unit of execution. A task is similar","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":106192,"byte_end":106273,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"! to an OS thread, but rather than being managed by the OS scheduler, they are","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":106274,"byte_end":106354,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"! managed by the [Tokio runtime][rt]. Another name for this general pattern is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":106355,"byte_end":106435,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"! [green threads]. If you are familiar with [Go's goroutines], [Kotlin's","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":106436,"byte_end":106510,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"! coroutines], or [Erlang's processes], you can think of Tokio's tasks as","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":106511,"byte_end":106586,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"! something similar.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":106587,"byte_end":106609,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":106610,"byte_end":106613,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! Key points about tasks include:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":106614,"byte_end":106649,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":106650,"byte_end":106653,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! * Tasks are **light weight**. Because tasks are scheduled by the Tokio","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":106654,"byte_end":106728,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"!   runtime rather than the operating system, creating new tasks or switching","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":106729,"byte_end":106808,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"!   between tasks does not require a context switch and has fairly low","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":106809,"byte_end":106881,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"!   overhead. Creating, running, and destroying large numbers of tasks is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":106882,"byte_end":106957,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"!   quite cheap, especially compared to OS threads.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":106958,"byte_end":107011,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":107012,"byte_end":107015,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! * Tasks are scheduled **cooperatively**. Most operating systems implement","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":107016,"byte_end":107093,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"!   _preemptive multitasking_. This is a scheduling technique where the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":107094,"byte_end":107167,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"!   operating system allows each thread to run for a period of time, and then","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":107168,"byte_end":107247,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"!   _preempts_ it, temporarily pausing that thread and switching to another.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":107248,"byte_end":107326,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"!   Tasks, on the other hand, implement _cooperative multitasking_. In","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":107327,"byte_end":107399,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"!   cooperative multitasking, a task is allowed to run until it _yields_,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":107400,"byte_end":107475,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"!   indicating to the Tokio runtime's scheduler that it cannot currently","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":107476,"byte_end":107550,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"!   continue executing. When a task yields, the Tokio runtime switches to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":107551,"byte_end":107626,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"!   executing the next task.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":107627,"byte_end":107657,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":107658,"byte_end":107661,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! * Tasks are **non-blocking**. Typically, when an OS thread performs I/O or","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":107662,"byte_end":107740,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"!   must synchronize with another thread, it _blocks_, allowing the OS to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":107741,"byte_end":107816,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"!   schedule another thread. When a task cannot continue executing, it must","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":107817,"byte_end":107894,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"!   yield instead, allowing the Tokio runtime to schedule another task. Tasks","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":107895,"byte_end":107974,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"!   should generally not perform system calls or other operations that could","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":107975,"byte_end":108053,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"!   block a thread, as this would prevent other tasks running on the same","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":108054,"byte_end":108129,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"!   thread from executing as well. Instead, this module provides APIs for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":108130,"byte_end":108205,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"!   running blocking operations in an asynchronous context.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":108206,"byte_end":108267,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":108268,"byte_end":108271,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! [rt]: crate::runtime","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":108272,"byte_end":108296,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"! [green threads]: https://en.wikipedia.org/wiki/Green_threads","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":108297,"byte_end":108361,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"! [Go's goroutines]: https://tour.golang.org/concurrency/1","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":108362,"byte_end":108422,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"! [Kotlin's coroutines]: https://kotlinlang.org/docs/reference/coroutines-overview.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":108423,"byte_end":108512,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"! [Erlang's processes]: http://erlang.org/doc/getting_started/conc_prog.html#processes","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":108513,"byte_end":108601,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":108602,"byte_end":108605,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! ## Working with Tasks","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":108606,"byte_end":108631,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":108632,"byte_end":108635,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! This module provides the following APIs for working with tasks:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":108636,"byte_end":108703,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":108704,"byte_end":108707,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! ### Spawning","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":108708,"byte_end":108724,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":108725,"byte_end":108728,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! Perhaps the most important function in this module is [`task::spawn`]. This","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":108729,"byte_end":108808,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"! function can be thought of as an async equivalent to the standard library's","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":108809,"byte_end":108888,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"! [`thread::spawn`][`std::thread::spawn`]. It takes an `async` block or other","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":108889,"byte_end":108968,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"! [future], and creates a new task to run that work concurrently:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":108969,"byte_end":109036,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109037,"byte_end":109040,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109041,"byte_end":109048,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109049,"byte_end":109069,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109070,"byte_end":109073,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! # async fn doc() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109074,"byte_end":109096,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"! task::spawn(async {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109097,"byte_end":109120,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"!     // perform some work here...","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109121,"byte_end":109157,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"! });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109158,"byte_end":109165,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"! # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109166,"byte_end":109173,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109174,"byte_end":109181,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109182,"byte_end":109185,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! Like [`std::thread::spawn`], `task::spawn` returns a [`JoinHandle`] struct.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109186,"byte_end":109265,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"! A `JoinHandle` is itself a future which may be used to await the output of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109266,"byte_end":109344,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"! the spawned task. For example:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109345,"byte_end":109379,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109380,"byte_end":109383,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109384,"byte_end":109391,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109392,"byte_end":109412,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109413,"byte_end":109416,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! # #[tokio::main] async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109417,"byte_end":109497,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"! let join = task::spawn(async {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109498,"byte_end":109532,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"!     // ...","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109533,"byte_end":109547,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"!     \"hello world!\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109548,"byte_end":109570,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"! });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109571,"byte_end":109578,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109579,"byte_end":109582,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"! // ...","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109583,"byte_end":109593,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109594,"byte_end":109597,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! // Await the result of the spawned task.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109598,"byte_end":109642,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"! let result = join.await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109643,"byte_end":109672,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"! assert_eq!(result, \"hello world!\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109673,"byte_end":109712,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"! # Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109713,"byte_end":109725,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109726,"byte_end":109733,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109734,"byte_end":109741,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109742,"byte_end":109745,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"! Again, like `std::thread`'s [`JoinHandle` type][thread_join], if the spawned","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109746,"byte_end":109826,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"! task panics, awaiting its `JoinHandle` will return a [`JoinError`]`. For","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109827,"byte_end":109903,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"! example:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109904,"byte_end":109916,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109917,"byte_end":109920,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109921,"byte_end":109928,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109929,"byte_end":109949,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109950,"byte_end":109953,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! # #[tokio::main] async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109954,"byte_end":109992,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"! let join = task::spawn(async {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":109993,"byte_end":110027,"line_start":96,"line_end":96,"column_start":1,"column_end":35}},{"value":"!     panic!(\"something bad happened!\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":110028,"byte_end":110069,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"! });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":110070,"byte_end":110077,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":110078,"byte_end":110081,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"! // The returned result indicates that the task failed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":110082,"byte_end":110140,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"! assert!(join.await.is_err());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":110141,"byte_end":110174,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"! # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":110175,"byte_end":110182,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":110183,"byte_end":110190,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":110191,"byte_end":110194,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"! `spawn`, `JoinHandle`, and `JoinError` are present when the \"rt\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":110195,"byte_end":110263,"line_start":105,"line_end":105,"column_start":1,"column_end":69}},{"value":"! feature flag is enabled.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":110264,"byte_end":110292,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":110293,"byte_end":110296,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! [`task::spawn`]: crate::task::spawn()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":110297,"byte_end":110338,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"! [future]: std::future::Future","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":110339,"byte_end":110372,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"! [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":110373,"byte_end":110419,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"! [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":110420,"byte_end":110463,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"! [thread_join]: std::thread::JoinHandle","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":110464,"byte_end":110506,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"! [`JoinError`]: crate::task::JoinError","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":110507,"byte_end":110548,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":110549,"byte_end":110552,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"! ### Blocking and Yielding","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":110553,"byte_end":110582,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":110583,"byte_end":110586,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"! As we discussed above, code running in asynchronous tasks should not perform","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":110587,"byte_end":110667,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"! operations that can block. A blocking operation performed in a task running","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":110668,"byte_end":110747,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"! on a thread that is also running other tasks would block the entire thread,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":110748,"byte_end":110827,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"! preventing other tasks from running.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":110828,"byte_end":110868,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":110869,"byte_end":110872,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"! Instead, Tokio provides two APIs for running blocking operations in an","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":110873,"byte_end":110947,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"! asynchronous context: [`task::spawn_blocking`] and [`task::block_in_place`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":110948,"byte_end":111028,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":111029,"byte_end":111032,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"! #### spawn_blocking","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":111033,"byte_end":111056,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":111057,"byte_end":111060,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"! The `task::spawn_blocking` function is similar to the `task::spawn` function","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":111061,"byte_end":111141,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"! discussed in the previous section, but rather than spawning an","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":111142,"byte_end":111208,"line_start":128,"line_end":128,"column_start":1,"column_end":67}},{"value":"! _non-blocking_ future on the Tokio runtime, it instead spawns a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":111209,"byte_end":111276,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"! _blocking_ function on a dedicated thread pool for blocking tasks. For","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":111277,"byte_end":111351,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"! example:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":111352,"byte_end":111364,"line_start":131,"line_end":131,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":111365,"byte_end":111368,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":111369,"byte_end":111376,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":111377,"byte_end":111397,"line_start":134,"line_end":134,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":111398,"byte_end":111401,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"! # async fn docs() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":111402,"byte_end":111425,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"! task::spawn_blocking(|| {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":111426,"byte_end":111455,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"!     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":111456,"byte_end":111518,"line_start":138,"line_end":138,"column_start":1,"column_end":63}},{"value":"! });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":111519,"byte_end":111526,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"! # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":111527,"byte_end":111534,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":111535,"byte_end":111542,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":111543,"byte_end":111546,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"! Just like `task::spawn`, `task::spawn_blocking` returns a `JoinHandle`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":111547,"byte_end":111621,"line_start":143,"line_end":143,"column_start":1,"column_end":75}},{"value":"! which we can use to await the result of the blocking operation:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":111622,"byte_end":111689,"line_start":144,"line_end":144,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":111690,"byte_end":111693,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":111694,"byte_end":111705,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"! # use tokio::task;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":111706,"byte_end":111728,"line_start":147,"line_end":147,"column_start":1,"column_end":23}},{"value":"! # async fn docs() -> Result<(), Box<dyn std::error::Error>>{","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":111729,"byte_end":111793,"line_start":148,"line_end":148,"column_start":1,"column_end":65}},{"value":"! let join = task::spawn_blocking(|| {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":111794,"byte_end":111834,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"!     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":111835,"byte_end":111897,"line_start":150,"line_end":150,"column_start":1,"column_end":63}},{"value":"!     \"blocking completed\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":111898,"byte_end":111926,"line_start":151,"line_end":151,"column_start":1,"column_end":29}},{"value":"! });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":111927,"byte_end":111934,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":111935,"byte_end":111938,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"! let result = join.await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":111939,"byte_end":111968,"line_start":154,"line_end":154,"column_start":1,"column_end":30}},{"value":"! assert_eq!(result, \"blocking completed\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":111969,"byte_end":112014,"line_start":155,"line_end":155,"column_start":1,"column_end":46}},{"value":"! # Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":112015,"byte_end":112027,"line_start":156,"line_end":156,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":112028,"byte_end":112035,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":112036,"byte_end":112043,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":112044,"byte_end":112047,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"! #### block_in_place","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":112048,"byte_end":112071,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":112072,"byte_end":112075,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"! When using the [multi-threaded runtime][rt-multi-thread], the [`task::block_in_place`]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":112076,"byte_end":112166,"line_start":162,"line_end":162,"column_start":1,"column_end":91}},{"value":"! function is also available. Like `task::spawn_blocking`, this function","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":112167,"byte_end":112241,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"! allows running a blocking operation from an asynchronous context. Unlike","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":112242,"byte_end":112318,"line_start":164,"line_end":164,"column_start":1,"column_end":77}},{"value":"! `spawn_blocking`, however, `block_in_place` works by transitioning the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":112319,"byte_end":112393,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"! _current_ worker thread to a blocking thread, moving other tasks running on","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":112394,"byte_end":112473,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"! that thread to another worker thread. This can improve performance by avoiding","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":112474,"byte_end":112556,"line_start":167,"line_end":167,"column_start":1,"column_end":83}},{"value":"! context switches.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":112557,"byte_end":112578,"line_start":168,"line_end":168,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":112579,"byte_end":112582,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"! For example:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":112583,"byte_end":112599,"line_start":170,"line_end":170,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":112600,"byte_end":112603,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":112604,"byte_end":112611,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":112612,"byte_end":112632,"line_start":173,"line_end":173,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":112633,"byte_end":112636,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"! # async fn docs() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":112637,"byte_end":112660,"line_start":175,"line_end":175,"column_start":1,"column_end":24}},{"value":"! let result = task::block_in_place(|| {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":112661,"byte_end":112703,"line_start":176,"line_end":176,"column_start":1,"column_end":43}},{"value":"!     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":112704,"byte_end":112766,"line_start":177,"line_end":177,"column_start":1,"column_end":63}},{"value":"!     \"blocking completed\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":112767,"byte_end":112795,"line_start":178,"line_end":178,"column_start":1,"column_end":29}},{"value":"! });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":112796,"byte_end":112803,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":112804,"byte_end":112807,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"! assert_eq!(result, \"blocking completed\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":112808,"byte_end":112853,"line_start":181,"line_end":181,"column_start":1,"column_end":46}},{"value":"! # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":112854,"byte_end":112861,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":112862,"byte_end":112869,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":112870,"byte_end":112873,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"! #### yield_now","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":112874,"byte_end":112892,"line_start":185,"line_end":185,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":112893,"byte_end":112896,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"! In addition, this module provides a [`task::yield_now`] async function","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":112897,"byte_end":112971,"line_start":187,"line_end":187,"column_start":1,"column_end":75}},{"value":"! that is analogous to the standard library's [`thread::yield_now`]. Calling","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":112972,"byte_end":113050,"line_start":188,"line_end":188,"column_start":1,"column_end":79}},{"value":"! and `await`ing this function will cause the current task to yield to the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":113051,"byte_end":113127,"line_start":189,"line_end":189,"column_start":1,"column_end":77}},{"value":"! Tokio runtime's scheduler, allowing other tasks to be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":113128,"byte_end":113185,"line_start":190,"line_end":190,"column_start":1,"column_end":58}},{"value":"! scheduled. Eventually, the yielding task will be polled again, allowing it","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":113186,"byte_end":113264,"line_start":191,"line_end":191,"column_start":1,"column_end":79}},{"value":"! to execute. For example:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":113265,"byte_end":113293,"line_start":192,"line_end":192,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":113294,"byte_end":113297,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":113298,"byte_end":113309,"line_start":194,"line_end":194,"column_start":1,"column_end":12}},{"value":"! use tokio::task;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":113310,"byte_end":113330,"line_start":195,"line_end":195,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":113331,"byte_end":113334,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"! # #[tokio::main] async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":113335,"byte_end":113373,"line_start":197,"line_end":197,"column_start":1,"column_end":39}},{"value":"! async {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":113374,"byte_end":113385,"line_start":198,"line_end":198,"column_start":1,"column_end":12}},{"value":"!     task::spawn(async {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":113386,"byte_end":113413,"line_start":199,"line_end":199,"column_start":1,"column_end":28}},{"value":"!         // ...","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":113414,"byte_end":113432,"line_start":200,"line_end":200,"column_start":1,"column_end":19}},{"value":"!         println!(\"spawned task done!\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":113433,"byte_end":113475,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"!     });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":113476,"byte_end":113487,"line_start":202,"line_end":202,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":113488,"byte_end":113491,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"!     // Yield, allowing the newly-spawned task to execute first.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":113492,"byte_end":113559,"line_start":204,"line_end":204,"column_start":1,"column_end":68}},{"value":"!     task::yield_now().await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":113560,"byte_end":113592,"line_start":205,"line_end":205,"column_start":1,"column_end":33}},{"value":"!     println!(\"main task done!\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":113593,"byte_end":113629,"line_start":206,"line_end":206,"column_start":1,"column_end":37}},{"value":"! }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":113630,"byte_end":113635,"line_start":207,"line_end":207,"column_start":1,"column_end":6}},{"value":"! # .await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":113636,"byte_end":113649,"line_start":208,"line_end":208,"column_start":1,"column_end":14}},{"value":"! # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":113650,"byte_end":113657,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":113658,"byte_end":113665,"line_start":210,"line_end":210,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":113666,"byte_end":113669,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"! [`task::spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":113670,"byte_end":113727,"line_start":212,"line_end":212,"column_start":1,"column_end":58}},{"value":"! [`task::block_in_place`]: crate::task::block_in_place","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":113728,"byte_end":113785,"line_start":213,"line_end":213,"column_start":1,"column_end":58}},{"value":"! [rt-multi-thread]: ../runtime/index.html#threaded-scheduler","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":113786,"byte_end":113849,"line_start":214,"line_end":214,"column_start":1,"column_end":64}},{"value":"! [`task::yield_now`]: crate::task::yield_now()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":113850,"byte_end":113899,"line_start":215,"line_end":215,"column_start":1,"column_end":50}},{"value":"! [`thread::yield_now`]: std::thread::yield_now","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/task/mod.rs","byte_start":113900,"byte_end":113949,"line_start":216,"line_end":216,"column_start":1,"column_end":50}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/future/poll_fn.rs","byte_start":28135,"byte_end":28141,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/future/poll_fn.rs","byte_start":28355,"byte_end":28361,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/future/poll_fn.rs","byte_start":28503,"byte_end":28509,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/future/ready.rs","byte_start":8011106,"byte_end":8011111,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/future/ready.rs","byte_start":8011138,"byte_end":8011143,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":41226,"byte_end":41229,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":41389,"byte_end":41392,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":42021,"byte_end":42027,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":45067,"byte_end":45070,"line_start":72,"line_end":72,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":45213,"byte_end":45216,"line_start":80,"line_end":80,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":45885,"byte_end":45891,"line_start":108,"line_end":108,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":48885,"byte_end":48888,"line_start":61,"line_end":61,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":49031,"byte_end":49034,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":49425,"byte_end":49431,"line_start":83,"line_end":83,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":56656,"byte_end":56659,"line_start":152,"line_end":152,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":56807,"byte_end":56810,"line_start":160,"line_end":160,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":57379,"byte_end":57382,"line_start":182,"line_end":182,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":57890,"byte_end":57896,"line_start":201,"line_end":201,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":58409,"byte_end":58415,"line_start":219,"line_end":219,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":58931,"byte_end":58937,"line_start":237,"line_end":237,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":59448,"byte_end":59454,"line_start":255,"line_end":255,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":61205,"byte_end":61212,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":69273,"byte_end":69280,"line_start":258,"line_end":258,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":72460,"byte_end":72470,"line_start":53,"line_end":53,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":72510,"byte_end":72520,"line_start":55,"line_end":55,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":72822,"byte_end":72834,"line_start":67,"line_end":67,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":72874,"byte_end":72886,"line_start":69,"line_end":69,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":73183,"byte_end":73195,"line_start":80,"line_end":80,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":73235,"byte_end":73247,"line_start":82,"line_end":82,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_ptr.rs","byte_start":83444,"byte_end":83453,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_ptr.rs","byte_start":83627,"byte_end":83636,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_ptr.rs","byte_start":83783,"byte_end":83792,"line_start":24,"line_end":24,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_ptr.rs","byte_start":83905,"byte_end":83914,"line_start":30,"line_end":30,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_u16.rs","byte_start":84258,"byte_end":84267,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_u16.rs","byte_start":84292,"byte_end":84301,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_u16.rs","byte_start":84311,"byte_end":84320,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_u16.rs","byte_start":84812,"byte_end":84821,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_u16.rs","byte_start":85106,"byte_end":85115,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_u32.rs","byte_start":85456,"byte_end":85465,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_u32.rs","byte_start":85490,"byte_end":85499,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_u32.rs","byte_start":85509,"byte_end":85518,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_u32.rs","byte_start":85703,"byte_end":85712,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":351},{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_u32.rs","byte_start":85997,"byte_end":86006,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_u8.rs","byte_start":88121,"byte_end":88129,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_u8.rs","byte_start":88154,"byte_end":88162,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_u8.rs","byte_start":88172,"byte_end":88180,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_u8.rs","byte_start":88361,"byte_end":88369,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_u8.rs","byte_start":88653,"byte_end":88661,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_usize.rs","byte_start":89001,"byte_end":89012,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_usize.rs","byte_start":89037,"byte_end":89048,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_usize.rs","byte_start":89058,"byte_end":89069,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_usize.rs","byte_start":89758,"byte_end":89769,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_usize.rs","byte_start":90059,"byte_end":90070,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_usize.rs","byte_start":90234,"byte_end":90245,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/mutex.rs","byte_start":90576,"byte_end":90581,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/unsafe_cell.rs","byte_start":91259,"byte_end":91269,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/park/mod.rs","byte_start":95480,"byte_end":95483,"line_start":106,"line_end":106,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/park/mod.rs","byte_start":95572,"byte_end":95575,"line_start":112,"line_end":112,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/coop.rs","byte_start":98865,"byte_end":98871,"line_start":65,"line_end":65,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":477},{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/coop.rs","byte_start":100231,"byte_end":100241,"line_start":108,"line_end":108,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":13819,"byte_end":13825,"line_start":341,"line_end":341,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/macros/mod.rs","byte_start":16137,"byte_end":16144,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":47}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":13878,"byte_end":13880,"line_start":349,"line_end":349,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":76}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":13890,"byte_end":13893,"line_start":350,"line_end":350,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":234}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":13925,"byte_end":13932,"line_start":355,"line_end":355,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":468}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/lib.rs","byte_start":14400,"byte_end":14404,"line_start":392,"line_end":392,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":493}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/future/poll_fn.rs","byte_start":28135,"byte_end":28141,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":59},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/future/poll_fn.rs","byte_start":28355,"byte_end":28361,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":59},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/future/poll_fn.rs","byte_start":28503,"byte_end":28509,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":59},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/future/ready.rs","byte_start":8011106,"byte_end":8011111,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":514},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/future/ready.rs","byte_start":8011138,"byte_end":8011143,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":514},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":38767,"byte_end":38776,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":113},"to":{"krate":0,"index":85}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":41226,"byte_end":41229,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"kind":{"Impl":{"id":5}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":85}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":41389,"byte_end":41392,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":2,"index":30012},"to":{"krate":0,"index":85}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_buf_read.rs","byte_start":42021,"byte_end":42027,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"kind":{"Impl":{"id":7}},"from":{"krate":1,"index":6590},"to":{"krate":0,"index":85}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":45067,"byte_end":45070,"line_start":72,"line_end":72,"column_start":51,"column_end":54},"kind":{"Impl":{"id":8}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":113}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":45213,"byte_end":45216,"line_start":80,"line_end":80,"column_start":23,"column_end":26},"kind":{"Impl":{"id":9}},"from":{"krate":2,"index":30012},"to":{"krate":0,"index":113}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_read.rs","byte_start":45885,"byte_end":45891,"line_start":108,"line_end":108,"column_start":48,"column_end":54},"kind":{"Impl":{"id":10}},"from":{"krate":1,"index":6590},"to":{"krate":0,"index":113}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":48885,"byte_end":48888,"line_start":61,"line_end":61,"column_start":51,"column_end":54},"kind":{"Impl":{"id":11}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":138}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":49031,"byte_end":49034,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"kind":{"Impl":{"id":12}},"from":{"krate":2,"index":30012},"to":{"krate":0,"index":138}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_seek.rs","byte_start":49425,"byte_end":49431,"line_start":83,"line_end":83,"column_start":48,"column_end":54},"kind":{"Impl":{"id":13}},"from":{"krate":1,"index":6590},"to":{"krate":0,"index":138}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":56656,"byte_end":56659,"line_start":152,"line_end":152,"column_start":53,"column_end":56},"kind":{"Impl":{"id":14}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":162}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":56807,"byte_end":56810,"line_start":160,"line_end":160,"column_start":24,"column_end":27},"kind":{"Impl":{"id":15}},"from":{"krate":2,"index":30012},"to":{"krate":0,"index":162}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":57379,"byte_end":57382,"line_start":182,"line_end":182,"column_start":21,"column_end":24},"kind":{"Impl":{"id":16}},"from":{"krate":5,"index":4209},"to":{"krate":0,"index":162}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":57890,"byte_end":57896,"line_start":201,"line_end":201,"column_start":25,"column_end":31},"kind":{"Impl":{"id":17}},"from":{"krate":1,"index":6590},"to":{"krate":0,"index":162}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":58409,"byte_end":58415,"line_start":219,"line_end":219,"column_start":25,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":1,"index":6590},"to":{"krate":0,"index":162}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":58931,"byte_end":58937,"line_start":237,"line_end":237,"column_start":25,"column_end":31},"kind":{"Impl":{"id":19}},"from":{"krate":1,"index":6590},"to":{"krate":0,"index":162}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/async_write.rs","byte_start":59448,"byte_end":59454,"line_start":255,"line_end":255,"column_start":25,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":1,"index":6590},"to":{"krate":0,"index":162}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":61205,"byte_end":61212,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/io/read_buf.rs","byte_start":69273,"byte_end":69280,"line_start":258,"line_end":258,"column_start":21,"column_end":28},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":202},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":71790,"byte_end":71807,"line_start":22,"line_end":22,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":294},"to":{"krate":0,"index":245}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":72460,"byte_end":72470,"line_start":53,"line_end":53,"column_start":24,"column_end":34},"kind":{"Impl":{"id":23}},"from":{"krate":1,"index":6744},"to":{"krate":0,"index":245}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":72510,"byte_end":72520,"line_start":55,"line_end":55,"column_start":36,"column_end":46},"kind":{"Impl":{"id":24}},"from":{"krate":1,"index":6744},"to":{"krate":0,"index":294}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":72822,"byte_end":72834,"line_start":67,"line_end":67,"column_start":24,"column_end":36},"kind":{"Impl":{"id":25}},"from":{"krate":1,"index":6774},"to":{"krate":0,"index":245}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":72874,"byte_end":72886,"line_start":69,"line_end":69,"column_start":36,"column_end":48},"kind":{"Impl":{"id":26}},"from":{"krate":1,"index":6774},"to":{"krate":0,"index":294}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":73183,"byte_end":73195,"line_start":80,"line_end":80,"column_start":24,"column_end":36},"kind":{"Impl":{"id":27}},"from":{"krate":1,"index":6777},"to":{"krate":0,"index":245}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/net/addr.rs","byte_start":73235,"byte_end":73247,"line_start":82,"line_end":82,"column_start":36,"column_end":48},"kind":{"Impl":{"id":28}},"from":{"krate":1,"index":6777},"to":{"krate":0,"index":294}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_ptr.rs","byte_start":83444,"byte_end":83453,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":308},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_ptr.rs","byte_start":83627,"byte_end":83636,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":308},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_ptr.rs","byte_start":83783,"byte_end":83792,"line_start":24,"line_end":24,"column_start":22,"column_end":31},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":308},"to":{"krate":2,"index":2087}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_ptr.rs","byte_start":83905,"byte_end":83914,"line_start":30,"line_end":30,"column_start":24,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":308},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_u16.rs","byte_start":84258,"byte_end":84267,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":328},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_u16.rs","byte_start":84292,"byte_end":84301,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":328},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_u16.rs","byte_start":84311,"byte_end":84320,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_u16.rs","byte_start":84812,"byte_end":84821,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":328},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_u16.rs","byte_start":85106,"byte_end":85115,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":328},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_u32.rs","byte_start":85456,"byte_end":85465,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":344},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_u32.rs","byte_start":85490,"byte_end":85499,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":344},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_u32.rs","byte_start":85509,"byte_end":85518,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":344},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_u32.rs","byte_start":85703,"byte_end":85712,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":344},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_u32.rs","byte_start":85997,"byte_end":86006,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":344},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_u8.rs","byte_start":88121,"byte_end":88129,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":363},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_u8.rs","byte_start":88154,"byte_end":88162,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":363},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_u8.rs","byte_start":88172,"byte_end":88180,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_u8.rs","byte_start":88361,"byte_end":88369,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":363},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_u8.rs","byte_start":88653,"byte_end":88661,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":363},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_usize.rs","byte_start":89001,"byte_end":89012,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":378},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_usize.rs","byte_start":89037,"byte_end":89048,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":378},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_usize.rs","byte_start":89058,"byte_end":89069,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_usize.rs","byte_start":89758,"byte_end":89769,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":378},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_usize.rs","byte_start":90059,"byte_end":90070,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":378},"to":{"krate":2,"index":2087}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/atomic_usize.rs","byte_start":90234,"byte_end":90245,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":378},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/mutex.rs","byte_start":90576,"byte_end":90581,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/loom/std/unsafe_cell.rs","byte_start":91259,"byte_end":91269,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":544},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/park/mod.rs","byte_start":95000,"byte_end":95004,"line_start":92,"line_end":92,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1915},"to":{"krate":0,"index":462}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/park/mod.rs","byte_start":95007,"byte_end":95011,"line_start":92,"line_end":92,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":1903},"to":{"krate":0,"index":462}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/park/mod.rs","byte_start":95480,"byte_end":95483,"line_start":106,"line_end":106,"column_start":17,"column_end":20},"kind":{"Impl":{"id":56}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":462}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/park/mod.rs","byte_start":95572,"byte_end":95575,"line_start":112,"line_end":112,"column_start":17,"column_end":20},"kind":{"Impl":{"id":57}},"from":{"krate":5,"index":3880},"to":{"krate":0,"index":462}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/coop.rs","byte_start":98865,"byte_end":98871,"line_start":65,"line_end":65,"column_start":6,"column_end":12},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":555},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.3.2/src/coop.rs","byte_start":100231,"byte_end":100241,"line_start":108,"line_end":108,"column_start":23,"column_end":33},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":2098}}]}