{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3","program":"/home/alexis/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","domain","--edition=2018","/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"bytes\"","--cfg","feature=\"default\"","--cfg","feature=\"smallvec\"","--cfg","feature=\"std\"","-C","metadata=4cfe38c311c369e8","-C","extra-filename=-4cfe38c311c369e8","--out-dir","/home/alexis/Documents/Rust/repo/Rust/xfiveohnine/target/rls/debug/deps","-L","dependency=/home/alexis/Documents/Rust/repo/Rust/xfiveohnine/target/rls/debug/deps","--extern","bytes=/home/alexis/Documents/Rust/repo/Rust/xfiveohnine/target/rls/debug/deps/libbytes-c7d9f2f0c2ee8809.rmeta","--extern","rand=/home/alexis/Documents/Rust/repo/Rust/xfiveohnine/target/rls/debug/deps/librand-5db1830a10b92a26.rmeta","--extern","smallvec=/home/alexis/Documents/Rust/repo/Rust/xfiveohnine/target/rls/debug/deps/libsmallvec-9ad2b79d8f912533.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/alexis/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/alexis/Documents/Rust/repo/Rust/xfiveohnine/target/rls/debug/deps/libdomain-4cfe38c311c369e8.rmeta"},"prelude":{"crate_id":{"name":"domain","disambiguator":[12177644154521637071,5754314573339645603]},"crate_root":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src","external_crates":[{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[14168888756904427512,16776303916459465465]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[17407741297230913278,16283799328799007365]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[4492142733197306814,14151866605630611617]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[10344648486569477446,2454248652556920925]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9785299734546160784,636286335322626912]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5680562745065174860,9217186745851755644]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1647702202987759035,15124534591008137148]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[16711431240759211485,3970175217288203291]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[125532023394459561,9172165323910118991]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[17639569287364244572,9623243733363078576]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[10466182059741283835,56412014413285874]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[6793855748667116046,87956666511033926]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15647227138251999113,1639002543540862534]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[10550792004909319356,1806099500584167781]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","num":15,"id":{"name":"bytes","disambiguator":[10500849833303405598,3660719745628584188]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","num":16,"id":{"name":"smallvec","disambiguator":[7885084958685051827,2740885379865949306]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7830.rs","num":17,"id":{"name":"rand","disambiguator":[17254120787420846302,14073741966783433548]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7830.rs","num":18,"id":{"name":"rand_core","disambiguator":[17031489820481999523,2076162865084950667]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7830.rs","num":19,"id":{"name":"getrandom","disambiguator":[3956643916089973620,14225560258928498218]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7830.rs","num":20,"id":{"name":"cfg_if","disambiguator":[12874494306035902627,3846265777876185817]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7830.rs","num":21,"id":{"name":"libc","disambiguator":[12234600488108187105,14865762042481230426]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7830.rs","num":22,"id":{"name":"rand_chacha","disambiguator":[15944028256381752775,6641247748178188470]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7830.rs","num":23,"id":{"name":"ppv_lite86","disambiguator":[15341782347953307520,12930013962467118794]}}],"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":0,"byte_end":4103,"line_start":1,"line_end":94,"column_start":1,"column_end":15}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":4304},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":8522,"byte_end":8529,"line_start":95,"line_end":95,"column_start":24,"column_end":31},"alias_span":null,"name":"CharStr","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":238},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":8550,"byte_end":8562,"line_start":96,"line_end":96,"column_start":20,"column_end":32},"alias_span":null,"name":"CanonicalOrd","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":4355},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":8587,"byte_end":8593,"line_start":97,"line_end":97,"column_start":24,"column_end":30},"alias_span":null,"name":"Header","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":4374},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":8595,"byte_end":8607,"line_start":97,"line_end":97,"column_start":32,"column_end":44},"alias_span":null,"name":"HeaderCounts","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":4393},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":8609,"byte_end":8622,"line_start":97,"line_end":97,"column_start":46,"column_end":59},"alias_span":null,"name":"HeaderSection","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":4988},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":8645,"byte_end":8650,"line_start":98,"line_end":98,"column_start":21,"column_end":26},"alias_span":null,"name":"Rtype","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":5288},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":8676,"byte_end":8683,"line_start":99,"line_end":99,"column_start":25,"column_end":32},"alias_span":null,"name":"Message","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":5296},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":8685,"byte_end":8700,"line_start":99,"line_end":99,"column_start":34,"column_end":49},"alias_span":null,"name":"QuestionSection","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":5328},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":8702,"byte_end":8715,"line_start":99,"line_end":99,"column_start":51,"column_end":64},"alias_span":null,"name":"RecordSection","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":5369},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":8755,"byte_end":8769,"line_start":101,"line_end":101,"column_start":5,"column_end":19},"alias_span":null,"name":"MessageBuilder","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":888},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":8771,"byte_end":8791,"line_start":101,"line_end":101,"column_start":21,"column_end":41},"alias_span":null,"name":"RecordSectionBuilder","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":5436},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":8793,"byte_end":8809,"line_start":101,"line_end":101,"column_start":43,"column_end":59},"alias_span":null,"name":"StaticCompressor","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":5427},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":8811,"byte_end":8823,"line_start":101,"line_end":101,"column_start":61,"column_end":73},"alias_span":null,"name":"StreamTarget","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":5448},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":8882,"byte_end":8896,"line_start":103,"line_end":103,"column_start":56,"column_end":70},"alias_span":null,"name":"TreeCompressor","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":5575},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":8924,"byte_end":8929,"line_start":105,"line_end":105,"column_start":5,"column_end":10},"alias_span":null,"name":"Dname","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":5467},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":8931,"byte_end":8943,"line_start":105,"line_end":105,"column_start":12,"column_end":24},"alias_span":null,"name":"DnameBuilder","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":5667},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":8945,"byte_end":8956,"line_start":105,"line_end":105,"column_start":26,"column_end":37},"alias_span":null,"name":"ParsedDname","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":5730},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":8958,"byte_end":8971,"line_start":105,"line_end":105,"column_start":39,"column_end":52},"alias_span":null,"name":"RelativeDname","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":1909},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":8973,"byte_end":8980,"line_start":105,"line_end":105,"column_start":54,"column_end":61},"alias_span":null,"name":"ToDname","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":1930},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":8982,"byte_end":8997,"line_start":105,"line_end":105,"column_start":63,"column_end":78},"alias_span":null,"name":"ToRelativeDname","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":2298},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":9024,"byte_end":9031,"line_start":107,"line_end":107,"column_start":24,"column_end":31},"alias_span":null,"name":"Compose","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":5794},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":9033,"byte_end":9039,"line_start":107,"line_end":107,"column_start":33,"column_end":39},"alias_span":null,"name":"Parser","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":6287},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":9041,"byte_end":9049,"line_start":107,"line_end":107,"column_start":41,"column_end":49},"alias_span":null,"name":"ShortBuf","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":2335},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":9104,"byte_end":9113,"line_start":108,"line_end":108,"column_start":52,"column_end":61},"alias_span":null,"name":"OctetsVec","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":7255},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":9139,"byte_end":9147,"line_start":109,"line_end":109,"column_start":25,"column_end":33},"alias_span":null,"name":"Question","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":2547},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":9171,"byte_end":9186,"line_start":110,"line_end":110,"column_start":23,"column_end":38},"alias_span":null,"name":"ParseRecordData","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":2545},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":9188,"byte_end":9198,"line_start":110,"line_end":110,"column_start":40,"column_end":50},"alias_span":null,"name":"RecordData","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":7183},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":9200,"byte_end":9217,"line_start":110,"line_end":110,"column_start":52,"column_end":69},"alias_span":null,"name":"UnknownRecordData","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":7190},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":9243,"byte_end":9249,"line_start":111,"line_end":111,"column_start":24,"column_end":30},"alias_span":null,"name":"Record","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":7201},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":9251,"byte_end":9263,"line_start":111,"line_end":111,"column_start":32,"column_end":44},"alias_span":null,"name":"RecordHeader","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":7211},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":9265,"byte_end":9277,"line_start":111,"line_end":111,"column_start":46,"column_end":58},"alias_span":null,"name":"ParsedRecord","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":7265},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":9302,"byte_end":9308,"line_start":112,"line_end":112,"column_start":23,"column_end":29},"alias_span":null,"name":"Serial","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":4449},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":69056,"byte_end":69061,"line_start":28,"line_end":28,"column_start":22,"column_end":27},"alias_span":null,"name":"Class","value":"","parent":{"krate":0,"index":348}},{"kind":"Use","ref_id":{"krate":0,"index":4524},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":69088,"byte_end":69097,"line_start":29,"line_end":29,"column_start":26,"column_end":35},"alias_span":null,"name":"DigestAlg","value":"","parent":{"krate":0,"index":348}},{"kind":"Use","ref_id":{"krate":0,"index":4586},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":69120,"byte_end":69132,"line_start":30,"line_end":30,"column_start":22,"column_end":34},"alias_span":null,"name":"Nsec3HashAlg","value":"","parent":{"krate":0,"index":348}},{"kind":"Use","ref_id":{"krate":0,"index":4642},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":69156,"byte_end":69162,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"alias_span":null,"name":"Opcode","value":"","parent":{"krate":0,"index":348}},{"kind":"Use","ref_id":{"krate":0,"index":4720},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":69183,"byte_end":69193,"line_start":32,"line_end":32,"column_start":20,"column_end":30},"alias_span":null,"name":"OptionCode","value":"","parent":{"krate":0,"index":348}},{"kind":"Use","ref_id":{"krate":0,"index":4781},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":69217,"byte_end":69222,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"alias_span":null,"name":"Rcode","value":"","parent":{"krate":0,"index":348}},{"kind":"Use","ref_id":{"krate":0,"index":4812},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":69224,"byte_end":69232,"line_start":33,"line_end":33,"column_start":30,"column_end":38},"alias_span":null,"name":"OptRcode","value":"","parent":{"krate":0,"index":348}},{"kind":"Use","ref_id":{"krate":0,"index":4884},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":69234,"byte_end":69243,"line_start":33,"line_end":33,"column_start":40,"column_end":49},"alias_span":null,"name":"TsigRcode","value":"","parent":{"krate":0,"index":348}},{"kind":"Use","ref_id":{"krate":0,"index":4988},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":69267,"byte_end":69272,"line_start":34,"line_end":34,"column_start":22,"column_end":27},"alias_span":null,"name":"Rtype","value":"","parent":{"krate":0,"index":348}},{"kind":"Use","ref_id":{"krate":0,"index":5225},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":69296,"byte_end":69302,"line_start":35,"line_end":35,"column_start":23,"column_end":29},"alias_span":null,"name":"SecAlg","value":"","parent":{"krate":0,"index":348}},{"kind":"Use","ref_id":{"krate":0,"index":5467},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":248223,"byte_end":248235,"line_start":60,"line_end":60,"column_start":25,"column_end":37},"alias_span":null,"name":"DnameBuilder","value":"","parent":{"krate":0,"index":1001}},{"kind":"Use","ref_id":{"krate":0,"index":5508},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":248237,"byte_end":248249,"line_start":60,"line_end":60,"column_start":39,"column_end":51},"alias_span":null,"name":"FromStrError","value":"","parent":{"krate":0,"index":1001}},{"kind":"Use","ref_id":{"krate":0,"index":5474},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":248251,"byte_end":248260,"line_start":60,"line_end":60,"column_start":53,"column_end":62},"alias_span":null,"name":"PushError","value":"","parent":{"krate":0,"index":1001}},{"kind":"Use","ref_id":{"krate":0,"index":5492},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":248262,"byte_end":248275,"line_start":60,"line_end":60,"column_start":64,"column_end":77},"alias_span":null,"name":"PushNameError","value":"","parent":{"krate":0,"index":1001}},{"kind":"Use","ref_id":{"krate":0,"index":5538},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":248300,"byte_end":248305,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1001}},{"kind":"Use","ref_id":{"krate":0,"index":5551},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":248307,"byte_end":248316,"line_start":61,"line_end":61,"column_start":30,"column_end":39},"alias_span":null,"name":"ChainIter","value":"","parent":{"krate":0,"index":1001}},{"kind":"Use","ref_id":{"krate":0,"index":5562},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":248318,"byte_end":248332,"line_start":61,"line_end":61,"column_start":41,"column_end":55},"alias_span":null,"name":"LongChainError","value":"","parent":{"krate":0,"index":1001}},{"kind":"Use","ref_id":{"krate":0,"index":1205},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":248334,"byte_end":248352,"line_start":61,"line_end":61,"column_start":57,"column_end":75},"alias_span":null,"name":"UncertainChainIter","value":"","parent":{"krate":0,"index":1001}},{"kind":"Use","ref_id":{"krate":0,"index":5575},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":248377,"byte_end":248382,"line_start":62,"line_end":62,"column_start":23,"column_end":28},"alias_span":null,"name":"Dname","value":"","parent":{"krate":0,"index":1001}},{"kind":"Use","ref_id":{"krate":0,"index":5589},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":248384,"byte_end":248394,"line_start":62,"line_end":62,"column_start":30,"column_end":40},"alias_span":null,"name":"DnameError","value":"","parent":{"krate":0,"index":1001}},{"kind":"Use","ref_id":{"krate":0,"index":1437},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":248424,"byte_end":248429,"line_start":64,"line_end":64,"column_start":5,"column_end":10},"alias_span":null,"name":"Label","value":"","parent":{"krate":0,"index":1001}},{"kind":"Use","ref_id":{"krate":0,"index":5615},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":248431,"byte_end":248445,"line_start":64,"line_end":64,"column_start":12,"column_end":26},"alias_span":null,"name":"LabelTypeError","value":"","parent":{"krate":0,"index":1001}},{"kind":"Use","ref_id":{"krate":0,"index":5633},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":248447,"byte_end":248461,"line_start":64,"line_end":64,"column_start":28,"column_end":42},"alias_span":null,"name":"LongLabelError","value":"","parent":{"krate":0,"index":1001}},{"kind":"Use","ref_id":{"krate":0,"index":1502},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":248463,"byte_end":248473,"line_start":64,"line_end":64,"column_start":44,"column_end":54},"alias_span":null,"name":"OwnedLabel","value":"","parent":{"krate":0,"index":1001}},{"kind":"Use","ref_id":{"krate":0,"index":1545},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":248475,"byte_end":248490,"line_start":64,"line_end":64,"column_start":56,"column_end":71},"alias_span":null,"name":"SliceLabelsIter","value":"","parent":{"krate":0,"index":1001}},{"kind":"Use","ref_id":{"krate":0,"index":5646},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":248496,"byte_end":248511,"line_start":65,"line_end":65,"column_start":5,"column_end":20},"alias_span":null,"name":"SplitLabelError","value":"","parent":{"krate":0,"index":1001}},{"kind":"Use","ref_id":{"krate":0,"index":5667},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":248538,"byte_end":248549,"line_start":67,"line_end":67,"column_start":24,"column_end":35},"alias_span":null,"name":"ParsedDname","value":"","parent":{"krate":0,"index":1001}},{"kind":"Use","ref_id":{"krate":0,"index":5677},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":248551,"byte_end":248566,"line_start":67,"line_end":67,"column_start":37,"column_end":52},"alias_span":null,"name":"ParsedDnameIter","value":"","parent":{"krate":0,"index":1001}},{"kind":"Use","ref_id":{"krate":0,"index":5685},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":248568,"byte_end":248584,"line_start":67,"line_end":67,"column_start":54,"column_end":70},"alias_span":null,"name":"ParsedSuffixIter","value":"","parent":{"krate":0,"index":1001}},{"kind":"Use","ref_id":{"krate":0,"index":5730},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":248617,"byte_end":248630,"line_start":69,"line_end":69,"column_start":5,"column_end":18},"alias_span":null,"name":"RelativeDname","value":"","parent":{"krate":0,"index":1001}},{"kind":"Use","ref_id":{"krate":0,"index":5737},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":248632,"byte_end":248641,"line_start":69,"line_end":69,"column_start":20,"column_end":29},"alias_span":null,"name":"DnameIter","value":"","parent":{"krate":0,"index":1001}},{"kind":"Use","ref_id":{"krate":0,"index":5746},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":248643,"byte_end":248661,"line_start":69,"line_end":69,"column_start":31,"column_end":49},"alias_span":null,"name":"RelativeDnameError","value":"","parent":{"krate":0,"index":1001}},{"kind":"Use","ref_id":{"krate":0,"index":5770},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":248663,"byte_end":248679,"line_start":69,"line_end":69,"column_start":51,"column_end":67},"alias_span":null,"name":"StripSuffixError","value":"","parent":{"krate":0,"index":1001}},{"kind":"Use","ref_id":{"krate":0,"index":1909},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":248706,"byte_end":248713,"line_start":71,"line_end":71,"column_start":24,"column_end":31},"alias_span":null,"name":"ToDname","value":"","parent":{"krate":0,"index":1001}},{"kind":"Use","ref_id":{"krate":0,"index":1950},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":248715,"byte_end":248728,"line_start":71,"line_end":71,"column_start":33,"column_end":46},"alias_span":null,"name":"ToEitherDname","value":"","parent":{"krate":0,"index":1001}},{"kind":"Use","ref_id":{"krate":0,"index":1894},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":248730,"byte_end":248741,"line_start":71,"line_end":71,"column_start":48,"column_end":59},"alias_span":null,"name":"ToLabelIter","value":"","parent":{"krate":0,"index":1001}},{"kind":"Use","ref_id":{"krate":0,"index":1930},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":248743,"byte_end":248758,"line_start":71,"line_end":71,"column_start":61,"column_end":76},"alias_span":null,"name":"ToRelativeDname","value":"","parent":{"krate":0,"index":1001}},{"kind":"Use","ref_id":{"krate":0,"index":5783},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":248786,"byte_end":248800,"line_start":72,"line_end":72,"column_start":26,"column_end":40},"alias_span":null,"name":"UncertainDname","value":"","parent":{"krate":0,"index":1001}},{"kind":"Use","ref_id":{"krate":4,"index":6780},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/net.rs","byte_start":483371,"byte_end":483377,"line_start":11,"line_end":11,"column_start":20,"column_end":26},"alias_span":null,"name":"IpAddr","value":"","parent":{"krate":0,"index":2063}},{"kind":"Use","ref_id":{"krate":4,"index":6810},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/net.rs","byte_start":483379,"byte_end":483387,"line_start":11,"line_end":11,"column_start":28,"column_end":36},"alias_span":null,"name":"Ipv4Addr","value":"","parent":{"krate":0,"index":2063}},{"kind":"Use","ref_id":{"krate":4,"index":6813},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/net.rs","byte_start":483389,"byte_end":483397,"line_start":11,"line_end":11,"column_start":38,"column_end":46},"alias_span":null,"name":"Ipv6Addr","value":"","parent":{"krate":0,"index":2063}},{"kind":"Use","ref_id":{"krate":4,"index":6853},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/net.rs","byte_start":483399,"byte_end":483413,"line_start":11,"line_end":11,"column_start":48,"column_end":62},"alias_span":null,"name":"AddrParseError","value":"","parent":{"krate":0,"index":2063}},{"kind":"Use","ref_id":{"krate":0,"index":6669},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":544031,"byte_end":544035,"line_start":28,"line_end":28,"column_start":15,"column_end":19},"alias_span":null,"name":"Nsid","value":"","parent":{"krate":0,"index":2352}},{"kind":"Use","ref_id":{"krate":0,"index":6729},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":544060,"byte_end":544063,"line_start":29,"line_end":29,"column_start":15,"column_end":18},"alias_span":null,"name":"Dau","value":"","parent":{"krate":0,"index":2352}},{"kind":"Use","ref_id":{"krate":0,"index":6789},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":544073,"byte_end":544076,"line_start":29,"line_end":29,"column_start":28,"column_end":31},"alias_span":null,"name":"Dhu","value":"","parent":{"krate":0,"index":2352}},{"kind":"Use","ref_id":{"krate":0,"index":6849},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":544086,"byte_end":544089,"line_start":29,"line_end":29,"column_start":41,"column_end":44},"alias_span":null,"name":"N3u","value":"","parent":{"krate":0,"index":2352}},{"kind":"Use","ref_id":{"krate":0,"index":6883},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":544114,"byte_end":544120,"line_start":30,"line_end":30,"column_start":15,"column_end":21},"alias_span":null,"name":"Expire","value":"","parent":{"krate":0,"index":2352}},{"kind":"Use","ref_id":{"krate":0,"index":6909},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":544137,"byte_end":544149,"line_start":31,"line_end":31,"column_start":15,"column_end":27},"alias_span":null,"name":"TcpKeepalive","value":"","parent":{"krate":0,"index":2352}},{"kind":"Use","ref_id":{"krate":0,"index":6954},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":544166,"byte_end":544173,"line_start":32,"line_end":32,"column_start":15,"column_end":22},"alias_span":null,"name":"Padding","value":"","parent":{"krate":0,"index":2352}},{"kind":"Use","ref_id":{"krate":0,"index":6972},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":544190,"byte_end":544202,"line_start":33,"line_end":33,"column_start":15,"column_end":27},"alias_span":null,"name":"ClientSubnet","value":"","parent":{"krate":0,"index":2352}},{"kind":"Use","ref_id":{"krate":0,"index":7007},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":544219,"byte_end":544225,"line_start":34,"line_end":34,"column_start":15,"column_end":21},"alias_span":null,"name":"Cookie","value":"","parent":{"krate":0,"index":2352}},{"kind":"Use","ref_id":{"krate":0,"index":7036},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":544242,"byte_end":544247,"line_start":35,"line_end":35,"column_start":15,"column_end":20},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":2352}},{"kind":"Use","ref_id":{"krate":0,"index":7042},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":544272,"byte_end":544278,"line_start":36,"line_end":36,"column_start":15,"column_end":21},"alias_span":null,"name":"KeyTag","value":"","parent":{"krate":0,"index":2352}},{"kind":"Use","ref_id":{"krate":0,"index":8181},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":804159,"byte_end":804166,"line_start":416,"line_end":416,"column_start":21,"column_end":28},"alias_span":null,"name":"Cdnskey","value":"","parent":{"krate":0,"index":4229}},{"kind":"Use","ref_id":{"krate":0,"index":8190},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":804168,"byte_end":804171,"line_start":416,"line_end":416,"column_start":30,"column_end":33},"alias_span":null,"name":"Cds","value":"","parent":{"krate":0,"index":4229}},{"kind":"Use","ref_id":{"krate":0,"index":7336},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":637608,"byte_end":637609,"line_start":58,"line_end":58,"column_start":13,"column_end":14},"alias_span":null,"name":"A","value":"","parent":{"krate":0,"index":3015}},{"kind":"Use","ref_id":{"krate":0,"index":7412},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":637623,"byte_end":637628,"line_start":59,"line_end":59,"column_start":13,"column_end":18},"alias_span":null,"name":"Cname","value":"","parent":{"krate":0,"index":3015}},{"kind":"Use","ref_id":{"krate":0,"index":7421},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":637645,"byte_end":637650,"line_start":60,"line_end":60,"column_start":13,"column_end":18},"alias_span":null,"name":"Hinfo","value":"","parent":{"krate":0,"index":3015}},{"kind":"Use","ref_id":{"krate":0,"index":7480},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":637667,"byte_end":637669,"line_start":61,"line_end":61,"column_start":13,"column_end":15},"alias_span":null,"name":"Mb","value":"","parent":{"krate":0,"index":3015}},{"kind":"Use","ref_id":{"krate":0,"index":7541},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":637686,"byte_end":637688,"line_start":62,"line_end":62,"column_start":13,"column_end":15},"alias_span":null,"name":"Md","value":"","parent":{"krate":0,"index":3015}},{"kind":"Use","ref_id":{"krate":0,"index":7602},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":637705,"byte_end":637707,"line_start":63,"line_end":63,"column_start":13,"column_end":15},"alias_span":null,"name":"Mf","value":"","parent":{"krate":0,"index":3015}},{"kind":"Use","ref_id":{"krate":0,"index":7672},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":637724,"byte_end":637729,"line_start":64,"line_end":64,"column_start":13,"column_end":18},"alias_span":null,"name":"Minfo","value":"","parent":{"krate":0,"index":3015}},{"kind":"Use","ref_id":{"krate":0,"index":7738},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":637746,"byte_end":637748,"line_start":65,"line_end":65,"column_start":13,"column_end":15},"alias_span":null,"name":"Mr","value":"","parent":{"krate":0,"index":3015}},{"kind":"Use","ref_id":{"krate":0,"index":7747},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":637765,"byte_end":637767,"line_start":66,"line_end":66,"column_start":13,"column_end":15},"alias_span":null,"name":"Mx","value":"","parent":{"krate":0,"index":3015}},{"kind":"Use","ref_id":{"krate":0,"index":7813},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":637784,"byte_end":637786,"line_start":67,"line_end":67,"column_start":13,"column_end":15},"alias_span":null,"name":"Ns","value":"","parent":{"krate":0,"index":3015}},{"kind":"Use","ref_id":{"krate":0,"index":7880},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":637803,"byte_end":637806,"line_start":68,"line_end":68,"column_start":13,"column_end":16},"alias_span":null,"name":"Ptr","value":"","parent":{"krate":0,"index":3015}},{"kind":"Use","ref_id":{"krate":0,"index":7889},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":637823,"byte_end":637826,"line_start":69,"line_end":69,"column_start":13,"column_end":16},"alias_span":null,"name":"Soa","value":"","parent":{"krate":0,"index":3015}},{"kind":"Use","ref_id":{"krate":0,"index":7908},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":637843,"byte_end":637846,"line_start":70,"line_end":70,"column_start":13,"column_end":16},"alias_span":null,"name":"Txt","value":"","parent":{"krate":0,"index":3015}},{"kind":"Use","ref_id":{"krate":0,"index":7822},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":637890,"byte_end":637894,"line_start":73,"line_end":73,"column_start":13,"column_end":17},"alias_span":null,"name":"Null","value":"","parent":{"krate":0,"index":3015}},{"kind":"Use","ref_id":{"krate":0,"index":7932},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":637959,"byte_end":637962,"line_start":78,"line_end":78,"column_start":13,"column_end":16},"alias_span":null,"name":"Srv","value":"","parent":{"krate":0,"index":3015}},{"kind":"Use","ref_id":{"krate":0,"index":7948},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":638027,"byte_end":638031,"line_start":83,"line_end":83,"column_start":13,"column_end":17},"alias_span":null,"name":"Tsig","value":"","parent":{"krate":0,"index":3015}},{"kind":"Use","ref_id":{"krate":0,"index":7988},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":638099,"byte_end":638103,"line_start":88,"line_end":88,"column_start":13,"column_end":17},"alias_span":null,"name":"Aaaa","value":"","parent":{"krate":0,"index":3015}},{"kind":"Use","ref_id":{"krate":0,"index":8012},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":638165,"byte_end":638171,"line_start":93,"line_end":93,"column_start":13,"column_end":19},"alias_span":null,"name":"Dnskey","value":"","parent":{"krate":0,"index":3015}},{"kind":"Use","ref_id":{"krate":0,"index":8034},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":638188,"byte_end":638193,"line_start":94,"line_end":94,"column_start":13,"column_end":18},"alias_span":null,"name":"Rrsig","value":"","parent":{"krate":0,"index":3015}},{"kind":"Use","ref_id":{"krate":0,"index":8050},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":638213,"byte_end":638217,"line_start":95,"line_end":95,"column_start":13,"column_end":17},"alias_span":null,"name":"Nsec","value":"","parent":{"krate":0,"index":3015}},{"kind":"Use","ref_id":{"krate":0,"index":8059},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":638237,"byte_end":638239,"line_start":96,"line_end":96,"column_start":13,"column_end":15},"alias_span":null,"name":"Ds","value":"","parent":{"krate":0,"index":3015}},{"kind":"Use","ref_id":{"krate":0,"index":8152},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":638304,"byte_end":638309,"line_start":101,"line_end":101,"column_start":13,"column_end":18},"alias_span":null,"name":"Dname","value":"","parent":{"krate":0,"index":3015}},{"kind":"Use","ref_id":{"krate":0,"index":8161},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":638374,"byte_end":638379,"line_start":106,"line_end":106,"column_start":13,"column_end":18},"alias_span":null,"name":"Nsec3","value":"","parent":{"krate":0,"index":3015}},{"kind":"Use","ref_id":{"krate":0,"index":8172},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":638396,"byte_end":638406,"line_start":107,"line_end":107,"column_start":13,"column_end":23},"alias_span":null,"name":"Nsec3param","value":"","parent":{"krate":0,"index":3015}},{"kind":"Use","ref_id":{"krate":0,"index":8181},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":638471,"byte_end":638478,"line_start":112,"line_end":112,"column_start":13,"column_end":20},"alias_span":null,"name":"Cdnskey","value":"","parent":{"krate":0,"index":3015}},{"kind":"Use","ref_id":{"krate":0,"index":8190},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":638495,"byte_end":638498,"line_start":113,"line_end":113,"column_start":13,"column_end":16},"alias_span":null,"name":"Cds","value":"","parent":{"krate":0,"index":3015}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":0,"byte_end":4103,"line_start":1,"line_end":94,"column_start":1,"column_end":15},"name":"","qualname":"::","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":3015},{"krate":0,"index":4233}],"decl_id":null,"docs":" A DNS library for Rust.","sig":null,"attributes":[{"value":"! A DNS library for Rust.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":0,"byte_end":27,"line_start":1,"line_end":1,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":28,"byte_end":31,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This crates provides a number of bulding blocks for developing","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":32,"byte_end":98,"line_start":3,"line_end":3,"column_start":1,"column_end":67}},{"value":"! functionality related to the DNS. It provides fundamental types, traits,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":99,"byte_end":175,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"! and code as well as a wide range of optional features. The intent is to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":176,"byte_end":251,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"! eventually cover all aspects of the DNS.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":252,"byte_end":296,"line_start":6,"line_end":6,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":297,"byte_end":300,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! # Modules","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":301,"byte_end":314,"line_start":8,"line_end":8,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":315,"byte_end":318,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! The most important module is [base]. It contains a wide variety of types,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":319,"byte_end":396,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"! traits, and functionality to deal with DNS data. The module [rdata]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":397,"byte_end":468,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"! contains types and implementations for a growing number of record types.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":469,"byte_end":545,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":546,"byte_end":549,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! In addition to those two basic modules, there are a number of modules for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":550,"byte_end":627,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"! more specific features that are not required in all applications. In order","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":628,"byte_end":706,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"! to keep the amount of code to be compiled and the number of dependencies","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":707,"byte_end":783,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"! small, these are hidden behind feature flags through which they can be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":784,"byte_end":858,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"! enabled if required. The flags have the same names as the modules.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":859,"byte_end":929,"line_start":18,"line_end":18,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":930,"byte_end":933,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! Currently, there are the following modules:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":934,"byte_end":981,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":982,"byte_end":985,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! * [master]: reading and writing of master files – also known as zone","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":986,"byte_end":1060,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"!   files –, i.e., the textual representation of DNS data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":1061,"byte_end":1123,"line_start":23,"line_end":23,"column_start":1,"column_end":61}},{"value":"! * [sign]: support for DNSSEC signing,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":1124,"byte_end":1165,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"! * [tsig]: support for securing DNS transactions with TSIG records,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":1166,"byte_end":1236,"line_start":25,"line_end":25,"column_start":1,"column_end":71}},{"value":"! * [validate]: support for DNSSEC validation.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":1237,"byte_end":1285,"line_start":26,"line_end":26,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":1286,"byte_end":1289,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! One missing module is _resolv,_ which implements an asynchronous DNS","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":1290,"byte_end":1362,"line_start":28,"line_end":28,"column_start":1,"column_end":73}},{"value":"! resolver. This module currently resides in its own crate [domain-resolv]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":1363,"byte_end":1439,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"! do to restrictions for async functions used by the module and will be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":1440,"byte_end":1513,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"! transfered here as soon as possible.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":1514,"byte_end":1554,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":1555,"byte_end":1558,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! A few additional feature flags that enable the use of other crates either","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":1559,"byte_end":1636,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"! by adding features to this crate or by implementing traits for types","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":1637,"byte_end":1709,"line_start":34,"line_end":34,"column_start":1,"column_end":73}},{"value":"! defined by those crates. See the overview of feature flags below.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":1710,"byte_end":1779,"line_start":35,"line_end":35,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":1780,"byte_end":1783,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! # Overview of Feature Flags","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":1784,"byte_end":1815,"line_start":37,"line_end":37,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":1816,"byte_end":1819,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! The following feature flags are available to select optional parts of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":1820,"byte_end":1893,"line_start":39,"line_end":39,"column_start":1,"column_end":74}},{"value":"! the crate and to keep the amount of compiled code and dependencies small","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":1894,"byte_end":1970,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"! if these parts are not required.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":1971,"byte_end":2007,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":2008,"byte_end":2011,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"! * `bytes`: enables using the types `Bytes` and `BytesMut` from the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":2012,"byte_end":2082,"line_start":43,"line_end":43,"column_start":1,"column_end":71}},{"value":"!    [bytes] crate as octet sequences.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":2083,"byte_end":2123,"line_start":44,"line_end":44,"column_start":1,"column_end":41}},{"value":"! * `chrono`: adds the [chrono] crate as a dependency. This adds support","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":2124,"byte_end":2198,"line_start":45,"line_end":45,"column_start":1,"column_end":75}},{"value":"!   for generating serial numbers from time stamps.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":2199,"byte_end":2252,"line_start":46,"line_end":46,"column_start":1,"column_end":54}},{"value":"! * `master`: master file (also known as zone file) parsing and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":2253,"byte_end":2318,"line_start":47,"line_end":47,"column_start":1,"column_end":66}},{"value":"!   construction. This will enable the [master] module and currently","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":2319,"byte_end":2389,"line_start":48,"line_end":48,"column_start":1,"column_end":71}},{"value":"!   enables the `bytes`, `chrono`, and `std` features.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":2390,"byte_end":2446,"line_start":49,"line_end":49,"column_start":1,"column_end":57}},{"value":"! * `ring`: enables crypto functionality via the [ring] crate.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":2447,"byte_end":2511,"line_start":50,"line_end":50,"column_start":1,"column_end":65}},{"value":"! * `sign`: basic DNSSEC signing support. This will enable the [sign]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":2512,"byte_end":2583,"line_start":51,"line_end":51,"column_start":1,"column_end":72}},{"value":"!   module and requires the `std` feature. Note that this will not directly ","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":2584,"byte_end":2662,"line_start":52,"line_end":52,"column_start":1,"column_end":79}},{"value":"!   enable actually signing. For that you will also need to pick a crypto","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":2663,"byte_end":2738,"line_start":53,"line_end":53,"column_start":1,"column_end":76}},{"value":"!   module via an additional feature. Currently we only support the `ring`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":2739,"byte_end":2815,"line_start":54,"line_end":54,"column_start":1,"column_end":77}},{"value":"!   module, but support for OpenSSL is coming soon.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":2816,"byte_end":2869,"line_start":55,"line_end":55,"column_start":1,"column_end":54}},{"value":"! * `smallvec`: enables the use of the `Smallvec` type from the [smallvec]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":2870,"byte_end":2946,"line_start":56,"line_end":56,"column_start":1,"column_end":77}},{"value":"!   crate as octet sequences.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":2947,"byte_end":2978,"line_start":57,"line_end":57,"column_start":1,"column_end":32}},{"value":"! * `std`: support for the Rust std library. This feature is enabled by","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":2979,"byte_end":3052,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"!   default.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":3053,"byte_end":3067,"line_start":59,"line_end":59,"column_start":1,"column_end":15}},{"value":"! * `tsig`: support for signing and validating message exchanges via TSIG","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":3068,"byte_end":3143,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"!   signatures. This enables the [tsig] module and currently pulls in the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":3144,"byte_end":3219,"line_start":61,"line_end":61,"column_start":1,"column_end":76}},{"value":"!   `bytes`, `ring`, and `smallvec` features.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":3220,"byte_end":3267,"line_start":62,"line_end":62,"column_start":1,"column_end":48}},{"value":"! * `validate`: basic DNSSEC validation support. This feature enables the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":3268,"byte_end":3343,"line_start":63,"line_end":63,"column_start":1,"column_end":76}},{"value":"!   [validate] module and currently also enables the `std` and `ring`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":3344,"byte_end":3415,"line_start":64,"line_end":64,"column_start":1,"column_end":72}},{"value":"!   features.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":3416,"byte_end":3431,"line_start":65,"line_end":65,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":3432,"byte_end":3435,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"! [base]: base/index.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":3436,"byte_end":3463,"line_start":67,"line_end":67,"column_start":1,"column_end":28}},{"value":"! [master]: master/index.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":3464,"byte_end":3495,"line_start":68,"line_end":68,"column_start":1,"column_end":32}},{"value":"! [rdata]: rdata/index.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":3496,"byte_end":3525,"line_start":69,"line_end":69,"column_start":1,"column_end":30}},{"value":"! [sign]: sign/index.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":3526,"byte_end":3553,"line_start":70,"line_end":70,"column_start":1,"column_end":28}},{"value":"! [tsig]: tsig/index.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":3554,"byte_end":3581,"line_start":71,"line_end":71,"column_start":1,"column_end":28}},{"value":"! [validate]: valiate/index.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":3582,"byte_end":3616,"line_start":72,"line_end":72,"column_start":1,"column_end":35}},{"value":"! [bytes]: https://docs.rs/bytes/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":3617,"byte_end":3652,"line_start":73,"line_end":73,"column_start":1,"column_end":36}},{"value":"! [domain-resolv]: https://docs.rs/domain-resolv/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":3653,"byte_end":3704,"line_start":74,"line_end":74,"column_start":1,"column_end":52}},{"value":"! [chrono]: https://docs.rs/chrono/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":3705,"byte_end":3742,"line_start":75,"line_end":75,"column_start":1,"column_end":38}},{"value":"! [ring]: https://docs.rs/ring/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":3743,"byte_end":3776,"line_start":76,"line_end":76,"column_start":1,"column_end":34}},{"value":"! [smallvec]: https://docs.rs/smallvec/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":3777,"byte_end":3818,"line_start":77,"line_end":77,"column_start":1,"column_end":42}},{"value":"no_std","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":3820,"byte_end":3830,"line_start":79,"line_end":79,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"base","qualname":"::base","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":18},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":31},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":41},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":236},{"krate":0,"index":245},{"krate":0,"index":348},{"krate":0,"index":430},{"krate":0,"index":590},{"krate":0,"index":1001},{"krate":0,"index":2063},{"krate":0,"index":2069},{"krate":0,"index":2352},{"krate":0,"index":2532},{"krate":0,"index":2599},{"krate":0,"index":2842},{"krate":0,"index":2953},{"krate":0,"index":2994}],"decl_id":null,"docs":" Handling of DNS data.","sig":null,"attributes":[{"value":"! Handling of DNS data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":4105,"byte_end":4130,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":4131,"byte_end":4134,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module provides types and traits for working with DNS data. The types","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":4135,"byte_end":4213,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"! allow creating such data from scratch and processing it. Crucially, the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":4214,"byte_end":4289,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"! module provides means to extract the data from wire-format DNS messages","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":4290,"byte_end":4365,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"! and assemble such messages.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":4366,"byte_end":4397,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":4398,"byte_end":4401,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":4402,"byte_end":4405,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! ## Representation of Variable-length Data and DNS Messages","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":4406,"byte_end":4468,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":4469,"byte_end":4472,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! Various types have to deal with data of variable length. For instance, a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":4473,"byte_end":4549,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"! domain name can be anywhere between one and 255 bytes long. Since there","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":4550,"byte_end":4625,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"! is no single best type to deal with such data – slices, vecs, or even","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":4626,"byte_end":4701,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"! byte arrays may all be prefered in certain cases –, the crate uses a set","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":4702,"byte_end":4780,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"! of traits to be able to be generic over bytes sequences. We call types","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":4781,"byte_end":4855,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"! that provide these traits ‘octet sequences’ or simple ‘octets.’","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":4856,"byte_end":4931,"line_start":16,"line_end":16,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":4932,"byte_end":4935,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! Different traits exist for octet references, owned octets, and octet","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":4936,"byte_end":5008,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"! builder, that is types that allow constructing an octet stequence from","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":5009,"byte_end":5083,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"! indidivual bytes or slice. The [octets] module contains all traits and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":5084,"byte_end":5158,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"! trait implementations. It also contains a detailed descriptions of the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":5159,"byte_end":5233,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"! traits, their purpose, and how it all fits together.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":5234,"byte_end":5290,"line_start":22,"line_end":22,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":5291,"byte_end":5294,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":5295,"byte_end":5298,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! ## Parsing and Composing Messages","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":5299,"byte_end":5336,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":5337,"byte_end":5340,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! In order to easily distinguish the process of creating and disecting","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":5341,"byte_end":5413,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"! wire-format messages other forms of representation conversion such as","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":5414,"byte_end":5487,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"! reading from a master file, we use the term *parsing* for extracting data","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":5488,"byte_end":5565,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"! from a wire-format representation and *composing* for producing such a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":5566,"byte_end":5640,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"! representation. ","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":5641,"byte_end":5661,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":5662,"byte_end":5665,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! Both parsing and composing happen on buffers holding a complete DNS","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":5666,"byte_end":5737,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"! message. This seems to be a reasonable choice given the limited ","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":5738,"byte_end":5806,"line_start":34,"line_end":34,"column_start":1,"column_end":69}},{"value":"! size of DNS messages and the complexities introduced by compressing","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":5807,"byte_end":5878,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"! domain names in message by referencing other parts of the message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":5879,"byte_end":5949,"line_start":36,"line_end":36,"column_start":1,"column_end":71}},{"value":"! The fundamental types for parsing and composing are also part of the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":5950,"byte_end":6022,"line_start":37,"line_end":37,"column_start":1,"column_end":73}},{"value":"! [octets] module. But unless you are implementing your own resource record","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":6023,"byte_end":6100,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"! types, you are unlikely to ever having to deal with parsing and composing","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":6101,"byte_end":6178,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"! directly.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":6179,"byte_end":6192,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":6193,"byte_end":6196,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! Instead, the types [`Message`] and [`MessageBuilder`] are there to make","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":6197,"byte_end":6272,"line_start":42,"line_end":42,"column_start":1,"column_end":76}},{"value":"! parsing and constructing DNS messages easy. A [`Message`] takes the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":6273,"byte_end":6344,"line_start":43,"line_end":43,"column_start":1,"column_end":72}},{"value":"! binary data of a DNS message and allows iterating over its four","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":6345,"byte_end":6412,"line_start":44,"line_end":44,"column_start":1,"column_end":68}},{"value":"! sections to look at the questions and resource records. Similarly,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":6413,"byte_end":6483,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"! a [`MessageBuilder`] takes a bytes vector (or creates one for you) and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":6484,"byte_end":6558,"line_start":46,"line_end":46,"column_start":1,"column_end":75}},{"value":"! has functionality to build the sections of the message step-by-step.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":6559,"byte_end":6631,"line_start":47,"line_end":47,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":6632,"byte_end":6635,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":6636,"byte_end":6639,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"! # Types for DNS Data","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":6640,"byte_end":6664,"line_start":50,"line_end":50,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":6665,"byte_end":6668,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"! The module contains a number of types for DNS data, both fundamental","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":6669,"byte_end":6741,"line_start":52,"line_end":52,"column_start":1,"column_end":73}},{"value":"! and composed. Because they often come with a number of support types,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":6742,"byte_end":6815,"line_start":53,"line_end":53,"column_start":1,"column_end":74}},{"value":"! they are arranged in submodules. You will find detailed explanations for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":6816,"byte_end":6892,"line_start":54,"line_end":54,"column_start":1,"column_end":77}},{"value":"! all of them in their module. These are:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":6893,"byte_end":6936,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":6937,"byte_end":6940,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! * [charstr](charstr/index.html) for DNS character strings,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":6941,"byte_end":7003,"line_start":57,"line_end":57,"column_start":1,"column_end":63}},{"value":"! * [header](header/index.html) for the header of DNS messages,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":7004,"byte_end":7069,"line_start":58,"line_end":58,"column_start":1,"column_end":66}},{"value":"! * [name](name/index.html) for domain names,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":7070,"byte_end":7117,"line_start":59,"line_end":59,"column_start":1,"column_end":48}},{"value":"! * [opt](opt/index.html) for the record data of OPT records used in EDNS,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":7118,"byte_end":7194,"line_start":60,"line_end":60,"column_start":1,"column_end":77}},{"value":"! * [question](question/index.html) for questions,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":7195,"byte_end":7247,"line_start":61,"line_end":61,"column_start":1,"column_end":53}},{"value":"! * [serial](serial/index.html) for serial numbers of zones, and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":7248,"byte_end":7314,"line_start":62,"line_end":62,"column_start":1,"column_end":67}},{"value":"! * [record](record/index.html) for DNS resource records including record","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":7315,"byte_end":7390,"line_start":63,"line_end":63,"column_start":1,"column_end":76}},{"value":"!   data,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":7391,"byte_end":7402,"line_start":64,"line_end":64,"column_start":1,"column_end":12}},{"value":"! * [rdata](rdata/index.html) for all the individual record types.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":7403,"byte_end":7471,"line_start":65,"line_end":65,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":7472,"byte_end":7475,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":7476,"byte_end":7479,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"! # Master File Processing","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":7480,"byte_end":7508,"line_start":68,"line_end":68,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":7509,"byte_end":7512,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! Handling for the text format for DNS data, sometimes called master files","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":7513,"byte_end":7589,"line_start":70,"line_end":70,"column_start":1,"column_end":77}},{"value":"! or zone files is available via the [master] module. See there for more","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":7590,"byte_end":7664,"line_start":71,"line_end":71,"column_start":1,"column_end":75}},{"value":"! information.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":7665,"byte_end":7681,"line_start":72,"line_end":72,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":7682,"byte_end":7685,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":7686,"byte_end":7689,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"! # Support for `no_std`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":7690,"byte_end":7716,"line_start":75,"line_end":75,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":7717,"byte_end":7720,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"! The crate is capable of operating without the `std` crate. Obviously, the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":7721,"byte_end":7798,"line_start":77,"line_end":77,"column_start":1,"column_end":78}},{"value":"! set of features is somewhat limited. Specifically, most owned octet","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":7799,"byte_end":7870,"line_start":78,"line_end":78,"column_start":1,"column_end":72}},{"value":"! sequence types require an allocator. The [octets] module thus defines a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":7871,"byte_end":7946,"line_start":79,"line_end":79,"column_start":1,"column_end":76}},{"value":"! set of types atop fixed size byte arrays that can be kept on the stack.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":7947,"byte_end":8022,"line_start":80,"line_end":80,"column_start":1,"column_end":76}},{"value":"! Additional types can be created via the `octets_array` macro.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":8023,"byte_end":8088,"line_start":81,"line_end":81,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":8089,"byte_end":8092,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"! Use of the `std` crate is selected via the `std` feature. This is part of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":8093,"byte_end":8170,"line_start":83,"line_end":83,"column_start":1,"column_end":78}},{"value":"! the default set, so you will have to disable the default features.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":8171,"byte_end":8241,"line_start":84,"line_end":84,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":8242,"byte_end":8245,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"! [iana]: iana/index.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":8246,"byte_end":8273,"line_start":86,"line_end":86,"column_start":1,"column_end":28}},{"value":"! [master]: master/index.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":8274,"byte_end":8305,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"! [octets]: octets/index.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":8306,"byte_end":8337,"line_start":88,"line_end":88,"column_start":1,"column_end":32}},{"value":"! [rdata]: rdata/index.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":8338,"byte_end":8367,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"! [`Message`]: message/struct.Message.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":8368,"byte_end":8412,"line_start":90,"line_end":90,"column_start":1,"column_end":45}},{"value":"! [`MessageBuilder`]: message_builder/struct.MessageBuilder.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":8413,"byte_end":8479,"line_start":91,"line_end":91,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":46},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"charstr","qualname":"::base::charstr","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":70},{"krate":0,"index":4304},{"krate":0,"index":4308},{"krate":0,"index":74},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":94},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":105},{"krate":0,"index":109},{"krate":0,"index":113},{"krate":0,"index":115},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":126},{"krate":0,"index":131},{"krate":0,"index":136},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":147},{"krate":0,"index":150},{"krate":0,"index":155},{"krate":0,"index":161},{"krate":0,"index":4311},{"krate":0,"index":4315},{"krate":0,"index":164},{"krate":0,"index":168},{"krate":0,"index":172},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":182},{"krate":0,"index":185},{"krate":0,"index":189},{"krate":0,"index":193},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":207},{"krate":0,"index":210},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":220},{"krate":0,"index":4318},{"krate":0,"index":4329},{"krate":0,"index":4328},{"krate":0,"index":4326},{"krate":0,"index":4323},{"krate":0,"index":4324},{"krate":0,"index":4320},{"krate":0,"index":4321},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":4331},{"krate":0,"index":4353},{"krate":0,"index":4352},{"krate":0,"index":4350},{"krate":0,"index":4347},{"krate":0,"index":4348},{"krate":0,"index":4343},{"krate":0,"index":4344},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":231},{"krate":0,"index":233},{"krate":0,"index":235}],"decl_id":null,"docs":" Character strings.","sig":null,"attributes":[{"value":"! Character strings.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":9564,"byte_end":9586,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":9587,"byte_end":9590,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The somewhat ill-named `<character-string>` is defined in [RFC 1035] as","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":9591,"byte_end":9666,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"! binary information of up to 255 octets. As such, it doesn’t necessarily","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":9667,"byte_end":9744,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"! contain (ASCII-) characters nor is it a string in a Rust-sense.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":9745,"byte_end":9812,"line_start":5,"line_end":5,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":9813,"byte_end":9816,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! An existing, immutable character string is represented by the type","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":9817,"byte_end":9887,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"! [`CharStr`]. The type [`CharStrBuilder`] allows constructing a character","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":9888,"byte_end":9964,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"! string from individual octets or octets slices.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":9965,"byte_end":10016,"line_start":9,"line_end":9,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":10017,"byte_end":10020,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! In wire-format, character strings are encoded as one octet giving the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":10021,"byte_end":10094,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"! length followed by the actual data in that many octets. The length octet","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":10095,"byte_end":10171,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"! is not part of the content wrapped by [`CharStr`], it contains the data","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":10172,"byte_end":10247,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"! only.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":10248,"byte_end":10257,"line_start":14,"line_end":14,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":10258,"byte_end":10261,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! A [`CharStr`] can be constructed from a string via the `FromStr`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":10262,"byte_end":10330,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"! trait. In this case, the string must consist only of printable ASCII","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":10331,"byte_end":10403,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"! characters. Space and double quote are allowed and will be accepted with","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":10404,"byte_end":10480,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"! their ASCII value. Other values need to be escaped via a backslash","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":10481,"byte_end":10551,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"! followed by the three-digit decimal representation of the value. In","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":10552,"byte_end":10623,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"! addition, a backslash followed by a non-digit printable ASCII character","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":10624,"byte_end":10699,"line_start":21,"line_end":21,"column_start":1,"column_end":76}},{"value":"! is accepted, too, with the ASCII value of this character used.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":10700,"byte_end":10766,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":10767,"byte_end":10770,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! [`CharStr`]: struct.CharStr.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":10771,"byte_end":10807,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"! [`CharStrBuilder`]: struct.CharStrMut.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":10808,"byte_end":10854,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"! [RFC 1035]: https://tools.ietf.org/html/rfc1035","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":10855,"byte_end":10906,"line_start":26,"line_end":26,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":4304},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":11953,"byte_end":11960,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"CharStr","qualname":"::base::charstr::CharStr","value":"","parent":null,"children":[],"decl_id":null,"docs":" The content of a DNS character string.","sig":null,"attributes":[{"value":"/ The content of a DNS character string.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":11471,"byte_end":11513,"line_start":44,"line_end":44,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":11514,"byte_end":11517,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ A character string consists of up to 255 octets of binary data. This type","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":11518,"byte_end":11595,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/ wraps a octets value. It is guaranteed to always be at most 255 octets in","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":11596,"byte_end":11673,"line_start":47,"line_end":47,"column_start":1,"column_end":78}},{"value":"/ length. It derefs into the underlying octets for working with the content","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":11674,"byte_end":11751,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ in a familiar way.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":11752,"byte_end":11774,"line_start":49,"line_end":49,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":11775,"byte_end":11778,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ As per [RFC 1035], character strings compare ignoring ASCII case.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":11779,"byte_end":11848,"line_start":51,"line_end":51,"column_start":1,"column_end":70}},{"value":"/ `CharStr`’s implementations of the `std::cmp` traits act accordingly.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":11849,"byte_end":11924,"line_start":52,"line_end":52,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":12083,"byte_end":12088,"line_start":58,"line_end":58,"column_start":12,"column_end":17},"name":"empty","qualname":"<CharStr<Octets>>::empty","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty character string.\n","sig":null,"attributes":[{"value":"/ Creates a new empty character string.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":12030,"byte_end":12071,"line_start":57,"line_end":57,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":12393,"byte_end":12404,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"from_octets","qualname":"<CharStr<Octets>>::from_octets","value":"fn (octets: Octets) -> Result<Self, CharStrError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new character string from an octets value. ","sig":null,"attributes":[{"value":"/ Creates a new character string from an octets value. ","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":12187,"byte_end":12244,"line_start":63,"line_end":63,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":12249,"byte_end":12252,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Returns succesfully if `octets` can indeed be used as a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":12257,"byte_end":12316,"line_start":65,"line_end":65,"column_start":5,"column_end":64}},{"value":"/ character string, i.e., it is not longer than 255 bytes.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":12321,"byte_end":12381,"line_start":66,"line_end":66,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":12972,"byte_end":12979,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"builder","qualname":"<CharStr<Octets>>::builder","value":"fn () -> CharStrBuilder<Octets::Builder>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty builder for this character string type.\n","sig":null,"attributes":[{"value":"/ Creates a new empty builder for this character string type.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":12897,"byte_end":12960,"line_start":81,"line_end":81,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":13182,"byte_end":13194,"line_start":88,"line_end":88,"column_start":12,"column_end":24},"name":"into_builder","qualname":"<CharStr<Octets>>::into_builder","value":"fn (self) -> CharStrBuilder<Octets::Builder>","parent":null,"children":[],"decl_id":null,"docs":" Converts the character string into a builder.\n","sig":null,"attributes":[{"value":"/ Converts the character string into a builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":13121,"byte_end":13170,"line_start":87,"line_end":87,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":13509,"byte_end":13520,"line_start":98,"line_end":98,"column_start":12,"column_end":23},"name":"into_octets","qualname":"<CharStr<Octets>>::into_octets","value":"fn (self) -> Octets","parent":null,"children":[],"decl_id":null,"docs":" Converts the character string into its underlying octets value.\n","sig":null,"attributes":[{"value":"/ Converts the character string into its underlying octets value.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":13430,"byte_end":13497,"line_start":97,"line_end":97,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":13660,"byte_end":13669,"line_start":104,"line_end":104,"column_start":12,"column_end":21},"name":"for_slice","qualname":"<CharStr<Octets>>::for_slice","value":"fn (&self) -> CharStr<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns a character string atop a slice of the content.\n","sig":null,"attributes":[{"value":"/ Returns a character string atop a slice of the content.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":13589,"byte_end":13648,"line_start":103,"line_end":103,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":13884,"byte_end":13897,"line_start":110,"line_end":110,"column_start":12,"column_end":25},"name":"for_slice_mut","qualname":"<CharStr<Octets>>::for_slice_mut","value":"fn (&mut self) -> CharStr<&mut [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns a character string atop a mutable slice of the content.\n","sig":null,"attributes":[{"value":"/ Returns a character string atop a mutable slice of the content.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":13805,"byte_end":13872,"line_start":109,"line_end":109,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":14121,"byte_end":14129,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<CharStr<Octets>>::as_slice","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a slice of the character string’s data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to a slice of the character string’s data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":14041,"byte_end":14109,"line_start":115,"line_end":115,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":14301,"byte_end":14313,"line_start":122,"line_end":122,"column_start":12,"column_end":24},"name":"as_slice_mut","qualname":"<CharStr<Octets>>::as_slice_mut","value":"fn (&mut self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a mutable slice of the character string’s data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to a mutable slice of the character string’s data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":14213,"byte_end":14289,"line_start":121,"line_end":121,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":14663,"byte_end":14673,"line_start":134,"line_end":134,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<CharStr<Bytes>>::from_bytes","value":"fn (bytes: Bytes) -> Result<Self, CharStrError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new character string from a bytes value.","sig":null,"attributes":[{"value":"/ Creates a new character string from a bytes value.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":14453,"byte_end":14507,"line_start":130,"line_end":130,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":14512,"byte_end":14515,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ Returns succesfully if the bytes slice can indeed be used as a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":14520,"byte_end":14586,"line_start":132,"line_end":132,"column_start":5,"column_end":71}},{"value":"/ character string, i.e., it is not longer than 255 bytes.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":14591,"byte_end":14651,"line_start":133,"line_end":133,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":15357,"byte_end":15367,"line_start":155,"line_end":155,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<CharStr<[u8]>>::from_slice","value":"fn (slice: &[u8]) -> Result<&Self, CharStrError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new character string from an octet slice.","sig":null,"attributes":[{"value":"/ Creates a new character string from an octet slice.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":15187,"byte_end":15242,"line_start":151,"line_end":151,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":15247,"byte_end":15250,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ If the byte slice is longer than 255 bytes, the function will return","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":15255,"byte_end":15327,"line_start":153,"line_end":153,"column_start":5,"column_end":77}},{"value":"/ an error.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":15332,"byte_end":15345,"line_start":154,"line_end":154,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":4311},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":21436,"byte_end":21450,"line_start":389,"line_end":389,"column_start":12,"column_end":26},"name":"CharStrBuilder","qualname":"::base::charstr::CharStrBuilder","value":"","parent":null,"children":[],"decl_id":null,"docs":" A builder for a character string.","sig":null,"attributes":[{"value":"/ A builder for a character string.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":21176,"byte_end":21213,"line_start":383,"line_end":383,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":21214,"byte_end":21217,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ This type wraps an [`OctetBuilder`] and in turn implements the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":21218,"byte_end":21284,"line_start":385,"line_end":385,"column_start":1,"column_end":67}},{"value":"/ [`OctetBuilder`] trait, making sure that the content cannot grow beyond","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":21285,"byte_end":21360,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ the 255 octet limit of a character string.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":21361,"byte_end":21407,"line_start":387,"line_end":387,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":21595,"byte_end":21598,"line_start":393,"line_end":393,"column_start":12,"column_end":15},"name":"new","qualname":"<CharStrBuilder<Builder>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty builder with default capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new empty builder with default capacity.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":21529,"byte_end":21583,"line_start":392,"line_end":392,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":21731,"byte_end":21744,"line_start":398,"line_end":398,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<CharStrBuilder<Builder>>::with_capacity","value":"fn (capacity: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty builder with the given capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new empty builder with the given capacity.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":21663,"byte_end":21719,"line_start":397,"line_end":397,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":22352,"byte_end":22364,"line_start":416,"line_end":416,"column_start":12,"column_end":24},"name":"from_builder","qualname":"<CharStrBuilder<Builder>>::from_builder","value":"fn (builder: Builder) -> Result<Self, CharStrError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a character string builder from an octet sequence.","sig":null,"attributes":[{"value":"/ Creates a character string builder from an octet sequence.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":22183,"byte_end":22245,"line_start":412,"line_end":412,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":22250,"byte_end":22253,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ If the octet sequence is longer than 255 octets, an error is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":22258,"byte_end":22322,"line_start":414,"line_end":414,"column_start":5,"column_end":69}},{"value":"/ returned.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":22327,"byte_end":22340,"line_start":415,"line_end":415,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":22736,"byte_end":22743,"line_start":429,"line_end":429,"column_start":12,"column_end":19},"name":"new_vec","qualname":"<CharStrBuilder<Vec<u8>>>::new_vec","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty characater string builder atop an octets vec.\n","sig":null,"attributes":[{"value":"/ Creates a new empty characater string builder atop an octets vec.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":22655,"byte_end":22724,"line_start":428,"line_end":428,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":22872,"byte_end":22889,"line_start":434,"line_end":434,"column_start":12,"column_end":29},"name":"vec_with_capacity","qualname":"<CharStrBuilder<Vec<u8>>>::vec_with_capacity","value":"fn (capacity: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty builder atop an octets vec with a given capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new empty builder atop an octets vec with a given capacity.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":22787,"byte_end":22860,"line_start":433,"line_end":433,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":23086,"byte_end":23095,"line_start":442,"line_end":442,"column_start":12,"column_end":21},"name":"new_bytes","qualname":"<CharStrBuilder<BytesMut>>::new_bytes","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty builder for a bytes value.\n","sig":null,"attributes":[{"value":"/ Creates a new empty builder for a bytes value.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":23024,"byte_end":23074,"line_start":441,"line_end":441,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":23223,"byte_end":23242,"line_start":447,"line_end":447,"column_start":12,"column_end":31},"name":"bytes_with_capacity","qualname":"<CharStrBuilder<BytesMut>>::bytes_with_capacity","value":"fn (capacity: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty builder for a bytes value with a given capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new empty builder for a bytes value with a given capacity.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":23139,"byte_end":23211,"line_start":446,"line_end":446,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":23446,"byte_end":23454,"line_start":454,"line_end":454,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<CharStrBuilder<Builder>>::as_slice","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns an octet slice of the string assembled so far.\n","sig":null,"attributes":[{"value":"/ Returns an octet slice of the string assembled so far.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":23376,"byte_end":23434,"line_start":453,"line_end":453,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":23579,"byte_end":23585,"line_start":459,"line_end":459,"column_start":12,"column_end":18},"name":"finish","qualname":"<CharStrBuilder<Builder>>::finish","value":"fn (self) -> CharStr<Builder::Octets>","parent":null,"children":[],"decl_id":null,"docs":" Converts the builder into an imutable character string.\n","sig":null,"attributes":[{"value":"/ Converts the builder into an imutable character string.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":23508,"byte_end":23567,"line_start":458,"line_end":458,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":202},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":25072,"byte_end":25080,"line_start":527,"line_end":527,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::base::charstr::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206}],"decl_id":null,"docs":" The iterator type for `IntoIterator` for a character string itself.\n","sig":null,"attributes":[{"value":"/ The iterator type for `IntoIterator` for a character string itself.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":24989,"byte_end":25060,"line_start":526,"line_end":526,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":214},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":25817,"byte_end":25821,"line_start":562,"line_end":562,"column_start":12,"column_end":16},"name":"Iter","qualname":"::base::charstr::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":216}],"decl_id":null,"docs":" The iterator type for `IntoIterator` for a reference to a character string.\n","sig":null,"attributes":[{"value":"/ The iterator type for `IntoIterator` for a reference to a character string.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":25726,"byte_end":25805,"line_start":561,"line_end":561,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":4318},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":26524,"byte_end":26536,"line_start":591,"line_end":591,"column_start":12,"column_end":24},"name":"CharStrError","qualname":"::base::charstr::CharStrError","value":"","parent":null,"children":[],"decl_id":null,"docs":" A byte sequence does not represent a valid character string.","sig":null,"attributes":[{"value":"/ A byte sequence does not represent a valid character string.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":26332,"byte_end":26396,"line_start":587,"line_end":587,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":26397,"byte_end":26400,"line_start":588,"line_end":588,"column_start":1,"column_end":4}},{"value":"/ This can only mean that the sequence is longer than 255 bytes.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":26401,"byte_end":26467,"line_start":589,"line_end":589,"column_start":1,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4332},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":27154,"byte_end":27164,"line_start":612,"line_end":612,"column_start":5,"column_end":15},"name":"ShortInput","qualname":"::base::charstr::FromStrError::ShortInput","value":"FromStrError::ShortInput","parent":{"krate":0,"index":4331},"children":[],"decl_id":null,"docs":" The string ended when there should have been more characters.","sig":null,"attributes":[{"value":"/ The string ended when there should have been more characters.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":27006,"byte_end":27071,"line_start":609,"line_end":609,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":27076,"byte_end":27079,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ This most likely happens inside escape sequences and quoting.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":27084,"byte_end":27149,"line_start":611,"line_end":611,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4334},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":27224,"byte_end":27234,"line_start":615,"line_end":615,"column_start":5,"column_end":15},"name":"LongString","qualname":"::base::charstr::FromStrError::LongString","value":"FromStrError::LongString","parent":{"krate":0,"index":4331},"children":[],"decl_id":null,"docs":" A character string has more than 255 octets.\n","sig":null,"attributes":[{"value":"/ A character string has more than 255 octets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":27171,"byte_end":27219,"line_start":614,"line_end":614,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4336},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":27485,"byte_end":27494,"line_start":622,"line_end":622,"column_start":5,"column_end":14},"name":"BadEscape","qualname":"::base::charstr::FromStrError::BadEscape","value":"FromStrError::BadEscape","parent":{"krate":0,"index":4331},"children":[],"decl_id":null,"docs":" An illegal escape sequence was encountered.","sig":null,"attributes":[{"value":"/ An illegal escape sequence was encountered.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":27241,"byte_end":27288,"line_start":617,"line_end":617,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":27293,"byte_end":27296,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ Escape sequences are a backslash character followed by either a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":27301,"byte_end":27368,"line_start":619,"line_end":619,"column_start":5,"column_end":72}},{"value":"/ three decimal digit sequence encoding a byte value or a single","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":27373,"byte_end":27439,"line_start":620,"line_end":620,"column_start":5,"column_end":71}},{"value":"/ other printable ASCII character.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":27444,"byte_end":27480,"line_start":621,"line_end":621,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4338},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":27608,"byte_end":27617,"line_start":627,"line_end":627,"column_start":5,"column_end":14},"name":"BadSymbol","qualname":"::base::charstr::FromStrError::BadSymbol","value":"FromStrError::BadSymbol(Symbol)","parent":{"krate":0,"index":4331},"children":[],"decl_id":null,"docs":" An illegal character was encountered.","sig":null,"attributes":[{"value":"/ An illegal character was encountered.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":27501,"byte_end":27542,"line_start":624,"line_end":624,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":27547,"byte_end":27550,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ Only printable ASCII characters are allowed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":27555,"byte_end":27603,"line_start":626,"line_end":626,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4341},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":27697,"byte_end":27705,"line_start":630,"line_end":630,"column_start":5,"column_end":13},"name":"ShortBuf","qualname":"::base::charstr::FromStrError::ShortBuf","value":"FromStrError::ShortBuf","parent":{"krate":0,"index":4331},"children":[],"decl_id":null,"docs":" The octet builder’s buffer was too short for the data.\n","sig":null,"attributes":[{"value":"/ The octet builder’s buffer was too short for the data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":27632,"byte_end":27692,"line_start":629,"line_end":629,"column_start":5,"column_end":63}}]},{"kind":"Enum","id":{"krate":0,"index":4331},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":26987,"byte_end":26999,"line_start":608,"line_end":608,"column_start":10,"column_end":22},"name":"FromStrError","qualname":"::base::charstr::FromStrError","value":"FromStrError::{ShortInput, LongString, BadEscape, BadSymbol, ShortBuf}","parent":null,"children":[{"krate":0,"index":4332},{"krate":0,"index":4334},{"krate":0,"index":4336},{"krate":0,"index":4338},{"krate":0,"index":4341}],"decl_id":null,"docs":" An error happened when converting a Rust string to a DNS character string.\n","sig":null,"attributes":[{"value":"/ An error happened when converting a Rust string to a DNS character string.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":26836,"byte_end":26914,"line_start":605,"line_end":605,"column_start":1,"column_end":79}},{"value":"non_exhaustive","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":26960,"byte_end":26977,"line_start":607,"line_end":607,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":236},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cmp","qualname":"::base::cmp","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238}],"decl_id":null,"docs":" Additional traits for comparisions.","sig":null,"attributes":[{"value":"! Additional traits for comparisions.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":33727,"byte_end":33766,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":33767,"byte_end":33770,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! These traits exist because there are several ways of compare domain","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":33771,"byte_end":33842,"line_start":3,"line_end":3,"column_start":1,"column_end":72}},{"value":"! names included in composite structures. Normally, names are compared","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":33843,"byte_end":33915,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"! ignoring ASCII case. This is what `PartialEq` and `PartialOrd` do for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":33916,"byte_end":33989,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"! domain names. Consequently, when comparing resource records and record","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":33990,"byte_end":34064,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"! data that contain domain names, ASCII case should also be ignored.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":34065,"byte_end":34135,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":34136,"byte_end":34139,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! However, the canonical form of most resource type’s record data (apart","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":34140,"byte_end":34216,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"! from a small set of well-known types) requires names to be considered","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":34217,"byte_end":34290,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"! as they are for comparisons. In order to make it clear when this mode","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":34291,"byte_end":34364,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"! of comparision is used, this module defines a new trait [`CanonicalOrd`]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":34365,"byte_end":34441,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"! that allows types to define how they should be compared in the context of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":34442,"byte_end":34519,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"! DNSSEC. The trait is accompanied by [`Compose::compose_canonical`] which","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":34520,"byte_end":34596,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"! produces the canonical form of this data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":34597,"byte_end":34642,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":34643,"byte_end":34646,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! [`CanonicalOrd`]: trait.CanonicalOrd.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":34647,"byte_end":34692,"line_start":17,"line_end":17,"column_start":1,"column_end":46}},{"value":"! [`Compose::compose_canonical`]: ../octets/trait.Compose.html#method.compose_canonical","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":34693,"byte_end":34782,"line_start":18,"line_end":18,"column_start":1,"column_end":90}}]},{"kind":"Trait","id":{"krate":0,"index":238},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":37331,"byte_end":37343,"line_start":66,"line_end":66,"column_start":11,"column_end":23},"name":"CanonicalOrd","qualname":"::base::cmp::CanonicalOrd","value":"CanonicalOrd<Rhs: ?Sized = Self>","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244}],"decl_id":null,"docs":" A trait for the canonical sort order of values.","sig":null,"attributes":[{"value":"/ A trait for the canonical sort order of values.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":34811,"byte_end":34862,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":34863,"byte_end":34866,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The canonical sort order is used in DNS security when multiple values are","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":34867,"byte_end":34944,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ part of constructing or validating a signature. This sort order differs","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":34945,"byte_end":35020,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ in some cases from the normal sort order. To avoid confusion, only this","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":35021,"byte_end":35096,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ trait should be used when DNSSEC signatures are involved.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":35097,"byte_end":35158,"line_start":28,"line_end":28,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":35159,"byte_end":35162,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Canonical order is defined in [RFC 4034] and clarified in [RFC 6840]. It","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":35163,"byte_end":35239,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ is defined for domain names and resource records within an RR set (i.e.,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":35240,"byte_end":35316,"line_start":31,"line_end":31,"column_start":1,"column_end":77}},{"value":"/ a set of records with the same owner name, class, and type).","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":35317,"byte_end":35381,"line_start":32,"line_end":32,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":35382,"byte_end":35385,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ For domain names, canonical order is the same as the ‘normal’ order as","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":35386,"byte_end":35464,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ implemented through the `PartialOrd` and `Ord` traits: Labels are compared","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":35465,"byte_end":35543,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ from right to left (i.e, starting from the root label) with each pair of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":35544,"byte_end":35620,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"/ labels compared as octet sequences with ASCII letters lowercased","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":35621,"byte_end":35689,"line_start":37,"line_end":37,"column_start":1,"column_end":69}},{"value":"/ before comparison.  The `name_cmp` methods of the `ToDname` and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":35690,"byte_end":35757,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/ `ToRelativeDname` traits can be used to implement this canonical order","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":35758,"byte_end":35832,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ for name types.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":35833,"byte_end":35852,"line_start":40,"line_end":40,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":35853,"byte_end":35856,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Resource records within an RR set are ordered by comparing the canonical","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":35857,"byte_end":35933,"line_start":42,"line_end":42,"column_start":1,"column_end":77}},{"value":"/ wire-format representation of their record data as octet sequences. The","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":35934,"byte_end":36009,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/ canonical form differs from the regular form by lower-casing domain names","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":36010,"byte_end":36087,"line_start":44,"line_end":44,"column_start":1,"column_end":78}},{"value":"/ included in the record data for the record types NS, MD, MF, CNAME, SOA,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":36088,"byte_end":36164,"line_start":45,"line_end":45,"column_start":1,"column_end":77}},{"value":"/ MB, MG, MR, PTR, MINFO, MX, RP, AFSDB, RT, SIG, PX, NXT, NAPTR, KX, SRV,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":36165,"byte_end":36241,"line_start":46,"line_end":46,"column_start":1,"column_end":77}},{"value":"/ DNAME, A6, and RRSIG. (NSEC is listed in [RFC 4034] but has been withdrawn","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":36242,"byte_end":36320,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/ by [RFC 6840]). This canonical representation is provided via the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":36321,"byte_end":36390,"line_start":48,"line_end":48,"column_start":1,"column_end":70}},{"value":"/ `Compose::compose_canonical` method.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":36391,"byte_end":36431,"line_start":49,"line_end":49,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":36432,"byte_end":36435,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ In order to help implementing this trait for record data types, there are","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":36436,"byte_end":36513,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ implementations of it for some types that can appear in record data that","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":36514,"byte_end":36590,"line_start":52,"line_end":52,"column_start":1,"column_end":77}},{"value":"/ sort differently in their composed representation than normally.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":36591,"byte_end":36659,"line_start":53,"line_end":53,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":36660,"byte_end":36663,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ Apart from these explicit use cases, the `CanonicalOrd` trait is also","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":36664,"byte_end":36737,"line_start":55,"line_end":55,"column_start":1,"column_end":74}},{"value":"/ implemented for the `Record` type to allow ordering records of a zone into","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":36738,"byte_end":36816,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ RRsets. It does so by ordering by class first, then canonical owner,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":36817,"byte_end":36889,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/ record type, and finally canonical record data. The reason for this","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":36890,"byte_end":36961,"line_start":58,"line_end":58,"column_start":1,"column_end":72}},{"value":"/ somewhat odd ordering is that in this way not only are all records","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":36962,"byte_end":37032,"line_start":59,"line_end":59,"column_start":1,"column_end":71}},{"value":"/ for the same owner name and class kept together, but also all the records","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":37033,"byte_end":37110,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"/ subordinate to a owner name and class pair (i.e., the records for a zone)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":37111,"byte_end":37188,"line_start":61,"line_end":61,"column_start":1,"column_end":78}},{"value":"/ will sort together.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":37189,"byte_end":37212,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":37213,"byte_end":37216,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ [RFC 4034]: https://tools.ietf.org/html/rfc4034","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":37217,"byte_end":37268,"line_start":64,"line_end":64,"column_start":1,"column_end":52}},{"value":"/ [RFC 6840]: https://tools.ietf.org/html/rfc6840","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":37269,"byte_end":37320,"line_start":65,"line_end":65,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":37456,"byte_end":37469,"line_start":69,"line_end":69,"column_start":8,"column_end":21},"name":"canonical_cmp","qualname":"::base::cmp::CanonicalOrd::canonical_cmp","value":"fn (&self, other: &Rhs) -> Ordering","parent":{"krate":0,"index":238},"children":[],"decl_id":null,"docs":" Returns the canonical ordering between `self` and `other`.\n","sig":null,"attributes":[{"value":"/ Returns the canonical ordering between `self` and `other`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":37370,"byte_end":37432,"line_start":67,"line_end":67,"column_start":5,"column_end":67}},{"value":"must_use","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":37437,"byte_end":37448,"line_start":68,"line_end":68,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":37606,"byte_end":37618,"line_start":74,"line_end":74,"column_start":8,"column_end":20},"name":"canonical_lt","qualname":"::base::cmp::CanonicalOrd::canonical_lt","value":"fn (&self, other: &Rhs) -> bool","parent":{"krate":0,"index":238},"children":[],"decl_id":null,"docs":" Returns whether `self` is canonically less than `other`.\n","sig":null,"attributes":[{"value":"/ Returns whether `self` is canonically less than `other`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":37508,"byte_end":37568,"line_start":71,"line_end":71,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":37573,"byte_end":37582,"line_start":72,"line_end":72,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":37587,"byte_end":37598,"line_start":73,"line_end":73,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":37882,"byte_end":37894,"line_start":84,"line_end":84,"column_start":8,"column_end":20},"name":"canonical_le","qualname":"::base::cmp::CanonicalOrd::canonical_le","value":"fn (&self, other: &Rhs) -> bool","parent":{"krate":0,"index":238},"children":[],"decl_id":null,"docs":" Returns whether `self` is canonically less than or equal to `other`.\n","sig":null,"attributes":[{"value":"/ Returns whether `self` is canonically less than or equal to `other`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":37772,"byte_end":37844,"line_start":81,"line_end":81,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":37849,"byte_end":37858,"line_start":82,"line_end":82,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":37863,"byte_end":37874,"line_start":83,"line_end":83,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":38167,"byte_end":38179,"line_start":94,"line_end":94,"column_start":8,"column_end":20},"name":"canonical_gt","qualname":"::base::cmp::CanonicalOrd::canonical_gt","value":"fn (&self, other: &Rhs) -> bool","parent":{"krate":0,"index":238},"children":[],"decl_id":null,"docs":" Returns whether `self` is canonically greater than `other`.\n","sig":null,"attributes":[{"value":"/ Returns whether `self` is canonically greater than `other`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":38066,"byte_end":38129,"line_start":91,"line_end":91,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":38134,"byte_end":38143,"line_start":92,"line_end":92,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":38148,"byte_end":38159,"line_start":93,"line_end":93,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":38449,"byte_end":38461,"line_start":104,"line_end":104,"column_start":8,"column_end":20},"name":"canonical_ge","qualname":"::base::cmp::CanonicalOrd::canonical_ge","value":"fn (&self, other: &Rhs) -> bool","parent":{"krate":0,"index":238},"children":[],"decl_id":null,"docs":" Returns whether `self` is canonically greater than or equal to `other`.\n","sig":null,"attributes":[{"value":"/ Returns whether `self` is canonically greater than or equal to `other`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":38336,"byte_end":38411,"line_start":101,"line_end":101,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":38416,"byte_end":38425,"line_start":102,"line_end":102,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/cmp.rs","byte_start":38430,"byte_end":38441,"line_start":103,"line_end":103,"column_start":5,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":245},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"header","qualname":"::base::header","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":4355},{"krate":0,"index":4371},{"krate":0,"index":4370},{"krate":0,"index":4368},{"krate":0,"index":4366},{"krate":0,"index":4362},{"krate":0,"index":4363},{"krate":0,"index":4358},{"krate":0,"index":4359},{"krate":0,"index":258},{"krate":0,"index":263},{"krate":0,"index":4374},{"krate":0,"index":4390},{"krate":0,"index":4389},{"krate":0,"index":4387},{"krate":0,"index":4385},{"krate":0,"index":4381},{"krate":0,"index":4382},{"krate":0,"index":4377},{"krate":0,"index":4378},{"krate":0,"index":289},{"krate":0,"index":296},{"krate":0,"index":4393},{"krate":0,"index":4409},{"krate":0,"index":4408},{"krate":0,"index":4406},{"krate":0,"index":4404},{"krate":0,"index":4400},{"krate":0,"index":4401},{"krate":0,"index":4396},{"krate":0,"index":4397},{"krate":0,"index":323},{"krate":0,"index":328},{"krate":0,"index":333},{"krate":0,"index":335},{"krate":0,"index":337},{"krate":0,"index":339},{"krate":0,"index":341},{"krate":0,"index":345}],"decl_id":null,"docs":" The header of a DNS message.","sig":null,"attributes":[{"value":"! The header of a DNS message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":38635,"byte_end":38667,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":38668,"byte_end":38671,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Each DNS message starts with a twelve octet long header section","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":38672,"byte_end":38739,"line_start":3,"line_end":3,"column_start":1,"column_end":68}},{"value":"! containing some general information related to the message as well as","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":38740,"byte_end":38813,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"! the number of records in each of the four sections that follow the header.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":38814,"byte_end":38892,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"! Its content and format are defined in section 4.1.1 of [RFC 1035].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":38893,"byte_end":38963,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":38964,"byte_end":38967,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! In order to reflect the fact that changing the section counts may","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":38968,"byte_end":39037,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"! invalidate the rest of the message whereas the other elements of the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":39038,"byte_end":39110,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"! header section can safely be modified, the whole header has been split","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":39111,"byte_end":39185,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"! into two separate types: [`Header`] contains the safely modifyable part","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":39186,"byte_end":39261,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"! at the beginning and [`HeaderCounts`] contains the section counts. In","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":39262,"byte_end":39335,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"! addition, the [`HeaderSection`] type wraps both of them into a single","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":39336,"byte_end":39409,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"! type.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":39410,"byte_end":39419,"line_start":14,"line_end":14,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":39420,"byte_end":39423,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! [`Header`]: struct.Header.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":39424,"byte_end":39458,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"! [`HeaderCounts`]: struct.HeaderCounts.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":39459,"byte_end":39505,"line_start":17,"line_end":17,"column_start":1,"column_end":47}},{"value":"! [`HeaderSection`]: struct.HeaderSection.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":39506,"byte_end":39554,"line_start":18,"line_end":18,"column_start":1,"column_end":49}},{"value":"! [RFC 1035]: https://tools.ietf.org/html/rfc1035","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":39555,"byte_end":39606,"line_start":19,"line_end":19,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":4355},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":41535,"byte_end":41541,"line_start":68,"line_end":68,"column_start":12,"column_end":18},"name":"Header","qualname":"::base::header::Header","value":"Header {  }","parent":null,"children":[{"krate":0,"index":4356}],"decl_id":null,"docs":" The first part of the header of a DNS message.","sig":null,"attributes":[{"value":"/ The first part of the header of a DNS message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":39849,"byte_end":39899,"line_start":31,"line_end":31,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":39900,"byte_end":39903,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This type represents the information contained in the first four octets","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":39904,"byte_end":39979,"line_start":33,"line_end":33,"column_start":1,"column_end":76}},{"value":"/ of the header: the message ID, opcode, rcode, and the various flags. It","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":39980,"byte_end":40055,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ keeps those four octets in wire representation, i.e., in network byte","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":40056,"byte_end":40129,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"/ order. The data is layed out like this:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":40130,"byte_end":40173,"line_start":36,"line_end":36,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":40174,"byte_end":40177,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":40178,"byte_end":40189,"line_start":38,"line_end":38,"column_start":1,"column_end":12}},{"value":"/                                 1  1  1  1  1  1","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":40190,"byte_end":40242,"line_start":39,"line_end":39,"column_start":1,"column_end":53}},{"value":"/   0  1  2  3  4  5  6  7  8  9  0  1  2  3  4  5","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":40243,"byte_end":40295,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":40296,"byte_end":40349,"line_start":41,"line_end":41,"column_start":1,"column_end":54}},{"value":"/ |                      ID                       |","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":40350,"byte_end":40403,"line_start":42,"line_end":42,"column_start":1,"column_end":54}},{"value":"/ +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":40404,"byte_end":40457,"line_start":43,"line_end":43,"column_start":1,"column_end":54}},{"value":"/ |QR|   Opcode  |AA|TC|RD|RA|Z |AD|CD|   RCODE   |","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":40458,"byte_end":40511,"line_start":44,"line_end":44,"column_start":1,"column_end":54}},{"value":"/ +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":40512,"byte_end":40565,"line_start":45,"line_end":45,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":40566,"byte_end":40573,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":40574,"byte_end":40577,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Methods are available for accessing each of these fields. For more","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":40578,"byte_end":40648,"line_start":48,"line_end":48,"column_start":1,"column_end":71}},{"value":"/ information on the fields, see these methods in the section","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":40649,"byte_end":40712,"line_start":49,"line_end":49,"column_start":1,"column_end":64}},{"value":"/ [Field Access] below.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":40713,"byte_end":40738,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":40739,"byte_end":40742,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ You can create owned values via the [`new`] methods or `Default` trait.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":40743,"byte_end":40818,"line_start":52,"line_end":52,"column_start":1,"column_end":76}},{"value":"/ However, more often the type will","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":40819,"byte_end":40856,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ be used via a reference into the octets of an actual message. The","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":40857,"byte_end":40926,"line_start":54,"line_end":54,"column_start":1,"column_end":70}},{"value":"/ functions [`for_message_slice`] and [`for_message_slice_mut`] create such","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":40927,"byte_end":41004,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/ references from an octets slice.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":41005,"byte_end":41041,"line_start":56,"line_end":56,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":41042,"byte_end":41045,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ The basic structure and most of the fields re defined in [RFC 1035],","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":41046,"byte_end":41118,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/ except for the AD and CD flags, which are defined in [RFC 4035].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":41119,"byte_end":41187,"line_start":59,"line_end":59,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":41188,"byte_end":41191,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ [Field Access]: #field-access ","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":41192,"byte_end":41226,"line_start":61,"line_end":61,"column_start":1,"column_end":35}},{"value":"/ [`for_message_slice`]: #method.for_message_slice","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":41227,"byte_end":41279,"line_start":62,"line_end":62,"column_start":1,"column_end":53}},{"value":"/ [`for_message_slice_mut`]: #method.for_message_slice_mut","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":41280,"byte_end":41340,"line_start":63,"line_end":63,"column_start":1,"column_end":61}},{"value":"/ [`new`]: #method.new","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":41341,"byte_end":41365,"line_start":64,"line_end":64,"column_start":1,"column_end":25}},{"value":"/ [RFC 1035]: https://tools.ietf.org/html/rfc1035","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":41366,"byte_end":41417,"line_start":65,"line_end":65,"column_start":1,"column_end":52}},{"value":"/ [RFC 4035]: https://tools.ietf.org/html/rfc4035","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":41418,"byte_end":41469,"line_start":66,"line_end":66,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":42114,"byte_end":42117,"line_start":86,"line_end":86,"column_start":12,"column_end":15},"name":"new","qualname":"<Header>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new header.","sig":null,"attributes":[{"value":"/ Creates a new header.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":41742,"byte_end":41767,"line_start":78,"line_end":78,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":41772,"byte_end":41775,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ The new header has all fields as either zero or false. Thus, the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":41780,"byte_end":41848,"line_start":80,"line_end":80,"column_start":5,"column_end":73}},{"value":"/ opcode will be [`Opcode::Query`] and the response code will be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":41853,"byte_end":41919,"line_start":81,"line_end":81,"column_start":5,"column_end":71}},{"value":"/ [`Rcode::NoError`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":41924,"byte_end":41947,"line_start":82,"line_end":82,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":41952,"byte_end":41955,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ [`Opcode::Query`]: ../iana/opcode/enum.Opcode.html#variant.Query","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":41960,"byte_end":42028,"line_start":84,"line_end":84,"column_start":5,"column_end":73}},{"value":"/ [`Rcode::NoError`]: ../iana/rcode/enum.Rcode.html#variant.NoError","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":42033,"byte_end":42102,"line_start":85,"line_end":85,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":42348,"byte_end":42365,"line_start":95,"line_end":95,"column_start":12,"column_end":29},"name":"for_message_slice","qualname":"<Header>::for_message_slice","value":"fn (s: &[u8]) -> &Header","parent":null,"children":[],"decl_id":null,"docs":" Creates a header reference from an octets slice of a message.","sig":null,"attributes":[{"value":"/ Creates a header reference from an octets slice of a message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":42165,"byte_end":42230,"line_start":90,"line_end":90,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":42235,"byte_end":42238,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":42243,"byte_end":42255,"line_start":92,"line_end":92,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":42260,"byte_end":42263,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ This function panics if the slice is less than four octets long.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":42268,"byte_end":42336,"line_start":94,"line_end":94,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":42696,"byte_end":42717,"line_start":105,"line_end":105,"column_start":12,"column_end":33},"name":"for_message_slice_mut","qualname":"<Header>::for_message_slice_mut","value":"fn (s: &mut [u8]) -> &mut Header","parent":null,"children":[],"decl_id":null,"docs":" Creates a mutable header reference from an octets slice of a message.","sig":null,"attributes":[{"value":"/ Creates a mutable header reference from an octets slice of a message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":42505,"byte_end":42578,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":42583,"byte_end":42586,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":42591,"byte_end":42603,"line_start":102,"line_end":102,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":42608,"byte_end":42611,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ This function panics if the slice is less than four octets long.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":42616,"byte_end":42684,"line_start":104,"line_end":104,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":42934,"byte_end":42942,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Header>::as_slice","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying octets slice.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying octets slice.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":42867,"byte_end":42922,"line_start":110,"line_end":110,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":43544,"byte_end":43546,"line_start":131,"line_end":131,"column_start":12,"column_end":14},"name":"id","qualname":"<Header>::id","value":"fn (self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the ID field.","sig":null,"attributes":[{"value":"/ Returns the value of the ID field.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":43032,"byte_end":43070,"line_start":120,"line_end":120,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":43075,"byte_end":43078,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ The ID field is an identifier chosen by whoever created a query","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":43083,"byte_end":43150,"line_start":122,"line_end":122,"column_start":5,"column_end":72}},{"value":"/ and is copied into a response by a server. It allows matching","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":43155,"byte_end":43220,"line_start":123,"line_end":123,"column_start":5,"column_end":70}},{"value":"/ incoming responses to their queries.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":43225,"byte_end":43265,"line_start":124,"line_end":124,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":43270,"byte_end":43273,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ When choosing an ID for an outgoing message, make sure it is random","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":43278,"byte_end":43349,"line_start":126,"line_end":126,"column_start":5,"column_end":76}},{"value":"/ to avoid spoofing through guessing the message ID. The method","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":43354,"byte_end":43419,"line_start":127,"line_end":127,"column_start":5,"column_end":70}},{"value":"/ [`set_random_id`] can be used for this purpose.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":43424,"byte_end":43475,"line_start":128,"line_end":128,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":43480,"byte_end":43483,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ [`set_random_id`]: #method.set_random_id","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":43488,"byte_end":43532,"line_start":130,"line_end":130,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":43684,"byte_end":43690,"line_start":136,"line_end":136,"column_start":12,"column_end":18},"name":"set_id","qualname":"<Header>::set_id","value":"fn (&mut self, value: u16) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the ID field.\n","sig":null,"attributes":[{"value":"/ Sets the value of the ID field.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":43637,"byte_end":43672,"line_start":135,"line_end":135,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":43864,"byte_end":43877,"line_start":141,"line_end":141,"column_start":12,"column_end":25},"name":"set_random_id","qualname":"<Header>::set_random_id","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the ID field to a randomly chosen number.\n","sig":null,"attributes":[{"value":"/ Sets the value of the ID field to a randomly chosen number.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":43789,"byte_end":43852,"line_start":140,"line_end":140,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":44256,"byte_end":44258,"line_start":149,"line_end":149,"column_start":12,"column_end":14},"name":"qr","qualname":"<Header>::qr","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the QR bit is set.","sig":null,"attributes":[{"value":"/ Returns whether the QR bit is set.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":43928,"byte_end":43966,"line_start":143,"line_end":143,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":43971,"byte_end":43974,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ The QR bit specifies whether a message is a query (`false`) or","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":43979,"byte_end":44045,"line_start":145,"line_end":145,"column_start":5,"column_end":71}},{"value":"/ a response (`true`). In other words, this bit is actually stating","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":44050,"byte_end":44119,"line_start":146,"line_end":146,"column_start":5,"column_end":74}},{"value":"/ whether the message is *not* a query. So, perhaps it might be good","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":44124,"byte_end":44194,"line_start":147,"line_end":147,"column_start":5,"column_end":75}},{"value":"/ to read ‘QR’ as ‘query response.’","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":44199,"byte_end":44244,"line_start":148,"line_end":148,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":44354,"byte_end":44360,"line_start":153,"line_end":153,"column_start":12,"column_end":18},"name":"set_qr","qualname":"<Header>::set_qr","value":"fn (&mut self, set: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the QR bit.","sig":null,"attributes":[{"value":"/ Sets the value of the QR bit.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":44301,"byte_end":44334,"line_start":151,"line_end":151,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":44339,"byte_end":44342,"line_start":152,"line_end":152,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":44905,"byte_end":44911,"line_start":164,"line_end":164,"column_start":12,"column_end":18},"name":"opcode","qualname":"<Header>::opcode","value":"fn (self) -> Opcode","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the Opcode field.","sig":null,"attributes":[{"value":"/ Returns the value of the Opcode field.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":44416,"byte_end":44458,"line_start":155,"line_end":155,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":44463,"byte_end":44466,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This field specifies the kind of query a message contains. See","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":44471,"byte_end":44537,"line_start":157,"line_end":157,"column_start":5,"column_end":71}},{"value":"/ the [`Opcode`] type for more information on the possible values and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":44542,"byte_end":44613,"line_start":158,"line_end":158,"column_start":5,"column_end":76}},{"value":"/ their meaning. Normal queries have the variant [`Opcode::Query`]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":44618,"byte_end":44686,"line_start":159,"line_end":159,"column_start":5,"column_end":73}},{"value":"/ which is also the default value when creating a new header.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":44691,"byte_end":44754,"line_start":160,"line_end":160,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":44759,"byte_end":44762,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ [`Opcode`]: ../../iana/opcode/enum.Opcode.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":44767,"byte_end":44817,"line_start":162,"line_end":162,"column_start":5,"column_end":55}},{"value":"/ [`Opcode::Query`]: ../../iana/opcode/enum.Opcode.html#variant.Query","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":44822,"byte_end":44893,"line_start":163,"line_end":163,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":45046,"byte_end":45056,"line_start":169,"line_end":169,"column_start":12,"column_end":22},"name":"set_opcode","qualname":"<Header>::set_opcode","value":"fn (&mut self, opcode: Opcode) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the opcode field.\n","sig":null,"attributes":[{"value":"/ Sets the value of the opcode field.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":44995,"byte_end":45034,"line_start":168,"line_end":168,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":45471,"byte_end":45473,"line_start":179,"line_end":179,"column_start":12,"column_end":14},"name":"aa","qualname":"<Header>::aa","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the AA bit is set.","sig":null,"attributes":[{"value":"/ Returns whether the AA bit is set.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":45168,"byte_end":45206,"line_start":173,"line_end":173,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":45211,"byte_end":45214,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ Using this bit, a name server generating a response states whether","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":45219,"byte_end":45289,"line_start":175,"line_end":175,"column_start":5,"column_end":75}},{"value":"/ it is authoritative for the requested domain name, ie., whether this","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":45294,"byte_end":45366,"line_start":176,"line_end":176,"column_start":5,"column_end":77}},{"value":"/ response is an *authoritative answer.* The field has no meaning in ","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":45371,"byte_end":45442,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ a query.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":45447,"byte_end":45459,"line_start":178,"line_end":178,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":45561,"byte_end":45567,"line_start":182,"line_end":182,"column_start":12,"column_end":18},"name":"set_aa","qualname":"<Header>::set_aa","value":"fn (&mut self, set: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the AA bit.\n","sig":null,"attributes":[{"value":"/ Sets the value of the AA bit.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":45516,"byte_end":45549,"line_start":181,"line_end":181,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":46008,"byte_end":46010,"line_start":191,"line_end":191,"column_start":12,"column_end":14},"name":"tc","qualname":"<Header>::tc","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the TC bit is set.","sig":null,"attributes":[{"value":"/ Returns whether the TC bit is set.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":45623,"byte_end":45661,"line_start":184,"line_end":184,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":45666,"byte_end":45669,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The *truncation* bit is set if there was more data available then","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":45674,"byte_end":45743,"line_start":186,"line_end":186,"column_start":5,"column_end":74}},{"value":"/ fit into the message. This is typically used when employing","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":45748,"byte_end":45811,"line_start":187,"line_end":187,"column_start":5,"column_end":68}},{"value":"/ datagram transports such as UDP to signal that the answer didn’t","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":45816,"byte_end":45886,"line_start":188,"line_end":188,"column_start":5,"column_end":73}},{"value":"/ fit into a response and the query should be tried again using a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":45891,"byte_end":45958,"line_start":189,"line_end":189,"column_start":5,"column_end":72}},{"value":"/ stream transport such as TCP.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":45963,"byte_end":45996,"line_start":190,"line_end":190,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":46098,"byte_end":46104,"line_start":194,"line_end":194,"column_start":12,"column_end":18},"name":"set_tc","qualname":"<Header>::set_tc","value":"fn (&mut self, set: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the TC bit.\n","sig":null,"attributes":[{"value":"/ Sets the value of the TC bit.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":46053,"byte_end":46086,"line_start":193,"line_end":193,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":46460,"byte_end":46462,"line_start":202,"line_end":202,"column_start":12,"column_end":14},"name":"rd","qualname":"<Header>::rd","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the RD bit is set.","sig":null,"attributes":[{"value":"/ Returns whether the RD bit is set.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":46160,"byte_end":46198,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":46203,"byte_end":46206,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ The *recursion desired* bit may be set in a query to ask the name","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":46211,"byte_end":46280,"line_start":198,"line_end":198,"column_start":5,"column_end":74}},{"value":"/ server to try and recursively gather a response if it doesn’t have","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":46285,"byte_end":46357,"line_start":199,"line_end":199,"column_start":5,"column_end":75}},{"value":"/ the data available locally. The bit’s value is copied into the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":46362,"byte_end":46430,"line_start":200,"line_end":200,"column_start":5,"column_end":71}},{"value":"/ response.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":46435,"byte_end":46448,"line_start":201,"line_end":201,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":46550,"byte_end":46556,"line_start":205,"line_end":205,"column_start":12,"column_end":18},"name":"set_rd","qualname":"<Header>::set_rd","value":"fn (&mut self, set: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the RD bit.\n","sig":null,"attributes":[{"value":"/ Sets the value of the RD bit.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":46505,"byte_end":46538,"line_start":204,"line_end":204,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":46832,"byte_end":46834,"line_start":212,"line_end":212,"column_start":12,"column_end":14},"name":"ra","qualname":"<Header>::ra","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the RA bit is set.","sig":null,"attributes":[{"value":"/ Returns whether the RA bit is set.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":46612,"byte_end":46650,"line_start":207,"line_end":207,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":46655,"byte_end":46658,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ In a response, the *recursion available* bit denotes whether the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":46663,"byte_end":46731,"line_start":209,"line_end":209,"column_start":5,"column_end":73}},{"value":"/ responding name server supports recursion. It has no meaning in","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":46736,"byte_end":46803,"line_start":210,"line_end":210,"column_start":5,"column_end":72}},{"value":"/ a query.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":46808,"byte_end":46820,"line_start":211,"line_end":211,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":46922,"byte_end":46928,"line_start":215,"line_end":215,"column_start":12,"column_end":18},"name":"set_ra","qualname":"<Header>::set_ra","value":"fn (&mut self, set: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the RA bit.\n","sig":null,"attributes":[{"value":"/ Sets the value of the RA bit.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":46877,"byte_end":46910,"line_start":214,"line_end":214,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":47111,"byte_end":47112,"line_start":220,"line_end":220,"column_start":12,"column_end":13},"name":"z","qualname":"<Header>::z","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the reserved bit is set.","sig":null,"attributes":[{"value":"/ Returns whether the reserved bit is set.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":46984,"byte_end":47028,"line_start":217,"line_end":217,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":47033,"byte_end":47036,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ This bit must be `false` in all queries and responses.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":47041,"byte_end":47099,"line_start":219,"line_end":219,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":47206,"byte_end":47211,"line_start":223,"line_end":223,"column_start":12,"column_end":17},"name":"set_z","qualname":"<Header>::set_z","value":"fn (&mut self, set: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the reserved bit.\n","sig":null,"attributes":[{"value":"/ Sets the value of the reserved bit.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":47155,"byte_end":47194,"line_start":222,"line_end":222,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":47545,"byte_end":47547,"line_start":230,"line_end":230,"column_start":12,"column_end":14},"name":"ad","qualname":"<Header>::ad","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the AD bit is set.","sig":null,"attributes":[{"value":"/ Returns whether the AD bit is set.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":47267,"byte_end":47305,"line_start":225,"line_end":225,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":47310,"byte_end":47313,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ The *authentic data* bit is used by security-aware recursive name","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":47318,"byte_end":47387,"line_start":227,"line_end":227,"column_start":5,"column_end":74}},{"value":"/ servers to indicate that it considers all RRsets in its response are","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":47392,"byte_end":47464,"line_start":228,"line_end":228,"column_start":5,"column_end":77}},{"value":"/ authentic, i.e., have successfully passed DNSSEC validation.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":47469,"byte_end":47533,"line_start":229,"line_end":229,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":47635,"byte_end":47641,"line_start":233,"line_end":233,"column_start":12,"column_end":18},"name":"set_ad","qualname":"<Header>::set_ad","value":"fn (&mut self, set: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the AD bit.\n","sig":null,"attributes":[{"value":"/ Sets the value of the AD bit.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":47590,"byte_end":47623,"line_start":232,"line_end":232,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":47975,"byte_end":47977,"line_start":240,"line_end":240,"column_start":12,"column_end":14},"name":"cd","qualname":"<Header>::cd","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the CD bit is set.","sig":null,"attributes":[{"value":"/ Returns whether the CD bit is set.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":47697,"byte_end":47735,"line_start":235,"line_end":235,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":47740,"byte_end":47743,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ The *checking disabled* bit is used by a security-aware resolver","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":47748,"byte_end":47816,"line_start":237,"line_end":237,"column_start":5,"column_end":73}},{"value":"/ to indicate that it does not want upstream name servers to perform","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":47821,"byte_end":47891,"line_start":238,"line_end":238,"column_start":5,"column_end":75}},{"value":"/ verification but rather would like to verify everything itself.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":47896,"byte_end":47963,"line_start":239,"line_end":239,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":48065,"byte_end":48071,"line_start":243,"line_end":243,"column_start":12,"column_end":18},"name":"set_cd","qualname":"<Header>::set_cd","value":"fn (&mut self, set: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the CD bit.\n","sig":null,"attributes":[{"value":"/ Sets the value of the CD bit.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":48020,"byte_end":48053,"line_start":242,"line_end":242,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":48444,"byte_end":48449,"line_start":252,"line_end":252,"column_start":12,"column_end":17},"name":"rcode","qualname":"<Header>::rcode","value":"fn (self) -> Rcode","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the RCODE field.","sig":null,"attributes":[{"value":"/ Returns the value of the RCODE field.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":48127,"byte_end":48168,"line_start":245,"line_end":245,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":48173,"byte_end":48176,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ The *response code* is used in a response to indicate what happened","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":48181,"byte_end":48252,"line_start":247,"line_end":247,"column_start":5,"column_end":76}},{"value":"/ when processing the query. See the [`Rcode`] type for information on","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":48257,"byte_end":48329,"line_start":248,"line_end":248,"column_start":5,"column_end":77}},{"value":"/ possible values and their meaning.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":48334,"byte_end":48372,"line_start":249,"line_end":249,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":48377,"byte_end":48380,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ [`Rcode`]: ../../iana/rcode/enum.Rcode.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":48385,"byte_end":48432,"line_start":251,"line_end":251,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":48574,"byte_end":48583,"line_start":257,"line_end":257,"column_start":12,"column_end":21},"name":"set_rcode","qualname":"<Header>::set_rcode","value":"fn (&mut self, rcode: Rcode) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the RCODE field.\n","sig":null,"attributes":[{"value":"/ Sets the value of the RCODE field.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":48524,"byte_end":48562,"line_start":256,"line_end":256,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":4374},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":50946,"byte_end":50958,"line_start":314,"line_end":314,"column_start":12,"column_end":24},"name":"HeaderCounts","qualname":"::base::header::HeaderCounts","value":"HeaderCounts {  }","parent":null,"children":[{"krate":0,"index":4375}],"decl_id":null,"docs":" The section count part of the header section of a DNS message.","sig":null,"attributes":[{"value":"/ The section count part of the header section of a DNS message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":49367,"byte_end":49433,"line_start":283,"line_end":283,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":49434,"byte_end":49437,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ This part consists of four 16 bit counters for the number of entries in","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":49438,"byte_end":49513,"line_start":285,"line_end":285,"column_start":1,"column_end":76}},{"value":"/ the four sections of a DNS message. The type contains the sequence of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":49514,"byte_end":49587,"line_start":286,"line_end":286,"column_start":1,"column_end":74}},{"value":"/ these for values in wire format, i.e., in network byte order.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":49588,"byte_end":49653,"line_start":287,"line_end":287,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":49654,"byte_end":49657,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ The counters are arranged in the same order as the sections themselves:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":49658,"byte_end":49733,"line_start":289,"line_end":289,"column_start":1,"column_end":76}},{"value":"/ QDCOUNT for the question section, ANCOUNT for the answer section,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":49734,"byte_end":49803,"line_start":290,"line_end":290,"column_start":1,"column_end":70}},{"value":"/ NSCOUNT for the authority section, and ARCOUNT for the additional section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":49804,"byte_end":49882,"line_start":291,"line_end":291,"column_start":1,"column_end":79}},{"value":"/ These are defined in [RFC 1035].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":49883,"byte_end":49919,"line_start":292,"line_end":292,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":49920,"byte_end":49923,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ Like with the other header part, you can create an owned value via the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":49924,"byte_end":49998,"line_start":294,"line_end":294,"column_start":1,"column_end":75}},{"value":"/ [`new`] method or the `Default` trait or can get a reference to the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":49999,"byte_end":50070,"line_start":295,"line_end":295,"column_start":1,"column_end":72}},{"value":"/ value atop a message slice via [`for_message_slice`] or","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":50071,"byte_end":50130,"line_start":296,"line_end":296,"column_start":1,"column_end":60}},{"value":"/ [`for_message_slice_mut`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":50131,"byte_end":50161,"line_start":297,"line_end":297,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":50162,"byte_end":50165,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ For each field there are three methods for getting, setting, and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":50166,"byte_end":50234,"line_start":299,"line_end":299,"column_start":1,"column_end":69}},{"value":"/ incrementing.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":50235,"byte_end":50252,"line_start":300,"line_end":300,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":50253,"byte_end":50256,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ [RFC 2136] defines the UPDATE method and reuses the four section for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":50257,"byte_end":50329,"line_start":302,"line_end":302,"column_start":1,"column_end":73}},{"value":"/ different purposes. Here the counters are ZOCOUNT for the zone section,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":50330,"byte_end":50405,"line_start":303,"line_end":303,"column_start":1,"column_end":76}},{"value":"/ PRCOUNT for the prerequisite section, UPCOUNT for the update section,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":50406,"byte_end":50479,"line_start":304,"line_end":304,"column_start":1,"column_end":74}},{"value":"/ and ADCOUNT for the additional section. The type has convenience methods","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":50480,"byte_end":50556,"line_start":305,"line_end":305,"column_start":1,"column_end":77}},{"value":"/ for these fields as well so you don’t have to remember which is which.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":50557,"byte_end":50633,"line_start":306,"line_end":306,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":50634,"byte_end":50637,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ [`for_message_slice`]: #method.for_message_slice","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":50638,"byte_end":50690,"line_start":308,"line_end":308,"column_start":1,"column_end":53}},{"value":"/ [`for_message_slice_mut`]: #method.for_message_slice_mut","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":50691,"byte_end":50751,"line_start":309,"line_end":309,"column_start":1,"column_end":61}},{"value":"/ [`new`]: #method.new","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":50752,"byte_end":50776,"line_start":310,"line_end":310,"column_start":1,"column_end":25}},{"value":"/ [RFC 1035]: https://tools.ietf.org/html/rfc1035","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":50777,"byte_end":50828,"line_start":311,"line_end":311,"column_start":1,"column_end":52}},{"value":"/ [RFC 2136]: https://tools.ietf.org/html/rfc2136","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":50829,"byte_end":50880,"line_start":312,"line_end":312,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":51226,"byte_end":51229,"line_start":325,"line_end":325,"column_start":12,"column_end":15},"name":"new","qualname":"<HeaderCounts>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new value with all counters set to zero.\n","sig":null,"attributes":[{"value":"/ Creates a new value with all counters set to zero.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":51160,"byte_end":51214,"line_start":324,"line_end":324,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":51608,"byte_end":51625,"line_start":337,"line_end":337,"column_start":12,"column_end":29},"name":"for_message_slice","qualname":"<HeaderCounts>::for_message_slice","value":"fn (message: &[u8]) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a header counts reference from the octets slice of a message.","sig":null,"attributes":[{"value":"/ Creates a header counts reference from the octets slice of a message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":51277,"byte_end":51350,"line_start":329,"line_end":329,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":51355,"byte_end":51358,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ The slice `message` mut be the whole message, i.e., start with the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":51363,"byte_end":51433,"line_start":331,"line_end":331,"column_start":5,"column_end":75}},{"value":"/ bytes of the [`Header`](struct.Header.html).","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":51438,"byte_end":51486,"line_start":332,"line_end":332,"column_start":5,"column_end":53}},{"value":"/ ","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":51491,"byte_end":51495,"line_start":333,"line_end":333,"column_start":5,"column_end":9}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":51500,"byte_end":51512,"line_start":334,"line_end":334,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":51517,"byte_end":51520,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ This function panics if the octets slice is shorter than 24 octets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":51525,"byte_end":51596,"line_start":336,"line_end":336,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":52229,"byte_end":52250,"line_start":353,"line_end":353,"column_start":12,"column_end":33},"name":"for_message_slice_mut","qualname":"<HeaderCounts>::for_message_slice_mut","value":"fn (message: &mut [u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a mutable counts reference from the octets slice of a message.","sig":null,"attributes":[{"value":"/ Creates a mutable counts reference from the octets slice of a message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":51898,"byte_end":51972,"line_start":345,"line_end":345,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":51977,"byte_end":51980,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ The slice `message` mut be the whole message, i.e., start with the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":51985,"byte_end":52055,"line_start":347,"line_end":347,"column_start":5,"column_end":75}},{"value":"/ bytes of the [`Header`](struct.Header.html).","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":52060,"byte_end":52108,"line_start":348,"line_end":348,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":52113,"byte_end":52116,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":52121,"byte_end":52133,"line_start":350,"line_end":350,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":52138,"byte_end":52141,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ This function panics if the octets slice is shorter than 24 octets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":52146,"byte_end":52217,"line_start":352,"line_end":352,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":52617,"byte_end":52625,"line_start":362,"line_end":362,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<HeaderCounts>::as_slice","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the raw octets slice of the header counts.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the raw octets slice of the header counts.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":52536,"byte_end":52605,"line_start":361,"line_end":361,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":52760,"byte_end":52772,"line_start":367,"line_end":367,"column_start":12,"column_end":24},"name":"as_slice_mut","qualname":"<HeaderCounts>::as_slice_mut","value":"fn (&mut self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the octets slice of the header counts.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the octets slice of the header counts.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":52675,"byte_end":52748,"line_start":366,"line_end":366,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":52889,"byte_end":52892,"line_start":372,"line_end":372,"column_start":12,"column_end":15},"name":"set","qualname":"<HeaderCounts>::set","value":"fn (&mut self, counts: HeaderCounts) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the counts to those from `counts`.\n","sig":null,"attributes":[{"value":"/ Sets the counts to those from `counts`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":52834,"byte_end":52877,"line_start":371,"line_end":371,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":53283,"byte_end":53290,"line_start":387,"line_end":387,"column_start":12,"column_end":19},"name":"qdcount","qualname":"<HeaderCounts>::qdcount","value":"fn (self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the QDCOUNT field.","sig":null,"attributes":[{"value":"/ Returns the value of the QDCOUNT field.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":53092,"byte_end":53135,"line_start":383,"line_end":383,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":53140,"byte_end":53143,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ This field contains the number of questions in the first","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":53148,"byte_end":53208,"line_start":385,"line_end":385,"column_start":5,"column_end":65}},{"value":"/ section of the message, normally the question section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":53213,"byte_end":53271,"line_start":386,"line_end":386,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":53393,"byte_end":53404,"line_start":392,"line_end":392,"column_start":12,"column_end":23},"name":"set_qdcount","qualname":"<HeaderCounts>::set_qdcount","value":"fn (&mut self, value: u16) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the QDCOUNT field.\n","sig":null,"attributes":[{"value":"/ Sets the value of the QDCOUNT field.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":53341,"byte_end":53381,"line_start":391,"line_end":391,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":53633,"byte_end":53644,"line_start":400,"line_end":400,"column_start":12,"column_end":23},"name":"inc_qdcount","qualname":"<HeaderCounts>::inc_qdcount","value":"fn (&mut self) -> Result<(), ShortBuf>","parent":null,"children":[],"decl_id":null,"docs":" Increases the value of the QDCOUNT field by one.","sig":null,"attributes":[{"value":"/ Increases the value of the QDCOUNT field by one.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":53472,"byte_end":53524,"line_start":396,"line_end":396,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":53529,"byte_end":53532,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ If increasing the counter would result in an overflow, returns an","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":53537,"byte_end":53606,"line_start":398,"line_end":398,"column_start":5,"column_end":74}},{"value":"/ error.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":53611,"byte_end":53621,"line_start":399,"line_end":399,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":54044,"byte_end":54055,"line_start":415,"line_end":415,"column_start":12,"column_end":23},"name":"dec_qdcount","qualname":"<HeaderCounts>::dec_qdcount","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Decreases the value of the QDCOUNT field by one.","sig":null,"attributes":[{"value":"/ Decreases the value of the QDCOUNT field by one.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":53890,"byte_end":53942,"line_start":410,"line_end":410,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":53947,"byte_end":53950,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":53955,"byte_end":53967,"line_start":412,"line_end":412,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":53972,"byte_end":53975,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ This method panics if the count is already zero.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":53980,"byte_end":54032,"line_start":414,"line_end":414,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":54379,"byte_end":54386,"line_start":426,"line_end":426,"column_start":12,"column_end":19},"name":"ancount","qualname":"<HeaderCounts>::ancount","value":"fn (self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the ANCOUNT field.","sig":null,"attributes":[{"value":"/ Returns the value of the ANCOUNT field.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":54182,"byte_end":54225,"line_start":422,"line_end":422,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":54230,"byte_end":54233,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ This field contains the number of resource records in the second","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":54238,"byte_end":54306,"line_start":424,"line_end":424,"column_start":5,"column_end":73}},{"value":"/ section of the message, normally the answer section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":54311,"byte_end":54367,"line_start":425,"line_end":425,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":54489,"byte_end":54500,"line_start":431,"line_end":431,"column_start":12,"column_end":23},"name":"set_ancount","qualname":"<HeaderCounts>::set_ancount","value":"fn (&mut self, value: u16) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the ANCOUNT field.\n","sig":null,"attributes":[{"value":"/ Sets the value of the ANCOUNT field.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":54437,"byte_end":54477,"line_start":430,"line_end":430,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":54729,"byte_end":54740,"line_start":439,"line_end":439,"column_start":12,"column_end":23},"name":"inc_ancount","qualname":"<HeaderCounts>::inc_ancount","value":"fn (&mut self) -> Result<(), ShortBuf>","parent":null,"children":[],"decl_id":null,"docs":" Increases the value of the ANCOUNT field by one.","sig":null,"attributes":[{"value":"/ Increases the value of the ANCOUNT field by one.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":54568,"byte_end":54620,"line_start":435,"line_end":435,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":54625,"byte_end":54628,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ If increasing the counter would result in an overflow, returns an","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":54633,"byte_end":54702,"line_start":437,"line_end":437,"column_start":5,"column_end":74}},{"value":"/ error.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":54707,"byte_end":54717,"line_start":438,"line_end":438,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":55140,"byte_end":55151,"line_start":454,"line_end":454,"column_start":12,"column_end":23},"name":"dec_ancount","qualname":"<HeaderCounts>::dec_ancount","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Decreases the value of the ANCOUNT field by one.","sig":null,"attributes":[{"value":"/ Decreases the value of the ANCOUNT field by one.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":54986,"byte_end":55038,"line_start":449,"line_end":449,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":55043,"byte_end":55046,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":55051,"byte_end":55063,"line_start":451,"line_end":451,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":55068,"byte_end":55071,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ This method panics if the count is already zero.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":55076,"byte_end":55128,"line_start":453,"line_end":453,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":55476,"byte_end":55483,"line_start":464,"line_end":464,"column_start":12,"column_end":19},"name":"nscount","qualname":"<HeaderCounts>::nscount","value":"fn (self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the NSCOUNT field.","sig":null,"attributes":[{"value":"/ Returns the value of the NSCOUNT field.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":55277,"byte_end":55320,"line_start":460,"line_end":460,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":55325,"byte_end":55328,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ This field contains the number of resource records in the third","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":55333,"byte_end":55400,"line_start":462,"line_end":462,"column_start":5,"column_end":72}},{"value":"/ section of the message, normally the authority section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":55405,"byte_end":55464,"line_start":463,"line_end":463,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":55586,"byte_end":55597,"line_start":469,"line_end":469,"column_start":12,"column_end":23},"name":"set_nscount","qualname":"<HeaderCounts>::set_nscount","value":"fn (&mut self, value: u16) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the NSCOUNT field.\n","sig":null,"attributes":[{"value":"/ Sets the value of the NSCOUNT field.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":55534,"byte_end":55574,"line_start":468,"line_end":468,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":55826,"byte_end":55837,"line_start":477,"line_end":477,"column_start":12,"column_end":23},"name":"inc_nscount","qualname":"<HeaderCounts>::inc_nscount","value":"fn (&mut self) -> Result<(), ShortBuf>","parent":null,"children":[],"decl_id":null,"docs":" Increases the value of the NSCOUNT field by one.","sig":null,"attributes":[{"value":"/ Increases the value of the NSCOUNT field by one.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":55665,"byte_end":55717,"line_start":473,"line_end":473,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":55722,"byte_end":55725,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ If increasing the counter would result in an overflow, returns an","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":55730,"byte_end":55799,"line_start":475,"line_end":475,"column_start":5,"column_end":74}},{"value":"/ error.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":55804,"byte_end":55814,"line_start":476,"line_end":476,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":56236,"byte_end":56247,"line_start":492,"line_end":492,"column_start":12,"column_end":23},"name":"dec_nscount","qualname":"<HeaderCounts>::dec_nscount","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Decreases the value of the NSCOUNT field by one.","sig":null,"attributes":[{"value":"/ Decreases the value of the NSCOUNT field by one.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":56082,"byte_end":56134,"line_start":487,"line_end":487,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":56139,"byte_end":56142,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":56147,"byte_end":56159,"line_start":489,"line_end":489,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":56164,"byte_end":56167,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ This method panics if the count is already zero.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":56172,"byte_end":56224,"line_start":491,"line_end":491,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":56574,"byte_end":56581,"line_start":502,"line_end":502,"column_start":12,"column_end":19},"name":"arcount","qualname":"<HeaderCounts>::arcount","value":"fn (self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the ARCOUNT field.","sig":null,"attributes":[{"value":"/ Returns the value of the ARCOUNT field.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":56373,"byte_end":56416,"line_start":498,"line_end":498,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":56421,"byte_end":56424,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ This field contains the number of resource records in the fourth","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":56429,"byte_end":56497,"line_start":500,"line_end":500,"column_start":5,"column_end":73}},{"value":"/ section of the message, normally the additional section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":56502,"byte_end":56562,"line_start":501,"line_end":501,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":56684,"byte_end":56695,"line_start":507,"line_end":507,"column_start":12,"column_end":23},"name":"set_arcount","qualname":"<HeaderCounts>::set_arcount","value":"fn (&mut self, value: u16) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the ARCOUNT field.\n","sig":null,"attributes":[{"value":"/ Sets the value of the ARCOUNT field.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":56632,"byte_end":56672,"line_start":506,"line_end":506,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":56924,"byte_end":56935,"line_start":515,"line_end":515,"column_start":12,"column_end":23},"name":"inc_arcount","qualname":"<HeaderCounts>::inc_arcount","value":"fn (&mut self) -> Result<(), ShortBuf>","parent":null,"children":[],"decl_id":null,"docs":" Increases the value of the ARCOUNT field by one.","sig":null,"attributes":[{"value":"/ Increases the value of the ARCOUNT field by one.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":56763,"byte_end":56815,"line_start":511,"line_end":511,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":56820,"byte_end":56823,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ If increasing the counter would result in an overflow, returns an","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":56828,"byte_end":56897,"line_start":513,"line_end":513,"column_start":5,"column_end":74}},{"value":"/ error.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":56902,"byte_end":56912,"line_start":514,"line_end":514,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":57336,"byte_end":57347,"line_start":530,"line_end":530,"column_start":12,"column_end":23},"name":"dec_arcount","qualname":"<HeaderCounts>::dec_arcount","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Decreases the value of the ARCOUNT field by one.","sig":null,"attributes":[{"value":"/ Decreases the value of the ARCOUNT field by one.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":57182,"byte_end":57234,"line_start":525,"line_end":525,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":57239,"byte_end":57242,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":57247,"byte_end":57259,"line_start":527,"line_end":527,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":57264,"byte_end":57267,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ This method panics if the count is already zero.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":57272,"byte_end":57324,"line_start":529,"line_end":529,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":57707,"byte_end":57714,"line_start":543,"line_end":543,"column_start":12,"column_end":19},"name":"zocount","qualname":"<HeaderCounts>::zocount","value":"fn (self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the ZOCOUNT field.","sig":null,"attributes":[{"value":"/ Returns the value of the ZOCOUNT field.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":57517,"byte_end":57560,"line_start":539,"line_end":539,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":57565,"byte_end":57568,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ This is the same as the `qdcount()`. It is used in UPDATE queries","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":57573,"byte_end":57642,"line_start":541,"line_end":541,"column_start":5,"column_end":74}},{"value":"/ where the first section is the zone section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":57647,"byte_end":57695,"line_start":542,"line_end":542,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":57816,"byte_end":57827,"line_start":548,"line_end":548,"column_start":12,"column_end":23},"name":"set_zocount","qualname":"<HeaderCounts>::set_zocount","value":"fn (&mut self, value: u16) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the ZOCOUNT field.\n","sig":null,"attributes":[{"value":"/ Sets the value of the ZOCOUNT field.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":57764,"byte_end":57804,"line_start":547,"line_end":547,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":58094,"byte_end":58101,"line_start":556,"line_end":556,"column_start":12,"column_end":19},"name":"prcount","qualname":"<HeaderCounts>::prcount","value":"fn (self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the PRCOUNT field.","sig":null,"attributes":[{"value":"/ Returns the value of the PRCOUNT field.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":57896,"byte_end":57939,"line_start":552,"line_end":552,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":57944,"byte_end":57947,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ This is the same as the `ancount()`. It is used in UPDATE queries","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":57952,"byte_end":58021,"line_start":554,"line_end":554,"column_start":5,"column_end":74}},{"value":"/ where the first section is the prerequisite section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":58026,"byte_end":58082,"line_start":555,"line_end":555,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":58203,"byte_end":58214,"line_start":561,"line_end":561,"column_start":12,"column_end":23},"name":"set_prcount","qualname":"<HeaderCounts>::set_prcount","value":"fn (&mut self, value: u16) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sete the value of the PRCOUNT field.\n","sig":null,"attributes":[{"value":"/ Sete the value of the PRCOUNT field.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":58151,"byte_end":58191,"line_start":560,"line_end":560,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":58475,"byte_end":58482,"line_start":569,"line_end":569,"column_start":12,"column_end":19},"name":"upcount","qualname":"<HeaderCounts>::upcount","value":"fn (self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the UPCOUNT field.","sig":null,"attributes":[{"value":"/ Returns the value of the UPCOUNT field.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":58283,"byte_end":58326,"line_start":565,"line_end":565,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":58331,"byte_end":58334,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ This is the same as the `nscount()`. It is used in UPDATE queries","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":58339,"byte_end":58408,"line_start":567,"line_end":567,"column_start":5,"column_end":74}},{"value":"/ where the first section is the update section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":58413,"byte_end":58463,"line_start":568,"line_end":568,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":58584,"byte_end":58595,"line_start":574,"line_end":574,"column_start":12,"column_end":23},"name":"set_upcount","qualname":"<HeaderCounts>::set_upcount","value":"fn (&mut self, value: u16) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the UPCOUNT field.\n","sig":null,"attributes":[{"value":"/ Sets the value of the UPCOUNT field.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":58532,"byte_end":58572,"line_start":573,"line_end":573,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":58860,"byte_end":58867,"line_start":582,"line_end":582,"column_start":12,"column_end":19},"name":"adcount","qualname":"<HeaderCounts>::adcount","value":"fn (self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the ADCOUNT field.","sig":null,"attributes":[{"value":"/ Returns the value of the ADCOUNT field.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":58664,"byte_end":58707,"line_start":578,"line_end":578,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":58712,"byte_end":58715,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ This is the same as the `arcount()`. It is used in UPDATE queries","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":58720,"byte_end":58789,"line_start":580,"line_end":580,"column_start":5,"column_end":74}},{"value":"/ where the first section is the additional section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":58794,"byte_end":58848,"line_start":581,"line_end":581,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":58969,"byte_end":58980,"line_start":587,"line_end":587,"column_start":12,"column_end":23},"name":"set_adcount","qualname":"<HeaderCounts>::set_adcount","value":"fn (&mut self, value: u16) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the ADCOUNT field.\n","sig":null,"attributes":[{"value":"/ Sets the value of the ADCOUNT field.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":58917,"byte_end":58957,"line_start":586,"line_end":586,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":4393},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":60260,"byte_end":60273,"line_start":625,"line_end":625,"column_start":12,"column_end":25},"name":"HeaderSection","qualname":"::base::header::HeaderSection","value":"HeaderSection {  }","parent":null,"children":[{"krate":0,"index":4394}],"decl_id":null,"docs":" The complete header section of a DNS message.","sig":null,"attributes":[{"value":"/ The complete header section of a DNS message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":59601,"byte_end":59650,"line_start":610,"line_end":610,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":59651,"byte_end":59654,"line_start":611,"line_end":611,"column_start":1,"column_end":4}},{"value":"/ Consists of a [`Header`] directly followed by a [`HeaderCounts`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":59655,"byte_end":59724,"line_start":612,"line_end":612,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":59725,"byte_end":59728,"line_start":613,"line_end":613,"column_start":1,"column_end":4}},{"value":"/ You can create an owned value via the [`new`] function or `Default` trait","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":59729,"byte_end":59806,"line_start":614,"line_end":614,"column_start":1,"column_end":78}},{"value":"/ or acquire a pointer referring the the header section of an existing DNS","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":59807,"byte_end":59883,"line_start":615,"line_end":615,"column_start":1,"column_end":77}},{"value":"/ message via the [`for_message_slice`] or [`for_message_slice_mut`]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":59884,"byte_end":59954,"line_start":616,"line_end":616,"column_start":1,"column_end":71}},{"value":"/ functions.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":59955,"byte_end":59969,"line_start":617,"line_end":617,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":59970,"byte_end":59973,"line_start":618,"line_end":618,"column_start":1,"column_end":4}},{"value":"/ [`Header`]: struct.Header.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":59974,"byte_end":60008,"line_start":619,"line_end":619,"column_start":1,"column_end":35}},{"value":"/ [`HeaderCounts`]: struct.HeaderCounts.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":60009,"byte_end":60055,"line_start":620,"line_end":620,"column_start":1,"column_end":47}},{"value":"/ [`for_message_slice`]: #method.for_message_slice","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":60056,"byte_end":60108,"line_start":621,"line_end":621,"column_start":1,"column_end":53}},{"value":"/ [`for_message_slice_mut`]: #method.for_message_slice_mut","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":60109,"byte_end":60169,"line_start":622,"line_end":622,"column_start":1,"column_end":61}},{"value":"/ [`new`]: #method.new","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":60170,"byte_end":60194,"line_start":623,"line_end":623,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":60505,"byte_end":60508,"line_start":636,"line_end":636,"column_start":12,"column_end":15},"name":"new","qualname":"<HeaderSection>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new header section.","sig":null,"attributes":[{"value":"/ Creates a new header section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":60358,"byte_end":60391,"line_start":632,"line_end":632,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":60396,"byte_end":60399,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ The value will have all header and header counts fields set to zero","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":60404,"byte_end":60475,"line_start":634,"line_end":634,"column_start":5,"column_end":76}},{"value":"/ or false.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":60480,"byte_end":60493,"line_start":635,"line_end":635,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":60748,"byte_end":60765,"line_start":646,"line_end":646,"column_start":12,"column_end":29},"name":"for_message_slice","qualname":"<HeaderSection>::for_message_slice","value":"fn (s: &[u8]) -> &HeaderSection","parent":null,"children":[],"decl_id":null,"docs":" Creates a reference from the octets slice of a message.","sig":null,"attributes":[{"value":"/ Creates a reference from the octets slice of a message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":60556,"byte_end":60615,"line_start":640,"line_end":640,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":60620,"byte_end":60623,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":60628,"byte_end":60640,"line_start":642,"line_end":642,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":60645,"byte_end":60648,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ This function panics if the the octets slice is shorter than 24","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":60653,"byte_end":60720,"line_start":644,"line_end":644,"column_start":5,"column_end":72}},{"value":"/ octets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":60725,"byte_end":60736,"line_start":645,"line_end":645,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":61127,"byte_end":61148,"line_start":657,"line_end":657,"column_start":12,"column_end":33},"name":"for_message_slice_mut","qualname":"<HeaderSection>::for_message_slice_mut","value":"fn (s: &mut [u8]) -> &mut HeaderSection","parent":null,"children":[],"decl_id":null,"docs":" Creates a mutable reference from the ocetets slice of a message.","sig":null,"attributes":[{"value":"/ Creates a mutable reference from the ocetets slice of a message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":60926,"byte_end":60994,"line_start":651,"line_end":651,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":60999,"byte_end":61002,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":61007,"byte_end":61019,"line_start":653,"line_end":653,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":61024,"byte_end":61027,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ This function panics if the the octets slice is shorter than 24","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":61032,"byte_end":61099,"line_start":655,"line_end":655,"column_start":5,"column_end":72}},{"value":"/ octets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":61104,"byte_end":61115,"line_start":656,"line_end":656,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":61386,"byte_end":61394,"line_start":663,"line_end":663,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<HeaderSection>::as_slice","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying octets slice.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying octets slice.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":61319,"byte_end":61374,"line_start":662,"line_end":662,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":61556,"byte_end":61562,"line_start":673,"line_end":673,"column_start":12,"column_end":18},"name":"header","qualname":"<HeaderSection>::header","value":"fn (&self) -> &Header","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the header.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the header.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":61506,"byte_end":61544,"line_start":672,"line_end":672,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":61699,"byte_end":61709,"line_start":678,"line_end":678,"column_start":12,"column_end":22},"name":"header_mut","qualname":"<HeaderSection>::header_mut","value":"fn (&mut self) -> &mut Header","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the header.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the header.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":61641,"byte_end":61687,"line_start":677,"line_end":677,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":61862,"byte_end":61868,"line_start":683,"line_end":683,"column_start":12,"column_end":18},"name":"counts","qualname":"<HeaderSection>::counts","value":"fn (&self) -> &HeaderCounts","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the header counts.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the header counts.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":61805,"byte_end":61850,"line_start":682,"line_end":682,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":62024,"byte_end":62034,"line_start":688,"line_end":688,"column_start":12,"column_end":22},"name":"counts_mut","qualname":"<HeaderSection>::counts_mut","value":"fn (&mut self) -> &mut HeaderCounts","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the header counts.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the header counts.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":61959,"byte_end":62012,"line_start":687,"line_end":687,"column_start":5,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":348},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iana","qualname":"::base::iana","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":428},{"krate":0,"index":429}],"decl_id":null,"docs":" IANA Definitions for DNS.","sig":null,"attributes":[{"value":"! IANA Definitions for DNS.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":67625,"byte_end":67654,"line_start":1,"line_end":1,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":67655,"byte_end":67658,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains enums for parameters defined in IANA registries","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":67659,"byte_end":67731,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"! that are relevant for this crate.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":67732,"byte_end":67769,"line_start":4,"line_end":4,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":67770,"byte_end":67773,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! All types defined hereunder follow the same basic structure. They are","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":67774,"byte_end":67847,"line_start":6,"line_end":6,"column_start":1,"column_end":74}},{"value":"! all enums with all well-defined values as variants. In addition they","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":67848,"byte_end":67920,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"! have an `Int` variant that contains a raw integer value. Since we cannot","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":67921,"byte_end":67997,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"! restrict that integer to only the undefined values, we generally allow","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":67998,"byte_end":68072,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"! the full set of possible values. We treat this correctly, meaning that","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":68073,"byte_end":68147,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"! the well-defined variant and the `Int` variant with the same integer","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":68148,"byte_end":68220,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"! value compare to equal.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":68221,"byte_end":68248,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":68249,"byte_end":68252,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! There are two methods `from_int()` and `to_int()` to convert from and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":68253,"byte_end":68326,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"! to raw integer values as well as implementations of the `From` trait","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":68327,"byte_end":68399,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"! for these. `FromStr` and `Display` are implemented to convert from","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":68400,"byte_end":68470,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"! the string codes to the values and back. All of these are essentially","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":68471,"byte_end":68544,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"! giant matches which may or may not be the smartest way to do this.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":68545,"byte_end":68615,"line_start":18,"line_end":18,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":68616,"byte_end":68619,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! Types also implement `parse()` and `scan()` functions for creation from","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":68620,"byte_end":68695,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"! wire format and master format, respectively, as well as a `compose()`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":68696,"byte_end":68769,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"! method for composing into wire format data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":68770,"byte_end":68817,"line_start":22,"line_end":22,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":68818,"byte_end":68821,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! While each parameter type has a module of its own, they are all","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":68822,"byte_end":68889,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"! re-exported here. This is mostly so we can have associated types like","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":68890,"byte_end":68963,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"! `FromStrError` without having to resort to devilishly long names.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":68964,"byte_end":69033,"line_start":26,"line_end":26,"column_start":1,"column_end":70}}]},{"kind":"Mod","id":{"krate":0,"index":366},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/class.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"class","qualname":"::base::iana::class","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/class.rs","parent":null,"children":[{"krate":0,"index":4449},{"krate":0,"index":4466},{"krate":0,"index":4465},{"krate":0,"index":4463},{"krate":0,"index":4412},{"krate":0,"index":4417},{"krate":0,"index":4419},{"krate":0,"index":4421},{"krate":0,"index":4424},{"krate":0,"index":4428},{"krate":0,"index":4431},{"krate":0,"index":4433},{"krate":0,"index":4435},{"krate":0,"index":4437},{"krate":0,"index":4438},{"krate":0,"index":4440},{"krate":0,"index":4442},{"krate":0,"index":4444},{"krate":0,"index":4446},{"krate":0,"index":4468},{"krate":0,"index":4471},{"krate":0,"index":4474},{"krate":0,"index":4481},{"krate":0,"index":4485},{"krate":0,"index":4483},{"krate":0,"index":4477},{"krate":0,"index":4479}],"decl_id":null,"docs":" DNS CLASSes.\n","sig":null,"attributes":[{"value":"! DNS CLASSes.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/class.rs","byte_start":85207,"byte_end":85223,"line_start":1,"line_end":1,"column_start":1,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4450},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/class.rs","byte_start":86529,"byte_end":86531,"line_start":34,"line_end":34,"column_start":6,"column_end":8},"name":"In","qualname":"::base::iana::class::Class::In","value":"Class::In","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Internet (IN).\n \n This class is defined in RFC 1035 and really the only one relevant\n at all.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4452},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/class.rs","byte_start":86705,"byte_end":86707,"line_start":40,"line_end":40,"column_start":6,"column_end":8},"name":"Ch","qualname":"::base::iana::class::Class::Ch","value":"Class::Ch","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Chaosnet (CH).\n \n A network protocol developed at MIT in the 1970s. Reused by BIND for\n built-in server information zones.\",\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4454},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/class.rs","byte_start":86827,"byte_end":86829,"line_start":45,"line_end":45,"column_start":6,"column_end":8},"name":"Hs","qualname":"::base::iana::class::Class::Hs","value":"Class::Hs","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Hesiod (HS).\n \n A system information protocol part of MIT's Project Athena.\",\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4456},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/class.rs","byte_start":87021,"byte_end":87025,"line_start":51,"line_end":51,"column_start":6,"column_end":10},"name":"None","qualname":"::base::iana::class::Class::None","value":"Class::None","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Query class None.\n \n Defined in RFC 2136, this class is used in UPDATE queries to\n require that an RRset does not exist prior to the update.\",\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4458},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/class.rs","byte_start":87214,"byte_end":87217,"line_start":57,"line_end":57,"column_start":6,"column_end":9},"name":"Any","qualname":"::base::iana::class::Class::Any","value":"Class::Any","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Query class * (ANY).\n \n This class can be used in a query to indicate that records for the\n given name from any class are requested.\",\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4449},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/class.rs","byte_start":86388,"byte_end":86393,"line_start":28,"line_end":28,"column_start":5,"column_end":10},"name":"Class","qualname":"::base::iana::class::Class","value":"Class::{In, Ch, Hs, None, Any, Int}","parent":null,"children":[{"krate":0,"index":4450},{"krate":0,"index":4452},{"krate":0,"index":4454},{"krate":0,"index":4456},{"krate":0,"index":4458},{"krate":0,"index":4460}],"decl_id":null,"docs":" DNS CLASSes.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":367},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/digestalg.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"digestalg","qualname":"::base::iana::digestalg","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/digestalg.rs","parent":null,"children":[{"krate":0,"index":4524},{"krate":0,"index":4539},{"krate":0,"index":4538},{"krate":0,"index":4536},{"krate":0,"index":4487},{"krate":0,"index":4492},{"krate":0,"index":4494},{"krate":0,"index":4496},{"krate":0,"index":4499},{"krate":0,"index":4503},{"krate":0,"index":4506},{"krate":0,"index":4508},{"krate":0,"index":4510},{"krate":0,"index":4512},{"krate":0,"index":4513},{"krate":0,"index":4515},{"krate":0,"index":4517},{"krate":0,"index":4519},{"krate":0,"index":4521},{"krate":0,"index":4541},{"krate":0,"index":4544},{"krate":0,"index":4547}],"decl_id":null,"docs":" Delegation signer digest algorithm numbers.\n","sig":null,"attributes":[{"value":"! Delegation signer digest algorithm numbers.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/digestalg.rs","byte_start":87313,"byte_end":87360,"line_start":1,"line_end":1,"column_start":1,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4525},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/digestalg.rs","byte_start":88069,"byte_end":88073,"line_start":22,"line_end":22,"column_start":6,"column_end":10},"name":"Sha1","qualname":"::base::iana::digestalg::DigestAlg::Sha1","value":"DigestAlg::Sha1","parent":{"krate":0,"index":4524},"children":[],"decl_id":null,"docs":" Specifies that the SHA-1 hash function is used.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4527},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/digestalg.rs","byte_start":88226,"byte_end":88232,"line_start":27,"line_end":27,"column_start":6,"column_end":12},"name":"Sha256","qualname":"::base::iana::digestalg::DigestAlg::Sha256","value":"DigestAlg::Sha256","parent":{"krate":0,"index":4524},"children":[],"decl_id":null,"docs":" Specifies that the SHA-256 hash function is used.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4529},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/digestalg.rs","byte_start":88504,"byte_end":88508,"line_start":35,"line_end":35,"column_start":6,"column_end":10},"name":"Gost","qualname":"::base::iana::digestalg::DigestAlg::Gost","value":"DigestAlg::Gost","parent":{"krate":0,"index":4524},"children":[],"decl_id":null,"docs":" Specifies that the GOST R 34.11-94 hash function is used.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4531},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/digestalg.rs","byte_start":88780,"byte_end":88786,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"name":"Sha384","qualname":"::base::iana::digestalg::DigestAlg::Sha384","value":"DigestAlg::Sha384","parent":{"krate":0,"index":4524},"children":[],"decl_id":null,"docs":" Specifies that the SHA-384 hash function is used.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4524},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/digestalg.rs","byte_start":87920,"byte_end":87929,"line_start":17,"line_end":17,"column_start":5,"column_end":14},"name":"DigestAlg","qualname":"::base::iana::digestalg::DigestAlg","value":"DigestAlg::{Sha1, Sha256, Gost, Sha384, Int}","parent":null,"children":[{"krate":0,"index":4525},{"krate":0,"index":4527},{"krate":0,"index":4529},{"krate":0,"index":4531},{"krate":0,"index":4533}],"decl_id":null,"docs":" Delegation signer digest algorithm numbers.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":368},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/nsec3.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"nsec3","qualname":"::base::iana::nsec3","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/nsec3.rs","parent":null,"children":[{"krate":0,"index":4586},{"krate":0,"index":4595},{"krate":0,"index":4594},{"krate":0,"index":4592},{"krate":0,"index":4549},{"krate":0,"index":4554},{"krate":0,"index":4556},{"krate":0,"index":4558},{"krate":0,"index":4561},{"krate":0,"index":4565},{"krate":0,"index":4568},{"krate":0,"index":4570},{"krate":0,"index":4572},{"krate":0,"index":4574},{"krate":0,"index":4575},{"krate":0,"index":4577},{"krate":0,"index":4579},{"krate":0,"index":4581},{"krate":0,"index":4583},{"krate":0,"index":4597},{"krate":0,"index":4600},{"krate":0,"index":4603}],"decl_id":null,"docs":" NSEC3 hash algorithms.\n","sig":null,"attributes":[{"value":"! NSEC3 hash algorithms.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/nsec3.rs","byte_start":88848,"byte_end":88874,"line_start":1,"line_end":1,"column_start":1,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4587},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/nsec3.rs","byte_start":89535,"byte_end":89539,"line_start":21,"line_end":21,"column_start":6,"column_end":10},"name":"Sha1","qualname":"::base::iana::nsec3::Nsec3HashAlg::Sha1","value":"Nsec3HashAlg::Sha1","parent":{"krate":0,"index":4586},"children":[],"decl_id":null,"docs":" Specifies that the SHA-1 hash function is used.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4586},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/nsec3.rs","byte_start":89455,"byte_end":89467,"line_start":18,"line_end":18,"column_start":5,"column_end":17},"name":"Nsec3HashAlg","qualname":"::base::iana::nsec3::Nsec3HashAlg","value":"Nsec3HashAlg::{Sha1, Int}","parent":null,"children":[{"krate":0,"index":4587},{"krate":0,"index":4589}],"decl_id":null,"docs":" NSEC3 hash algorithm numbers.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":369},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/opcode.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"opcode","qualname":"::base::iana::opcode","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/opcode.rs","parent":null,"children":[{"krate":0,"index":4642},{"krate":0,"index":4661},{"krate":0,"index":4660},{"krate":0,"index":4658},{"krate":0,"index":4605},{"krate":0,"index":4610},{"krate":0,"index":4612},{"krate":0,"index":4614},{"krate":0,"index":4617},{"krate":0,"index":4621},{"krate":0,"index":4624},{"krate":0,"index":4626},{"krate":0,"index":4628},{"krate":0,"index":4630},{"krate":0,"index":4631},{"krate":0,"index":4633},{"krate":0,"index":4635},{"krate":0,"index":4637},{"krate":0,"index":4639},{"krate":0,"index":4663},{"krate":0,"index":4667},{"krate":0,"index":4670},{"krate":0,"index":4677},{"krate":0,"index":4681},{"krate":0,"index":4679},{"krate":0,"index":4673},{"krate":0,"index":4675}],"decl_id":null,"docs":" DNS OpCodes.\n","sig":null,"attributes":[{"value":"! DNS OpCodes.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/opcode.rs","byte_start":89602,"byte_end":89618,"line_start":1,"line_end":1,"column_start":1,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4643},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/opcode.rs","byte_start":90556,"byte_end":90561,"line_start":29,"line_end":29,"column_start":6,"column_end":11},"name":"Query","qualname":"::base::iana::opcode::Opcode::Query","value":"Opcode::Query","parent":{"krate":0,"index":4642},"children":[],"decl_id":null,"docs":" A standard query (0).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4645},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/opcode.rs","byte_start":91123,"byte_end":91129,"line_start":42,"line_end":42,"column_start":6,"column_end":12},"name":"IQuery","qualname":"::base::iana::opcode::Opcode::IQuery","value":"Opcode::IQuery","parent":{"krate":0,"index":4642},"children":[],"decl_id":null,"docs":" An inverse query (IQUERY) (1, obsolete).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4647},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/opcode.rs","byte_start":91522,"byte_end":91528,"line_start":52,"line_end":52,"column_start":6,"column_end":12},"name":"Status","qualname":"::base::iana::opcode::Opcode::Status","value":"Opcode::Status","parent":{"krate":0,"index":4642},"children":[],"decl_id":null,"docs":" A server status request (2).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4649},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/opcode.rs","byte_start":91833,"byte_end":91839,"line_start":62,"line_end":62,"column_start":6,"column_end":12},"name":"Notify","qualname":"::base::iana::opcode::Opcode::Notify","value":"Opcode::Notify","parent":{"krate":0,"index":4642},"children":[],"decl_id":null,"docs":" A NOTIFY query (4).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4651},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/opcode.rs","byte_start":92142,"byte_end":92148,"line_start":72,"line_end":72,"column_start":6,"column_end":12},"name":"Update","qualname":"::base::iana::opcode::Opcode::Update","value":"Opcode::Update","parent":{"krate":0,"index":4642},"children":[],"decl_id":null,"docs":" An UPDATE query (5).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4653},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/opcode.rs","byte_start":92456,"byte_end":92459,"line_start":82,"line_end":82,"column_start":6,"column_end":9},"name":"Dso","qualname":"::base::iana::opcode::Opcode::Dso","value":"Opcode::Dso","parent":{"krate":0,"index":4642},"children":[],"decl_id":null,"docs":" DNS Stateful operations (DSO) (6).","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4642},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/opcode.rs","byte_start":90252,"byte_end":90258,"line_start":19,"line_end":19,"column_start":5,"column_end":11},"name":"Opcode","qualname":"::base::iana::opcode::Opcode","value":"Opcode::{Query, IQuery, Status, Notify, Update, Dso, Int}","parent":null,"children":[{"krate":0,"index":4643},{"krate":0,"index":4645},{"krate":0,"index":4647},{"krate":0,"index":4649},{"krate":0,"index":4651},{"krate":0,"index":4653},{"krate":0,"index":4655}],"decl_id":null,"docs":" DNS OpCodes.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":370},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/opt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"opt","qualname":"::base::iana::opt","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/opt.rs","parent":null,"children":[{"krate":0,"index":4720},{"krate":0,"index":4759},{"krate":0,"index":4758},{"krate":0,"index":4756},{"krate":0,"index":4683},{"krate":0,"index":4688},{"krate":0,"index":4690},{"krate":0,"index":4692},{"krate":0,"index":4695},{"krate":0,"index":4699},{"krate":0,"index":4702},{"krate":0,"index":4704},{"krate":0,"index":4706},{"krate":0,"index":4708},{"krate":0,"index":4709},{"krate":0,"index":4711},{"krate":0,"index":4713},{"krate":0,"index":4715},{"krate":0,"index":4717},{"krate":0,"index":4761},{"krate":0,"index":4765},{"krate":0,"index":4768},{"krate":0,"index":4775},{"krate":0,"index":4779},{"krate":0,"index":4777},{"krate":0,"index":4771},{"krate":0,"index":4773}],"decl_id":null,"docs":" DNS EDNS0 pption codes.\n","sig":null,"attributes":[{"value":"! DNS EDNS0 pption codes.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/opt.rs","byte_start":92537,"byte_end":92564,"line_start":1,"line_end":1,"column_start":1,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4721},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/opt.rs","byte_start":93651,"byte_end":93654,"line_start":30,"line_end":30,"column_start":6,"column_end":9},"name":"Llq","qualname":"::base::iana::opt::OptionCode::Llq","value":"OptionCode::Llq","parent":{"krate":0,"index":4720},"children":[],"decl_id":null,"docs":" Long-Lived Queries (LLQ, 1).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4723},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/opt.rs","byte_start":94017,"byte_end":94019,"line_start":39,"line_end":39,"column_start":6,"column_end":8},"name":"Ul","qualname":"::base::iana::opt::OptionCode::Ul","value":"OptionCode::Ul","parent":{"krate":0,"index":4720},"children":[],"decl_id":null,"docs":" Update lease (UL, 2).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4725},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/opt.rs","byte_start":94308,"byte_end":94312,"line_start":47,"line_end":47,"column_start":6,"column_end":10},"name":"Nsid","qualname":"::base::iana::opt::OptionCode::Nsid","value":"OptionCode::Nsid","parent":{"krate":0,"index":4720},"children":[],"decl_id":null,"docs":" Name server identifier (NSID, 3).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4727},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/opt.rs","byte_start":94632,"byte_end":94635,"line_start":56,"line_end":56,"column_start":6,"column_end":9},"name":"Dau","qualname":"::base::iana::opt::OptionCode::Dau","value":"OptionCode::Dau","parent":{"krate":0,"index":4720},"children":[],"decl_id":null,"docs":" DNSSEC algorithm understood (DAU, 5).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4729},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/opt.rs","byte_start":94938,"byte_end":94941,"line_start":65,"line_end":65,"column_start":6,"column_end":9},"name":"Dhu","qualname":"::base::iana::opt::OptionCode::Dhu","value":"OptionCode::Dhu","parent":{"krate":0,"index":4720},"children":[],"decl_id":null,"docs":" DS hash understood (DHU, 6).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4731},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/opt.rs","byte_start":95250,"byte_end":95253,"line_start":74,"line_end":74,"column_start":6,"column_end":9},"name":"N3u","qualname":"::base::iana::opt::OptionCode::N3u","value":"OptionCode::N3u","parent":{"krate":0,"index":4720},"children":[],"decl_id":null,"docs":" NSEC3 hash understood (N3U, 7).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4733},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/opt.rs","byte_start":95586,"byte_end":95598,"line_start":83,"line_end":83,"column_start":6,"column_end":18},"name":"ClientSubnet","qualname":"::base::iana::opt::OptionCode::ClientSubnet","value":"OptionCode::ClientSubnet","parent":{"krate":0,"index":4720},"children":[],"decl_id":null,"docs":" EDNS client subnet (8),","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4735},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/opt.rs","byte_start":95927,"byte_end":95933,"line_start":92,"line_end":92,"column_start":6,"column_end":12},"name":"Expire","qualname":"::base::iana::opt::OptionCode::Expire","value":"OptionCode::Expire","parent":{"krate":0,"index":4720},"children":[],"decl_id":null,"docs":" Expire (9).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4737},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/opt.rs","byte_start":96274,"byte_end":96280,"line_start":101,"line_end":101,"column_start":6,"column_end":12},"name":"Cookie","qualname":"::base::iana::opt::OptionCode::Cookie","value":"OptionCode::Cookie","parent":{"krate":0,"index":4720},"children":[],"decl_id":null,"docs":" DNS Cookie (10).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4739},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/opt.rs","byte_start":96566,"byte_end":96578,"line_start":109,"line_end":109,"column_start":6,"column_end":18},"name":"TcpKeepalive","qualname":"::base::iana::opt::OptionCode::TcpKeepalive","value":"OptionCode::TcpKeepalive","parent":{"krate":0,"index":4720},"children":[],"decl_id":null,"docs":" edns-tcp-keepalive (11).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4741},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/opt.rs","byte_start":96906,"byte_end":96913,"line_start":118,"line_end":118,"column_start":6,"column_end":13},"name":"Padding","qualname":"::base::iana::opt::OptionCode::Padding","value":"OptionCode::Padding","parent":{"krate":0,"index":4720},"children":[],"decl_id":null,"docs":" Padding (12).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4743},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/opt.rs","byte_start":97258,"byte_end":97263,"line_start":127,"line_end":127,"column_start":6,"column_end":11},"name":"Chain","qualname":"::base::iana::opt::OptionCode::Chain","value":"OptionCode::Chain","parent":{"krate":0,"index":4720},"children":[],"decl_id":null,"docs":" CHAIN query requests (13).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4745},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/opt.rs","byte_start":97559,"byte_end":97565,"line_start":136,"line_end":136,"column_start":6,"column_end":12},"name":"KeyTag","qualname":"::base::iana::opt::OptionCode::KeyTag","value":"OptionCode::KeyTag","parent":{"krate":0,"index":4720},"children":[],"decl_id":null,"docs":" EDNS key tag (14).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4747},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/opt.rs","byte_start":97927,"byte_end":97936,"line_start":145,"line_end":145,"column_start":6,"column_end":15},"name":"ClientTag","qualname":"::base::iana::opt::OptionCode::ClientTag","value":"OptionCode::ClientTag","parent":{"krate":0,"index":4720},"children":[],"decl_id":null,"docs":" EDNS client tag (16).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4749},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/opt.rs","byte_start":98301,"byte_end":98310,"line_start":154,"line_end":154,"column_start":6,"column_end":15},"name":"ServerTag","qualname":"::base::iana::opt::OptionCode::ServerTag","value":"OptionCode::ServerTag","parent":{"krate":0,"index":4720},"children":[],"decl_id":null,"docs":" EDNS server tag (16).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4751},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/opt.rs","byte_start":98582,"byte_end":98590,"line_start":161,"line_end":161,"column_start":6,"column_end":14},"name":"DeviceId","qualname":"::base::iana::opt::OptionCode::DeviceId","value":"OptionCode::DeviceId","parent":{"krate":0,"index":4720},"children":[],"decl_id":null,"docs":" DeviceID (26946).","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4720},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/opt.rs","byte_start":93171,"byte_end":93181,"line_start":18,"line_end":18,"column_start":5,"column_end":15},"name":"OptionCode","qualname":"::base::iana::opt::OptionCode","value":"OptionCode::{Llq, Ul, Nsid, Dau, Dhu, N3u, ClientSubnet, Expire, Cookie, TcpKeepalive, Padding, Chain, KeyTag, ClientTag, ServerTag, DeviceId, Int}","parent":null,"children":[{"krate":0,"index":4721},{"krate":0,"index":4723},{"krate":0,"index":4725},{"krate":0,"index":4727},{"krate":0,"index":4729},{"krate":0,"index":4731},{"krate":0,"index":4733},{"krate":0,"index":4735},{"krate":0,"index":4737},{"krate":0,"index":4739},{"krate":0,"index":4741},{"krate":0,"index":4743},{"krate":0,"index":4745},{"krate":0,"index":4747},{"krate":0,"index":4749},{"krate":0,"index":4751},{"krate":0,"index":4753}],"decl_id":null,"docs":" DNS EDNS0 option codes.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":371},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rcode","qualname":"::base::iana::rcode","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":4781},{"krate":0,"index":4810},{"krate":0,"index":4809},{"krate":0,"index":4807},{"krate":0,"index":376},{"krate":0,"index":381},{"krate":0,"index":383},{"krate":0,"index":385},{"krate":0,"index":388},{"krate":0,"index":390},{"krate":0,"index":392},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":397},{"krate":0,"index":399},{"krate":0,"index":401},{"krate":0,"index":403},{"krate":0,"index":4812},{"krate":0,"index":4845},{"krate":0,"index":4844},{"krate":0,"index":4842},{"krate":0,"index":406},{"krate":0,"index":415},{"krate":0,"index":417},{"krate":0,"index":419},{"krate":0,"index":421},{"krate":0,"index":4884},{"krate":0,"index":4929},{"krate":0,"index":4928},{"krate":0,"index":4926},{"krate":0,"index":4847},{"krate":0,"index":4852},{"krate":0,"index":4854},{"krate":0,"index":4856},{"krate":0,"index":4859},{"krate":0,"index":4863},{"krate":0,"index":4866},{"krate":0,"index":4868},{"krate":0,"index":4870},{"krate":0,"index":4872},{"krate":0,"index":4873},{"krate":0,"index":4875},{"krate":0,"index":4877},{"krate":0,"index":4879},{"krate":0,"index":4881},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":4931},{"krate":0,"index":4935},{"krate":0,"index":4938},{"krate":0,"index":4945},{"krate":0,"index":4949},{"krate":0,"index":4947},{"krate":0,"index":4941},{"krate":0,"index":4943}],"decl_id":null,"docs":" DNS response codes and extended response codes.","sig":null,"attributes":[{"value":"! DNS response codes and extended response codes.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":98687,"byte_end":98738,"line_start":1,"line_end":1,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":98739,"byte_end":98742,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The original DNS specification in [RFC 1035] specified four bits of the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":98743,"byte_end":98818,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"! message header as response code. The type [`Rcode`] defined herein","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":98819,"byte_end":98889,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"! represents these codes. Later, [RFC 2671][] (now [RFC 6891]) added eight","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":98890,"byte_end":98966,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"! bits to the response code to be transmitted as part of the OPT","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":98967,"byte_end":99033,"line_start":6,"line_end":6,"column_start":1,"column_end":67}},{"value":"! pseudo-resource record. To make matters even worse, the TSIG and TKEY","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":99034,"byte_end":99107,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"! records defined by [RFC 2845] and [RFC 2930] use a 16 bit error code.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":99108,"byte_end":99181,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"! All of these codes share the same definition space. Even so, we have","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":99182,"byte_end":99254,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"! separate types for each of these.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":99255,"byte_end":99292,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":99293,"byte_end":99296,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! [`Rcode`]: enum.Rcode.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":99297,"byte_end":99327,"line_start":12,"line_end":12,"column_start":1,"column_end":31}},{"value":"! [RFC 1035]: https://tools.ietf.org/html/rfc1035","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":99328,"byte_end":99379,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"! [RFC 2671]: https://tools.ietf.org/html/rfc2671","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":99380,"byte_end":99431,"line_start":14,"line_end":14,"column_start":1,"column_end":52}},{"value":"! [RFC 2845]: https://tools.ietf.org/html/rfc2845","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":99432,"byte_end":99483,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"! [RFC 2930]: https://tools.ietf.org/html/rfc2930","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":99484,"byte_end":99535,"line_start":16,"line_end":16,"column_start":1,"column_end":52}},{"value":"! [RFC 6891]: https://tools.ietf.org/html/rfc6891","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":99536,"byte_end":99587,"line_start":17,"line_end":17,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":99588,"byte_end":99591,"line_start":18,"line_end":18,"column_start":1,"column_end":4}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4782},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101041,"byte_end":101048,"line_start":56,"line_end":56,"column_start":5,"column_end":12},"name":"NoError","qualname":"::base::iana::rcode::Rcode::NoError","value":"Rcode::NoError","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" No error condition.","sig":null,"attributes":[{"value":"/ No error condition.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":100864,"byte_end":100887,"line_start":49,"line_end":49,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":100892,"byte_end":100895,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ (Otherwise known as success.)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":100900,"byte_end":100933,"line_start":51,"line_end":51,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":100938,"byte_end":100941,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Defined in [RFC 1035].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":100946,"byte_end":100972,"line_start":53,"line_end":53,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":100977,"byte_end":100980,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ [RFC 1035]: https://tools.ietf.org/html/rfc1035","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":100985,"byte_end":101036,"line_start":55,"line_end":55,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4784},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101247,"byte_end":101254,"line_start":65,"line_end":65,"column_start":5,"column_end":12},"name":"FormErr","qualname":"::base::iana::rcode::Rcode::FormErr","value":"Rcode::FormErr","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Format error.","sig":null,"attributes":[{"value":"/ Format error.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101055,"byte_end":101072,"line_start":58,"line_end":58,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101077,"byte_end":101080,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ The name server was unable to interpret the query.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101085,"byte_end":101139,"line_start":60,"line_end":60,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101144,"byte_end":101147,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Defined in [RFC 1035].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101152,"byte_end":101178,"line_start":62,"line_end":62,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101183,"byte_end":101186,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ [RFC 1035]: https://tools.ietf.org/html/rfc1035","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101191,"byte_end":101242,"line_start":64,"line_end":64,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4786},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101500,"byte_end":101508,"line_start":75,"line_end":75,"column_start":5,"column_end":13},"name":"ServFail","qualname":"::base::iana::rcode::Rcode::ServFail","value":"Rcode::ServFail","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Server failure.","sig":null,"attributes":[{"value":"/ Server failure.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101261,"byte_end":101280,"line_start":67,"line_end":67,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101285,"byte_end":101288,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ The name server was unable to process this query due to a problem","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101293,"byte_end":101362,"line_start":69,"line_end":69,"column_start":5,"column_end":74}},{"value":"/ with the name server.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101367,"byte_end":101392,"line_start":70,"line_end":70,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101397,"byte_end":101400,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Defined in [RFC 1035].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101405,"byte_end":101431,"line_start":72,"line_end":72,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101436,"byte_end":101439,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [RFC 1035]: https://tools.ietf.org/html/rfc1035","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101444,"byte_end":101495,"line_start":74,"line_end":74,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4788},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101724,"byte_end":101732,"line_start":84,"line_end":84,"column_start":5,"column_end":13},"name":"NXDomain","qualname":"::base::iana::rcode::Rcode::NXDomain","value":"Rcode::NXDomain","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Name error.","sig":null,"attributes":[{"value":"/ Name error.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101515,"byte_end":101530,"line_start":77,"line_end":77,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101535,"byte_end":101538,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ The domain name given in the query does not exist at the name server.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101543,"byte_end":101616,"line_start":79,"line_end":79,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101621,"byte_end":101624,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Defined in [RFC 1035].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101629,"byte_end":101655,"line_start":81,"line_end":81,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101660,"byte_end":101663,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ [RFC 1035]: https://tools.ietf.org/html/rfc1035","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101668,"byte_end":101719,"line_start":83,"line_end":83,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4790},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101945,"byte_end":101951,"line_start":93,"line_end":93,"column_start":5,"column_end":11},"name":"NotImp","qualname":"::base::iana::rcode::Rcode::NotImp","value":"Rcode::NotImp","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Not implemented.","sig":null,"attributes":[{"value":"/ Not implemented.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101739,"byte_end":101759,"line_start":86,"line_end":86,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101764,"byte_end":101767,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ The name server does not support the requested kind of query.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101772,"byte_end":101837,"line_start":88,"line_end":88,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101842,"byte_end":101845,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Defined in [RFC 1035].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101850,"byte_end":101876,"line_start":90,"line_end":90,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101881,"byte_end":101884,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ [RFC 1035]: https://tools.ietf.org/html/rfc1035","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101889,"byte_end":101940,"line_start":92,"line_end":92,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4792},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":102200,"byte_end":102207,"line_start":103,"line_end":103,"column_start":5,"column_end":12},"name":"Refused","qualname":"::base::iana::rcode::Rcode::Refused","value":"Rcode::Refused","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Query refused.","sig":null,"attributes":[{"value":"/ Query refused.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101958,"byte_end":101976,"line_start":95,"line_end":95,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101981,"byte_end":101984,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ The name server refused to perform the operation requested by the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":101989,"byte_end":102058,"line_start":97,"line_end":97,"column_start":5,"column_end":74}},{"value":"/ query for policy reasons.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":102063,"byte_end":102092,"line_start":98,"line_end":98,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":102097,"byte_end":102100,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ Defined in [RFC 1035].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":102105,"byte_end":102131,"line_start":100,"line_end":100,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":102136,"byte_end":102139,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [RFC 1035]: https://tools.ietf.org/html/rfc1035","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":102144,"byte_end":102195,"line_start":102,"line_end":102,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4794},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":102715,"byte_end":102723,"line_start":118,"line_end":118,"column_start":5,"column_end":13},"name":"YXDomain","qualname":"::base::iana::rcode::Rcode::YXDomain","value":"Rcode::YXDomain","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Name exists when it should not.","sig":null,"attributes":[{"value":"/ Name exists when it should not.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":102214,"byte_end":102249,"line_start":105,"line_end":105,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":102254,"byte_end":102257,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Returned for an UPDATE query when a domain requested to not exist","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":102262,"byte_end":102331,"line_start":107,"line_end":107,"column_start":5,"column_end":74}},{"value":"/ does in fact exist.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":102336,"byte_end":102359,"line_start":108,"line_end":108,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":102364,"byte_end":102367,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Returned when resolving a DNAME redirection when the resulting name","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":102372,"byte_end":102443,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ exceeds the length of 255 octets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":102448,"byte_end":102485,"line_start":111,"line_end":111,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":102490,"byte_end":102493,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ Defined in [RFC 2136] for the UPDATE query and [RFC 6672] for DNAME","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":102498,"byte_end":102569,"line_start":113,"line_end":113,"column_start":5,"column_end":76}},{"value":"/ redirection.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":102574,"byte_end":102590,"line_start":114,"line_end":114,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":102595,"byte_end":102598,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ [RFC 2136]: https://tools.ietf.org/html/rfc2136","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":102603,"byte_end":102654,"line_start":116,"line_end":116,"column_start":5,"column_end":56}},{"value":"/ [RFC 6672]: https://tools.ietf.org/html/rfc6672","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":102659,"byte_end":102710,"line_start":117,"line_end":117,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4796},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":102985,"byte_end":102992,"line_start":128,"line_end":128,"column_start":5,"column_end":12},"name":"YXRRSet","qualname":"::base::iana::rcode::Rcode::YXRRSet","value":"Rcode::YXRRSet","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" RR set exists when it should not.","sig":null,"attributes":[{"value":"/ RR set exists when it should not.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":102730,"byte_end":102767,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":102772,"byte_end":102775,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Returned for an UPDATE query when an RRset requested to not exist","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":102780,"byte_end":102849,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ does in fact exist.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":102854,"byte_end":102877,"line_start":123,"line_end":123,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":102882,"byte_end":102885,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Defined in [RFC 2136].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":102890,"byte_end":102916,"line_start":125,"line_end":125,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":102921,"byte_end":102924,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ [RFC 2136]: https://tools.ietf.org/html/rfc2136","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":102929,"byte_end":102980,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4798},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":103241,"byte_end":103248,"line_start":138,"line_end":138,"column_start":5,"column_end":12},"name":"NXRRSet","qualname":"::base::iana::rcode::Rcode::NXRRSet","value":"Rcode::NXRRSet","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" RR set that should exist does not.","sig":null,"attributes":[{"value":"/ RR set that should exist does not.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":102999,"byte_end":103037,"line_start":130,"line_end":130,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":103042,"byte_end":103045,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ Returned for an UPDATE query when an RRset requested to exist","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":103050,"byte_end":103115,"line_start":132,"line_end":132,"column_start":5,"column_end":70}},{"value":"/ does not.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":103120,"byte_end":103133,"line_start":133,"line_end":133,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":103138,"byte_end":103141,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Defined in [RFC 2136].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":103146,"byte_end":103172,"line_start":135,"line_end":135,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":103177,"byte_end":103180,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ [RFC 2136]: https://tools.ietf.org/html/rfc2136","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":103185,"byte_end":103236,"line_start":137,"line_end":137,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4800},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":103723,"byte_end":103730,"line_start":151,"line_end":151,"column_start":5,"column_end":12},"name":"NotAuth","qualname":"::base::iana::rcode::Rcode::NotAuth","value":"Rcode::NotAuth","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Server not authoritative for zone or client not authorized.","sig":null,"attributes":[{"value":"/ Server not authoritative for zone or client not authorized.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":103255,"byte_end":103318,"line_start":140,"line_end":140,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":103323,"byte_end":103326,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ Returned for an UPDATE query when the server is not an authoritative","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":103331,"byte_end":103403,"line_start":142,"line_end":142,"column_start":5,"column_end":77}},{"value":"/ name server for the requested domain.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":103408,"byte_end":103449,"line_start":143,"line_end":143,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":103454,"byte_end":103457,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Returned for queries using TSIG when authorisation failed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":103462,"byte_end":103524,"line_start":145,"line_end":145,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":103529,"byte_end":103532,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Defined in [RFC 2136] for UPDATE and [RFC 2845] for TSIG.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":103537,"byte_end":103598,"line_start":147,"line_end":147,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":103603,"byte_end":103606,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ [RFC 2136]: https://tools.ietf.org/html/rfc2136","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":103611,"byte_end":103662,"line_start":149,"line_end":149,"column_start":5,"column_end":56}},{"value":"/ [RFC 2845]: https://tools.ietf.org/html/rfc2845","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":103667,"byte_end":103718,"line_start":150,"line_end":150,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4802},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":104000,"byte_end":104007,"line_start":161,"line_end":161,"column_start":5,"column_end":12},"name":"NotZone","qualname":"::base::iana::rcode::Rcode::NotZone","value":"Rcode::NotZone","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Name not contained in zone.","sig":null,"attributes":[{"value":"/ Name not contained in zone.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":103737,"byte_end":103768,"line_start":153,"line_end":153,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":103773,"byte_end":103776,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ A name used in the prerequisite or update section is not within the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":103781,"byte_end":103852,"line_start":155,"line_end":155,"column_start":5,"column_end":76}},{"value":"/ zone given in the zone section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":103857,"byte_end":103892,"line_start":156,"line_end":156,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":103897,"byte_end":103900,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Defined in [RFC 2136].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":103905,"byte_end":103931,"line_start":158,"line_end":158,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":103936,"byte_end":103939,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ [RFC 2136]: https://tools.ietf.org/html/rfc2136","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":103944,"byte_end":103995,"line_start":160,"line_end":160,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4804},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":104129,"byte_end":104132,"line_start":166,"line_end":166,"column_start":5,"column_end":8},"name":"Int","qualname":"::base::iana::rcode::Rcode::Int","value":"Rcode::Int(u8)","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" A raw, integer rcode value.","sig":null,"attributes":[{"value":"/ A raw, integer rcode value.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":104014,"byte_end":104045,"line_start":163,"line_end":163,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":104050,"byte_end":104053,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ When converting to an `u8`, only the lower four bits are used.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":104058,"byte_end":104124,"line_start":165,"line_end":165,"column_start":5,"column_end":71}}]},{"kind":"Enum","id":{"krate":0,"index":4781},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":100852,"byte_end":100857,"line_start":48,"line_end":48,"column_start":10,"column_end":15},"name":"Rcode","qualname":"::base::iana::rcode::Rcode","value":"Rcode::{NoError, FormErr, ServFail, NXDomain, NotImp, Refused, YXDomain, YXRRSet, NXRRSet, NotAuth, NotZone, Int}","parent":null,"children":[{"krate":0,"index":4782},{"krate":0,"index":4784},{"krate":0,"index":4786},{"krate":0,"index":4788},{"krate":0,"index":4790},{"krate":0,"index":4792},{"krate":0,"index":4794},{"krate":0,"index":4796},{"krate":0,"index":4798},{"krate":0,"index":4800},{"krate":0,"index":4802},{"krate":0,"index":4804}],"decl_id":null,"docs":" DNS Response Codes.","sig":null,"attributes":[{"value":"/ DNS Response Codes.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":99702,"byte_end":99725,"line_start":25,"line_end":25,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":99726,"byte_end":99729,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ The response code of a response indicates what happend on the server","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":99730,"byte_end":99802,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ when trying to answer the query. The code is a 4 bit value and part of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":99803,"byte_end":99877,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ the header of a DNS message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":99878,"byte_end":99910,"line_start":29,"line_end":29,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":99911,"byte_end":99914,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This response was defined as part of [RFC 1035]. Later, [RFC 2671]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":99915,"byte_end":99985,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ defined an extended response code of 12 bits using the lower four bits","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":99986,"byte_end":100060,"line_start":32,"line_end":32,"column_start":1,"column_end":75}},{"value":"/ from the header and eight additional bits stored in the OPT","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":100061,"byte_end":100124,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ pseudo-record. The type [OptRcode] represents this extended response","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":100125,"byte_end":100197,"line_start":34,"line_end":34,"column_start":1,"column_end":73}},{"value":"/ code. A third response code, now 16 bit wide, was defined for the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":100198,"byte_end":100267,"line_start":35,"line_end":35,"column_start":1,"column_end":70}},{"value":"/ transaction authentication mechansim (TSIG) in [RFC 2845] and is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":100268,"byte_end":100336,"line_start":36,"line_end":36,"column_start":1,"column_end":69}},{"value":"/ represented by [TsigRcode].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":100337,"byte_end":100368,"line_start":37,"line_end":37,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":100369,"byte_end":100372,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ All three codes share the same name space. Their values are defined in","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":100373,"byte_end":100447,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ one registry, [IANA DNS RCODEs]. This type is complete as of 2019-01-28.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":100448,"byte_end":100524,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":100525,"byte_end":100528,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [OptRcode]: enum.OptRcode.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":100529,"byte_end":100563,"line_start":42,"line_end":42,"column_start":1,"column_end":35}},{"value":"/ [TsigRcode]: enum.TsigRcode.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":100564,"byte_end":100600,"line_start":43,"line_end":43,"column_start":1,"column_end":37}},{"value":"/ [IANA DNS RCODEs]: http://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-6","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":100601,"byte_end":100708,"line_start":44,"line_end":44,"column_start":1,"column_end":108}},{"value":"/ [RFC 1035]: https://tools.ietf.org/html/rfc1035","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":100709,"byte_end":100760,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/ [RFC 2671]: https://tools.ietf.org/html/rfc2671","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":100761,"byte_end":100812,"line_start":46,"line_end":46,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":104274,"byte_end":104282,"line_start":173,"line_end":173,"column_start":12,"column_end":20},"name":"from_int","qualname":"<Rcode>::from_int","value":"fn (value: u8) -> Rcode","parent":null,"children":[],"decl_id":null,"docs":" Creates an rcode from an integer.","sig":null,"attributes":[{"value":"/ Creates an rcode from an integer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":104157,"byte_end":104194,"line_start":170,"line_end":170,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":104199,"byte_end":104202,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Only the lower four bits of `value` are considered.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":104207,"byte_end":104262,"line_start":172,"line_end":172,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":104762,"byte_end":104768,"line_start":193,"line_end":193,"column_start":12,"column_end":18},"name":"to_int","qualname":"<Rcode>::to_int","value":"fn (self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the integer value for this rcode.\n","sig":null,"attributes":[{"value":"/ Returns the integer value for this rcode.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":104705,"byte_end":104750,"line_start":192,"line_end":192,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4813},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109006,"byte_end":109013,"line_start":349,"line_end":349,"column_start":5,"column_end":12},"name":"NoError","qualname":"::base::iana::rcode::OptRcode::NoError","value":"OptRcode::NoError","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":" No error condition.","sig":null,"attributes":[{"value":"/ No error condition.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":108829,"byte_end":108852,"line_start":342,"line_end":342,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":108857,"byte_end":108860,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ (Otherwise known as success.)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":108865,"byte_end":108898,"line_start":344,"line_end":344,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":108903,"byte_end":108906,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ Defined in [RFC 1035].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":108911,"byte_end":108937,"line_start":346,"line_end":346,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":108942,"byte_end":108945,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ [RFC 1035]: https://tools.ietf.org/html/rfc1035","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":108950,"byte_end":109001,"line_start":348,"line_end":348,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4815},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109212,"byte_end":109219,"line_start":358,"line_end":358,"column_start":5,"column_end":12},"name":"FormErr","qualname":"::base::iana::rcode::OptRcode::FormErr","value":"OptRcode::FormErr","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":" Format error.","sig":null,"attributes":[{"value":"/ Format error.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109020,"byte_end":109037,"line_start":351,"line_end":351,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109042,"byte_end":109045,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ The name server was unable to interpret the query.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109050,"byte_end":109104,"line_start":353,"line_end":353,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109109,"byte_end":109112,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ Defined in [RFC 1035].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109117,"byte_end":109143,"line_start":355,"line_end":355,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109148,"byte_end":109151,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ [RFC 1035]: https://tools.ietf.org/html/rfc1035","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109156,"byte_end":109207,"line_start":357,"line_end":357,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4817},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109465,"byte_end":109473,"line_start":368,"line_end":368,"column_start":5,"column_end":13},"name":"ServFail","qualname":"::base::iana::rcode::OptRcode::ServFail","value":"OptRcode::ServFail","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":" Server failure.","sig":null,"attributes":[{"value":"/ Server failure.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109226,"byte_end":109245,"line_start":360,"line_end":360,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109250,"byte_end":109253,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ The name server was unable to process this query due to a problem","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109258,"byte_end":109327,"line_start":362,"line_end":362,"column_start":5,"column_end":74}},{"value":"/ with the name server.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109332,"byte_end":109357,"line_start":363,"line_end":363,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109362,"byte_end":109365,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ Defined in [RFC 1035].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109370,"byte_end":109396,"line_start":365,"line_end":365,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109401,"byte_end":109404,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ [RFC 1035]: https://tools.ietf.org/html/rfc1035","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109409,"byte_end":109460,"line_start":367,"line_end":367,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4819},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109689,"byte_end":109697,"line_start":377,"line_end":377,"column_start":5,"column_end":13},"name":"NXDomain","qualname":"::base::iana::rcode::OptRcode::NXDomain","value":"OptRcode::NXDomain","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":" Name error.","sig":null,"attributes":[{"value":"/ Name error.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109480,"byte_end":109495,"line_start":370,"line_end":370,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109500,"byte_end":109503,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ The domain name given in the query does not exist at the name server.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109508,"byte_end":109581,"line_start":372,"line_end":372,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109586,"byte_end":109589,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ Defined in [RFC 1035].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109594,"byte_end":109620,"line_start":374,"line_end":374,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109625,"byte_end":109628,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ [RFC 1035]: https://tools.ietf.org/html/rfc1035","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109633,"byte_end":109684,"line_start":376,"line_end":376,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4821},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109910,"byte_end":109916,"line_start":386,"line_end":386,"column_start":5,"column_end":11},"name":"NotImp","qualname":"::base::iana::rcode::OptRcode::NotImp","value":"OptRcode::NotImp","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":" Not implemented.","sig":null,"attributes":[{"value":"/ Not implemented.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109704,"byte_end":109724,"line_start":379,"line_end":379,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109729,"byte_end":109732,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ The name server does not support the requested kind of query.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109737,"byte_end":109802,"line_start":381,"line_end":381,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109807,"byte_end":109810,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ Defined in [RFC 1035].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109815,"byte_end":109841,"line_start":383,"line_end":383,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109846,"byte_end":109849,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ [RFC 1035]: https://tools.ietf.org/html/rfc1035","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109854,"byte_end":109905,"line_start":385,"line_end":385,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4823},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":110165,"byte_end":110172,"line_start":396,"line_end":396,"column_start":5,"column_end":12},"name":"Refused","qualname":"::base::iana::rcode::OptRcode::Refused","value":"OptRcode::Refused","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":" Query refused.","sig":null,"attributes":[{"value":"/ Query refused.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109923,"byte_end":109941,"line_start":388,"line_end":388,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109946,"byte_end":109949,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ The name server refused to perform the operation requested by the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":109954,"byte_end":110023,"line_start":390,"line_end":390,"column_start":5,"column_end":74}},{"value":"/ query for policy reasons.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":110028,"byte_end":110057,"line_start":391,"line_end":391,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":110062,"byte_end":110065,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ Defined in [RFC 1035].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":110070,"byte_end":110096,"line_start":393,"line_end":393,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":110101,"byte_end":110104,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ [RFC 1035]: https://tools.ietf.org/html/rfc1035","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":110109,"byte_end":110160,"line_start":395,"line_end":395,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4825},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":110680,"byte_end":110688,"line_start":411,"line_end":411,"column_start":5,"column_end":13},"name":"YXDomain","qualname":"::base::iana::rcode::OptRcode::YXDomain","value":"OptRcode::YXDomain","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":" Name exists when it should not.","sig":null,"attributes":[{"value":"/ Name exists when it should not.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":110179,"byte_end":110214,"line_start":398,"line_end":398,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":110219,"byte_end":110222,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ Returned for an UPDATE query when a domain requested to not exist","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":110227,"byte_end":110296,"line_start":400,"line_end":400,"column_start":5,"column_end":74}},{"value":"/ does in fact exist.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":110301,"byte_end":110324,"line_start":401,"line_end":401,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":110329,"byte_end":110332,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ Returned when resolving a DNAME redirection when the resulting name","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":110337,"byte_end":110408,"line_start":403,"line_end":403,"column_start":5,"column_end":76}},{"value":"/ exceeds the length of 255 octets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":110413,"byte_end":110450,"line_start":404,"line_end":404,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":110455,"byte_end":110458,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Defined in [RFC 2136] for the UPDATE query and [RFC 6672] for DNAME","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":110463,"byte_end":110534,"line_start":406,"line_end":406,"column_start":5,"column_end":76}},{"value":"/ redirection.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":110539,"byte_end":110555,"line_start":407,"line_end":407,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":110560,"byte_end":110563,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ [RFC 2136]: https://tools.ietf.org/html/rfc2136","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":110568,"byte_end":110619,"line_start":409,"line_end":409,"column_start":5,"column_end":56}},{"value":"/ [RFC 6672]: https://tools.ietf.org/html/rfc6672","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":110624,"byte_end":110675,"line_start":410,"line_end":410,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4827},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":110950,"byte_end":110957,"line_start":421,"line_end":421,"column_start":5,"column_end":12},"name":"YXRRSet","qualname":"::base::iana::rcode::OptRcode::YXRRSet","value":"OptRcode::YXRRSet","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":" RR set exists when it should not.","sig":null,"attributes":[{"value":"/ RR set exists when it should not.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":110695,"byte_end":110732,"line_start":413,"line_end":413,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":110737,"byte_end":110740,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ Returned for an UPDATE query when an RRset requested to not exist","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":110745,"byte_end":110814,"line_start":415,"line_end":415,"column_start":5,"column_end":74}},{"value":"/ does in fact exist.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":110819,"byte_end":110842,"line_start":416,"line_end":416,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":110847,"byte_end":110850,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ Defined in [RFC 2136].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":110855,"byte_end":110881,"line_start":418,"line_end":418,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":110886,"byte_end":110889,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ [RFC 2136]: https://tools.ietf.org/html/rfc2136","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":110894,"byte_end":110945,"line_start":420,"line_end":420,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4829},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":111206,"byte_end":111213,"line_start":431,"line_end":431,"column_start":5,"column_end":12},"name":"NXRRSet","qualname":"::base::iana::rcode::OptRcode::NXRRSet","value":"OptRcode::NXRRSet","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":" RR set that should exist does not.","sig":null,"attributes":[{"value":"/ RR set that should exist does not.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":110964,"byte_end":111002,"line_start":423,"line_end":423,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":111007,"byte_end":111010,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ Returned for an UPDATE query when an RRset requested to exist","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":111015,"byte_end":111080,"line_start":425,"line_end":425,"column_start":5,"column_end":70}},{"value":"/ does not.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":111085,"byte_end":111098,"line_start":426,"line_end":426,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":111103,"byte_end":111106,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ Defined in [RFC 2136].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":111111,"byte_end":111137,"line_start":428,"line_end":428,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":111142,"byte_end":111145,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ [RFC 2136]: https://tools.ietf.org/html/rfc2136","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":111150,"byte_end":111201,"line_start":430,"line_end":430,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4831},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":111688,"byte_end":111695,"line_start":444,"line_end":444,"column_start":5,"column_end":12},"name":"NotAuth","qualname":"::base::iana::rcode::OptRcode::NotAuth","value":"OptRcode::NotAuth","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":" Server not authoritative for zone or client not authorized.","sig":null,"attributes":[{"value":"/ Server not authoritative for zone or client not authorized.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":111220,"byte_end":111283,"line_start":433,"line_end":433,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":111288,"byte_end":111291,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ Returned for an UPDATE query when the server is not an authoritative","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":111296,"byte_end":111368,"line_start":435,"line_end":435,"column_start":5,"column_end":77}},{"value":"/ name server for the requested domain.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":111373,"byte_end":111414,"line_start":436,"line_end":436,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":111419,"byte_end":111422,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ Returned for queries using TSIG when authorisation failed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":111427,"byte_end":111489,"line_start":438,"line_end":438,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":111494,"byte_end":111497,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ Defined in [RFC 2136] for UPDATE and [RFC 2845] for TSIG.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":111502,"byte_end":111563,"line_start":440,"line_end":440,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":111568,"byte_end":111571,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ [RFC 2136]: https://tools.ietf.org/html/rfc2136","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":111576,"byte_end":111627,"line_start":442,"line_end":442,"column_start":5,"column_end":56}},{"value":"/ [RFC 2845]: https://tools.ietf.org/html/rfc2845","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":111632,"byte_end":111683,"line_start":443,"line_end":443,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4833},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":111965,"byte_end":111972,"line_start":454,"line_end":454,"column_start":5,"column_end":12},"name":"NotZone","qualname":"::base::iana::rcode::OptRcode::NotZone","value":"OptRcode::NotZone","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":" Name not contained in zone.","sig":null,"attributes":[{"value":"/ Name not contained in zone.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":111702,"byte_end":111733,"line_start":446,"line_end":446,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":111738,"byte_end":111741,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ A name used in the prerequisite or update section is not within the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":111746,"byte_end":111817,"line_start":448,"line_end":448,"column_start":5,"column_end":76}},{"value":"/ zone given in the zone section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":111822,"byte_end":111857,"line_start":449,"line_end":449,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":111862,"byte_end":111865,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ Defined in [RFC 2136].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":111870,"byte_end":111896,"line_start":451,"line_end":451,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":111901,"byte_end":111904,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ [RFC 2136]: https://tools.ietf.org/html/rfc2136","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":111909,"byte_end":111960,"line_start":453,"line_end":453,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4835},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":112210,"byte_end":112217,"line_start":464,"line_end":464,"column_start":5,"column_end":12},"name":"BadVers","qualname":"::base::iana::rcode::OptRcode::BadVers","value":"OptRcode::BadVers","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":" Bad OPT version.","sig":null,"attributes":[{"value":"/ Bad OPT version.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":111979,"byte_end":111999,"line_start":456,"line_end":456,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":112004,"byte_end":112007,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ A name server does not implement the EDNS version requested in the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":112012,"byte_end":112082,"line_start":458,"line_end":458,"column_start":5,"column_end":75}},{"value":"/ OPT record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":112087,"byte_end":112102,"line_start":459,"line_end":459,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":112107,"byte_end":112110,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ Defined in [RFC 6891].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":112115,"byte_end":112141,"line_start":461,"line_end":461,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":112146,"byte_end":112149,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ [RFC 6891]: https://tools.ietf.org/html/rfc6891","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":112154,"byte_end":112205,"line_start":463,"line_end":463,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4837},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":112624,"byte_end":112633,"line_start":477,"line_end":477,"column_start":5,"column_end":14},"name":"BadCookie","qualname":"::base::iana::rcode::OptRcode::BadCookie","value":"OptRcode::BadCookie","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":" Bad or missing server cookie.","sig":null,"attributes":[{"value":"/ Bad or missing server cookie.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":112343,"byte_end":112376,"line_start":469,"line_end":469,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":112381,"byte_end":112384,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ The request contained a COOKIE option either without a server cookie","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":112389,"byte_end":112461,"line_start":471,"line_end":471,"column_start":5,"column_end":77}},{"value":"/ or with a server cookie that did not validate.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":112466,"byte_end":112516,"line_start":472,"line_end":472,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":112521,"byte_end":112524,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ Defined in [RFC 7873].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":112529,"byte_end":112555,"line_start":474,"line_end":474,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":112560,"byte_end":112563,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ [RFC 7873]: https://tools.ietf.org/html/rfc7873","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":112568,"byte_end":112619,"line_start":476,"line_end":476,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4839},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":112774,"byte_end":112777,"line_start":483,"line_end":483,"column_start":5,"column_end":8},"name":"Int","qualname":"::base::iana::rcode::OptRcode::Int","value":"OptRcode::Int(u16)","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":" A raw, integer rcode value.","sig":null,"attributes":[{"value":"/ A raw, integer rcode value.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":112640,"byte_end":112671,"line_start":479,"line_end":479,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":112676,"byte_end":112679,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ When converting to a 12 bit code, the upper four bits are simply","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":112684,"byte_end":112752,"line_start":481,"line_end":481,"column_start":5,"column_end":73}},{"value":"/ ignored.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":112757,"byte_end":112769,"line_start":482,"line_end":482,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":4812},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":108814,"byte_end":108822,"line_start":341,"line_end":341,"column_start":10,"column_end":18},"name":"OptRcode","qualname":"::base::iana::rcode::OptRcode","value":"OptRcode::{NoError, FormErr, ServFail, NXDomain, NotImp, Refused, YXDomain, YXRRSet, NXRRSet, NotAuth, NotZone, BadVers, BadCookie, Int}","parent":null,"children":[{"krate":0,"index":4813},{"krate":0,"index":4815},{"krate":0,"index":4817},{"krate":0,"index":4819},{"krate":0,"index":4821},{"krate":0,"index":4823},{"krate":0,"index":4825},{"krate":0,"index":4827},{"krate":0,"index":4829},{"krate":0,"index":4831},{"krate":0,"index":4833},{"krate":0,"index":4835},{"krate":0,"index":4837},{"krate":0,"index":4839}],"decl_id":null,"docs":" Extended DNS Response Codes for OPT records.","sig":null,"attributes":[{"value":"/ Extended DNS Response Codes for OPT records.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":107431,"byte_end":107479,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":107480,"byte_end":107483,"line_start":316,"line_end":316,"column_start":1,"column_end":4}},{"value":"/ Originally, the response code of embedded in the header of each DNS","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":107484,"byte_end":107555,"line_start":317,"line_end":317,"column_start":1,"column_end":72}},{"value":"/ message was four bits long. This code, defined in [RFC 1035], is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":107556,"byte_end":107624,"line_start":318,"line_end":318,"column_start":1,"column_end":69}},{"value":"/ represented by the [Rcode] type. The extension mechanism for DNS","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":107625,"byte_end":107693,"line_start":319,"line_end":319,"column_start":1,"column_end":69}},{"value":"/ initially defined in [RFC 2671] and updated by [RFC 6891] added eight","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":107694,"byte_end":107767,"line_start":320,"line_end":320,"column_start":1,"column_end":74}},{"value":"/ more bits to be stored in the OPT pseudo-resource record. This type","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":107768,"byte_end":107839,"line_start":321,"line_end":321,"column_start":1,"column_end":72}},{"value":"/ represents the complete 12 bit extended response code.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":107840,"byte_end":107898,"line_start":322,"line_end":322,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":107899,"byte_end":107902,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ There is a third, 16 bit wide response code for transaction","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":107903,"byte_end":107966,"line_start":324,"line_end":324,"column_start":1,"column_end":64}},{"value":"/ authentication (TSIG) defined in [RFC 2845] and represented by the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":107967,"byte_end":108037,"line_start":325,"line_end":325,"column_start":1,"column_end":71}},{"value":"/ [`TsigRcode`] type. The code mostly shares the same name space except","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":108038,"byte_end":108111,"line_start":326,"line_end":326,"column_start":1,"column_end":74}},{"value":"/ for an unfortunate collision in between the BADVERS and BADSIG values.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":108112,"byte_end":108186,"line_start":327,"line_end":327,"column_start":1,"column_end":75}},{"value":"/ Because of this, we decided to have separate types.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":108187,"byte_end":108242,"line_start":328,"line_end":328,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":108243,"byte_end":108246,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ The values for all three response code types are defined in","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":108247,"byte_end":108310,"line_start":330,"line_end":330,"column_start":1,"column_end":64}},{"value":"/ the [IANA DNS RCODEs] registry. This type is complete as of 2019-01-28.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":108311,"byte_end":108386,"line_start":331,"line_end":331,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":108387,"byte_end":108390,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ [Rcode]: enum.Rcode.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":108391,"byte_end":108419,"line_start":333,"line_end":333,"column_start":1,"column_end":29}},{"value":"/ [`TsigRcode`]: enum.TsigRcode.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":108420,"byte_end":108458,"line_start":334,"line_end":334,"column_start":1,"column_end":39}},{"value":"/ [IANA DNS RCODEs]: http://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-6","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":108459,"byte_end":108566,"line_start":335,"line_end":335,"column_start":1,"column_end":108}},{"value":"/ [RFC 2671]: https://tools.ietf.org/html/rfc2671","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":108567,"byte_end":108618,"line_start":336,"line_end":336,"column_start":1,"column_end":52}},{"value":"/ [RFC 2845]: https://tools.ietf.org/html/rfc2845","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":108619,"byte_end":108670,"line_start":337,"line_end":337,"column_start":1,"column_end":52}},{"value":"/ [RFC 2930]: https://tools.ietf.org/html/rfc2930","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":108671,"byte_end":108722,"line_start":338,"line_end":338,"column_start":1,"column_end":52}},{"value":"/ [RFC 6891]: https://tools.ietf.org/html/rfc6891","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":108723,"byte_end":108774,"line_start":339,"line_end":339,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":112926,"byte_end":112934,"line_start":491,"line_end":491,"column_start":12,"column_end":20},"name":"from_int","qualname":"<OptRcode>::from_int","value":"fn (value: u16) -> OptRcode","parent":null,"children":[],"decl_id":null,"docs":" Creates an rcode from an integer.","sig":null,"attributes":[{"value":"/ Creates an rcode from an integer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":112807,"byte_end":112844,"line_start":488,"line_end":488,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":112849,"byte_end":112852,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ Only the lower twelve bits of `value` are considered.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":112857,"byte_end":112914,"line_start":490,"line_end":490,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":113479,"byte_end":113485,"line_start":513,"line_end":513,"column_start":12,"column_end":18},"name":"to_int","qualname":"<OptRcode>::to_int","value":"fn (self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the integer value for this rcode.\n","sig":null,"attributes":[{"value":"/ Returns the integer value for this rcode.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":113422,"byte_end":113467,"line_start":512,"line_end":512,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":114022,"byte_end":114032,"line_start":535,"line_end":535,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<OptRcode>::from_parts","value":"fn (rcode: Rcode, ext: u8) -> OptRcode","parent":null,"children":[],"decl_id":null,"docs":" Creates an extended rcode value from its parts.\n","sig":null,"attributes":[{"value":"/ Creates an extended rcode value from its parts.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":113959,"byte_end":114010,"line_start":534,"line_end":534,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":114244,"byte_end":114252,"line_start":542,"line_end":542,"column_start":12,"column_end":20},"name":"to_parts","qualname":"<OptRcode>::to_parts","value":"fn (self) -> (Rcode, u8)","parent":null,"children":[],"decl_id":null,"docs":" Returns the two parts of an extended rcode value.\n","sig":null,"attributes":[{"value":"/ Returns the two parts of an extended rcode value.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":114179,"byte_end":114232,"line_start":541,"line_end":541,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":114436,"byte_end":114441,"line_start":548,"line_end":548,"column_start":12,"column_end":17},"name":"rcode","qualname":"<OptRcode>::rcode","value":"fn (self) -> Rcode","parent":null,"children":[],"decl_id":null,"docs":" Returns the rcode part of the extended rcode.\n","sig":null,"attributes":[{"value":"/ Returns the rcode part of the extended rcode.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":114375,"byte_end":114424,"line_start":547,"line_end":547,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":114561,"byte_end":114564,"line_start":553,"line_end":553,"column_start":12,"column_end":15},"name":"ext","qualname":"<OptRcode>::ext","value":"fn (self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the extended octet of the extended rcode.\n","sig":null,"attributes":[{"value":"/ Returns the extended octet of the extended rcode.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":114496,"byte_end":114549,"line_start":552,"line_end":552,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4885},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":116950,"byte_end":116957,"line_start":634,"line_end":634,"column_start":6,"column_end":13},"name":"NoError","qualname":"::base::iana::rcode::TsigRcode::NoError","value":"TsigRcode::NoError","parent":{"krate":0,"index":4884},"children":[],"decl_id":null,"docs":" No error condition.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4887},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":117174,"byte_end":117181,"line_start":643,"line_end":643,"column_start":6,"column_end":13},"name":"FormErr","qualname":"::base::iana::rcode::TsigRcode::FormErr","value":"TsigRcode::FormErr","parent":{"krate":0,"index":4884},"children":[],"decl_id":null,"docs":" Format error.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4889},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":117445,"byte_end":117453,"line_start":653,"line_end":653,"column_start":6,"column_end":14},"name":"ServFail","qualname":"::base::iana::rcode::TsigRcode::ServFail","value":"TsigRcode::ServFail","parent":{"krate":0,"index":4884},"children":[],"decl_id":null,"docs":" Server failure.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4891},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":117688,"byte_end":117696,"line_start":662,"line_end":662,"column_start":6,"column_end":14},"name":"NXDomain","qualname":"::base::iana::rcode::TsigRcode::NXDomain","value":"TsigRcode::NXDomain","parent":{"krate":0,"index":4884},"children":[],"decl_id":null,"docs":" Name error.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4893},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":117928,"byte_end":117934,"line_start":671,"line_end":671,"column_start":6,"column_end":12},"name":"NotImp","qualname":"::base::iana::rcode::TsigRcode::NotImp","value":"TsigRcode::NotImp","parent":{"krate":0,"index":4884},"children":[],"decl_id":null,"docs":" Not implemented.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4895},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":118201,"byte_end":118208,"line_start":681,"line_end":681,"column_start":6,"column_end":13},"name":"Refused","qualname":"::base::iana::rcode::TsigRcode::Refused","value":"TsigRcode::Refused","parent":{"krate":0,"index":4884},"children":[],"decl_id":null,"docs":" Query refused.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4897},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":118734,"byte_end":118742,"line_start":696,"line_end":696,"column_start":6,"column_end":14},"name":"YXDomain","qualname":"::base::iana::rcode::TsigRcode::YXDomain","value":"TsigRcode::YXDomain","parent":{"krate":0,"index":4884},"children":[],"decl_id":null,"docs":" Name exists when it should not.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4899},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":119023,"byte_end":119030,"line_start":706,"line_end":706,"column_start":6,"column_end":13},"name":"YXRRSet","qualname":"::base::iana::rcode::TsigRcode::YXRRSet","value":"TsigRcode::YXRRSet","parent":{"krate":0,"index":4884},"children":[],"decl_id":null,"docs":" RR set exists when it should not.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4901},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":119297,"byte_end":119304,"line_start":716,"line_end":716,"column_start":6,"column_end":13},"name":"NXRRSet","qualname":"::base::iana::rcode::TsigRcode::NXRRSet","value":"TsigRcode::NXRRSet","parent":{"krate":0,"index":4884},"children":[],"decl_id":null,"docs":" RR set that should exist does not.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4903},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":119797,"byte_end":119804,"line_start":729,"line_end":729,"column_start":6,"column_end":13},"name":"NotAuth","qualname":"::base::iana::rcode::TsigRcode::NotAuth","value":"TsigRcode::NotAuth","parent":{"krate":0,"index":4884},"children":[],"decl_id":null,"docs":" Server not authoritative for zone or client not authorized.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4905},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":120092,"byte_end":120099,"line_start":739,"line_end":739,"column_start":6,"column_end":13},"name":"NotZone","qualname":"::base::iana::rcode::TsigRcode::NotZone","value":"TsigRcode::NotZone","parent":{"krate":0,"index":4884},"children":[],"decl_id":null,"docs":" Name not contained in zone.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4907},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":120312,"byte_end":120318,"line_start":748,"line_end":748,"column_start":6,"column_end":12},"name":"BadSig","qualname":"::base::iana::rcode::TsigRcode::BadSig","value":"TsigRcode::BadSig","parent":{"krate":0,"index":4884},"children":[],"decl_id":null,"docs":" TSIG signature failure.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4909},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":120570,"byte_end":120576,"line_start":758,"line_end":758,"column_start":6,"column_end":12},"name":"BadKey","qualname":"::base::iana::rcode::TsigRcode::BadKey","value":"TsigRcode::BadKey","parent":{"krate":0,"index":4884},"children":[],"decl_id":null,"docs":" Key not recognized.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4911},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":120838,"byte_end":120845,"line_start":768,"line_end":768,"column_start":6,"column_end":13},"name":"BadTime","qualname":"::base::iana::rcode::TsigRcode::BadTime","value":"TsigRcode::BadTime","parent":{"krate":0,"index":4884},"children":[],"decl_id":null,"docs":" Signature out of time window.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4913},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":121108,"byte_end":121115,"line_start":778,"line_end":778,"column_start":6,"column_end":13},"name":"BadMode","qualname":"::base::iana::rcode::TsigRcode::BadMode","value":"TsigRcode::BadMode","parent":{"krate":0,"index":4884},"children":[],"decl_id":null,"docs":" Bad TKEY mode.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4915},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":121452,"byte_end":121459,"line_start":789,"line_end":789,"column_start":6,"column_end":13},"name":"BadName","qualname":"::base::iana::rcode::TsigRcode::BadName","value":"TsigRcode::BadName","parent":{"krate":0,"index":4884},"children":[],"decl_id":null,"docs":" Duplicate key name.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4917},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":121799,"byte_end":121805,"line_start":798,"line_end":798,"column_start":6,"column_end":12},"name":"BadAlg","qualname":"::base::iana::rcode::TsigRcode::BadAlg","value":"TsigRcode::BadAlg","parent":{"krate":0,"index":4884},"children":[],"decl_id":null,"docs":" Algorithm not supported.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4919},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":122060,"byte_end":122068,"line_start":808,"line_end":808,"column_start":6,"column_end":14},"name":"BadTrunc","qualname":"::base::iana::rcode::TsigRcode::BadTrunc","value":"TsigRcode::BadTrunc","parent":{"krate":0,"index":4884},"children":[],"decl_id":null,"docs":" Bad truncation.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4921},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":122376,"byte_end":122385,"line_start":818,"line_end":818,"column_start":6,"column_end":15},"name":"BadCookie","qualname":"::base::iana::rcode::TsigRcode::BadCookie","value":"TsigRcode::BadCookie","parent":{"krate":0,"index":4884},"children":[],"decl_id":null,"docs":" Bad or missing server cookie.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4884},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":116751,"byte_end":116760,"line_start":625,"line_end":625,"column_start":5,"column_end":14},"name":"TsigRcode","qualname":"::base::iana::rcode::TsigRcode","value":"TsigRcode::{NoError, FormErr, ServFail, NXDomain, NotImp, Refused, YXDomain, YXRRSet, NXRRSet, NotAuth, NotZone, BadSig, BadKey, BadTime, BadMode, BadName, BadAlg, BadTrunc, BadCookie, Int}","parent":null,"children":[{"krate":0,"index":4885},{"krate":0,"index":4887},{"krate":0,"index":4889},{"krate":0,"index":4891},{"krate":0,"index":4893},{"krate":0,"index":4895},{"krate":0,"index":4897},{"krate":0,"index":4899},{"krate":0,"index":4901},{"krate":0,"index":4903},{"krate":0,"index":4905},{"krate":0,"index":4907},{"krate":0,"index":4909},{"krate":0,"index":4911},{"krate":0,"index":4913},{"krate":0,"index":4915},{"krate":0,"index":4917},{"krate":0,"index":4919},{"krate":0,"index":4921},{"krate":0,"index":4923}],"decl_id":null,"docs":" Response codes for transaction authentication (TSIG).","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":428},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rtype","qualname":"::base::iana::rtype","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","parent":null,"children":[{"krate":0,"index":4988},{"krate":0,"index":5167},{"krate":0,"index":5166},{"krate":0,"index":5164},{"krate":0,"index":4951},{"krate":0,"index":4956},{"krate":0,"index":4958},{"krate":0,"index":4960},{"krate":0,"index":4963},{"krate":0,"index":4967},{"krate":0,"index":4970},{"krate":0,"index":4972},{"krate":0,"index":4974},{"krate":0,"index":4976},{"krate":0,"index":4977},{"krate":0,"index":4979},{"krate":0,"index":4981},{"krate":0,"index":4983},{"krate":0,"index":4985},{"krate":0,"index":5169},{"krate":0,"index":5172},{"krate":0,"index":5175},{"krate":0,"index":5182},{"krate":0,"index":5186},{"krate":0,"index":5184},{"krate":0,"index":5178},{"krate":0,"index":5180}],"decl_id":null,"docs":" Resource Record (RR) TYPEs\n","sig":null,"attributes":[{"value":"! Resource Record (RR) TYPEs","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":122761,"byte_end":122791,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4989},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":123844,"byte_end":123845,"line_start":28,"line_end":28,"column_start":6,"column_end":7},"name":"A","qualname":"::base::iana::rtype::Rtype::A","value":"Rtype::A","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" A host address.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4991},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":123902,"byte_end":123904,"line_start":31,"line_end":31,"column_start":6,"column_end":8},"name":"Ns","qualname":"::base::iana::rtype::Rtype::Ns","value":"Rtype::Ns","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" An authoritative name server.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4993},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":123990,"byte_end":123992,"line_start":36,"line_end":36,"column_start":6,"column_end":8},"name":"Md","qualname":"::base::iana::rtype::Rtype::Md","value":"Rtype::Md","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" A mail destination.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4995},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":124076,"byte_end":124078,"line_start":41,"line_end":41,"column_start":6,"column_end":8},"name":"Mf","qualname":"::base::iana::rtype::Rtype::Mf","value":"Rtype::Mf","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" A mail forwarder.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4997},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":124138,"byte_end":124143,"line_start":44,"line_end":44,"column_start":6,"column_end":11},"name":"Cname","qualname":"::base::iana::rtype::Rtype::Cname","value":"Rtype::Cname","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" The canonical name for an alias\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4999},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":124214,"byte_end":124217,"line_start":47,"line_end":47,"column_start":6,"column_end":9},"name":"Soa","qualname":"::base::iana::rtype::Rtype::Soa","value":"Rtype::Soa","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" Marks the start of a zone of authority.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5001},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":124301,"byte_end":124303,"line_start":52,"line_end":52,"column_start":6,"column_end":8},"name":"Mb","qualname":"::base::iana::rtype::Rtype::Mb","value":"Rtype::Mb","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" A mailbox domain name.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5003},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":124384,"byte_end":124386,"line_start":57,"line_end":57,"column_start":6,"column_end":8},"name":"Mg","qualname":"::base::iana::rtype::Rtype::Mg","value":"Rtype::Mg","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" A mail group member","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5005},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":124473,"byte_end":124475,"line_start":62,"line_end":62,"column_start":6,"column_end":8},"name":"Mr","qualname":"::base::iana::rtype::Rtype::Mr","value":"Rtype::Mr","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" A mail rename domain name.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5007},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":124563,"byte_end":124567,"line_start":67,"line_end":67,"column_start":6,"column_end":10},"name":"Null","qualname":"::base::iana::rtype::Rtype::Null","value":"Rtype::Null","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" A null resource record.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5009},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":124633,"byte_end":124636,"line_start":70,"line_end":70,"column_start":6,"column_end":9},"name":"Wks","qualname":"::base::iana::rtype::Rtype::Wks","value":"Rtype::Wks","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" A well known service description.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5011},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":124689,"byte_end":124692,"line_start":73,"line_end":73,"column_start":6,"column_end":9},"name":"Ptr","qualname":"::base::iana::rtype::Rtype::Ptr","value":"Rtype::Ptr","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" A domain name pointer.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5013},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":124740,"byte_end":124745,"line_start":76,"line_end":76,"column_start":6,"column_end":11},"name":"Hinfo","qualname":"::base::iana::rtype::Rtype::Hinfo","value":"Rtype::Hinfo","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" Host information.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5015},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":124811,"byte_end":124816,"line_start":79,"line_end":79,"column_start":6,"column_end":11},"name":"Minfo","qualname":"::base::iana::rtype::Rtype::Minfo","value":"Rtype::Minfo","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" Mailbox or mail list information.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5017},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":124863,"byte_end":124865,"line_start":82,"line_end":82,"column_start":6,"column_end":8},"name":"Mx","qualname":"::base::iana::rtype::Rtype::Mx","value":"Rtype::Mx","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" Mail exchange.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5019},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":124908,"byte_end":124911,"line_start":85,"line_end":85,"column_start":6,"column_end":9},"name":"Txt","qualname":"::base::iana::rtype::Rtype::Txt","value":"Rtype::Txt","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" Text strings.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5021},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":124998,"byte_end":125000,"line_start":90,"line_end":90,"column_start":6,"column_end":8},"name":"Rp","qualname":"::base::iana::rtype::Rtype::Rp","value":"Rtype::Rp","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" For Responsible Person.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5023},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":125100,"byte_end":125105,"line_start":95,"line_end":95,"column_start":6,"column_end":11},"name":"Afsdb","qualname":"::base::iana::rtype::Rtype::Afsdb","value":"Rtype::Afsdb","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" For AFS Data Base location.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5025},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":125190,"byte_end":125193,"line_start":100,"line_end":100,"column_start":6,"column_end":9},"name":"X25","qualname":"::base::iana::rtype::Rtype::X25","value":"Rtype::X25","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" For X.25 PSDN address.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5027},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":125271,"byte_end":125275,"line_start":105,"line_end":105,"column_start":6,"column_end":10},"name":"Isdn","qualname":"::base::iana::rtype::Rtype::Isdn","value":"Rtype::Isdn","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" For ISDN address.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5029},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":125354,"byte_end":125356,"line_start":110,"line_end":110,"column_start":6,"column_end":8},"name":"Rt","qualname":"::base::iana::rtype::Rtype::Rt","value":"Rtype::Rt","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" For Route Through.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5031},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":125454,"byte_end":125458,"line_start":115,"line_end":115,"column_start":6,"column_end":10},"name":"Nsap","qualname":"::base::iana::rtype::Rtype::Nsap","value":"Rtype::Nsap","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" For SNAP address, NSAP style A record.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5033},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":125580,"byte_end":125587,"line_start":120,"line_end":120,"column_start":6,"column_end":13},"name":"Nsapptr","qualname":"::base::iana::rtype::Rtype::Nsapptr","value":"Rtype::Nsapptr","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" For domain name pointer, NSAP style.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5035},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":125645,"byte_end":125648,"line_start":123,"line_end":123,"column_start":6,"column_end":9},"name":"Sig","qualname":"::base::iana::rtype::Rtype::Sig","value":"Rtype::Sig","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" For security signature.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5037},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":125696,"byte_end":125699,"line_start":126,"line_end":126,"column_start":6,"column_end":9},"name":"Key","qualname":"::base::iana::rtype::Rtype::Key","value":"Rtype::Key","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" For security key.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5039},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":125791,"byte_end":125793,"line_start":131,"line_end":131,"column_start":6,"column_end":8},"name":"Px","qualname":"::base::iana::rtype::Rtype::Px","value":"Rtype::Px","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" X.400 mail mapping information.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5041},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":125874,"byte_end":125878,"line_start":136,"line_end":136,"column_start":6,"column_end":10},"name":"Gpos","qualname":"::base::iana::rtype::Rtype::Gpos","value":"Rtype::Gpos","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" Geographical position.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5043},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":125957,"byte_end":125961,"line_start":141,"line_end":141,"column_start":6,"column_end":10},"name":"Aaaa","qualname":"::base::iana::rtype::Rtype::Aaaa","value":"Rtype::Aaaa","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" IPv6 address.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5045},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":126045,"byte_end":126048,"line_start":146,"line_end":146,"column_start":6,"column_end":9},"name":"Loc","qualname":"::base::iana::rtype::Rtype::Loc","value":"Rtype::Loc","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" Location information.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5047},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":126162,"byte_end":126165,"line_start":153,"line_end":153,"column_start":6,"column_end":9},"name":"Nxt","qualname":"::base::iana::rtype::Rtype::Nxt","value":"Rtype::Nxt","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" Next domain.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5049},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":126216,"byte_end":126219,"line_start":156,"line_end":156,"column_start":6,"column_end":9},"name":"Eid","qualname":"::base::iana::rtype::Rtype::Eid","value":"Rtype::Eid","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" Endpoint identifier.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5051},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":126265,"byte_end":126271,"line_start":159,"line_end":159,"column_start":6,"column_end":12},"name":"Nimloc","qualname":"::base::iana::rtype::Rtype::Nimloc","value":"Rtype::Nimloc","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" Nimrod locator.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5053},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":126352,"byte_end":126355,"line_start":164,"line_end":164,"column_start":6,"column_end":9},"name":"Srv","qualname":"::base::iana::rtype::Rtype::Srv","value":"Rtype::Srv","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" Server selection.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5055},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":126398,"byte_end":126402,"line_start":167,"line_end":167,"column_start":6,"column_end":10},"name":"Atma","qualname":"::base::iana::rtype::Rtype::Atma","value":"Rtype::Atma","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" ATM address.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5057},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":126513,"byte_end":126518,"line_start":172,"line_end":172,"column_start":6,"column_end":11},"name":"Naptr","qualname":"::base::iana::rtype::Rtype::Naptr","value":"Rtype::Naptr","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" Naming authority pointer.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5059},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":126595,"byte_end":126597,"line_start":177,"line_end":177,"column_start":6,"column_end":8},"name":"Kx","qualname":"::base::iana::rtype::Rtype::Kx","value":"Rtype::Kx","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" Key exchanger.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5061},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":126661,"byte_end":126665,"line_start":182,"line_end":182,"column_start":6,"column_end":10},"name":"Cert","qualname":"::base::iana::rtype::Rtype::Cert","value":"Rtype::Cert","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" CERT","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5063},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":126795,"byte_end":126797,"line_start":189,"line_end":189,"column_start":6,"column_end":8},"name":"A6","qualname":"::base::iana::rtype::Rtype::A6","value":"Rtype::A6","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" A6.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5065},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":126863,"byte_end":126868,"line_start":194,"line_end":194,"column_start":6,"column_end":11},"name":"Dname","qualname":"::base::iana::rtype::Rtype::Dname","value":"Rtype::Dname","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" DNAME.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5067},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":126906,"byte_end":126910,"line_start":197,"line_end":197,"column_start":6,"column_end":10},"name":"Sink","qualname":"::base::iana::rtype::Rtype::Sink","value":"Rtype::Sink","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" SINK.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5069},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":126989,"byte_end":126992,"line_start":202,"line_end":202,"column_start":6,"column_end":9},"name":"Opt","qualname":"::base::iana::rtype::Rtype::Opt","value":"Rtype::Opt","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" OPT.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5071},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":127057,"byte_end":127060,"line_start":207,"line_end":207,"column_start":6,"column_end":9},"name":"Apl","qualname":"::base::iana::rtype::Rtype::Apl","value":"Rtype::Apl","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" APL.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5073},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":127152,"byte_end":127154,"line_start":212,"line_end":212,"column_start":6,"column_end":8},"name":"Ds","qualname":"::base::iana::rtype::Rtype::Ds","value":"Rtype::Ds","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" Delegation signer.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5075},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":127234,"byte_end":127239,"line_start":217,"line_end":217,"column_start":6,"column_end":11},"name":"Sshfp","qualname":"::base::iana::rtype::Rtype::Sshfp","value":"Rtype::Sshfp","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" SSH key fingerprint.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5077},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":127310,"byte_end":127318,"line_start":222,"line_end":222,"column_start":6,"column_end":14},"name":"Ipseckey","qualname":"::base::iana::rtype::Rtype::Ipseckey","value":"Rtype::Ipseckey","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" IPSECKEY","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5079},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":127403,"byte_end":127408,"line_start":227,"line_end":227,"column_start":6,"column_end":11},"name":"Rrsig","qualname":"::base::iana::rtype::Rtype::Rrsig","value":"Rtype::Rrsig","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" RRSIG.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5081},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":127489,"byte_end":127493,"line_start":232,"line_end":232,"column_start":6,"column_end":10},"name":"Nsec","qualname":"::base::iana::rtype::Rtype::Nsec","value":"Rtype::Nsec","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" NSEC.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5083},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":127575,"byte_end":127581,"line_start":237,"line_end":237,"column_start":6,"column_end":12},"name":"Dnskey","qualname":"::base::iana::rtype::Rtype::Dnskey","value":"Rtype::Dnskey","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" DNSKEY.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5085},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":127651,"byte_end":127656,"line_start":242,"line_end":242,"column_start":6,"column_end":11},"name":"Dhcid","qualname":"::base::iana::rtype::Rtype::Dhcid","value":"Rtype::Dhcid","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" DHCID.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5087},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":127724,"byte_end":127729,"line_start":247,"line_end":247,"column_start":6,"column_end":11},"name":"Nsec3","qualname":"::base::iana::rtype::Rtype::Nsec3","value":"Rtype::Nsec3","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" NSEC3","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5089},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":127803,"byte_end":127813,"line_start":252,"line_end":252,"column_start":6,"column_end":16},"name":"Nsec3param","qualname":"::base::iana::rtype::Rtype::Nsec3param","value":"Rtype::Nsec3param","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" NSEC3PARAM.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5091},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":127890,"byte_end":127894,"line_start":257,"line_end":257,"column_start":6,"column_end":10},"name":"Tlsa","qualname":"::base::iana::rtype::Rtype::Tlsa","value":"Rtype::Tlsa","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" TLSA.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5093},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":127993,"byte_end":127999,"line_start":262,"line_end":262,"column_start":6,"column_end":12},"name":"Smimea","qualname":"::base::iana::rtype::Rtype::Smimea","value":"Rtype::Smimea","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" S/MIME cert association.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5095},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":128086,"byte_end":128089,"line_start":267,"line_end":267,"column_start":6,"column_end":9},"name":"Hip","qualname":"::base::iana::rtype::Rtype::Hip","value":"Rtype::Hip","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" Host Identity Protocol.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5097},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":128126,"byte_end":128131,"line_start":270,"line_end":270,"column_start":6,"column_end":11},"name":"Ninfo","qualname":"::base::iana::rtype::Rtype::Ninfo","value":"Rtype::Ninfo","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" NINFO.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5099},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":128169,"byte_end":128173,"line_start":273,"line_end":273,"column_start":6,"column_end":10},"name":"Rkey","qualname":"::base::iana::rtype::Rtype::Rkey","value":"Rtype::Rkey","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" RKEY.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5101},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":128222,"byte_end":128228,"line_start":276,"line_end":276,"column_start":6,"column_end":12},"name":"Talink","qualname":"::base::iana::rtype::Rtype::Talink","value":"Rtype::Talink","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" Trust Anchor Link\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5103},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":128301,"byte_end":128304,"line_start":281,"line_end":281,"column_start":6,"column_end":9},"name":"Cds","qualname":"::base::iana::rtype::Rtype::Cds","value":"Rtype::Cds","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" Child DS.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5105},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":128407,"byte_end":128414,"line_start":286,"line_end":286,"column_start":6,"column_end":13},"name":"Cdnskey","qualname":"::base::iana::rtype::Rtype::Cdnskey","value":"Rtype::Cdnskey","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" DNSKEY(s) the child wants reflected in DS.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5107},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":128513,"byte_end":128523,"line_start":291,"line_end":291,"column_start":6,"column_end":16},"name":"Openpgpkey","qualname":"::base::iana::rtype::Rtype::Openpgpkey","value":"Rtype::Openpgpkey","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" OpenPGP key.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5109},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":128623,"byte_end":128628,"line_start":296,"line_end":296,"column_start":6,"column_end":11},"name":"Csync","qualname":"::base::iana::rtype::Rtype::Csync","value":"Rtype::Csync","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" Child-to-parent synchronization.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5111},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":128740,"byte_end":128746,"line_start":301,"line_end":301,"column_start":6,"column_end":12},"name":"Zonemd","qualname":"::base::iana::rtype::Rtype::Zonemd","value":"Rtype::Zonemd","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" Message digest for DNS zone.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5113},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":128810,"byte_end":128813,"line_start":306,"line_end":306,"column_start":6,"column_end":9},"name":"Spf","qualname":"::base::iana::rtype::Rtype::Spf","value":"Rtype::Spf","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" SPF.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5115},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":128881,"byte_end":128886,"line_start":311,"line_end":311,"column_start":6,"column_end":11},"name":"Uinfo","qualname":"::base::iana::rtype::Rtype::Uinfo","value":"Rtype::Uinfo","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" UINFO.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5117},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":128959,"byte_end":128962,"line_start":316,"line_end":316,"column_start":6,"column_end":9},"name":"Uid","qualname":"::base::iana::rtype::Rtype::Uid","value":"Rtype::Uid","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" UID.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5119},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":129029,"byte_end":129032,"line_start":321,"line_end":321,"column_start":6,"column_end":9},"name":"Gid","qualname":"::base::iana::rtype::Rtype::Gid","value":"Rtype::Gid","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" GID.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5121},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":129102,"byte_end":129108,"line_start":326,"line_end":326,"column_start":6,"column_end":12},"name":"Unspec","qualname":"::base::iana::rtype::Rtype::Unspec","value":"Rtype::Unspec","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" UNSPEC.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5123},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":129177,"byte_end":129180,"line_start":331,"line_end":331,"column_start":6,"column_end":9},"name":"Nid","qualname":"::base::iana::rtype::Rtype::Nid","value":"Rtype::Nid","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" NID.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5125},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":129246,"byte_end":129249,"line_start":336,"line_end":336,"column_start":6,"column_end":9},"name":"L32","qualname":"::base::iana::rtype::Rtype::L32","value":"Rtype::L32","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" L32.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5127},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":129315,"byte_end":129318,"line_start":341,"line_end":341,"column_start":6,"column_end":9},"name":"L64","qualname":"::base::iana::rtype::Rtype::L64","value":"Rtype::L64","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" L64.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5129},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":129383,"byte_end":129385,"line_start":346,"line_end":346,"column_start":6,"column_end":8},"name":"Lp","qualname":"::base::iana::rtype::Rtype::Lp","value":"Rtype::Lp","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" LP.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5131},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":129464,"byte_end":129469,"line_start":351,"line_end":351,"column_start":6,"column_end":11},"name":"Eui48","qualname":"::base::iana::rtype::Rtype::Eui48","value":"Rtype::Eui48","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" An EUI-48 address.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5133},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":129551,"byte_end":129556,"line_start":356,"line_end":356,"column_start":6,"column_end":11},"name":"Eui64","qualname":"::base::iana::rtype::Rtype::Eui64","value":"Rtype::Eui64","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" An EUI-64 address.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5135},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":129640,"byte_end":129644,"line_start":361,"line_end":361,"column_start":6,"column_end":10},"name":"Tkey","qualname":"::base::iana::rtype::Rtype::Tkey","value":"Rtype::Tkey","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" Transaction key.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5137},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":129733,"byte_end":129737,"line_start":366,"line_end":366,"column_start":6,"column_end":10},"name":"Tsig","qualname":"::base::iana::rtype::Rtype::Tsig","value":"Rtype::Tsig","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" Transaction signature.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5139},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":129821,"byte_end":129825,"line_start":371,"line_end":371,"column_start":6,"column_end":10},"name":"Ixfr","qualname":"::base::iana::rtype::Rtype::Ixfr","value":"Rtype::Ixfr","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" Incremental transfer.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5141},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":129929,"byte_end":129933,"line_start":376,"line_end":376,"column_start":6,"column_end":10},"name":"Axfr","qualname":"::base::iana::rtype::Rtype::Axfr","value":"Rtype::Axfr","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" Transfer of entire zone.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5143},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":130002,"byte_end":130007,"line_start":379,"line_end":379,"column_start":6,"column_end":11},"name":"Mailb","qualname":"::base::iana::rtype::Rtype::Mailb","value":"Rtype::Mailb","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" Mailbox-related RRs (MB, MG, or MR).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5145},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":130095,"byte_end":130100,"line_start":384,"line_end":384,"column_start":6,"column_end":11},"name":"Maila","qualname":"::base::iana::rtype::Rtype::Maila","value":"Rtype::Maila","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" Mail agent RRS.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5147},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":130234,"byte_end":130237,"line_start":389,"line_end":389,"column_start":6,"column_end":9},"name":"Any","qualname":"::base::iana::rtype::Rtype::Any","value":"Rtype::Any","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" A request for all records the server/cache has available.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5149},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":130303,"byte_end":130306,"line_start":394,"line_end":394,"column_start":6,"column_end":9},"name":"Uri","qualname":"::base::iana::rtype::Rtype::Uri","value":"Rtype::Uri","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" URI.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5151},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":130404,"byte_end":130407,"line_start":399,"line_end":399,"column_start":6,"column_end":9},"name":"Caa","qualname":"::base::iana::rtype::Rtype::Caa","value":"Rtype::Caa","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" Certification Authority Restriction.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5153},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":130474,"byte_end":130477,"line_start":402,"line_end":402,"column_start":6,"column_end":9},"name":"Avc","qualname":"::base::iana::rtype::Rtype::Avc","value":"Rtype::Avc","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" Application visibility and control.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5155},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":130583,"byte_end":130586,"line_start":407,"line_end":407,"column_start":6,"column_end":9},"name":"Doa","qualname":"::base::iana::rtype::Rtype::Doa","value":"Rtype::Doa","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" Digital Object Architecture","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5157},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":130643,"byte_end":130645,"line_start":410,"line_end":410,"column_start":6,"column_end":8},"name":"Ta","qualname":"::base::iana::rtype::Rtype::Ta","value":"Rtype::Ta","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" DNSSEC trust authorities.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5159},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":130735,"byte_end":130738,"line_start":415,"line_end":415,"column_start":6,"column_end":9},"name":"Dlv","qualname":"::base::iana::rtype::Rtype::Dlv","value":"Rtype::Dlv","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" DNSSEC lookaside validation.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4988},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rtype.rs","byte_start":123802,"byte_end":123807,"line_start":25,"line_end":25,"column_start":5,"column_end":10},"name":"Rtype","qualname":"::base::iana::rtype::Rtype","value":"Rtype::{A, Ns, Md, Mf, Cname, Soa, Mb, Mg, Mr, Null, Wks, Ptr, Hinfo, Minfo, Mx, Txt, Rp, Afsdb, X25, Isdn, Rt, Nsap, Nsapptr, Sig, Key, Px, Gpos, Aaaa, Loc, Nxt, Eid, Nimloc, Srv, Atma, Naptr, Kx, Cert, A6, Dname, Sink, Opt, Apl, Ds, Sshfp, Ipseckey, Rrsig, Nsec, Dnskey, Dhcid, Nsec3, Nsec3param, Tlsa, Smimea, Hip, Ninfo, Rkey, Talink, Cds, Cdnskey, Openpgpkey, Csync, Zonemd, Spf, Uinfo, Uid, Gid, Unspec, Nid, L32, L64, Lp, Eui48, Eui64, Tkey, Tsig, Ixfr, Axfr, Mailb, Maila, Any, Uri, Caa, Avc, Doa, Ta, Dlv, Int}","parent":null,"children":[{"krate":0,"index":4989},{"krate":0,"index":4991},{"krate":0,"index":4993},{"krate":0,"index":4995},{"krate":0,"index":4997},{"krate":0,"index":4999},{"krate":0,"index":5001},{"krate":0,"index":5003},{"krate":0,"index":5005},{"krate":0,"index":5007},{"krate":0,"index":5009},{"krate":0,"index":5011},{"krate":0,"index":5013},{"krate":0,"index":5015},{"krate":0,"index":5017},{"krate":0,"index":5019},{"krate":0,"index":5021},{"krate":0,"index":5023},{"krate":0,"index":5025},{"krate":0,"index":5027},{"krate":0,"index":5029},{"krate":0,"index":5031},{"krate":0,"index":5033},{"krate":0,"index":5035},{"krate":0,"index":5037},{"krate":0,"index":5039},{"krate":0,"index":5041},{"krate":0,"index":5043},{"krate":0,"index":5045},{"krate":0,"index":5047},{"krate":0,"index":5049},{"krate":0,"index":5051},{"krate":0,"index":5053},{"krate":0,"index":5055},{"krate":0,"index":5057},{"krate":0,"index":5059},{"krate":0,"index":5061},{"krate":0,"index":5063},{"krate":0,"index":5065},{"krate":0,"index":5067},{"krate":0,"index":5069},{"krate":0,"index":5071},{"krate":0,"index":5073},{"krate":0,"index":5075},{"krate":0,"index":5077},{"krate":0,"index":5079},{"krate":0,"index":5081},{"krate":0,"index":5083},{"krate":0,"index":5085},{"krate":0,"index":5087},{"krate":0,"index":5089},{"krate":0,"index":5091},{"krate":0,"index":5093},{"krate":0,"index":5095},{"krate":0,"index":5097},{"krate":0,"index":5099},{"krate":0,"index":5101},{"krate":0,"index":5103},{"krate":0,"index":5105},{"krate":0,"index":5107},{"krate":0,"index":5109},{"krate":0,"index":5111},{"krate":0,"index":5113},{"krate":0,"index":5115},{"krate":0,"index":5117},{"krate":0,"index":5119},{"krate":0,"index":5121},{"krate":0,"index":5123},{"krate":0,"index":5125},{"krate":0,"index":5127},{"krate":0,"index":5129},{"krate":0,"index":5131},{"krate":0,"index":5133},{"krate":0,"index":5135},{"krate":0,"index":5137},{"krate":0,"index":5139},{"krate":0,"index":5141},{"krate":0,"index":5143},{"krate":0,"index":5145},{"krate":0,"index":5147},{"krate":0,"index":5149},{"krate":0,"index":5151},{"krate":0,"index":5153},{"krate":0,"index":5155},{"krate":0,"index":5157},{"krate":0,"index":5159},{"krate":0,"index":5161}],"decl_id":null,"docs":" Resource Record Types.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":429},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/secalg.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"secalg","qualname":"::base::iana::secalg","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/secalg.rs","parent":null,"children":[{"krate":0,"index":5225},{"krate":0,"index":5266},{"krate":0,"index":5265},{"krate":0,"index":5263},{"krate":0,"index":5188},{"krate":0,"index":5193},{"krate":0,"index":5195},{"krate":0,"index":5197},{"krate":0,"index":5200},{"krate":0,"index":5204},{"krate":0,"index":5207},{"krate":0,"index":5209},{"krate":0,"index":5211},{"krate":0,"index":5213},{"krate":0,"index":5214},{"krate":0,"index":5216},{"krate":0,"index":5218},{"krate":0,"index":5220},{"krate":0,"index":5222},{"krate":0,"index":5268},{"krate":0,"index":5272},{"krate":0,"index":5275},{"krate":0,"index":5282},{"krate":0,"index":5286},{"krate":0,"index":5284},{"krate":0,"index":5278},{"krate":0,"index":5280}],"decl_id":null,"docs":" DNSSEC Algorithm Numbers\n","sig":null,"attributes":[{"value":"! DNSSEC Algorithm Numbers","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/secalg.rs","byte_start":130847,"byte_end":130875,"line_start":1,"line_end":1,"column_start":1,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5226},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/secalg.rs","byte_start":131576,"byte_end":131584,"line_start":22,"line_end":22,"column_start":6,"column_end":14},"name":"DeleteDs","qualname":"::base::iana::secalg::SecAlg::DeleteDs","value":"SecAlg::DeleteDs","parent":{"krate":0,"index":5225},"children":[],"decl_id":null,"docs":" Delete DS","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5228},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/secalg.rs","byte_start":131937,"byte_end":131943,"line_start":32,"line_end":32,"column_start":6,"column_end":12},"name":"RsaMd5","qualname":"::base::iana::secalg::SecAlg::RsaMd5","value":"SecAlg::RsaMd5","parent":{"krate":0,"index":5225},"children":[],"decl_id":null,"docs":" RSA/MD5","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5230},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/secalg.rs","byte_start":132195,"byte_end":132197,"line_start":39,"line_end":39,"column_start":6,"column_end":8},"name":"Dh","qualname":"::base::iana::secalg::SecAlg::Dh","value":"SecAlg::Dh","parent":{"krate":0,"index":5225},"children":[],"decl_id":null,"docs":" Diffie-Hellman","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5232},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/secalg.rs","byte_start":132362,"byte_end":132365,"line_start":45,"line_end":45,"column_start":6,"column_end":9},"name":"Dsa","qualname":"::base::iana::secalg::SecAlg::Dsa","value":"SecAlg::Dsa","parent":{"krate":0,"index":5225},"children":[],"decl_id":null,"docs":" DSA/SHA1","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5234},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/secalg.rs","byte_start":132584,"byte_end":132591,"line_start":52,"line_end":52,"column_start":6,"column_end":13},"name":"RsaSha1","qualname":"::base::iana::secalg::SecAlg::RsaSha1","value":"SecAlg::RsaSha1","parent":{"krate":0,"index":5225},"children":[],"decl_id":null,"docs":" RSA/SHA-1","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5236},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/secalg.rs","byte_start":132718,"byte_end":132730,"line_start":57,"line_end":57,"column_start":6,"column_end":18},"name":"DsaNsec3Sha1","qualname":"::base::iana::secalg::SecAlg::DsaNsec3Sha1","value":"SecAlg::DsaNsec3Sha1","parent":{"krate":0,"index":5225},"children":[],"decl_id":null,"docs":" DSA-NSEC3-SHA1","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5238},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/secalg.rs","byte_start":132872,"byte_end":132888,"line_start":62,"line_end":62,"column_start":6,"column_end":22},"name":"RsaSha1Nsec3Sha1","qualname":"::base::iana::secalg::SecAlg::RsaSha1Nsec3Sha1","value":"SecAlg::RsaSha1Nsec3Sha1","parent":{"krate":0,"index":5225},"children":[],"decl_id":null,"docs":" RSASHA1-NSEC3-SHA1","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5240},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/secalg.rs","byte_start":133047,"byte_end":133056,"line_start":68,"line_end":68,"column_start":6,"column_end":15},"name":"RsaSha256","qualname":"::base::iana::secalg::SecAlg::RsaSha256","value":"SecAlg::RsaSha256","parent":{"krate":0,"index":5225},"children":[],"decl_id":null,"docs":" RSA/SHA-256","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5242},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/secalg.rs","byte_start":133206,"byte_end":133215,"line_start":74,"line_end":74,"column_start":6,"column_end":15},"name":"RsaSha512","qualname":"::base::iana::secalg::SecAlg::RsaSha512","value":"SecAlg::RsaSha512","parent":{"krate":0,"index":5225},"children":[],"decl_id":null,"docs":" RSA/SHA-512","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5244},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/secalg.rs","byte_start":133372,"byte_end":133379,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"name":"EccGost","qualname":"::base::iana::secalg::SecAlg::EccGost","value":"SecAlg::EccGost","parent":{"krate":0,"index":5225},"children":[],"decl_id":null,"docs":" GOST R 34.10-2001","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5246},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/secalg.rs","byte_start":133548,"byte_end":133563,"line_start":86,"line_end":86,"column_start":6,"column_end":21},"name":"EcdsaP256Sha256","qualname":"::base::iana::secalg::SecAlg::EcdsaP256Sha256","value":"SecAlg::EcdsaP256Sha256","parent":{"krate":0,"index":5225},"children":[],"decl_id":null,"docs":" ECDSA Curve P-256 with SHA-256","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5248},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/secalg.rs","byte_start":133739,"byte_end":133754,"line_start":92,"line_end":92,"column_start":6,"column_end":21},"name":"EcdsaP384Sha384","qualname":"::base::iana::secalg::SecAlg::EcdsaP384Sha384","value":"SecAlg::EcdsaP384Sha384","parent":{"krate":0,"index":5225},"children":[],"decl_id":null,"docs":" ECDSA Curve P-384 with SHA-384","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5250},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/secalg.rs","byte_start":133861,"byte_end":133868,"line_start":97,"line_end":97,"column_start":6,"column_end":13},"name":"Ed25519","qualname":"::base::iana::secalg::SecAlg::Ed25519","value":"SecAlg::Ed25519","parent":{"krate":0,"index":5225},"children":[],"decl_id":null,"docs":" ED25519","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5252},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/secalg.rs","byte_start":133965,"byte_end":133970,"line_start":102,"line_end":102,"column_start":6,"column_end":11},"name":"Ed448","qualname":"::base::iana::secalg::SecAlg::Ed448","value":"SecAlg::Ed448","parent":{"krate":0,"index":5225},"children":[],"decl_id":null,"docs":" ED448","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5254},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/secalg.rs","byte_start":134081,"byte_end":134089,"line_start":107,"line_end":107,"column_start":6,"column_end":14},"name":"Indirect","qualname":"::base::iana::secalg::SecAlg::Indirect","value":"SecAlg::Indirect","parent":{"krate":0,"index":5225},"children":[],"decl_id":null,"docs":" Reserved for Indirect Keys","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5256},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/secalg.rs","byte_start":134225,"byte_end":134235,"line_start":112,"line_end":112,"column_start":6,"column_end":16},"name":"PrivateDns","qualname":"::base::iana::secalg::SecAlg::PrivateDns","value":"SecAlg::PrivateDns","parent":{"krate":0,"index":5225},"children":[],"decl_id":null,"docs":" A private algorithm identified by a domain name.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5258},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/secalg.rs","byte_start":134369,"byte_end":134379,"line_start":117,"line_end":117,"column_start":6,"column_end":16},"name":"PrivateOid","qualname":"::base::iana::secalg::SecAlg::PrivateOid","value":"SecAlg::PrivateOid","parent":{"krate":0,"index":5225},"children":[],"decl_id":null,"docs":" A private algorithm identified by a ISO OID.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5225},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/secalg.rs","byte_start":131316,"byte_end":131322,"line_start":15,"line_end":15,"column_start":5,"column_end":11},"name":"SecAlg","qualname":"::base::iana::secalg::SecAlg","value":"SecAlg::{DeleteDs, RsaMd5, Dh, Dsa, RsaSha1, DsaNsec3Sha1, RsaSha1Nsec3Sha1, RsaSha256, RsaSha512, EccGost, EcdsaP256Sha256, EcdsaP384Sha384, Ed25519, Ed448, Indirect, PrivateDns, PrivateOid, Int}","parent":null,"children":[{"krate":0,"index":5226},{"krate":0,"index":5228},{"krate":0,"index":5230},{"krate":0,"index":5232},{"krate":0,"index":5234},{"krate":0,"index":5236},{"krate":0,"index":5238},{"krate":0,"index":5240},{"krate":0,"index":5242},{"krate":0,"index":5244},{"krate":0,"index":5246},{"krate":0,"index":5248},{"krate":0,"index":5250},{"krate":0,"index":5252},{"krate":0,"index":5254},{"krate":0,"index":5256},{"krate":0,"index":5258},{"krate":0,"index":5260}],"decl_id":null,"docs":" Security Algorithm Numbers.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":430},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"message","qualname":"::base::message","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","parent":null,"children":[{"krate":0,"index":431},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":439},{"krate":0,"index":443},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":454},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":463},{"krate":0,"index":5288},{"krate":0,"index":5293},{"krate":0,"index":5291},{"krate":0,"index":464},{"krate":0,"index":473},{"krate":0,"index":481},{"krate":0,"index":493},{"krate":0,"index":519},{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":5296},{"krate":0,"index":5305},{"krate":0,"index":5303},{"krate":0,"index":5300},{"krate":0,"index":532},{"krate":0,"index":538},{"krate":0,"index":542},{"krate":0,"index":5308},{"krate":0,"index":5326},{"krate":0,"index":5325},{"krate":0,"index":5323},{"krate":0,"index":5320},{"krate":0,"index":5321},{"krate":0,"index":5317},{"krate":0,"index":5318},{"krate":0,"index":5315},{"krate":0,"index":546},{"krate":0,"index":5328},{"krate":0,"index":5338},{"krate":0,"index":5336},{"krate":0,"index":5333},{"krate":0,"index":550},{"krate":0,"index":560},{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":5341},{"krate":0,"index":5354},{"krate":0,"index":5351},{"krate":0,"index":5347},{"krate":0,"index":572},{"krate":0,"index":578},{"krate":0,"index":5358},{"krate":0,"index":5367},{"krate":0,"index":5366},{"krate":0,"index":5364},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":587},{"krate":0,"index":589}],"decl_id":null,"docs":" Accessing existing DNS messages.","sig":null,"attributes":[{"value":"! Accessing existing DNS messages.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":134469,"byte_end":134505,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":134506,"byte_end":134509,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module defines a number of types for processing the content of a DNS","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":134510,"byte_end":134587,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"! message in wire format. Because many components of the message are of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":134588,"byte_end":134661,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"! varying length, this can only be done iteratively. The type [`Message`]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":134662,"byte_end":134737,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"! wraps an octets sequence containing a complete message. It provides access","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":134738,"byte_end":134816,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"! to the four sections of the message via additional types.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":134817,"byte_end":134878,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":134879,"byte_end":134882,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! For details, see the [`Message`] type.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":134883,"byte_end":134925,"line_start":9,"line_end":9,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":134926,"byte_end":134929,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! [`Message`]: struct.Message.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":134930,"byte_end":134966,"line_start":11,"line_end":11,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5288},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":142090,"byte_end":142097,"line_start":155,"line_end":155,"column_start":12,"column_end":19},"name":"Message","qualname":"::base::message::Message","value":"Message {  }","parent":null,"children":[{"krate":0,"index":5290}],"decl_id":null,"docs":" A DNS message.","sig":null,"attributes":[{"value":"/ A DNS message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":135572,"byte_end":135590,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":135591,"byte_end":135594,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This type wraps an octets sequence containing the complete wire-format DNS","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":135595,"byte_end":135673,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ message and allows access to the various components of the message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":135674,"byte_end":135745,"line_start":34,"line_end":34,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":135746,"byte_end":135749,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ You create a message by passing an octets sequence to the [`from_octets`]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":135750,"byte_end":135827,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ associate function which does some basic sanity checks and, if they","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":135828,"byte_end":135899,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/ succeed, returns a message for the sequence. All further parsing happens","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":135900,"byte_end":135976,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ lazily when you access more of the message. This means that a message is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":135977,"byte_end":136053,"line_start":39,"line_end":39,"column_start":1,"column_end":77}},{"value":"/ not necessarily well-formatted and further parsing may fail later on.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":136054,"byte_end":136127,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":136128,"byte_end":136131,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Section 4 of [RFC 1035] defines DNS messages as being divded into five","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":136132,"byte_end":136206,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ sections named header, question, answer, authority, and additional.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":136207,"byte_end":136278,"line_start":43,"line_end":43,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":136279,"byte_end":136282,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ The header section is of a fixed sized and can be accessed at any time","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":136283,"byte_end":136357,"line_start":45,"line_end":45,"column_start":1,"column_end":75}},{"value":"/ through the methods given under [Header Section]. Most likely, you will","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":136358,"byte_end":136433,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/ be interested in the first part of the header which is ","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":136434,"byte_end":136493,"line_start":47,"line_end":47,"column_start":1,"column_end":60}},{"value":"/ returned by the [`header`] method.  The second part of the header","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":136494,"byte_end":136563,"line_start":48,"line_end":48,"column_start":1,"column_end":70}},{"value":"/ section contains the number of entries in the following four sections","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":136564,"byte_end":136637,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/ and is of less interest as there are more sophisticated ways of accessing","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":136638,"byte_end":136715,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/ these sections. If you do care, you can get access through","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":136716,"byte_end":136778,"line_start":51,"line_end":51,"column_start":1,"column_end":63}},{"value":"/ [`header_counts`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":136779,"byte_end":136801,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":136802,"byte_end":136805,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ The meaning of the next four sections depends on the type of message as","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":136806,"byte_end":136881,"line_start":54,"line_end":54,"column_start":1,"column_end":76}},{"value":"/ described by the [opcode] field of the header. Since the most common","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":136882,"byte_end":136954,"line_start":55,"line_end":55,"column_start":1,"column_end":73}},{"value":"/ type is a query, the sections are named after their function in this type","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":136955,"byte_end":137032,"line_start":56,"line_end":56,"column_start":1,"column_end":78}},{"value":"/ and the following description will focus on it.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":137033,"byte_end":137084,"line_start":57,"line_end":57,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":137085,"byte_end":137088,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ The question section contains what was asked of the DNS by a query. It","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":137089,"byte_end":137163,"line_start":59,"line_end":59,"column_start":1,"column_end":75}},{"value":"/ contains a number of questions that consist of a domain name, a record","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":137164,"byte_end":137238,"line_start":60,"line_end":60,"column_start":1,"column_end":75}},{"value":"/ type, and class. A query asks for all records of the given record type","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":137239,"byte_end":137313,"line_start":61,"line_end":61,"column_start":1,"column_end":75}},{"value":"/ that are owned by the domain name within the class. In queries, there will","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":137314,"byte_end":137392,"line_start":62,"line_end":62,"column_start":1,"column_end":79}},{"value":"/ be exactly one question. With other opcodes, there may be multiple","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":137393,"byte_end":137463,"line_start":63,"line_end":63,"column_start":1,"column_end":71}},{"value":"/ questions.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":137464,"byte_end":137478,"line_start":64,"line_end":64,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":137479,"byte_end":137482,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ You can acquire an iterator over the questions through the [`question`]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":137483,"byte_end":137558,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ method. It returns a [`QuestionSection`] value that is an iterator over","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":137559,"byte_end":137634,"line_start":67,"line_end":67,"column_start":1,"column_end":76}},{"value":"/ questions. Since a single question is such a common case, there is a ","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":137635,"byte_end":137708,"line_start":68,"line_end":68,"column_start":1,"column_end":74}},{"value":"/ convenience method [`first_question`] that returns the first question","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":137709,"byte_end":137782,"line_start":69,"line_end":69,"column_start":1,"column_end":74}},{"value":"/ only.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":137783,"byte_end":137792,"line_start":70,"line_end":70,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":137793,"byte_end":137796,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ The following three section all contain DNS resource records. In ","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":137797,"byte_end":137866,"line_start":72,"line_end":72,"column_start":1,"column_end":70}},{"value":"/ queries, they are empty in a request and may or may not contain records","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":137867,"byte_end":137942,"line_start":73,"line_end":73,"column_start":1,"column_end":76}},{"value":"/ in a response. The *answer* section contains all the records that answer","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":137943,"byte_end":138019,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ the given question. The *authority* section contains records declaring","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":138020,"byte_end":138094,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/ which name server provided authoritative information for the question,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":138095,"byte_end":138169,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/ and the *additional* section can contain records that the name server","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":138170,"byte_end":138243,"line_start":77,"line_end":77,"column_start":1,"column_end":74}},{"value":"/ thought might be useful for processing the question. For instance, if you","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":138244,"byte_end":138321,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/ trying to find out the mail server of a domain by asking for MX records,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":138322,"byte_end":138398,"line_start":79,"line_end":79,"column_start":1,"column_end":77}},{"value":"/ you likely also want the IP addresses for the server, so the name server","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":138399,"byte_end":138475,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ may include these right away and free of charge.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":138476,"byte_end":138528,"line_start":81,"line_end":81,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":138529,"byte_end":138532,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ There are functions to access all three sections directly: [`answer`],","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":138533,"byte_end":138607,"line_start":83,"line_end":83,"column_start":1,"column_end":75}},{"value":"/ [`authority`], and [`additional`]. Each method returns a value of type ","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":138608,"byte_end":138683,"line_start":84,"line_end":84,"column_start":1,"column_end":76}},{"value":"/ [RecordSection] which acts as an iterator over the records in the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":138684,"byte_end":138753,"line_start":85,"line_end":85,"column_start":1,"column_end":70}},{"value":"/ section. Since there are no pointers to where the later sections start,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":138754,"byte_end":138829,"line_start":86,"line_end":86,"column_start":1,"column_end":76}},{"value":"/ accessing them directly means iterating over the previous sections. This","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":138830,"byte_end":138906,"line_start":87,"line_end":87,"column_start":1,"column_end":77}},{"value":"/ is why it is more efficitent to call [`RecordSection::next_section`] to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":138907,"byte_end":138982,"line_start":88,"line_end":88,"column_start":1,"column_end":76}},{"value":"/ progress to a later section. Alternatively, you can use the message’s","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":138983,"byte_end":139058,"line_start":89,"line_end":89,"column_start":1,"column_end":74}},{"value":"/ [`sections`] method that gives you all four sections at once with the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":139059,"byte_end":139132,"line_start":90,"line_end":90,"column_start":1,"column_end":74}},{"value":"/ minimal amount of iterating necessary.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":139133,"byte_end":139175,"line_start":91,"line_end":91,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":139176,"byte_end":139179,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ When iterating over the record section, you will receive values of type","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":139180,"byte_end":139255,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/ [`ParsedRecord`], an intermediary type that only parsed the parts common","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":139256,"byte_end":139332,"line_start":94,"line_end":94,"column_start":1,"column_end":77}},{"value":"/ to all records. In order to access the data of the record, you will want","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":139333,"byte_end":139409,"line_start":95,"line_end":95,"column_start":1,"column_end":77}},{"value":"/ to convert it into a [`Record`] which is generic over the actual record","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":139410,"byte_end":139485,"line_start":96,"line_end":96,"column_start":1,"column_end":76}},{"value":"/ type data. This can be done via [`ParsedRecord::into_record`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":139486,"byte_end":139552,"line_start":97,"line_end":97,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":139553,"byte_end":139556,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ Alternatively, you can trade the record section for one that only returns","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":139557,"byte_end":139634,"line_start":99,"line_end":99,"column_start":1,"column_end":78}},{"value":"/ the types you are interested in via the [`RecordSection::limit_to`]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":139635,"byte_end":139706,"line_start":100,"line_end":100,"column_start":1,"column_end":72}},{"value":"/ method. The iterator returned by that method will quietly skip over all","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":139707,"byte_end":139782,"line_start":101,"line_end":101,"column_start":1,"column_end":76}},{"value":"/ records that aren’t of the type you are interested in.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":139783,"byte_end":139843,"line_start":102,"line_end":102,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":139844,"byte_end":139847,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ So, if you want to iterate over the MX records in the answer section, you","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":139848,"byte_end":139925,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/ would do something like this:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":139926,"byte_end":139959,"line_start":105,"line_end":105,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":139960,"byte_end":139963,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":139964,"byte_end":139971,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/ use domain::base::Message;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":139972,"byte_end":140002,"line_start":108,"line_end":108,"column_start":1,"column_end":31}},{"value":"/ use domain::rdata::Mx;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":140003,"byte_end":140029,"line_start":109,"line_end":109,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":140030,"byte_end":140033,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ # let octets = vec![0; 12];","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":140034,"byte_end":140065,"line_start":111,"line_end":111,"column_start":1,"column_end":32}},{"value":"/ let msg = Message::from_octets(octets).unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":140066,"byte_end":140118,"line_start":112,"line_end":112,"column_start":1,"column_end":53}},{"value":"/ for record in msg.answer().unwrap().limit_to::<Mx<_>>() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":140119,"byte_end":140180,"line_start":113,"line_end":113,"column_start":1,"column_end":62}},{"value":"/     if let Ok(record) = record {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":140181,"byte_end":140217,"line_start":114,"line_end":114,"column_start":1,"column_end":37}},{"value":"/         // Do something with the record ...","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":140218,"byte_end":140265,"line_start":115,"line_end":115,"column_start":1,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":140266,"byte_end":140275,"line_start":116,"line_end":116,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":140276,"byte_end":140281,"line_start":117,"line_end":117,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":140282,"byte_end":140289,"line_start":118,"line_end":118,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":140290,"byte_end":140293,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ The `limit_to` method takes the record type as a type argument. Many","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":140294,"byte_end":140366,"line_start":120,"line_end":120,"column_start":1,"column_end":73}},{"value":"/ record types, like [`Mx`], are generic over octet sequences but the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":140367,"byte_end":140438,"line_start":121,"line_end":121,"column_start":1,"column_end":72}},{"value":"/ compiler generally can figure out the concrete type itself, so in most","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":140439,"byte_end":140513,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/ cases you get away with the underscore there.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":140514,"byte_end":140563,"line_start":123,"line_end":123,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":140564,"byte_end":140567,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ Note how the iterator doesn’t actually return records but results of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":140568,"byte_end":140642,"line_start":125,"line_end":125,"column_start":1,"column_end":73}},{"value":"/ records and parse errors. This is because only now can it check whether","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":140643,"byte_end":140718,"line_start":126,"line_end":126,"column_start":1,"column_end":76}},{"value":"/ the record is actually properly formatted. An error signals that something","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":140719,"byte_end":140797,"line_start":127,"line_end":127,"column_start":1,"column_end":79}},{"value":"/ went wrong while parsing. If only the record data is broken, the message","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":140798,"byte_end":140874,"line_start":128,"line_end":128,"column_start":1,"column_end":77}},{"value":"/ remains useful and parsing can continue with the next record. If the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":140875,"byte_end":140947,"line_start":129,"line_end":129,"column_start":1,"column_end":73}},{"value":"/ message is fully broken, the next iteration will return `None` to signal","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":140948,"byte_end":141024,"line_start":130,"line_end":130,"column_start":1,"column_end":77}},{"value":"/ that.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":141025,"byte_end":141034,"line_start":131,"line_end":131,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":141035,"byte_end":141038,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ [`additional`]: #method.additional","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":141039,"byte_end":141077,"line_start":133,"line_end":133,"column_start":1,"column_end":39}},{"value":"/ [`answer`]: #method.answer","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":141078,"byte_end":141108,"line_start":134,"line_end":134,"column_start":1,"column_end":31}},{"value":"/ [`authority`]: #method.authority","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":141109,"byte_end":141145,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/ [`first_question`]: #method.first_question","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":141146,"byte_end":141192,"line_start":136,"line_end":136,"column_start":1,"column_end":47}},{"value":"/ [`from_octets`]: #method.from_octets","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":141193,"byte_end":141233,"line_start":137,"line_end":137,"column_start":1,"column_end":41}},{"value":"/ [`header`]: #method.header","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":141234,"byte_end":141264,"line_start":138,"line_end":138,"column_start":1,"column_end":31}},{"value":"/ [`header_counts`]: #method.header_counts","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":141265,"byte_end":141309,"line_start":139,"line_end":139,"column_start":1,"column_end":45}},{"value":"/ [`question`]: #method.question","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":141310,"byte_end":141344,"line_start":140,"line_end":140,"column_start":1,"column_end":35}},{"value":"/ [`sections`]: #method.sections","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":141345,"byte_end":141379,"line_start":141,"line_end":141,"column_start":1,"column_end":35}},{"value":"/ [`Mx`]: ../../rdata/rfc1035/struct.Mx.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":141380,"byte_end":141426,"line_start":142,"line_end":142,"column_start":1,"column_end":47}},{"value":"/ [`ParsedRecord`]: ../record/struct.ParsedRecord.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":141427,"byte_end":141483,"line_start":143,"line_end":143,"column_start":1,"column_end":57}},{"value":"/ [`ParsedRecord::into_record`]: ../record/struct.ParsedRecord.html#method.into_record","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":141484,"byte_end":141572,"line_start":144,"line_end":144,"column_start":1,"column_end":89}},{"value":"/ [`QuestionSection`]: struct.QuestionSection.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":141573,"byte_end":141625,"line_start":145,"line_end":145,"column_start":1,"column_end":53}},{"value":"/ [`Record`]: ../record/struct.Record.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":141626,"byte_end":141670,"line_start":146,"line_end":146,"column_start":1,"column_end":45}},{"value":"/ [`RecordSection`]: struct.RecordSection.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":141671,"byte_end":141719,"line_start":147,"line_end":147,"column_start":1,"column_end":49}},{"value":"/ [`RecordSection::limit_to`]: ../struct.RecordSection.html#method.limit_to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":141720,"byte_end":141797,"line_start":148,"line_end":148,"column_start":1,"column_end":78}},{"value":"/ [`RecordSection::next_section`]: ../struct.RecordSection.html#method.next_section","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":141798,"byte_end":141883,"line_start":149,"line_end":149,"column_start":1,"column_end":86}},{"value":"/ [Header Section]: #header-section","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":141884,"byte_end":141921,"line_start":150,"line_end":150,"column_start":1,"column_end":38}},{"value":"/ [rdata]: ../../rdata/index.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":141922,"byte_end":141957,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/ [opcode]: ../iana/opcode/enum.Opcode.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":141958,"byte_end":142003,"line_start":152,"line_end":152,"column_start":1,"column_end":46}},{"value":"/ [RFC 1035]: https://tools.ietf.org/html/rfc1035","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":142004,"byte_end":142055,"line_start":153,"line_end":153,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":142525,"byte_end":142536,"line_start":168,"line_end":168,"column_start":12,"column_end":23},"name":"from_octets","qualname":"<Message<Octets>>::from_octets","value":"fn (octets: Octets) -> Result<Self, ShortBuf>","parent":null,"children":[],"decl_id":null,"docs":" Creates a message from an octets sequence.","sig":null,"attributes":[{"value":"/ Creates a message from an octets sequence.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":142199,"byte_end":142245,"line_start":162,"line_end":162,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":142250,"byte_end":142253,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ This fails if the slice is too short to even contain a complete","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":142258,"byte_end":142325,"line_start":164,"line_end":164,"column_start":5,"column_end":72}},{"value":"/ header section.  No further checks are done, though, so if this","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":142330,"byte_end":142397,"line_start":165,"line_end":165,"column_start":5,"column_end":72}},{"value":"/ function returns ok, the message may still be broken with other","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":142402,"byte_end":142469,"line_start":166,"line_end":166,"column_start":5,"column_end":72}},{"value":"/ methods returning errors later one.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":142474,"byte_end":142513,"line_start":167,"line_end":167,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":143183,"byte_end":143192,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"as_octets","qualname":"<Message<Octets>>::as_octets","value":"fn (&self) -> &Octets","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying octets sequence.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying octets sequence.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":143113,"byte_end":143171,"line_start":186,"line_end":186,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":143318,"byte_end":143329,"line_start":192,"line_end":192,"column_start":12,"column_end":23},"name":"into_octets","qualname":"<Message<Octets>>::into_octets","value":"fn (self) -> Octets","parent":null,"children":[],"decl_id":null,"docs":" Converts the message into the underlying octets sequence.\n","sig":null,"attributes":[{"value":"/ Converts the message into the underlying octets sequence.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":143245,"byte_end":143306,"line_start":191,"line_end":191,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":143445,"byte_end":143453,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Message<Octets>>::as_slice","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice to the underlying octets sequence.\n","sig":null,"attributes":[{"value":"/ Returns a slice to the underlying octets sequence.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":143379,"byte_end":143433,"line_start":196,"line_end":196,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":143907,"byte_end":143916,"line_start":212,"line_end":212,"column_start":12,"column_end":21},"name":"for_slice","qualname":"<Message<Octets>>::for_slice","value":"fn (&self) -> Message<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns a message for a slice of the octets sequence.\n","sig":null,"attributes":[{"value":"/ Returns a message for a slice of the octets sequence.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":143838,"byte_end":143895,"line_start":211,"line_end":211,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":144172,"byte_end":144178,"line_start":223,"line_end":223,"column_start":12,"column_end":18},"name":"header","qualname":"<Message<Octets>>::header","value":"fn (&self) -> Header","parent":null,"children":[],"decl_id":null,"docs":" Returns the message header.\n","sig":null,"attributes":[{"value":"/ Returns the message header.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":144129,"byte_end":144160,"line_start":222,"line_end":222,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":144331,"byte_end":144341,"line_start":228,"line_end":228,"column_start":12,"column_end":22},"name":"header_mut","qualname":"<Message<Octets>>::header_mut","value":"fn (&mut self) -> &mut Header","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the message header.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the message header.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":144265,"byte_end":144319,"line_start":227,"line_end":227,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":144527,"byte_end":144540,"line_start":234,"line_end":234,"column_start":12,"column_end":25},"name":"header_counts","qualname":"<Message<Octets>>::header_counts","value":"fn (&self) -> HeaderCounts","parent":null,"children":[],"decl_id":null,"docs":" Returns the header counts of the message.\n","sig":null,"attributes":[{"value":"/ Returns the header counts of the message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":144470,"byte_end":144515,"line_start":233,"line_end":233,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":144685,"byte_end":144699,"line_start":239,"line_end":239,"column_start":12,"column_end":26},"name":"header_section","qualname":"<Message<Octets>>::header_section","value":"fn (&self) -> HeaderSection","parent":null,"children":[],"decl_id":null,"docs":" Returns the entire header section.\n","sig":null,"attributes":[{"value":"/ Returns the entire header section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":144635,"byte_end":144673,"line_start":238,"line_end":238,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":144864,"byte_end":144872,"line_start":244,"line_end":244,"column_start":12,"column_end":20},"name":"no_error","qualname":"<Message<Octets>>::no_error","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the rcode of the header is NoError.\n","sig":null,"attributes":[{"value":"/ Returns whether the rcode of the header is NoError.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":144797,"byte_end":144852,"line_start":243,"line_end":243,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":145032,"byte_end":145040,"line_start":249,"line_end":249,"column_start":12,"column_end":20},"name":"is_error","qualname":"<Message<Octets>>::is_error","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the rcode of the header is one of the error values.\n","sig":null,"attributes":[{"value":"/ Returns whether the rcode of the header is one of the error values.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":144949,"byte_end":145020,"line_start":248,"line_end":248,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":145260,"byte_end":145268,"line_start":259,"line_end":259,"column_start":12,"column_end":20},"name":"question","qualname":"<Message<Octets>>::question","value":"fn (&self) -> QuestionSection<&Octets>","parent":null,"children":[],"decl_id":null,"docs":" Returns the question section.\n","sig":null,"attributes":[{"value":"/ Returns the question section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":145215,"byte_end":145248,"line_start":258,"line_end":258,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":145478,"byte_end":145482,"line_start":266,"line_end":266,"column_start":12,"column_end":16},"name":"zone","qualname":"<Message<Octets>>::zone","value":"fn (&self) -> QuestionSection<&Octets>","parent":null,"children":[],"decl_id":null,"docs":" Returns the zone section of an UPDATE message.","sig":null,"attributes":[{"value":"/ Returns the zone section of an UPDATE message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":145360,"byte_end":145410,"line_start":263,"line_end":263,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":145415,"byte_end":145418,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ This is identical to `self.question()`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":145423,"byte_end":145466,"line_start":265,"line_end":265,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":145896,"byte_end":145902,"line_start":277,"line_end":277,"column_start":12,"column_end":18},"name":"answer","qualname":"<Message<Octets>>::answer","value":"fn (&self) -> Result<RecordSection<&Octets>, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the answer section.","sig":null,"attributes":[{"value":"/ Returns the answer section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":145555,"byte_end":145586,"line_start":270,"line_end":270,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":145591,"byte_end":145594,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Iterates over the question section in order to access the answer","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":145599,"byte_end":145667,"line_start":272,"line_end":272,"column_start":5,"column_end":73}},{"value":"/ section. If you are accessing the question section anyway, using","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":145672,"byte_end":145740,"line_start":273,"line_end":273,"column_start":5,"column_end":73}},{"value":"/ its [`next_section`] method may be more efficient.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":145745,"byte_end":145799,"line_start":274,"line_end":274,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":145804,"byte_end":145807,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ [`next_section`]: ../struct.QuestionSection.html#method.next_section","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":145812,"byte_end":145884,"line_start":276,"line_end":276,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":146137,"byte_end":146149,"line_start":284,"line_end":284,"column_start":12,"column_end":24},"name":"prerequisite","qualname":"<Message<Octets>>::prerequisite","value":"fn (&self) -> Result<RecordSection<&Octets>, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the prerequisite section of an UPDATE message.","sig":null,"attributes":[{"value":"/ Returns the prerequisite section of an UPDATE message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":146013,"byte_end":146071,"line_start":281,"line_end":281,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":146076,"byte_end":146079,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This is identical to `self.answer()`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":146084,"byte_end":146125,"line_start":283,"line_end":283,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":146601,"byte_end":146610,"line_start":295,"line_end":295,"column_start":12,"column_end":21},"name":"authority","qualname":"<Message<Octets>>::authority","value":"fn (&self) -> Result<RecordSection<&Octets>, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the authority section.","sig":null,"attributes":[{"value":"/ Returns the authority section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":146238,"byte_end":146272,"line_start":288,"line_end":288,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":146277,"byte_end":146280,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ Iterates over both the question and the answer sections to determine","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":146285,"byte_end":146357,"line_start":290,"line_end":290,"column_start":5,"column_end":77}},{"value":"/ the start of the authority section. If you are already accessing the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":146362,"byte_end":146434,"line_start":291,"line_end":291,"column_start":5,"column_end":77}},{"value":"/ answer section, using [`next_section`] on it is more efficient.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":146439,"byte_end":146506,"line_start":292,"line_end":292,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":146511,"byte_end":146514,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ [`next_section`]: ../struct.RecordSection.html#method.next_section","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":146519,"byte_end":146589,"line_start":294,"line_end":294,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":146850,"byte_end":146856,"line_start":302,"line_end":302,"column_start":12,"column_end":18},"name":"update","qualname":"<Message<Octets>>::update","value":"fn (&self) -> Result<RecordSection<&Octets>, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the update section of an UPDATE message.","sig":null,"attributes":[{"value":"/ Returns the update section of an UPDATE message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":146729,"byte_end":146781,"line_start":299,"line_end":299,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":146786,"byte_end":146789,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ This is identical to `self.authority()`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":146794,"byte_end":146838,"line_start":301,"line_end":301,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":147302,"byte_end":147312,"line_start":313,"line_end":313,"column_start":12,"column_end":22},"name":"additional","qualname":"<Message<Octets>>::additional","value":"fn (&self) -> Result<RecordSection<&Octets>, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the additional section.","sig":null,"attributes":[{"value":"/ Returns the additional section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":146948,"byte_end":146983,"line_start":306,"line_end":306,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":146988,"byte_end":146991,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ Iterates over all three previous sections to determine the start of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":146996,"byte_end":147067,"line_start":308,"line_end":308,"column_start":5,"column_end":76}},{"value":"/ the additional section. If you are already accessing the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":147072,"byte_end":147132,"line_start":309,"line_end":309,"column_start":5,"column_end":65}},{"value":"/ authority section, using [`next_section`] on it is more efficient.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":147137,"byte_end":147207,"line_start":310,"line_end":310,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":147212,"byte_end":147215,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ [`next_section`]: ../struct.RecordSection.html#method.next_section","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":147220,"byte_end":147290,"line_start":312,"line_end":312,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":147532,"byte_end":147540,"line_start":319,"line_end":319,"column_start":12,"column_end":20},"name":"sections","qualname":"<Message<Octets>>::sections","value":"fn (&self) -> Result<(QuestionSection<&Octets>, RecordSection<&Octets>,\n        RecordSection<&Octets>, RecordSection<&Octets>), ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Returns all four sections in one fell swoop.\n","sig":null,"attributes":[{"value":"/ Returns all four sections in one fell swoop.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":147434,"byte_end":147482,"line_start":317,"line_end":317,"column_start":5,"column_end":53}},{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":147487,"byte_end":147520,"line_start":318,"line_end":318,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":148461,"byte_end":148465,"line_start":345,"line_end":345,"column_start":12,"column_end":16},"name":"iter","qualname":"<Message<Octets>>::iter","value":"fn (&self) -> MessageIter<&Octets>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the records in the message.","sig":null,"attributes":[{"value":"/ Returns an iterator over the records in the message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":148036,"byte_end":148092,"line_start":335,"line_end":335,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":148097,"byte_end":148100,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ The iterator’s item is a pair of a [`ParsedRecord`] and the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":148105,"byte_end":148170,"line_start":337,"line_end":337,"column_start":5,"column_end":68}},{"value":"/ [`Section`] it was found in.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":148175,"byte_end":148207,"line_start":338,"line_end":338,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":148212,"byte_end":148215,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ As is customary, this iterator is also accessible via the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":148220,"byte_end":148281,"line_start":340,"line_end":340,"column_start":5,"column_end":66}},{"value":"/ `IntoIterator` trait on a reference to the message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":148286,"byte_end":148341,"line_start":341,"line_end":341,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":148346,"byte_end":148349,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ [`ParsedRecord`]: ../record/struct.ParsedRecord.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":148354,"byte_end":148410,"line_start":343,"line_end":343,"column_start":5,"column_end":61}},{"value":"/ [`Section`]: enum.Section.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":148415,"byte_end":148449,"line_start":344,"line_end":344,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":148927,"byte_end":148936,"line_start":363,"line_end":363,"column_start":12,"column_end":21},"name":"is_answer","qualname":"<Message<Octets>>::is_answer","value":"fn <Other> (&self, query: &Message<Other>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this is the answer to some other message.","sig":null,"attributes":[{"value":"/ Returns whether this is the answer to some other message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":148669,"byte_end":148730,"line_start":358,"line_end":358,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":148735,"byte_end":148738,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ The method checks whether the ID fields of the headers are the same,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":148743,"byte_end":148815,"line_start":360,"line_end":360,"column_start":5,"column_end":77}},{"value":"/ whether the QR flag is set in this message, and whether the questions","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":148820,"byte_end":148893,"line_start":361,"line_end":361,"column_start":5,"column_end":78}},{"value":"/ are the same.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":148898,"byte_end":148915,"line_start":362,"line_end":362,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":149518,"byte_end":149532,"line_start":382,"line_end":382,"column_start":12,"column_end":26},"name":"first_question","qualname":"<Message<Octets>>::first_question","value":"fn (&self) -> Option<Question<ParsedDname<&Octets>>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the first question, if there is any.","sig":null,"attributes":[{"value":"/ Returns the first question, if there is any.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":149352,"byte_end":149400,"line_start":378,"line_end":378,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":149405,"byte_end":149408,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ The method will return `None` both if there are no questions or if","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":149413,"byte_end":149483,"line_start":380,"line_end":380,"column_start":5,"column_end":75}},{"value":"/ parsing fails.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":149488,"byte_end":149506,"line_start":381,"line_end":381,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":149993,"byte_end":150006,"line_start":395,"line_end":395,"column_start":12,"column_end":25},"name":"sole_question","qualname":"<Message<Octets>>::sole_question","value":"fn (&self) -> Result<Question<ParsedDname<&Octets>>, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the sole question of the message.","sig":null,"attributes":[{"value":"/ Returns the sole question of the message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":149735,"byte_end":149780,"line_start":389,"line_end":389,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":149785,"byte_end":149788,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ This is like [`first_question`] but returns an error if there isn’t","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":149793,"byte_end":149866,"line_start":391,"line_end":391,"column_start":5,"column_end":76}},{"value":"/ exactly one question or there is a parse error.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":149871,"byte_end":149922,"line_start":392,"line_end":392,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":149927,"byte_end":149930,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ [`first_question`]: #method.first_question","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":149935,"byte_end":149981,"line_start":394,"line_end":394,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":150426,"byte_end":150431,"line_start":408,"line_end":408,"column_start":12,"column_end":17},"name":"qtype","qualname":"<Message<Octets>>::qtype","value":"fn (&self) -> Option<Rtype>","parent":null,"children":[],"decl_id":null,"docs":" Returns the query type of the first question, if any.\n","sig":null,"attributes":[{"value":"/ Returns the query type of the first question, if any.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":150357,"byte_end":150414,"line_start":407,"line_end":407,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":150595,"byte_end":150610,"line_start":413,"line_end":413,"column_start":12,"column_end":27},"name":"contains_answer","qualname":"<Message<Octets>>::contains_answer","value":"fn <'s, Data> (&'s self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the message contains answers of a given type.\n","sig":null,"attributes":[{"value":"/ Returns whether the message contains answers of a given type.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":150518,"byte_end":150583,"line_start":412,"line_end":412,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":152119,"byte_end":152133,"line_start":443,"line_end":443,"column_start":12,"column_end":26},"name":"canonical_name","qualname":"<Message<Octets>>::canonical_name","value":"fn (&self) -> Option<ParsedDname<&Octets>>","parent":null,"children":[],"decl_id":null,"docs":" Resolves the canonical name of the answer.","sig":null,"attributes":[{"value":"/ Resolves the canonical name of the answer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":150871,"byte_end":150917,"line_start":422,"line_end":422,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":150922,"byte_end":150925,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ The CNAME record allows a domain name to be an alias for a different","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":150930,"byte_end":151002,"line_start":424,"line_end":424,"column_start":5,"column_end":77}},{"value":"/ name. Aliases may be chained. The ‘canonical name’ referred to be the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":151007,"byte_end":151084,"line_start":425,"line_end":425,"column_start":5,"column_end":78}},{"value":"/ method’s name is the last name in this chain. A recursive resolver","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":151089,"byte_end":151161,"line_start":426,"line_end":426,"column_start":5,"column_end":75}},{"value":"/ will support a stub resolver in figuring out this canonical name by","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":151166,"byte_end":151237,"line_start":427,"line_end":427,"column_start":5,"column_end":76}},{"value":"/ including all necessary CNAME records in its answer. This method can","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":151242,"byte_end":151314,"line_start":428,"line_end":428,"column_start":5,"column_end":77}},{"value":"/ be used on such an answer to determine the canonical name. As such,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":151319,"byte_end":151390,"line_start":429,"line_end":429,"column_start":5,"column_end":76}},{"value":"/ it will only consider CNAMEs present in the message’s answer section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":151395,"byte_end":151470,"line_start":430,"line_end":430,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":151475,"byte_end":151478,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ It starts with the question name and follows CNAME records until there","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":151483,"byte_end":151557,"line_start":432,"line_end":432,"column_start":5,"column_end":79}},{"value":"/ is no next CNAME in the chain and then returns the last CNAME.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":151562,"byte_end":151628,"line_start":433,"line_end":433,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":151633,"byte_end":151636,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ If the message doesn’t have a question, if there is a parse error, or","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":151641,"byte_end":151716,"line_start":435,"line_end":435,"column_start":5,"column_end":78}},{"value":"/ if there is a CNAME loop the method returns `None`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":151721,"byte_end":151776,"line_start":436,"line_end":436,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":153161,"byte_end":153164,"line_start":476,"line_end":476,"column_start":12,"column_end":15},"name":"opt","qualname":"<Message<Octets>>::opt","value":"fn (&self) -> Option<OptRecord<<&Octets as OctetsRef>::Range>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the OPT record from the message, if there is one.\n","sig":null,"attributes":[{"value":"/ Returns the OPT record from the message, if there is one.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":153088,"byte_end":153149,"line_start":475,"line_end":475,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":153824,"byte_end":153843,"line_start":494,"line_end":494,"column_start":12,"column_end":31},"name":"get_last_additional","qualname":"<Message<Octets>>::get_last_additional","value":"fn <'s, Data> (&'s self) -> Option<Record<ParsedDname<&'s Octets>, Data>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the last additional record from the message.","sig":null,"attributes":[{"value":"/ Returns the last additional record from the message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":153480,"byte_end":153536,"line_start":486,"line_end":486,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":153541,"byte_end":153544,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ The method tries to parse the last record of the additional section","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":153549,"byte_end":153620,"line_start":488,"line_end":488,"column_start":5,"column_end":76}},{"value":"/ as the provided record type. If that succeeds, it returns that","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":153625,"byte_end":153691,"line_start":489,"line_end":489,"column_start":5,"column_end":71}},{"value":"/ parsed record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":153696,"byte_end":153714,"line_start":490,"line_end":490,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":153719,"byte_end":153722,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ If the last record is of the wrong type or parsing fails, returns","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":153727,"byte_end":153796,"line_start":492,"line_end":492,"column_start":5,"column_end":74}},{"value":"/ `None`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":153801,"byte_end":153812,"line_start":493,"line_end":493,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":154929,"byte_end":154951,"line_start":529,"line_end":529,"column_start":12,"column_end":34},"name":"remove_last_additional","qualname":"<Message<Octets>>::remove_last_additional","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Drops the last additional record from the message.","sig":null,"attributes":[{"value":"/ Drops the last additional record from the message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":154646,"byte_end":154700,"line_start":521,"line_end":521,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":154705,"byte_end":154708,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ Does so by decreasing the ’arcount.’ Does, however, not change the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":154713,"byte_end":154787,"line_start":523,"line_end":523,"column_start":5,"column_end":75}},{"value":"/ underlying octet sequence.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":154792,"byte_end":154822,"line_start":524,"line_end":524,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":154827,"byte_end":154830,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":154835,"byte_end":154847,"line_start":526,"line_end":526,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":154852,"byte_end":154855,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ The method panics if the additional section is empty.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":154860,"byte_end":154917,"line_start":528,"line_end":528,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":155378,"byte_end":155390,"line_start":541,"line_end":541,"column_start":12,"column_end":24},"name":"copy_records","qualname":"<Message<Octets>>::copy_records","value":"fn <'s, R, F, T, O> (&'s self, target: T, mut op: F) -> Result<AdditionalBuilder<O>, CopyRecordsError>","parent":null,"children":[],"decl_id":null,"docs":" Copy records from a message into the target message builder.","sig":null,"attributes":[{"value":"/ Copy records from a message into the target message builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":155109,"byte_end":155173,"line_start":536,"line_end":536,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":155178,"byte_end":155181,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ The method uses `op` to process records from all record sections","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":155186,"byte_end":155254,"line_start":538,"line_end":538,"column_start":5,"column_end":73}},{"value":"/ before inserting, caller can use this closure to filter or manipulate","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":155259,"byte_end":155332,"line_start":539,"line_end":539,"column_start":5,"column_end":78}},{"value":"/ records before inserting.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":155337,"byte_end":155366,"line_start":540,"line_end":540,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":5296},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":157798,"byte_end":157813,"line_start":628,"line_end":628,"column_start":12,"column_end":27},"name":"QuestionSection","qualname":"::base::message::QuestionSection","value":"QuestionSection {  }","parent":null,"children":[{"krate":0,"index":5298},{"krate":0,"index":5299}],"decl_id":null,"docs":" An iterator over the question section of a DNS message.","sig":null,"attributes":[{"value":"/ An iterator over the question section of a DNS message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":157190,"byte_end":157249,"line_start":615,"line_end":615,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":157250,"byte_end":157253,"line_start":616,"line_end":616,"column_start":1,"column_end":4}},{"value":"/ The iterator’s item is the result of trying to parse the question. In case","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":157254,"byte_end":157334,"line_start":617,"line_end":617,"column_start":1,"column_end":79}},{"value":"/ of a parse error, `next` will return an error once and `None` after that.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":157335,"byte_end":157412,"line_start":618,"line_end":618,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":157413,"byte_end":157416,"line_start":619,"line_end":619,"column_start":1,"column_end":4}},{"value":"/ You can create a value of this type through [`Message::question`]. Use the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":157417,"byte_end":157495,"line_start":620,"line_end":620,"column_start":1,"column_end":79}},{"value":"/ [`answer`] or [`next_section`] methods on a question section to proceed","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":157496,"byte_end":157571,"line_start":621,"line_end":621,"column_start":1,"column_end":76}},{"value":"/ to an iterator over the answer section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":157572,"byte_end":157615,"line_start":622,"line_end":622,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":157616,"byte_end":157619,"line_start":623,"line_end":623,"column_start":1,"column_end":4}},{"value":"/ [`Message::question`]: struct.Message.html#method.question","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":157620,"byte_end":157682,"line_start":624,"line_end":624,"column_start":1,"column_end":63}},{"value":"/ [`answer`]: #method.answer","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":157683,"byte_end":157713,"line_start":625,"line_end":625,"column_start":1,"column_end":31}},{"value":"/ [`next_section`]: #method.next_section","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":157714,"byte_end":157756,"line_start":626,"line_end":626,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":158730,"byte_end":158733,"line_start":654,"line_end":654,"column_start":12,"column_end":15},"name":"pos","qualname":"<QuestionSection<Ref>>::pos","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position relative to the beginning of the message.\n","sig":null,"attributes":[{"value":"/ Returns the current position relative to the beginning of the message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":158644,"byte_end":158718,"line_start":653,"line_end":653,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":159015,"byte_end":159021,"line_start":664,"line_end":664,"column_start":12,"column_end":18},"name":"answer","qualname":"<QuestionSection<Ref>>::answer","value":"fn (mut self) -> Result<RecordSection<Ref>, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Proceeds to the answer section.","sig":null,"attributes":[{"value":"/ Proceeds to the answer section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":158789,"byte_end":158824,"line_start":658,"line_end":658,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":158829,"byte_end":158832,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ Skips over any remaining questions and then converts itself into the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":158837,"byte_end":158909,"line_start":660,"line_end":660,"column_start":5,"column_end":77}},{"value":"/ first [`RecordSection`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":158914,"byte_end":158942,"line_start":661,"line_end":661,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":158947,"byte_end":158950,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ [`RecordSection`]: struct.RecordSection.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":158955,"byte_end":159003,"line_start":663,"line_end":663,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":159342,"byte_end":159354,"line_start":673,"line_end":673,"column_start":12,"column_end":24},"name":"next_section","qualname":"<QuestionSection<Ref>>::next_section","value":"fn (self) -> Result<RecordSection<Ref>, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Proceeds to the answer section.","sig":null,"attributes":[{"value":"/ Proceeds to the answer section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":159218,"byte_end":159253,"line_start":670,"line_end":670,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":159258,"byte_end":159261,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ This is identical to [`answer`] and is here for consistency.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":159266,"byte_end":159330,"line_start":672,"line_end":672,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5309},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":161061,"byte_end":161067,"line_start":735,"line_end":735,"column_start":5,"column_end":11},"name":"Answer","qualname":"::base::message::Section::Answer","value":"Section::Answer","parent":{"krate":0,"index":5308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5311},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":161073,"byte_end":161082,"line_start":736,"line_end":736,"column_start":5,"column_end":14},"name":"Authority","qualname":"::base::message::Section::Authority","value":"Section::Authority","parent":{"krate":0,"index":5308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5313},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":161088,"byte_end":161098,"line_start":737,"line_end":737,"column_start":5,"column_end":15},"name":"Additional","qualname":"::base::message::Section::Additional","value":"Section::Additional","parent":{"krate":0,"index":5308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5308},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":161047,"byte_end":161054,"line_start":734,"line_end":734,"column_start":10,"column_end":17},"name":"Section","qualname":"::base::message::Section","value":"Section::{Answer, Authority, Additional}","parent":null,"children":[{"krate":0,"index":5309},{"krate":0,"index":5311},{"krate":0,"index":5313}],"decl_id":null,"docs":" A helper type enumerating the three kinds of record sections.","sig":null,"attributes":[{"value":"/ A helper type enumerating the three kinds of record sections.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":160796,"byte_end":160861,"line_start":728,"line_end":728,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":160862,"byte_end":160865,"line_start":729,"line_end":729,"column_start":1,"column_end":4}},{"value":"/ See the documentation of [`Message`] for what the three sections are.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":160866,"byte_end":160939,"line_start":730,"line_end":730,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":160940,"byte_end":160943,"line_start":731,"line_end":731,"column_start":1,"column_end":4}},{"value":"/ [`Message`]: struct.Message.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":160944,"byte_end":160980,"line_start":732,"line_end":732,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":161164,"byte_end":161169,"line_start":743,"line_end":743,"column_start":12,"column_end":17},"name":"first","qualname":"<Section>::first","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the first section.\n","sig":null,"attributes":[{"value":"/ Returns the first section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":161122,"byte_end":161152,"line_start":742,"line_end":742,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5328},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":163259,"byte_end":163272,"line_start":793,"line_end":793,"column_start":12,"column_end":25},"name":"RecordSection","qualname":"::base::message::RecordSection","value":"RecordSection {  }","parent":null,"children":[{"krate":0,"index":5330},{"krate":0,"index":5331},{"krate":0,"index":5332}],"decl_id":null,"docs":" An iterator over the records in one of the three record sections.","sig":null,"attributes":[{"value":"/ An iterator over the records in one of the three record sections.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":161912,"byte_end":161981,"line_start":767,"line_end":767,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":161982,"byte_end":161985,"line_start":768,"line_end":768,"column_start":1,"column_end":4}},{"value":"/ The iterator’s item is the result of parsing a raw record represented by","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":161986,"byte_end":162064,"line_start":769,"line_end":769,"column_start":1,"column_end":77}},{"value":"/ [`ParsedRecord`]. This type will allow access to an unparsed record. It","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":162065,"byte_end":162140,"line_start":770,"line_end":770,"column_start":1,"column_end":76}},{"value":"/ can be converted into a concrete [`Record`] via its [`into_record`]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":162141,"byte_end":162212,"line_start":771,"line_end":771,"column_start":1,"column_end":72}},{"value":"/ method. If parsing the raw record fails, the iterator will return an","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":162213,"byte_end":162285,"line_start":772,"line_end":772,"column_start":1,"column_end":73}},{"value":"/ error once and `None` after that.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":162286,"byte_end":162323,"line_start":773,"line_end":773,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":162324,"byte_end":162327,"line_start":774,"line_end":774,"column_start":1,"column_end":4}},{"value":"/ Alternatively, you can trade in a value of this type into a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":162328,"byte_end":162391,"line_start":775,"line_end":775,"column_start":1,"column_end":64}},{"value":"/ [`RecordIter`] that iterates over [`Record`]s of a specific type by","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":162392,"byte_end":162463,"line_start":776,"line_end":776,"column_start":1,"column_end":72}},{"value":"/ calling the [`limit_to`] method. In particular, you can use this together","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":162464,"byte_end":162541,"line_start":777,"line_end":777,"column_start":1,"column_end":78}},{"value":"/ with [`AllRecordData`] to acquire an iterator that parses all known","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":162542,"byte_end":162613,"line_start":778,"line_end":778,"column_start":1,"column_end":72}},{"value":"/ record types.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":162614,"byte_end":162631,"line_start":779,"line_end":779,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":162632,"byte_end":162635,"line_start":780,"line_end":780,"column_start":1,"column_end":4}},{"value":"/ `RecordSection` values cannot be created directly. You can get one either","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":162636,"byte_end":162713,"line_start":781,"line_end":781,"column_start":1,"column_end":78}},{"value":"/ by calling the method for the section in question of a [`Message`] value","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":162714,"byte_end":162790,"line_start":782,"line_end":782,"column_start":1,"column_end":77}},{"value":"/ or by proceeding from another section via its `next_section` method.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":162791,"byte_end":162863,"line_start":783,"line_end":783,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":162864,"byte_end":162867,"line_start":784,"line_end":784,"column_start":1,"column_end":4}},{"value":"/ [`limit_to`]: #method.limit_to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":162868,"byte_end":162902,"line_start":785,"line_end":785,"column_start":1,"column_end":35}},{"value":"/ [`AllRecordData`]: ../../rdata/enum.AllRecordData.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":162903,"byte_end":162961,"line_start":786,"line_end":786,"column_start":1,"column_end":59}},{"value":"/ [`Message`]: struct.Message.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":162962,"byte_end":162998,"line_start":787,"line_end":787,"column_start":1,"column_end":37}},{"value":"/ [`ParseRecord`]: ../record/struct.ParsedRecord.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":162999,"byte_end":163054,"line_start":788,"line_end":788,"column_start":1,"column_end":56}},{"value":"/ [`Record`]: ../record/struct.Record.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":163055,"byte_end":163099,"line_start":789,"line_end":789,"column_start":1,"column_end":45}},{"value":"/ [`RecordIter`]: struct.RecordIter.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":163100,"byte_end":163142,"line_start":790,"line_end":790,"column_start":1,"column_end":43}},{"value":"/ [`into_record`]: ../record/struct.ParsedRecord.html#method.into_record","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":163143,"byte_end":163217,"line_start":791,"line_end":791,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":164224,"byte_end":164227,"line_start":823,"line_end":823,"column_start":12,"column_end":15},"name":"pos","qualname":"<RecordSection<Ref>>::pos","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position relative to the beginning of the message.\n","sig":null,"attributes":[{"value":"/ Returns the current position relative to the beginning of the message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":164138,"byte_end":164212,"line_start":822,"line_end":822,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":165147,"byte_end":165155,"line_start":842,"line_end":842,"column_start":12,"column_end":20},"name":"limit_to","qualname":"<RecordSection<Ref>>::limit_to","value":"fn <Data> (self) -> RecordIter<Ref, Data>","parent":null,"children":[],"decl_id":null,"docs":" Trades `self` in for an iterator limited to a concrete record type.","sig":null,"attributes":[{"value":"/ Trades `self` in for an iterator limited to a concrete record type.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":164283,"byte_end":164354,"line_start":827,"line_end":827,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":164359,"byte_end":164362,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ The record type is given through its record data type. Since the data","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":164367,"byte_end":164440,"line_start":829,"line_end":829,"column_start":5,"column_end":78}},{"value":"/ is being parsed, this type must implement [`ParseRecordData`]. For","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":164445,"byte_end":164515,"line_start":830,"line_end":830,"column_start":5,"column_end":75}},{"value":"/ record data types that are generic over domain name types, this is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":164520,"byte_end":164590,"line_start":831,"line_end":831,"column_start":5,"column_end":75}},{"value":"/ normally achieved by giving them a [`ParsedDname`]. As a convenience,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":164595,"byte_end":164668,"line_start":832,"line_end":832,"column_start":5,"column_end":78}},{"value":"/ type aliases for all the fundamental record data types exist in the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":164673,"byte_end":164744,"line_start":833,"line_end":833,"column_start":5,"column_end":76}},{"value":"/ [domain::rdata::parsed] module.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":164749,"byte_end":164784,"line_start":834,"line_end":834,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":164789,"byte_end":164792,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ The returned limited iterator will continue at the current position","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":164797,"byte_end":164868,"line_start":836,"line_end":836,"column_start":5,"column_end":76}},{"value":"/ of `self`. It will *not* start from the beginning of the section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":164873,"byte_end":164942,"line_start":837,"line_end":837,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":164947,"byte_end":164950,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ [`ParseRecordData`]: ../rdata/trait.ParseRecordData.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":164955,"byte_end":165015,"line_start":839,"line_end":839,"column_start":5,"column_end":65}},{"value":"/ [`ParsedDname`]: ../name/struct.ParsedDname.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":165020,"byte_end":165072,"line_start":840,"line_end":840,"column_start":5,"column_end":57}},{"value":"/ [domain::rdata::parsed]: ../../rdata/parsed/index.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":165077,"byte_end":165135,"line_start":841,"line_end":841,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":165512,"byte_end":165523,"line_start":854,"line_end":854,"column_start":12,"column_end":23},"name":"limit_to_in","qualname":"<RecordSection<Ref>>::limit_to_in","value":"fn <Data> (self) -> RecordIter<Ref, Data>","parent":null,"children":[],"decl_id":null,"docs":" Trades `self` in for an iterator limited to a type in IN class.","sig":null,"attributes":[{"value":"/ Trades `self` in for an iterator limited to a type in IN class.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":165279,"byte_end":165346,"line_start":848,"line_end":848,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":165351,"byte_end":165354,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ Behaves exactly like [`limit_to`] but skips over records that are not","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":165359,"byte_end":165432,"line_start":850,"line_end":850,"column_start":5,"column_end":78}},{"value":"/ of class IN.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":165437,"byte_end":165453,"line_start":851,"line_end":851,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":165458,"byte_end":165461,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ [`limit_to`]: #method.limit_to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":165466,"byte_end":165500,"line_start":853,"line_end":853,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":165803,"byte_end":165815,"line_start":864,"line_end":864,"column_start":12,"column_end":24},"name":"next_section","qualname":"<RecordSection<Ref>>::next_section","value":"fn (mut self) -> Result<Option<Self>, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Proceeds to the next section if there is one.","sig":null,"attributes":[{"value":"/ Proceeds to the next section if there is one.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":165646,"byte_end":165695,"line_start":860,"line_end":860,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":165700,"byte_end":165703,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ Returns an error if parsing has failed and the message is unusable","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":165708,"byte_end":165778,"line_start":862,"line_end":862,"column_start":5,"column_end":75}},{"value":"/ now.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":165783,"byte_end":165791,"line_start":863,"line_end":863,"column_start":5,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":564},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":167535,"byte_end":167546,"line_start":923,"line_end":923,"column_start":12,"column_end":23},"name":"MessageIter","qualname":"::base::message::MessageIter","value":"MessageIter {  }","parent":null,"children":[{"krate":0,"index":566}],"decl_id":null,"docs":" An iterator over the records of a message.\n","sig":null,"attributes":[{"value":"/ An iterator over the records of a message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":167477,"byte_end":167523,"line_start":922,"line_end":922,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":5341},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":169367,"byte_end":169377,"line_start":973,"line_end":973,"column_start":12,"column_end":22},"name":"RecordIter","qualname":"::base::message::RecordIter","value":"RecordIter {  }","parent":null,"children":[{"krate":0,"index":5344},{"krate":0,"index":5345},{"krate":0,"index":5346}],"decl_id":null,"docs":" An iterator over specific records of a record section of a DNS message.","sig":null,"attributes":[{"value":"/ An iterator over specific records of a record section of a DNS message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":168499,"byte_end":168574,"line_start":957,"line_end":957,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":168575,"byte_end":168578,"line_start":958,"line_end":958,"column_start":1,"column_end":4}},{"value":"/ The iterator’s item type is the result of trying to parse a record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":168579,"byte_end":168652,"line_start":959,"line_end":959,"column_start":1,"column_end":72}},{"value":"/ It silently skips over all records that `Data` cannot or does not want to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":168653,"byte_end":168730,"line_start":960,"line_end":960,"column_start":1,"column_end":78}},{"value":"/ parse. If parsing the record data fails, the iterator will return an","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":168731,"byte_end":168803,"line_start":961,"line_end":961,"column_start":1,"column_end":73}},{"value":"/ error but can continue with the next record. If parsing the entire record","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":168804,"byte_end":168881,"line_start":962,"line_end":962,"column_start":1,"column_end":78}},{"value":"/ fails the item will be an error and subsequent attempts to continue will","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":168882,"byte_end":168958,"line_start":963,"line_end":963,"column_start":1,"column_end":77}},{"value":"/ also produce errors. This case can be distinguished from an error while","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":168959,"byte_end":169034,"line_start":964,"line_end":964,"column_start":1,"column_end":76}},{"value":"/ parsing the record data by [`next_section`] returning an error, too.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":169035,"byte_end":169107,"line_start":965,"line_end":965,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":169108,"byte_end":169111,"line_start":966,"line_end":966,"column_start":1,"column_end":4}},{"value":"/ You can create a value of this type through the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":169112,"byte_end":169163,"line_start":967,"line_end":967,"column_start":1,"column_end":52}},{"value":"/ [`RecordSection::limit_to`] method.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":169164,"byte_end":169203,"line_start":968,"line_end":968,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":169204,"byte_end":169207,"line_start":969,"line_end":969,"column_start":1,"column_end":4}},{"value":"/ [`next_section`]: #method.next_section","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":169208,"byte_end":169250,"line_start":970,"line_end":970,"column_start":1,"column_end":43}},{"value":"/ [`RecordSection::limit_to`]: struct.RecordSection.html#method.limit_to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":169251,"byte_end":169325,"line_start":971,"line_end":971,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":169900,"byte_end":169906,"line_start":989,"line_end":989,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<RecordIter<Ref, Data>>::unwrap","value":"fn (self) -> RecordSection<Ref>","parent":null,"children":[],"decl_id":null,"docs":" Trades the limited iterator for the full iterator.","sig":null,"attributes":[{"value":"/ Trades the limited iterator for the full iterator.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":169725,"byte_end":169779,"line_start":985,"line_end":985,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":169784,"byte_end":169787,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ The returned iterator will continue right after the last record","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":169792,"byte_end":169859,"line_start":987,"line_end":987,"column_start":5,"column_end":72}},{"value":"/ previously returned.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":169864,"byte_end":169888,"line_start":988,"line_end":988,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":170181,"byte_end":170193,"line_start":997,"line_end":997,"column_start":12,"column_end":24},"name":"next_section","qualname":"<RecordIter<Ref, Data>>::next_section","value":"fn (self) -> Result<Option<RecordSection<Ref>>, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Proceeds to the next section if there is one.","sig":null,"attributes":[{"value":"/ Proceeds to the next section if there is one.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":169969,"byte_end":170018,"line_start":993,"line_end":993,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":170023,"byte_end":170026,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ Returns an error if parsing the message has failed. Returns","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":170031,"byte_end":170094,"line_start":995,"line_end":995,"column_start":5,"column_end":68}},{"value":"/ `Ok(None)` if this iterator was already on the additional section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":170099,"byte_end":170169,"line_start":996,"line_end":996,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5359},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":171395,"byte_end":171400,"line_start":1039,"line_end":1039,"column_start":5,"column_end":10},"name":"Parse","qualname":"::base::message::CopyRecordsError::Parse","value":"CopyRecordsError::Parse(ParseError)","parent":{"krate":0,"index":5358},"children":[],"decl_id":null,"docs":" Parsing the source message failed.\n","sig":null,"attributes":[{"value":"/ Parsing the source message failed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":171352,"byte_end":171390,"line_start":1038,"line_end":1038,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5362},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":171459,"byte_end":171467,"line_start":1042,"line_end":1042,"column_start":5,"column_end":13},"name":"ShortBuf","qualname":"::base::message::CopyRecordsError::ShortBuf","value":"CopyRecordsError::ShortBuf","parent":{"krate":0,"index":5358},"children":[],"decl_id":null,"docs":" Not enough space in the target.\n","sig":null,"attributes":[{"value":"/ Not enough space in the target.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":171419,"byte_end":171454,"line_start":1041,"line_end":1041,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":5358},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":171329,"byte_end":171345,"line_start":1037,"line_end":1037,"column_start":10,"column_end":26},"name":"CopyRecordsError","qualname":"::base::message::CopyRecordsError","value":"CopyRecordsError::{Parse, ShortBuf}","parent":null,"children":[{"krate":0,"index":5359},{"krate":0,"index":5362}],"decl_id":null,"docs":" An error occurrd while copying records.\n","sig":null,"attributes":[{"value":"/ An error occurrd while copying records.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":171246,"byte_end":171289,"line_start":1035,"line_end":1035,"column_start":1,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":590},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"message_builder","qualname":"::base::message_builder","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","parent":null,"children":[{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":603},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":612},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":5369},{"krate":0,"index":5375},{"krate":0,"index":5372},{"krate":0,"index":624},{"krate":0,"index":627},{"krate":0,"index":629},{"krate":0,"index":631},{"krate":0,"index":633},{"krate":0,"index":635},{"krate":0,"index":642},{"krate":0,"index":648},{"krate":0,"index":657},{"krate":0,"index":663},{"krate":0,"index":666},{"krate":0,"index":669},{"krate":0,"index":672},{"krate":0,"index":675},{"krate":0,"index":678},{"krate":0,"index":5378},{"krate":0,"index":5384},{"krate":0,"index":5381},{"krate":0,"index":681},{"krate":0,"index":687},{"krate":0,"index":697},{"krate":0,"index":701},{"krate":0,"index":704},{"krate":0,"index":707},{"krate":0,"index":710},{"krate":0,"index":713},{"krate":0,"index":717},{"krate":0,"index":720},{"krate":0,"index":723},{"krate":0,"index":726},{"krate":0,"index":729},{"krate":0,"index":5387},{"krate":0,"index":5394},{"krate":0,"index":5391},{"krate":0,"index":732},{"krate":0,"index":738},{"krate":0,"index":748},{"krate":0,"index":752},{"krate":0,"index":755},{"krate":0,"index":758},{"krate":0,"index":761},{"krate":0,"index":764},{"krate":0,"index":768},{"krate":0,"index":771},{"krate":0,"index":774},{"krate":0,"index":777},{"krate":0,"index":780},{"krate":0,"index":5397},{"krate":0,"index":5404},{"krate":0,"index":5401},{"krate":0,"index":783},{"krate":0,"index":789},{"krate":0,"index":799},{"krate":0,"index":803},{"krate":0,"index":806},{"krate":0,"index":809},{"krate":0,"index":812},{"krate":0,"index":815},{"krate":0,"index":819},{"krate":0,"index":822},{"krate":0,"index":825},{"krate":0,"index":828},{"krate":0,"index":831},{"krate":0,"index":5407},{"krate":0,"index":5414},{"krate":0,"index":5411},{"krate":0,"index":834},{"krate":0,"index":843},{"krate":0,"index":853},{"krate":0,"index":857},{"krate":0,"index":860},{"krate":0,"index":863},{"krate":0,"index":866},{"krate":0,"index":869},{"krate":0,"index":873},{"krate":0,"index":876},{"krate":0,"index":879},{"krate":0,"index":882},{"krate":0,"index":885},{"krate":0,"index":888},{"krate":0,"index":891},{"krate":0,"index":895},{"krate":0,"index":899},{"krate":0,"index":5417},{"krate":0,"index":5423},{"krate":0,"index":903},{"krate":0,"index":5427},{"krate":0,"index":5433},{"krate":0,"index":5430},{"krate":0,"index":927},{"krate":0,"index":930},{"krate":0,"index":932},{"krate":0,"index":939},{"krate":0,"index":942},{"krate":0,"index":945},{"krate":0,"index":5436},{"krate":0,"index":5445},{"krate":0,"index":5442},{"krate":0,"index":949},{"krate":0,"index":961},{"krate":0,"index":964},{"krate":0,"index":967},{"krate":0,"index":5448},{"krate":0,"index":5455},{"krate":0,"index":5452},{"krate":0,"index":5458},{"krate":0,"index":5465},{"krate":0,"index":5463},{"krate":0,"index":5461},{"krate":0,"index":973},{"krate":0,"index":976},{"krate":0,"index":989},{"krate":0,"index":992},{"krate":0,"index":995}],"decl_id":null,"docs":" Building a new DNS message.","sig":null,"attributes":[{"value":"! Building a new DNS message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":176085,"byte_end":176116,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":176117,"byte_end":176120,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The types in this module allow building a DNS message consecutively from","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":176121,"byte_end":176197,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"! its parts. Since messages consist of five parts, a number of types are","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":176198,"byte_end":176272,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"! involved. The concept is that you start out with a [`MessageBuilder`] and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":176273,"byte_end":176350,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"! work your way step by step through the sections by trading the builder in","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":176351,"byte_end":176428,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"! for on of another type representing the following section. The sequence","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":176429,"byte_end":176504,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"! is [`MessageBuilder`], [`QuestionBuilder`], [`AnswerBuilder`],","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":176505,"byte_end":176571,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"! [`AuthorityBuilder`], and finally [`AdditionalBuilder`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":176572,"byte_end":176632,"line_start":9,"line_end":9,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":176633,"byte_end":176636,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! You can skip forward over unwanted sections. You can also go backwards,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":176637,"byte_end":176712,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"! but then you’ll loose anything you built before. The naming of the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":176713,"byte_end":176785,"line_start":12,"line_end":12,"column_start":1,"column_end":71}},{"value":"! methods that do these things is consistent across types: `builder` takes","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":176786,"byte_end":176862,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"! you to the message builder. The four methods `question`, `answer`,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":176863,"byte_end":176933,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"! `additional`, and `authority` progress or return to the respective","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":176934,"byte_end":177004,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"! section. Finally, `finish` completes building.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":177005,"byte_end":177055,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":177056,"byte_end":177059,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! Each of the section builders offers a `push` method to add elements to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":177060,"byte_end":177134,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"! the section. For the question section, the method accepts anything that","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":177135,"byte_end":177210,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"! resembles a [`Question`] while the three record sections except","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":177211,"byte_end":177278,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"! something that looks like a [`Record`]. Apart from actual values","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":177279,"byte_end":177347,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"! of these types, tuples of the components also work, such as a pair of a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":177348,"byte_end":177423,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"! domain name and a record type for a question or a triple of the owner","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":177424,"byte_end":177497,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"! name, TTL, and record data for a record. If you already have a question","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":177498,"byte_end":177573,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"! or record, you can use the `push_ref` method to add ","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":177574,"byte_end":177630,"line_start":25,"line_end":25,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":177631,"byte_end":177634,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":177635,"byte_end":177638,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! The `push` method of the record","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":177639,"byte_end":177674,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"! section builders is also available via the [`RecordSectionBuilder`]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":177675,"byte_end":177746,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"! trait so you can build code that works with all three record sections.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":177747,"byte_end":177821,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":177822,"byte_end":177825,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! The [`AdditionalBuilder`] has a special feature that helps building the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":177826,"byte_end":177901,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"! OPT record for EDNS. Its [`opt`] method allows a closure to build this","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":177902,"byte_end":177976,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"! record on the fly via the [`OptBuilder`] type.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":177977,"byte_end":178027,"line_start":34,"line_end":34,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":178028,"byte_end":178031,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! Building happens atop any [octets builder], so the type of buffer to use","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":178032,"byte_end":178108,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"! for building can be chosen. The module also provides a few helper types","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":178109,"byte_end":178184,"line_start":37,"line_end":37,"column_start":1,"column_end":76}},{"value":"! that provide optional features for building messages. All of these are","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":178185,"byte_end":178259,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"! wrappers around an octets builder and are octets builders themselves, so","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":178260,"byte_end":178336,"line_start":39,"line_end":39,"column_start":1,"column_end":77}},{"value":"! you can mix and match.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":178337,"byte_end":178363,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":178364,"byte_end":178367,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! First, the [`StreamTarget`] builds a message for use with streaming","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":178368,"byte_end":178439,"line_start":42,"line_end":42,"column_start":1,"column_end":72}},{"value":"! transport protocols, e.g., TCP, where the actual message is preceded by","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":178440,"byte_end":178515,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"! a 16 bit length counter. The stream target keeps this counter up-to-date","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":178516,"byte_end":178592,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"! and makes sure the message doesn’t become longer than what the counter","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":178593,"byte_end":178669,"line_start":45,"line_end":45,"column_start":1,"column_end":75}},{"value":"! can provide for.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":178670,"byte_end":178690,"line_start":46,"line_end":46,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":178691,"byte_end":178694,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! Two further types, [`TreeCompressor`] and [`StaticCompressor`], provide","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":178695,"byte_end":178770,"line_start":48,"line_end":48,"column_start":1,"column_end":76}},{"value":"! name compression. This is a mechanism to decrease the size of a DNS","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":178771,"byte_end":178842,"line_start":49,"line_end":49,"column_start":1,"column_end":72}},{"value":"! message by avoiding repeating domain names: Instead of including a domain","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":178843,"byte_end":178920,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"! name or suffix of a domain name that has been mentioned already, a pointer","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":178921,"byte_end":178999,"line_start":51,"line_end":51,"column_start":1,"column_end":79}},{"value":"! to the position of the original mention is provided. Since this process is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":179000,"byte_end":179078,"line_start":52,"line_end":52,"column_start":1,"column_end":79}},{"value":"! somewhat expensive as you have to remember which names have already been","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":179079,"byte_end":179155,"line_start":53,"line_end":53,"column_start":1,"column_end":77}},{"value":"! used, it isn’t enabled by default and provided via separate octets","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":179156,"byte_end":179228,"line_start":54,"line_end":54,"column_start":1,"column_end":71}},{"value":"! builders instead which we call compressors.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":179229,"byte_end":179276,"line_start":55,"line_end":55,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":179277,"byte_end":179280,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! Currently, there are two different compressors. [`TreeCompressor`] stores","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":179281,"byte_end":179358,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"! all names it encountered in a binary tree. While it can handle any number","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":179359,"byte_end":179436,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"! of names, it does require an allocator and therefore cannot be used in a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":179437,"byte_end":179513,"line_start":59,"line_end":59,"column_start":1,"column_end":77}},{"value":"! `no_std` environment. [`StaticCompressor`], meanwhile, has a static table","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":179514,"byte_end":179591,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"! for up to 24 names. It is thus becoming ineffective on large messages","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":179592,"byte_end":179665,"line_start":61,"line_end":61,"column_start":1,"column_end":74}},{"value":"! with lots of different names. However, 24 should be good enough for most","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":179666,"byte_end":179742,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"! normal messages.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":179743,"byte_end":179763,"line_start":63,"line_end":63,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":179764,"byte_end":179767,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"! # Example","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":179768,"byte_end":179781,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":179782,"byte_end":179785,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"! The following example builds a message with both name compression and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":179786,"byte_end":179859,"line_start":67,"line_end":67,"column_start":1,"column_end":74}},{"value":"! the stream length and simply puts two A records into it.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":179860,"byte_end":179920,"line_start":68,"line_end":68,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":179921,"byte_end":179924,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":179925,"byte_end":179932,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"! use std::str::FromStr;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":179933,"byte_end":179959,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"! use domain::base::{","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":179960,"byte_end":179983,"line_start":72,"line_end":72,"column_start":1,"column_end":24}},{"value":"!     Dname, MessageBuilder, Rtype, StaticCompressor, StreamTarget","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":179984,"byte_end":180052,"line_start":73,"line_end":73,"column_start":1,"column_end":69}},{"value":"! };","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":180053,"byte_end":180059,"line_start":74,"line_end":74,"column_start":1,"column_end":7}},{"value":"! use domain::rdata::A;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":180060,"byte_end":180085,"line_start":75,"line_end":75,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":180086,"byte_end":180089,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"! // Make a domain name we can use later on.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":180090,"byte_end":180136,"line_start":77,"line_end":77,"column_start":1,"column_end":47}},{"value":"! let name = Dname::<Vec<u8>>::from_str(\"example.com\").unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":180137,"byte_end":180203,"line_start":78,"line_end":78,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":180204,"byte_end":180207,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"! // Create a message builder wrapping a compressor wrapping a stream","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":180208,"byte_end":180279,"line_start":80,"line_end":80,"column_start":1,"column_end":72}},{"value":"! // target.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":180280,"byte_end":180294,"line_start":81,"line_end":81,"column_start":1,"column_end":15}},{"value":"! let mut msg = MessageBuilder::from_target(","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":180295,"byte_end":180341,"line_start":82,"line_end":82,"column_start":1,"column_end":47}},{"value":"!     StaticCompressor::new(","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":180342,"byte_end":180372,"line_start":83,"line_end":83,"column_start":1,"column_end":31}},{"value":"!         StreamTarget::new_vec()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":180373,"byte_end":180408,"line_start":84,"line_end":84,"column_start":1,"column_end":36}},{"value":"!     )","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":180409,"byte_end":180418,"line_start":85,"line_end":85,"column_start":1,"column_end":10}},{"value":"! ).unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":180419,"byte_end":180434,"line_start":86,"line_end":86,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":180435,"byte_end":180438,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"! // Set the RD bit in the header and proceed to the question section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":180439,"byte_end":180511,"line_start":88,"line_end":88,"column_start":1,"column_end":73}},{"value":"! msg.header_mut().set_rd(true);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":180512,"byte_end":180546,"line_start":89,"line_end":89,"column_start":1,"column_end":35}},{"value":"! let mut msg = msg.question();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":180547,"byte_end":180580,"line_start":90,"line_end":90,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":180581,"byte_end":180584,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"! // Add a question and proceed to the answer section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":180585,"byte_end":180641,"line_start":92,"line_end":92,"column_start":1,"column_end":57}},{"value":"! msg.push((&name, Rtype::A)).unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":180642,"byte_end":180683,"line_start":93,"line_end":93,"column_start":1,"column_end":42}},{"value":"! let mut msg = msg.answer();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":180684,"byte_end":180715,"line_start":94,"line_end":94,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":180716,"byte_end":180719,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"! // Add two answer and proceed to the additional sections","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":180720,"byte_end":180780,"line_start":96,"line_end":96,"column_start":1,"column_end":61}},{"value":"! msg.push((&name, 86400, A::from_octets(192, 0, 2, 1))).unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":180781,"byte_end":180849,"line_start":97,"line_end":97,"column_start":1,"column_end":69}},{"value":"! msg.push((&name, 86400, A::from_octets(192, 0, 2, 2))).unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":180850,"byte_end":180918,"line_start":98,"line_end":98,"column_start":1,"column_end":69}},{"value":"! let mut msg = msg.additional();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":180919,"byte_end":180954,"line_start":99,"line_end":99,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":180955,"byte_end":180958,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"! // Add an OPT record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":180959,"byte_end":180984,"line_start":101,"line_end":101,"column_start":1,"column_end":26}},{"value":"! msg.opt(|opt| {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":180985,"byte_end":181004,"line_start":102,"line_end":102,"column_start":1,"column_end":20}},{"value":"!     opt.set_udp_payload_size(4096);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":181005,"byte_end":181044,"line_start":103,"line_end":103,"column_start":1,"column_end":40}},{"value":"!     Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":181045,"byte_end":181059,"line_start":104,"line_end":104,"column_start":1,"column_end":15}},{"value":"! }).unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":181060,"byte_end":181076,"line_start":105,"line_end":105,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":181077,"byte_end":181080,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"! // Convert the builder into the actual message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":181081,"byte_end":181132,"line_start":107,"line_end":107,"column_start":1,"column_end":52}},{"value":"! let target = msg.finish().into_target();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":181133,"byte_end":181177,"line_start":108,"line_end":108,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":181178,"byte_end":181181,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"! // A stream target can provide access to the data with or without the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":181182,"byte_end":181255,"line_start":110,"line_end":110,"column_start":1,"column_end":74}},{"value":"! // length counter:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":181256,"byte_end":181278,"line_start":111,"line_end":111,"column_start":1,"column_end":23}},{"value":"! let _ = target.as_stream_slice(); // With length","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":181279,"byte_end":181331,"line_start":112,"line_end":112,"column_start":1,"column_end":53}},{"value":"! let _ = target.as_dgram_slice(); // Without length","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":181332,"byte_end":181386,"line_start":113,"line_end":113,"column_start":1,"column_end":55}},{"value":"! ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":181387,"byte_end":181394,"line_start":114,"line_end":114,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":181395,"byte_end":181398,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"! [`MessageBuilder`]: struct.MessageBuilder.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":181399,"byte_end":181449,"line_start":116,"line_end":116,"column_start":1,"column_end":51}},{"value":"! [`QuestionBuilder`]: struct.QuestionBuilder.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":181450,"byte_end":181502,"line_start":117,"line_end":117,"column_start":1,"column_end":53}},{"value":"! [`AnswerBuilder`]: struct.AnswerBuilder.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":181503,"byte_end":181551,"line_start":118,"line_end":118,"column_start":1,"column_end":49}},{"value":"! [`AuthorityBuilder`]: struct.AuthorityBuilder.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":181552,"byte_end":181606,"line_start":119,"line_end":119,"column_start":1,"column_end":55}},{"value":"! [`AdditionalBuilder`]: struct.AdditionalBuilder.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":181607,"byte_end":181663,"line_start":120,"line_end":120,"column_start":1,"column_end":57}},{"value":"! [`AdditionalBuilder::opt`]: struct.AdditionalBuilder.html#method.opt","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":181664,"byte_end":181736,"line_start":121,"line_end":121,"column_start":1,"column_end":73}},{"value":"! [`OptBuilder`]: struct.OptBuilder.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":181737,"byte_end":181779,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"! [`RecordSectionBuilder`]: trait.RecordSectionBuilder.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":181780,"byte_end":181841,"line_start":123,"line_end":123,"column_start":1,"column_end":62}},{"value":"! [`StaticCompressor`]: struct.StaticCompressor.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":181842,"byte_end":181896,"line_start":124,"line_end":124,"column_start":1,"column_end":55}},{"value":"! [`StreamTarget`]: struct.StreamTarget.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":181897,"byte_end":181943,"line_start":125,"line_end":125,"column_start":1,"column_end":47}},{"value":"! [`TreeCompressor`]: struct.TreeCompressor.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":181944,"byte_end":181994,"line_start":126,"line_end":126,"column_start":1,"column_end":51}},{"value":"! [`Question`]: ../question/struct.Question.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":181995,"byte_end":182045,"line_start":127,"line_end":127,"column_start":1,"column_end":51}},{"value":"! [`Record`]: ../question/struct.Record.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":182046,"byte_end":182092,"line_start":128,"line_end":128,"column_start":1,"column_end":47}},{"value":"! [octets builder]: ../octets/trait.OctetsBuilder.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":182093,"byte_end":182149,"line_start":129,"line_end":129,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":5369},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":183352,"byte_end":183366,"line_start":161,"line_end":161,"column_start":12,"column_end":26},"name":"MessageBuilder","qualname":"::base::message_builder::MessageBuilder","value":"MessageBuilder {  }","parent":null,"children":[{"krate":0,"index":5371}],"decl_id":null,"docs":" Starts building a DNS message.","sig":null,"attributes":[{"value":"/ Starts building a DNS message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":182887,"byte_end":182921,"line_start":150,"line_end":150,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":182922,"byte_end":182925,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ This type wraps an [`OctetsBuilder`] and starts the process of building a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":182926,"byte_end":183003,"line_start":152,"line_end":152,"column_start":1,"column_end":78}},{"value":"/ message. It allows access to the header section. The message builder can","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":183004,"byte_end":183080,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/ be traded in for any section builder or the underlying octets builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":183081,"byte_end":183155,"line_start":154,"line_end":154,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":183156,"byte_end":183159,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ For more details see the [module documentation].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":183160,"byte_end":183212,"line_start":156,"line_end":156,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":183213,"byte_end":183216,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: index.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":183217,"byte_end":183255,"line_start":158,"line_end":158,"column_start":1,"column_end":39}},{"value":"/ [`OctetsBuilder`]: ../../octets/trait.OctetsBuilder.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":183256,"byte_end":183316,"line_start":159,"line_end":159,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":183897,"byte_end":183908,"line_start":176,"line_end":176,"column_start":12,"column_end":23},"name":"from_target","qualname":"<MessageBuilder<Target>>::from_target","value":"fn (mut target: Target) -> Result<Self, ShortBuf>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new message builder using the given target.","sig":null,"attributes":[{"value":"/ Creates a new message builder using the given target.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":183493,"byte_end":183550,"line_start":168,"line_end":168,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":183555,"byte_end":183558,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The target must be an [`OctetsBuilder`]. It will be truncated to zero","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":183563,"byte_end":183636,"line_start":170,"line_end":170,"column_start":5,"column_end":78}},{"value":"/ size before appending the header section. That is, all data that was","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":183641,"byte_end":183713,"line_start":171,"line_end":171,"column_start":5,"column_end":77}},{"value":"/ in the builder before will be lost.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":183718,"byte_end":183757,"line_start":172,"line_end":172,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":183762,"byte_end":183765,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The function will result in an error if the builder doesn’t have","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":183770,"byte_end":183840,"line_start":174,"line_end":174,"column_start":5,"column_end":73}},{"value":"/ enough space for the header section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":183845,"byte_end":183885,"line_start":175,"line_end":175,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":184238,"byte_end":184245,"line_start":188,"line_end":188,"column_start":12,"column_end":19},"name":"new_vec","qualname":"<MessageBuilder<Vec<u8>>>::new_vec","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new message builder atop a `Vec<u8>`.\n","sig":null,"attributes":[{"value":"/ Creates a new message builder atop a `Vec<u8>`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":184175,"byte_end":184226,"line_start":187,"line_end":187,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":184467,"byte_end":184481,"line_start":196,"line_end":196,"column_start":12,"column_end":26},"name":"new_stream_vec","qualname":"<MessageBuilder<StreamTarget<Vec<u8>>>>::new_stream_vec","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new builder for a streamable message atop a `Vec<u8>`.\n","sig":null,"attributes":[{"value":"/ Creates a new builder for a streamable message atop a `Vec<u8>`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":184387,"byte_end":184455,"line_start":195,"line_end":195,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":184726,"byte_end":184735,"line_start":206,"line_end":206,"column_start":12,"column_end":21},"name":"new_bytes","qualname":"<MessageBuilder<BytesMut>>::new_bytes","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new message builder atop a bytes value. \n","sig":null,"attributes":[{"value":"/ Creates a new message builder atop a bytes value. ","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":184660,"byte_end":184714,"line_start":205,"line_end":205,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":184960,"byte_end":184976,"line_start":214,"line_end":214,"column_start":12,"column_end":28},"name":"new_stream_bytes","qualname":"<MessageBuilder<StreamTarget<BytesMut>>>::new_stream_bytes","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new streamable message builder atop a bytes value. \n","sig":null,"attributes":[{"value":"/ Creates a new streamable message builder atop a bytes value. ","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":184883,"byte_end":184948,"line_start":213,"line_end":213,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":185586,"byte_end":185598,"line_start":230,"line_end":230,"column_start":12,"column_end":24},"name":"start_answer","qualname":"<MessageBuilder<Target>>::start_answer","value":"fn <Octets> (mut self, msg: &Message<Octets>, rcode: Rcode) -> Result<AnswerBuilder<Target>, ShortBuf>","parent":null,"children":[],"decl_id":null,"docs":" Starts creating an answer for the given message.","sig":null,"attributes":[{"value":"/ Starts creating an answer for the given message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":185157,"byte_end":185209,"line_start":222,"line_end":222,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":185214,"byte_end":185217,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Specifically, this sets the ID, QR, OPCODE, RD, and RCODE fields","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":185222,"byte_end":185290,"line_start":224,"line_end":224,"column_start":5,"column_end":73}},{"value":"/ in the header and attempts to push the message’s questions to the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":185295,"byte_end":185366,"line_start":225,"line_end":225,"column_start":5,"column_end":74}},{"value":"/ builder. If iterating of the questions fails, it adds what it can.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":185371,"byte_end":185441,"line_start":226,"line_end":226,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":185446,"byte_end":185449,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ The method converts the message builder into an answer builder ready","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":185454,"byte_end":185526,"line_start":228,"line_end":228,"column_start":5,"column_end":77}},{"value":"/ to receive the answer for the question.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":185531,"byte_end":185574,"line_start":229,"line_end":229,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":186511,"byte_end":186523,"line_start":257,"line_end":257,"column_start":12,"column_end":24},"name":"request_axfr","qualname":"<MessageBuilder<Target>>::request_axfr","value":"fn <N> (mut self, apex: N) -> Result<AnswerBuilder<Target>, ShortBuf>","parent":null,"children":[],"decl_id":null,"docs":" Creates an AXFR request for the given domain.","sig":null,"attributes":[{"value":"/ Creates an AXFR request for the given domain.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":186289,"byte_end":186338,"line_start":253,"line_end":253,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":186343,"byte_end":186346,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ Sets a random ID, pushes the domain and the AXFR record type into","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":186351,"byte_end":186420,"line_start":255,"line_end":255,"column_start":5,"column_end":74}},{"value":"/ the question section, and converts the builder into an answer builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":186425,"byte_end":186499,"line_start":256,"line_end":256,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":186950,"byte_end":186956,"line_start":273,"line_end":273,"column_start":12,"column_end":18},"name":"header","qualname":"<MessageBuilder<Target>>::header","value":"fn (&self) -> Header","parent":null,"children":[],"decl_id":null,"docs":" Return the current value of the message header.\n","sig":null,"attributes":[{"value":"/ Return the current value of the message header.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":186887,"byte_end":186938,"line_start":272,"line_end":272,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":187128,"byte_end":187138,"line_start":278,"line_end":278,"column_start":12,"column_end":22},"name":"header_mut","qualname":"<MessageBuilder<Target>>::header_mut","value":"fn (&mut self) -> &mut Header","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the message header for manipulations.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the message header for manipulations.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":187044,"byte_end":187116,"line_start":277,"line_end":277,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":187308,"byte_end":187314,"line_start":283,"line_end":283,"column_start":12,"column_end":18},"name":"counts","qualname":"<MessageBuilder<Target>>::counts","value":"fn (&self) -> HeaderCounts","parent":null,"children":[],"decl_id":null,"docs":" Return the current value of the message header counts.\n","sig":null,"attributes":[{"value":"/ Return the current value of the message header counts.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":187238,"byte_end":187296,"line_start":282,"line_end":282,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":187782,"byte_end":187789,"line_start":299,"line_end":299,"column_start":12,"column_end":19},"name":"builder","qualname":"<MessageBuilder<Target>>::builder","value":"fn (self) -> MessageBuilder<Target>","parent":null,"children":[],"decl_id":null,"docs":" Converts the message builder into a message builder","sig":null,"attributes":[{"value":"/ Converts the message builder into a message builder","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":187682,"byte_end":187737,"line_start":296,"line_end":296,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":187742,"byte_end":187745,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ This is a no-op.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":187750,"byte_end":187770,"line_start":298,"line_end":298,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":187917,"byte_end":187925,"line_start":304,"line_end":304,"column_start":12,"column_end":20},"name":"question","qualname":"<MessageBuilder<Target>>::question","value":"fn (self) -> QuestionBuilder<Target>","parent":null,"children":[],"decl_id":null,"docs":" Converts the message builder into a question builder.\n","sig":null,"attributes":[{"value":"/ Converts the message builder into a question builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":187848,"byte_end":187905,"line_start":303,"line_end":303,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":188135,"byte_end":188141,"line_start":311,"line_end":311,"column_start":12,"column_end":18},"name":"answer","qualname":"<MessageBuilder<Target>>::answer","value":"fn (self) -> AnswerBuilder<Target>","parent":null,"children":[],"decl_id":null,"docs":" Converts the message builder into an answer builder.","sig":null,"attributes":[{"value":"/ Converts the message builder into an answer builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":188007,"byte_end":188063,"line_start":308,"line_end":308,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":188068,"byte_end":188071,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ This will leave the question section empty.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":188076,"byte_end":188123,"line_start":310,"line_end":310,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":188362,"byte_end":188371,"line_start":318,"line_end":318,"column_start":12,"column_end":21},"name":"authority","qualname":"<MessageBuilder<Target>>::authority","value":"fn (self) -> AuthorityBuilder<Target>","parent":null,"children":[],"decl_id":null,"docs":" Converts the message builder into an authority builder.","sig":null,"attributes":[{"value":"/ Converts the message builder into an authority builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":188219,"byte_end":188278,"line_start":315,"line_end":315,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":188283,"byte_end":188286,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ This will leave the question and answer sections empty.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":188291,"byte_end":188350,"line_start":317,"line_end":317,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":188620,"byte_end":188630,"line_start":325,"line_end":325,"column_start":12,"column_end":22},"name":"additional","qualname":"<MessageBuilder<Target>>::additional","value":"fn (self) -> AdditionalBuilder<Target>","parent":null,"children":[],"decl_id":null,"docs":" Converts the message builder into an additional builder.","sig":null,"attributes":[{"value":"/ Converts the message builder into an additional builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":188464,"byte_end":188524,"line_start":322,"line_end":322,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":188529,"byte_end":188532,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ This will leave the question, answer, and authority sections empty.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":188537,"byte_end":188608,"line_start":324,"line_end":324,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":188865,"byte_end":188871,"line_start":332,"line_end":332,"column_start":12,"column_end":18},"name":"finish","qualname":"<MessageBuilder<Target>>::finish","value":"fn (self) -> Target","parent":null,"children":[],"decl_id":null,"docs":" Converts the message into the underlying octets builder.","sig":null,"attributes":[{"value":"/ Converts the message into the underlying octets builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":188737,"byte_end":188797,"line_start":329,"line_end":329,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":188802,"byte_end":188805,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ This will leave the all sections empty.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":188810,"byte_end":188853,"line_start":331,"line_end":331,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":189106,"byte_end":189118,"line_start":340,"line_end":340,"column_start":12,"column_end":24},"name":"into_message","qualname":"<MessageBuilder<Target>>::into_message","value":"fn (self) -> Message<Target::Octets>","parent":null,"children":[],"decl_id":null,"docs":" Converts the builder into a message.","sig":null,"attributes":[{"value":"/ Converts the builder into a message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":188921,"byte_end":188961,"line_start":336,"line_end":336,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":188966,"byte_end":188969,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ The method will return a message atop whatever octets sequence the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":188974,"byte_end":189044,"line_start":338,"line_end":338,"column_start":5,"column_end":75}},{"value":"/ builder’s octets builder converts into.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":189049,"byte_end":189094,"line_start":339,"line_end":339,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":189380,"byte_end":189389,"line_start":348,"line_end":348,"column_start":12,"column_end":21},"name":"as_target","qualname":"<MessageBuilder<Target>>::as_target","value":"fn (&self) -> &Target","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying octets builder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying octets builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":189311,"byte_end":189368,"line_start":347,"line_end":347,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":189777,"byte_end":189785,"line_start":361,"line_end":361,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<MessageBuilder<Target>>::as_slice","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns an octets slice of the octets assembled so far.\n","sig":null,"attributes":[{"value":"/ Returns an octets slice of the octets assembled so far.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":189706,"byte_end":189765,"line_start":360,"line_end":360,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":190069,"byte_end":190079,"line_start":370,"line_end":370,"column_start":12,"column_end":22},"name":"as_message","qualname":"<MessageBuilder<Target>>::as_message","value":"fn (&self) -> Message<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns a message atop for the octets assembled so far.","sig":null,"attributes":[{"value":"/ Returns a message atop for the octets assembled so far.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":189879,"byte_end":189938,"line_start":366,"line_end":366,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":189943,"byte_end":189946,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ This message is atop the octets slices derived from the builder, so","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":189951,"byte_end":190022,"line_start":368,"line_end":368,"column_start":5,"column_end":76}},{"value":"/ it can be created cheaply.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":190027,"byte_end":190057,"line_start":369,"line_end":369,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5378},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":192337,"byte_end":192352,"line_start":449,"line_end":449,"column_start":12,"column_end":27},"name":"QuestionBuilder","qualname":"::base::message_builder::QuestionBuilder","value":"QuestionBuilder {  }","parent":null,"children":[{"krate":0,"index":5380}],"decl_id":null,"docs":" Builds the question section of a DNS message.","sig":null,"attributes":[{"value":"/ Builds the question section of a DNS message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":191358,"byte_end":191407,"line_start":427,"line_end":427,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":191408,"byte_end":191411,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ A value of this type can be acquired by calling the `question` method on","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":191412,"byte_end":191488,"line_start":429,"line_end":429,"column_start":1,"column_end":77}},{"value":"/ any other builder type. See the [module documentation] for an overview of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":191489,"byte_end":191566,"line_start":430,"line_end":430,"column_start":1,"column_end":78}},{"value":"/ how to build a message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":191567,"byte_end":191594,"line_start":431,"line_end":431,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":191595,"byte_end":191598,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ You can push questions to the end of the question section via the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":191599,"byte_end":191668,"line_start":433,"line_end":433,"column_start":1,"column_end":70}},{"value":"/ [`push`] method. It accepts various things that represent a question:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":191669,"byte_end":191742,"line_start":434,"line_end":434,"column_start":1,"column_end":74}},{"value":"/ question values and references; tuples of a domain name, record type, and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":191743,"byte_end":191820,"line_start":435,"line_end":435,"column_start":1,"column_end":78}},{"value":"/ class; and, using the regular class of IN, a pair of just a domain name","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":191821,"byte_end":191896,"line_start":436,"line_end":436,"column_start":1,"column_end":76}},{"value":"/ and record type.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":191897,"byte_end":191917,"line_start":437,"line_end":437,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":191918,"byte_end":191921,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ Once you are finished building the question section, you can progress to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":191922,"byte_end":191998,"line_start":439,"line_end":439,"column_start":1,"column_end":77}},{"value":"/ the answer section via the [`answer`] method or finish the message via","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":191999,"byte_end":192073,"line_start":440,"line_end":440,"column_start":1,"column_end":75}},{"value":"/ [`finish`]. Additionally, conversions to all other builder types are","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":192074,"byte_end":192146,"line_start":441,"line_end":441,"column_start":1,"column_end":73}},{"value":"/ available as well.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":192147,"byte_end":192169,"line_start":442,"line_end":442,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":192170,"byte_end":192173,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ [`answer`]: #method.answer","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":192174,"byte_end":192204,"line_start":444,"line_end":444,"column_start":1,"column_end":31}},{"value":"/ [`finish`]: #method.finish","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":192205,"byte_end":192235,"line_start":445,"line_end":445,"column_start":1,"column_end":31}},{"value":"/ [`push`]: #method.push","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":192236,"byte_end":192262,"line_start":446,"line_end":446,"column_start":1,"column_end":27}},{"value":"/ [module documentation]: index.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":192263,"byte_end":192301,"line_start":447,"line_end":447,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":193622,"byte_end":193626,"line_start":481,"line_end":481,"column_start":12,"column_end":16},"name":"push","qualname":"<QuestionBuilder<Target>>::push","value":"fn (&mut self, question: impl AsQuestion) -> Result<(), ShortBuf>","parent":null,"children":[],"decl_id":null,"docs":" Appends a question to the question section.","sig":null,"attributes":[{"value":"/ Appends a question to the question section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":192610,"byte_end":192657,"line_start":459,"line_end":459,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":192662,"byte_end":192665,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ This method accepts anything that implements the [`AsQuestion`]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":192670,"byte_end":192737,"line_start":461,"line_end":461,"column_start":5,"column_end":72}},{"value":"/ trait. Apart from an actual [`Question`] or a reference to it, this","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":192742,"byte_end":192813,"line_start":462,"line_end":462,"column_start":5,"column_end":76}},{"value":"/ can also be a tuple of a domain name, record type, and class or, if","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":192818,"byte_end":192889,"line_start":463,"line_end":463,"column_start":5,"column_end":76}},{"value":"/ the class is the usual IN, a pair of just the name and type.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":192894,"byte_end":192958,"line_start":464,"line_end":464,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":192963,"byte_end":192966,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ In other words, the options are:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":192971,"byte_end":193007,"line_start":466,"line_end":466,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":193012,"byte_end":193015,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":193020,"byte_end":193027,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ use domain::base::{Dname, MessageBuilder, Question, Rtype};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":193032,"byte_end":193095,"line_start":469,"line_end":469,"column_start":5,"column_end":68}},{"value":"/ use domain::base::iana::Class;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":193100,"byte_end":193134,"line_start":470,"line_end":470,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":193139,"byte_end":193142,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ let mut msg = MessageBuilder::new_vec().question();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":193147,"byte_end":193202,"line_start":472,"line_end":472,"column_start":5,"column_end":60}},{"value":"/ msg.push(Question::new_in(Dname::root_ref(), Rtype::A)).unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":193207,"byte_end":193276,"line_start":473,"line_end":473,"column_start":5,"column_end":74}},{"value":"/ msg.push(&Question::new_in(Dname::root_ref(), Rtype::A)).unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":193281,"byte_end":193351,"line_start":474,"line_end":474,"column_start":5,"column_end":75}},{"value":"/ msg.push((Dname::root_ref(), Rtype::A, Class::In)).unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":193356,"byte_end":193420,"line_start":475,"line_end":475,"column_start":5,"column_end":69}},{"value":"/ msg.push((Dname::root_ref(), Rtype::A)).unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":193425,"byte_end":193478,"line_start":476,"line_end":476,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":193483,"byte_end":193490,"line_start":477,"line_end":477,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":193495,"byte_end":193498,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ [`AsQuestion`]: ../question/trait.AsQuestion.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":193503,"byte_end":193556,"line_start":479,"line_end":479,"column_start":5,"column_end":58}},{"value":"/ [`Question`]: ../question/trait.Question.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":193561,"byte_end":193610,"line_start":480,"line_end":480,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":194219,"byte_end":194225,"line_start":501,"line_end":501,"column_start":12,"column_end":18},"name":"rewind","qualname":"<QuestionBuilder<Target>>::rewind","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Rewinds to an empty question section.","sig":null,"attributes":[{"value":"/ Rewinds to an empty question section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":194105,"byte_end":194146,"line_start":498,"line_end":498,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":194151,"byte_end":194154,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ All previously added questions will be lost.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":194159,"byte_end":194207,"line_start":500,"line_end":500,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":194519,"byte_end":194526,"line_start":509,"line_end":509,"column_start":12,"column_end":19},"name":"builder","qualname":"<QuestionBuilder<Target>>::builder","value":"fn (mut self) -> MessageBuilder<Target>","parent":null,"children":[],"decl_id":null,"docs":" Converts the question builder into a message builder.","sig":null,"attributes":[{"value":"/ Converts the question builder into a message builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":194364,"byte_end":194421,"line_start":506,"line_end":506,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":194426,"byte_end":194429,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ All questions will be dropped and the question section will be empty.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":194434,"byte_end":194507,"line_start":508,"line_end":508,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":194745,"byte_end":194753,"line_start":517,"line_end":517,"column_start":12,"column_end":20},"name":"question","qualname":"<QuestionBuilder<Target>>::question","value":"fn (self) -> QuestionBuilder<Target>","parent":null,"children":[],"decl_id":null,"docs":" Converts the question builder into a question builder.","sig":null,"attributes":[{"value":"/ Converts the question builder into a question builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":194620,"byte_end":194678,"line_start":514,"line_end":514,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":194683,"byte_end":194686,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ In other words, doesn’t do anything.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":194691,"byte_end":194733,"line_start":516,"line_end":516,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":194882,"byte_end":194888,"line_start":522,"line_end":522,"column_start":12,"column_end":18},"name":"answer","qualname":"<QuestionBuilder<Target>>::answer","value":"fn (self) -> AnswerBuilder<Target>","parent":null,"children":[],"decl_id":null,"docs":" Converts the question builder into an answer builder.\n","sig":null,"attributes":[{"value":"/ Converts the question builder into an answer builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":194813,"byte_end":194870,"line_start":521,"line_end":521,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":195104,"byte_end":195113,"line_start":529,"line_end":529,"column_start":12,"column_end":21},"name":"authority","qualname":"<QuestionBuilder<Target>>::authority","value":"fn (self) -> AuthorityBuilder<Target>","parent":null,"children":[],"decl_id":null,"docs":" Converts the question builder into an authority builder.","sig":null,"attributes":[{"value":"/ Converts the question builder into an authority builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":194974,"byte_end":195034,"line_start":526,"line_end":526,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":195039,"byte_end":195042,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ This will leave the answer section empty.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":195047,"byte_end":195092,"line_start":528,"line_end":528,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":195341,"byte_end":195351,"line_start":536,"line_end":536,"column_start":12,"column_end":22},"name":"additional","qualname":"<QuestionBuilder<Target>>::additional","value":"fn (self) -> AdditionalBuilder<Target>","parent":null,"children":[],"decl_id":null,"docs":" Converts the question builder into an additional builder.","sig":null,"attributes":[{"value":"/ Converts the question builder into an additional builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":195195,"byte_end":195256,"line_start":533,"line_end":533,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":195261,"byte_end":195264,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ This will leave the answer and authority sections empty.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":195269,"byte_end":195329,"line_start":535,"line_end":535,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":195614,"byte_end":195620,"line_start":543,"line_end":543,"column_start":12,"column_end":18},"name":"finish","qualname":"<QuestionBuilder<Target>>::finish","value":"fn (self) -> Target","parent":null,"children":[],"decl_id":null,"docs":" Converts the question builder into the underlying octets builder.","sig":null,"attributes":[{"value":"/ Converts the question builder into the underlying octets builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":195447,"byte_end":195516,"line_start":540,"line_end":540,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":195521,"byte_end":195524,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ This will leave the answer, authority, and additional sections empty.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":195529,"byte_end":195602,"line_start":542,"line_end":542,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":195882,"byte_end":195894,"line_start":551,"line_end":551,"column_start":12,"column_end":24},"name":"into_message","qualname":"<QuestionBuilder<Target>>::into_message","value":"fn (self) -> Message<Target::Octets>","parent":null,"children":[],"decl_id":null,"docs":" Converts the question builder into the final message.","sig":null,"attributes":[{"value":"/ Converts the question builder into the final message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":195680,"byte_end":195737,"line_start":547,"line_end":547,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":195742,"byte_end":195745,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ The method will return a message atop whatever octets sequence the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":195750,"byte_end":195820,"line_start":549,"line_end":549,"column_start":5,"column_end":75}},{"value":"/ builder’s octets builder converts into.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":195825,"byte_end":195870,"line_start":550,"line_end":550,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":196117,"byte_end":196127,"line_start":559,"line_end":559,"column_start":12,"column_end":22},"name":"as_builder","qualname":"<QuestionBuilder<Target>>::as_builder","value":"fn (&self) -> &MessageBuilder<Target>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying message builder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying message builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":196047,"byte_end":196105,"line_start":558,"line_end":558,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":196275,"byte_end":196289,"line_start":564,"line_end":564,"column_start":12,"column_end":26},"name":"as_builder_mut","qualname":"<QuestionBuilder<Target>>::as_builder_mut","value":"fn (&mut self) -> &mut MessageBuilder<Target>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying message builder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying message builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":196197,"byte_end":196263,"line_start":563,"line_end":563,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":5387},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":199126,"byte_end":199139,"line_start":666,"line_end":666,"column_start":12,"column_end":25},"name":"AnswerBuilder","qualname":"::base::message_builder::AnswerBuilder","value":"AnswerBuilder {  }","parent":null,"children":[{"krate":0,"index":5389},{"krate":0,"index":5390}],"decl_id":null,"docs":" Builds the answer section of a DNS message.","sig":null,"attributes":[{"value":"/ Builds the answer section of a DNS message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":198131,"byte_end":198178,"line_start":644,"line_end":644,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":198179,"byte_end":198182,"line_start":645,"line_end":645,"column_start":1,"column_end":4}},{"value":"/ A value of this type can be acquired by calling the `answer` method on","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":198183,"byte_end":198257,"line_start":646,"line_end":646,"column_start":1,"column_end":75}},{"value":"/ any other builder type. See the [module documentation] for an overview of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":198258,"byte_end":198335,"line_start":647,"line_end":647,"column_start":1,"column_end":78}},{"value":"/ how to build a message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":198336,"byte_end":198363,"line_start":648,"line_end":648,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":198364,"byte_end":198367,"line_start":649,"line_end":649,"column_start":1,"column_end":4}},{"value":"/ You can push records to the end of the answer section via the [`push`]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":198368,"byte_end":198442,"line_start":650,"line_end":650,"column_start":1,"column_end":75}},{"value":"/ method. It accepts various things that represent resource records: record","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":198443,"byte_end":198520,"line_start":651,"line_end":651,"column_start":1,"column_end":78}},{"value":"/ values and references, tuples of an owner domain name, a class, TTL, and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":198521,"byte_end":198597,"line_start":652,"line_end":652,"column_start":1,"column_end":77}},{"value":"/ record data, as well as tuples of just the owner, TTL, and data, assuming","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":198598,"byte_end":198675,"line_start":653,"line_end":653,"column_start":1,"column_end":78}},{"value":"/ the class of IN.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":198676,"byte_end":198696,"line_start":654,"line_end":654,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":198697,"byte_end":198700,"line_start":655,"line_end":655,"column_start":1,"column_end":4}},{"value":"/ Once you are finished building the answer section, you can progress to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":198701,"byte_end":198775,"line_start":656,"line_end":656,"column_start":1,"column_end":75}},{"value":"/ the authority section via the [`authority`] method or finish the message","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":198776,"byte_end":198852,"line_start":657,"line_end":657,"column_start":1,"column_end":77}},{"value":"/ via [`finish`]. Additionally, conversions to all other builder types are","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":198853,"byte_end":198929,"line_start":658,"line_end":658,"column_start":1,"column_end":77}},{"value":"/ available as well.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":198930,"byte_end":198952,"line_start":659,"line_end":659,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":198953,"byte_end":198956,"line_start":660,"line_end":660,"column_start":1,"column_end":4}},{"value":"/ [`authority`]: #method.authority","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":198957,"byte_end":198993,"line_start":661,"line_end":661,"column_start":1,"column_end":37}},{"value":"/ [`finish`]: #method.finish","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":198994,"byte_end":199024,"line_start":662,"line_end":662,"column_start":1,"column_end":31}},{"value":"/ [`push`]: #method.push","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":199025,"byte_end":199051,"line_start":663,"line_end":663,"column_start":1,"column_end":27}},{"value":"/ [module documentation]: index.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":199052,"byte_end":199090,"line_start":664,"line_end":664,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":200740,"byte_end":200744,"line_start":713,"line_end":713,"column_start":12,"column_end":16},"name":"push","qualname":"<AnswerBuilder<Target>>::push","value":"fn (&mut self, record: impl AsRecord) -> Result<(), ShortBuf>","parent":null,"children":[],"decl_id":null,"docs":" Appends a record to the answer section.","sig":null,"attributes":[{"value":"/ Appends a record to the answer section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":199682,"byte_end":199725,"line_start":685,"line_end":685,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":199730,"byte_end":199733,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ This methods accepts anything that implements the [`AsRecord`] trait.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":199738,"byte_end":199811,"line_start":687,"line_end":687,"column_start":5,"column_end":78}},{"value":"/ Apart from record values and references, this are tuples of the owner","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":199816,"byte_end":199889,"line_start":688,"line_end":688,"column_start":5,"column_end":78}},{"value":"/ domain name, optionally the class (which is taken to be IN if","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":199894,"byte_end":199959,"line_start":689,"line_end":689,"column_start":5,"column_end":70}},{"value":"/ missing), the TTL, and record data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":199964,"byte_end":200003,"line_start":690,"line_end":690,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":200008,"byte_end":200011,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ In other words, you can do the following things:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":200016,"byte_end":200068,"line_start":692,"line_end":692,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":200073,"byte_end":200076,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":200081,"byte_end":200088,"line_start":694,"line_end":694,"column_start":5,"column_end":12}},{"value":"/ use domain::base::{Dname, MessageBuilder, Record, Rtype};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":200093,"byte_end":200154,"line_start":695,"line_end":695,"column_start":5,"column_end":66}},{"value":"/ use domain::base::iana::Class;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":200159,"byte_end":200193,"line_start":696,"line_end":696,"column_start":5,"column_end":39}},{"value":"/ use domain::rdata::A;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":200198,"byte_end":200223,"line_start":697,"line_end":697,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":200228,"byte_end":200231,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ let mut msg = MessageBuilder::new_vec().answer();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":200236,"byte_end":200289,"line_start":699,"line_end":699,"column_start":5,"column_end":58}},{"value":"/ let record = Record::new(","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":200294,"byte_end":200323,"line_start":700,"line_end":700,"column_start":5,"column_end":34}},{"value":"/     Dname::root_ref(), Class::In, 86400, A::from_octets(192, 0, 2, 1)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":200328,"byte_end":200401,"line_start":701,"line_end":701,"column_start":5,"column_end":78}},{"value":"/ );","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":200406,"byte_end":200412,"line_start":702,"line_end":702,"column_start":5,"column_end":11}},{"value":"/ msg.push(&record).unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":200417,"byte_end":200448,"line_start":703,"line_end":703,"column_start":5,"column_end":36}},{"value":"/ msg.push(record).unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":200453,"byte_end":200483,"line_start":704,"line_end":704,"column_start":5,"column_end":35}},{"value":"/ msg.push(","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":200488,"byte_end":200501,"line_start":705,"line_end":705,"column_start":5,"column_end":18}},{"value":"/     (Dname::root_ref(), Class::In, 86400, A::from_octets(192, 0, 2, 1))","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":200506,"byte_end":200581,"line_start":706,"line_end":706,"column_start":5,"column_end":80}},{"value":"/ ).unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":200586,"byte_end":200601,"line_start":707,"line_end":707,"column_start":5,"column_end":20}},{"value":"/ msg.push(","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":200606,"byte_end":200619,"line_start":708,"line_end":708,"column_start":5,"column_end":18}},{"value":"/     (Dname::root_ref(), 86400, A::from_octets(192, 0, 2, 1))","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":200624,"byte_end":200688,"line_start":709,"line_end":709,"column_start":5,"column_end":69}},{"value":"/ ).unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":200693,"byte_end":200708,"line_start":710,"line_end":710,"column_start":5,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":200713,"byte_end":200720,"line_start":711,"line_end":711,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":200725,"byte_end":200728,"line_start":712,"line_end":712,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":201301,"byte_end":201307,"line_start":730,"line_end":730,"column_start":12,"column_end":18},"name":"rewind","qualname":"<AnswerBuilder<Target>>::rewind","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Rewinds to an empty answer section.","sig":null,"attributes":[{"value":"/ Rewinds to an empty answer section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":201191,"byte_end":201230,"line_start":727,"line_end":727,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":201235,"byte_end":201238,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ All previously added answers will be lost.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":201243,"byte_end":201289,"line_start":729,"line_end":729,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":201589,"byte_end":201596,"line_start":739,"line_end":739,"column_start":12,"column_end":19},"name":"builder","qualname":"<AnswerBuilder<Target>>::builder","value":"fn (self) -> MessageBuilder<Target>","parent":null,"children":[],"decl_id":null,"docs":" Converts the answer builder into a message builder.","sig":null,"attributes":[{"value":"/ Converts the answer builder into a message builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":201424,"byte_end":201479,"line_start":735,"line_end":735,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":201484,"byte_end":201487,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ All questions and answers will be dropped and all sections will be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":201492,"byte_end":201562,"line_start":737,"line_end":737,"column_start":5,"column_end":75}},{"value":"/ empty.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":201567,"byte_end":201577,"line_start":738,"line_end":738,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":201851,"byte_end":201859,"line_start":747,"line_end":747,"column_start":12,"column_end":20},"name":"question","qualname":"<AnswerBuilder<Target>>::question","value":"fn (mut self) -> QuestionBuilder<Target>","parent":null,"children":[],"decl_id":null,"docs":" Converts the answer builder into a question builder.","sig":null,"attributes":[{"value":"/ Converts the answer builder into a question builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":201676,"byte_end":201732,"line_start":743,"line_end":743,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":201737,"byte_end":201740,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ All answers will be dropped. All previously added questions will,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":201745,"byte_end":201814,"line_start":745,"line_end":745,"column_start":5,"column_end":74}},{"value":"/ however, remain.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":201819,"byte_end":201839,"line_start":746,"line_end":746,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":202095,"byte_end":202101,"line_start":755,"line_end":755,"column_start":12,"column_end":18},"name":"answer","qualname":"<AnswerBuilder<Target>>::answer","value":"fn (self) -> AnswerBuilder<Target>","parent":null,"children":[],"decl_id":null,"docs":" Converts the answer builder into an answer builder.","sig":null,"attributes":[{"value":"/ Converts the answer builder into an answer builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":201976,"byte_end":202031,"line_start":752,"line_end":752,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":202036,"byte_end":202039,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ This doesn’t do anything, really.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":202044,"byte_end":202083,"line_start":754,"line_end":754,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":202229,"byte_end":202238,"line_start":760,"line_end":760,"column_start":12,"column_end":21},"name":"authority","qualname":"<AnswerBuilder<Target>>::authority","value":"fn (self) -> AuthorityBuilder<Target>","parent":null,"children":[],"decl_id":null,"docs":" Converts the answer builder into an authority builder.\n","sig":null,"attributes":[{"value":"/ Converts the answer builder into an authority builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":202159,"byte_end":202217,"line_start":759,"line_end":759,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":202454,"byte_end":202464,"line_start":767,"line_end":767,"column_start":12,"column_end":22},"name":"additional","qualname":"<AnswerBuilder<Target>>::additional","value":"fn (self) -> AdditionalBuilder<Target>","parent":null,"children":[],"decl_id":null,"docs":" Converts the answer builder into an additional builder.","sig":null,"attributes":[{"value":"/ Converts the answer builder into an additional builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":202322,"byte_end":202381,"line_start":764,"line_end":764,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":202386,"byte_end":202389,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ This will leave the authority section empty.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":202394,"byte_end":202442,"line_start":766,"line_end":766,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":202707,"byte_end":202713,"line_start":774,"line_end":774,"column_start":12,"column_end":18},"name":"finish","qualname":"<AnswerBuilder<Target>>::finish","value":"fn (self) -> Target","parent":null,"children":[],"decl_id":null,"docs":" Converts the answer builder into the underlying octets builder.","sig":null,"attributes":[{"value":"/ Converts the answer builder into the underlying octets builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":202551,"byte_end":202618,"line_start":771,"line_end":771,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":202623,"byte_end":202626,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ This will leave the authority and additional sections empty.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":202631,"byte_end":202695,"line_start":773,"line_end":773,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":202973,"byte_end":202985,"line_start":782,"line_end":782,"column_start":12,"column_end":24},"name":"into_message","qualname":"<AnswerBuilder<Target>>::into_message","value":"fn (self) -> Message<Target::Octets>","parent":null,"children":[],"decl_id":null,"docs":" Converts the answer builder into the final message.","sig":null,"attributes":[{"value":"/ Converts the answer builder into the final message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":202773,"byte_end":202828,"line_start":778,"line_end":778,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":202833,"byte_end":202836,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ The method will return a message atop whatever octets sequence the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":202841,"byte_end":202911,"line_start":780,"line_end":780,"column_start":5,"column_end":75}},{"value":"/ builder’s octets builder converts into.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":202916,"byte_end":202961,"line_start":781,"line_end":781,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":203206,"byte_end":203216,"line_start":790,"line_end":790,"column_start":12,"column_end":22},"name":"as_builder","qualname":"<AnswerBuilder<Target>>::as_builder","value":"fn (&self) -> &MessageBuilder<Target>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying message builder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying message builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":203136,"byte_end":203194,"line_start":789,"line_end":789,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":203364,"byte_end":203378,"line_start":795,"line_end":795,"column_start":12,"column_end":26},"name":"as_builder_mut","qualname":"<AnswerBuilder<Target>>::as_builder_mut","value":"fn (&mut self) -> &mut MessageBuilder<Target>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying message builder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying message builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":203286,"byte_end":203352,"line_start":794,"line_end":794,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":5397},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":206207,"byte_end":206223,"line_start":897,"line_end":897,"column_start":12,"column_end":28},"name":"AuthorityBuilder","qualname":"::base::message_builder::AuthorityBuilder","value":"AuthorityBuilder {  }","parent":null,"children":[{"krate":0,"index":5399},{"krate":0,"index":5400}],"decl_id":null,"docs":" Builds the authority section of a DNS message.","sig":null,"attributes":[{"value":"/ Builds the authority section of a DNS message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":205196,"byte_end":205246,"line_start":875,"line_end":875,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":205247,"byte_end":205250,"line_start":876,"line_end":876,"column_start":1,"column_end":4}},{"value":"/ A value of this type can be acquired by calling the `authority` method on","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":205251,"byte_end":205328,"line_start":877,"line_end":877,"column_start":1,"column_end":78}},{"value":"/ any other builder type. See the [module documentation] for an overview of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":205329,"byte_end":205406,"line_start":878,"line_end":878,"column_start":1,"column_end":78}},{"value":"/ how to build a message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":205407,"byte_end":205434,"line_start":879,"line_end":879,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":205435,"byte_end":205438,"line_start":880,"line_end":880,"column_start":1,"column_end":4}},{"value":"/ You can push records to the end of the authority section via the [`push`]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":205439,"byte_end":205516,"line_start":881,"line_end":881,"column_start":1,"column_end":78}},{"value":"/ method. It accepts various things that represent resource records: record","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":205517,"byte_end":205594,"line_start":882,"line_end":882,"column_start":1,"column_end":78}},{"value":"/ values and references, tuples of an owner domain name, a class, TTL, and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":205595,"byte_end":205671,"line_start":883,"line_end":883,"column_start":1,"column_end":77}},{"value":"/ record data, as well as tuples of just the owner, TTL, and data, assuming","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":205672,"byte_end":205749,"line_start":884,"line_end":884,"column_start":1,"column_end":78}},{"value":"/ the class of IN.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":205750,"byte_end":205770,"line_start":885,"line_end":885,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":205771,"byte_end":205774,"line_start":886,"line_end":886,"column_start":1,"column_end":4}},{"value":"/ Once you are finished building the authority section, you can progress to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":205775,"byte_end":205852,"line_start":887,"line_end":887,"column_start":1,"column_end":78}},{"value":"/ the additional section via the [`additional`] method or finish the message","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":205853,"byte_end":205931,"line_start":888,"line_end":888,"column_start":1,"column_end":79}},{"value":"/ via [`finish`]. Additionally, conversions to all other builder types are","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":205932,"byte_end":206008,"line_start":889,"line_end":889,"column_start":1,"column_end":77}},{"value":"/ available as well.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":206009,"byte_end":206031,"line_start":890,"line_end":890,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":206032,"byte_end":206035,"line_start":891,"line_end":891,"column_start":1,"column_end":4}},{"value":"/ [`additional`]: #method.additional","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":206036,"byte_end":206074,"line_start":892,"line_end":892,"column_start":1,"column_end":39}},{"value":"/ [`finish`]: #method.finish","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":206075,"byte_end":206105,"line_start":893,"line_end":893,"column_start":1,"column_end":31}},{"value":"/ [`push`]: #method.push","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":206106,"byte_end":206132,"line_start":894,"line_end":894,"column_start":1,"column_end":27}},{"value":"/ [module documentation]: index.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":206133,"byte_end":206171,"line_start":895,"line_end":895,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":207832,"byte_end":207836,"line_start":943,"line_end":943,"column_start":12,"column_end":16},"name":"push","qualname":"<AuthorityBuilder<Target>>::push","value":"fn (&mut self, record: impl AsRecord) -> Result<(), ShortBuf>","parent":null,"children":[],"decl_id":null,"docs":" Appends a record to the authority section.","sig":null,"attributes":[{"value":"/ Appends a record to the authority section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":206776,"byte_end":206822,"line_start":916,"line_end":916,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":206827,"byte_end":206830,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ This methods accepts anything that implements the [`AsRecord`] trait.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":206835,"byte_end":206908,"line_start":918,"line_end":918,"column_start":5,"column_end":78}},{"value":"/ Apart from record values and references, this are tuples of the owner","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":206913,"byte_end":206986,"line_start":919,"line_end":919,"column_start":5,"column_end":78}},{"value":"/ domain name, optionally the class (which is taken to be IN if","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":206991,"byte_end":207056,"line_start":920,"line_end":920,"column_start":5,"column_end":70}},{"value":"/ missing), the TTL, and record data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":207061,"byte_end":207100,"line_start":921,"line_end":921,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":207105,"byte_end":207108,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ In other words, you can do the following things:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":207113,"byte_end":207165,"line_start":923,"line_end":923,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":207170,"byte_end":207173,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":207178,"byte_end":207185,"line_start":925,"line_end":925,"column_start":5,"column_end":12}},{"value":"/ use domain::base::{Dname, MessageBuilder, Record, Rtype};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":207190,"byte_end":207251,"line_start":926,"line_end":926,"column_start":5,"column_end":66}},{"value":"/ use domain::base::iana::Class;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":207256,"byte_end":207290,"line_start":927,"line_end":927,"column_start":5,"column_end":39}},{"value":"/ use domain::rdata::A;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":207295,"byte_end":207320,"line_start":928,"line_end":928,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":207325,"byte_end":207328,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ let mut msg = MessageBuilder::new_vec().authority();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":207333,"byte_end":207389,"line_start":930,"line_end":930,"column_start":5,"column_end":61}},{"value":"/ let record = Record::new(","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":207394,"byte_end":207423,"line_start":931,"line_end":931,"column_start":5,"column_end":34}},{"value":"/     Dname::root_ref(), Class::In, 86400, A::from_octets(192, 0, 2, 1)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":207428,"byte_end":207501,"line_start":932,"line_end":932,"column_start":5,"column_end":78}},{"value":"/ );","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":207506,"byte_end":207512,"line_start":933,"line_end":933,"column_start":5,"column_end":11}},{"value":"/ msg.push(&record).unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":207517,"byte_end":207548,"line_start":934,"line_end":934,"column_start":5,"column_end":36}},{"value":"/ msg.push(record).unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":207553,"byte_end":207583,"line_start":935,"line_end":935,"column_start":5,"column_end":35}},{"value":"/ msg.push(","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":207588,"byte_end":207601,"line_start":936,"line_end":936,"column_start":5,"column_end":18}},{"value":"/     (Dname::root_ref(), Class::In, 86400, A::from_octets(192, 0, 2, 1))","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":207606,"byte_end":207681,"line_start":937,"line_end":937,"column_start":5,"column_end":80}},{"value":"/ ).unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":207686,"byte_end":207701,"line_start":938,"line_end":938,"column_start":5,"column_end":20}},{"value":"/ msg.push(","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":207706,"byte_end":207719,"line_start":939,"line_end":939,"column_start":5,"column_end":18}},{"value":"/     (Dname::root_ref(), 86400, A::from_octets(192, 0, 2, 1))","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":207724,"byte_end":207788,"line_start":940,"line_end":940,"column_start":5,"column_end":69}},{"value":"/ ).unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":207793,"byte_end":207808,"line_start":941,"line_end":941,"column_start":5,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":207813,"byte_end":207820,"line_start":942,"line_end":942,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":208421,"byte_end":208427,"line_start":961,"line_end":961,"column_start":12,"column_end":18},"name":"rewind","qualname":"<AuthorityBuilder<Target>>::rewind","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Rewinds to an empty authority section.","sig":null,"attributes":[{"value":"/ Rewinds to an empty authority section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":208298,"byte_end":208340,"line_start":958,"line_end":958,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":208345,"byte_end":208348,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ All previously added authority records will be lost.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":208353,"byte_end":208409,"line_start":960,"line_end":960,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":208738,"byte_end":208745,"line_start":970,"line_end":970,"column_start":12,"column_end":19},"name":"builder","qualname":"<AuthorityBuilder<Target>>::builder","value":"fn (self) -> MessageBuilder<Target>","parent":null,"children":[],"decl_id":null,"docs":" Converts the authority builder into a message builder.","sig":null,"attributes":[{"value":"/ Converts the authority builder into a message builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":208552,"byte_end":208610,"line_start":966,"line_end":966,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":208615,"byte_end":208618,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ All questions, answer and authority records will be dropped and all","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":208623,"byte_end":208694,"line_start":968,"line_end":968,"column_start":5,"column_end":76}},{"value":"/ sections will be empty.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":208699,"byte_end":208726,"line_start":969,"line_end":969,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":209024,"byte_end":209032,"line_start":978,"line_end":978,"column_start":12,"column_end":20},"name":"question","qualname":"<AuthorityBuilder<Target>>::question","value":"fn (self) -> QuestionBuilder<Target>","parent":null,"children":[],"decl_id":null,"docs":" Converts the authority builder into a question builder.","sig":null,"attributes":[{"value":"/ Converts the authority builder into a question builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":208825,"byte_end":208884,"line_start":974,"line_end":974,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":208889,"byte_end":208892,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ All authority and answer records will be dropped. All previously added","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":208897,"byte_end":208971,"line_start":976,"line_end":976,"column_start":5,"column_end":79}},{"value":"/ questions will, however, remain.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":208976,"byte_end":209012,"line_start":977,"line_end":977,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":209318,"byte_end":209324,"line_start":986,"line_end":986,"column_start":12,"column_end":18},"name":"answer","qualname":"<AuthorityBuilder<Target>>::answer","value":"fn (mut self) -> AnswerBuilder<Target>","parent":null,"children":[],"decl_id":null,"docs":" Converts the authority builder into an answer builder.","sig":null,"attributes":[{"value":"/ Converts the authority builder into an answer builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":209112,"byte_end":209170,"line_start":982,"line_end":982,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":209175,"byte_end":209178,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ All authority records will be dropped. All previously added questions","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":209183,"byte_end":209256,"line_start":984,"line_end":984,"column_start":5,"column_end":78}},{"value":"/ and answer records will, however, remain.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":209261,"byte_end":209306,"line_start":985,"line_end":985,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":209549,"byte_end":209558,"line_start":994,"line_end":994,"column_start":12,"column_end":21},"name":"authority","qualname":"<AuthorityBuilder<Target>>::authority","value":"fn (self) -> AuthorityBuilder<Target>","parent":null,"children":[],"decl_id":null,"docs":" Converts the authority builder into an authority builder.","sig":null,"attributes":[{"value":"/ Converts the authority builder into an authority builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":209416,"byte_end":209477,"line_start":991,"line_end":991,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":209482,"byte_end":209485,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ This is identical to the identity function.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":209490,"byte_end":209537,"line_start":993,"line_end":993,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":209693,"byte_end":209703,"line_start":999,"line_end":999,"column_start":12,"column_end":22},"name":"additional","qualname":"<AuthorityBuilder<Target>>::additional","value":"fn (self) -> AdditionalBuilder<Target>","parent":null,"children":[],"decl_id":null,"docs":" Converts the authority builder into an additional builder.\n","sig":null,"attributes":[{"value":"/ Converts the authority builder into an additional builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":209619,"byte_end":209681,"line_start":998,"line_end":998,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":209933,"byte_end":209939,"line_start":1006,"line_end":1006,"column_start":12,"column_end":18},"name":"finish","qualname":"<AuthorityBuilder<Target>>::finish","value":"fn (self) -> Target","parent":null,"children":[],"decl_id":null,"docs":" Converts the authority builder into the underlying octets builder.","sig":null,"attributes":[{"value":"/ Converts the authority builder into the underlying octets builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":209789,"byte_end":209859,"line_start":1003,"line_end":1003,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":209864,"byte_end":209867,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ This will leave the additional section empty.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":209872,"byte_end":209921,"line_start":1005,"line_end":1005,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":210201,"byte_end":210213,"line_start":1014,"line_end":1014,"column_start":12,"column_end":24},"name":"into_message","qualname":"<AuthorityBuilder<Target>>::into_message","value":"fn (self) -> Message<Target::Octets>","parent":null,"children":[],"decl_id":null,"docs":" Converts the authority builder into the final message.","sig":null,"attributes":[{"value":"/ Converts the authority builder into the final message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":209998,"byte_end":210056,"line_start":1010,"line_end":1010,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":210061,"byte_end":210064,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ The method will return a message atop whatever octets sequence the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":210069,"byte_end":210139,"line_start":1012,"line_end":1012,"column_start":5,"column_end":75}},{"value":"/ builder’s octets builder converts into.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":210144,"byte_end":210189,"line_start":1013,"line_end":1013,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":210436,"byte_end":210446,"line_start":1022,"line_end":1022,"column_start":12,"column_end":22},"name":"as_builder","qualname":"<AuthorityBuilder<Target>>::as_builder","value":"fn (&self) -> &MessageBuilder<Target>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying message builder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying message builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":210366,"byte_end":210424,"line_start":1021,"line_end":1021,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":210605,"byte_end":210619,"line_start":1027,"line_end":1027,"column_start":12,"column_end":26},"name":"as_builder_mut","qualname":"<AuthorityBuilder<Target>>::as_builder_mut","value":"fn (&mut self) -> &mut MessageBuilder<Target>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying message builder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying message builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":210527,"byte_end":210593,"line_start":1026,"line_end":1026,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":5407},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":213769,"byte_end":213786,"line_start":1134,"line_end":1134,"column_start":12,"column_end":29},"name":"AdditionalBuilder","qualname":"::base::message_builder::AdditionalBuilder","value":"AdditionalBuilder {  }","parent":null,"children":[{"krate":0,"index":5409},{"krate":0,"index":5410}],"decl_id":null,"docs":" Builds the additional section of a DNS message.","sig":null,"attributes":[{"value":"/ Builds the additional section of a DNS message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":212496,"byte_end":212547,"line_start":1107,"line_end":1107,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":212548,"byte_end":212551,"line_start":1108,"line_end":1108,"column_start":1,"column_end":4}},{"value":"/ A value of this type can be acquired by calling the `additional` method on","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":212552,"byte_end":212630,"line_start":1109,"line_end":1109,"column_start":1,"column_end":79}},{"value":"/ any other builder type. See the [module documentation] for an overview of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":212631,"byte_end":212708,"line_start":1110,"line_end":1110,"column_start":1,"column_end":78}},{"value":"/ how to build a message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":212709,"byte_end":212736,"line_start":1111,"line_end":1111,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":212737,"byte_end":212740,"line_start":1112,"line_end":1112,"column_start":1,"column_end":4}},{"value":"/ You can push records to the end of the additional section via the [`push`]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":212741,"byte_end":212819,"line_start":1113,"line_end":1113,"column_start":1,"column_end":79}},{"value":"/ method. It accepts various things that represent resource records: record","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":212820,"byte_end":212897,"line_start":1114,"line_end":1114,"column_start":1,"column_end":78}},{"value":"/ values and references, tuples of an owner domain name, a class, TTL, and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":212898,"byte_end":212974,"line_start":1115,"line_end":1115,"column_start":1,"column_end":77}},{"value":"/ record data, as well as tuples of just the owner, TTL, and data, assuming","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":212975,"byte_end":213052,"line_start":1116,"line_end":1116,"column_start":1,"column_end":78}},{"value":"/ the class of IN.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":213053,"byte_end":213073,"line_start":1117,"line_end":1117,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":213074,"byte_end":213077,"line_start":1118,"line_end":1118,"column_start":1,"column_end":4}},{"value":"/ A special method exists to make adding an OPT record to the section","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":213078,"byte_end":213149,"line_start":1119,"line_end":1119,"column_start":1,"column_end":72}},{"value":"/ easier. The [`opt`] method creates an [`OptBuilder`] and passes it to a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":213150,"byte_end":213225,"line_start":1120,"line_end":1120,"column_start":1,"column_end":76}},{"value":"/ closure. This way, you can add and remove OPT records from additional","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":213226,"byte_end":213299,"line_start":1121,"line_end":1121,"column_start":1,"column_end":74}},{"value":"/ builders that are part of another type and cannot be traded in easily.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":213300,"byte_end":213374,"line_start":1122,"line_end":1122,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":213375,"byte_end":213378,"line_start":1123,"line_end":1123,"column_start":1,"column_end":4}},{"value":"/ Once you are finished building the additional section, you can finish the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":213379,"byte_end":213456,"line_start":1124,"line_end":1124,"column_start":1,"column_end":78}},{"value":"/ message via [`finish`]. Additionally, conversions to all other builder","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":213457,"byte_end":213531,"line_start":1125,"line_end":1125,"column_start":1,"column_end":75}},{"value":"/ types are available as well.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":213532,"byte_end":213564,"line_start":1126,"line_end":1126,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":213565,"byte_end":213568,"line_start":1127,"line_end":1127,"column_start":1,"column_end":4}},{"value":"/ [`finish`]: #method.finish","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":213569,"byte_end":213599,"line_start":1128,"line_end":1128,"column_start":1,"column_end":31}},{"value":"/ [`opt`]: #method.opt","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":213600,"byte_end":213624,"line_start":1129,"line_end":1129,"column_start":1,"column_end":25}},{"value":"/ [`push`]: #method.push","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":213625,"byte_end":213651,"line_start":1130,"line_end":1130,"column_start":1,"column_end":27}},{"value":"/ [`OptBuilder`]: struct.OptBuilder.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":213652,"byte_end":213694,"line_start":1131,"line_end":1131,"column_start":1,"column_end":43}},{"value":"/ [module documentation]: index.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":213695,"byte_end":213733,"line_start":1132,"line_end":1132,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":215417,"byte_end":215421,"line_start":1180,"line_end":1180,"column_start":12,"column_end":16},"name":"push","qualname":"<AdditionalBuilder<Target>>::push","value":"fn (&mut self, record: impl AsRecord) -> Result<(), ShortBuf>","parent":null,"children":[],"decl_id":null,"docs":" Appends a record to the additional section.","sig":null,"attributes":[{"value":"/ Appends a record to the additional section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":214359,"byte_end":214406,"line_start":1153,"line_end":1153,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":214411,"byte_end":214414,"line_start":1154,"line_end":1154,"column_start":5,"column_end":8}},{"value":"/ This methods accepts anything that implements the [`AsRecord`] trait.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":214419,"byte_end":214492,"line_start":1155,"line_end":1155,"column_start":5,"column_end":78}},{"value":"/ Apart from record values and references, this are tuples of the owner","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":214497,"byte_end":214570,"line_start":1156,"line_end":1156,"column_start":5,"column_end":78}},{"value":"/ domain name, optionally the class (which is taken to be IN if","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":214575,"byte_end":214640,"line_start":1157,"line_end":1157,"column_start":5,"column_end":70}},{"value":"/ missing), the TTL, and record data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":214645,"byte_end":214684,"line_start":1158,"line_end":1158,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":214689,"byte_end":214692,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ In other words, you can do the following things:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":214697,"byte_end":214749,"line_start":1160,"line_end":1160,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":214754,"byte_end":214757,"line_start":1161,"line_end":1161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":214762,"byte_end":214769,"line_start":1162,"line_end":1162,"column_start":5,"column_end":12}},{"value":"/ use domain::base::{Dname, MessageBuilder, Record, Rtype};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":214774,"byte_end":214835,"line_start":1163,"line_end":1163,"column_start":5,"column_end":66}},{"value":"/ use domain::base::iana::Class;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":214840,"byte_end":214874,"line_start":1164,"line_end":1164,"column_start":5,"column_end":39}},{"value":"/ use domain::rdata::A;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":214879,"byte_end":214904,"line_start":1165,"line_end":1165,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":214909,"byte_end":214912,"line_start":1166,"line_end":1166,"column_start":5,"column_end":8}},{"value":"/ let mut msg = MessageBuilder::new_vec().additional();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":214917,"byte_end":214974,"line_start":1167,"line_end":1167,"column_start":5,"column_end":62}},{"value":"/ let record = Record::new(","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":214979,"byte_end":215008,"line_start":1168,"line_end":1168,"column_start":5,"column_end":34}},{"value":"/     Dname::root_ref(), Class::In, 86400, A::from_octets(192, 0, 2, 1)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":215013,"byte_end":215086,"line_start":1169,"line_end":1169,"column_start":5,"column_end":78}},{"value":"/ );","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":215091,"byte_end":215097,"line_start":1170,"line_end":1170,"column_start":5,"column_end":11}},{"value":"/ msg.push(&record).unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":215102,"byte_end":215133,"line_start":1171,"line_end":1171,"column_start":5,"column_end":36}},{"value":"/ msg.push(record).unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":215138,"byte_end":215168,"line_start":1172,"line_end":1172,"column_start":5,"column_end":35}},{"value":"/ msg.push(","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":215173,"byte_end":215186,"line_start":1173,"line_end":1173,"column_start":5,"column_end":18}},{"value":"/     (Dname::root_ref(), Class::In, 86400, A::from_octets(192, 0, 2, 1))","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":215191,"byte_end":215266,"line_start":1174,"line_end":1174,"column_start":5,"column_end":80}},{"value":"/ ).unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":215271,"byte_end":215286,"line_start":1175,"line_end":1175,"column_start":5,"column_end":20}},{"value":"/ msg.push(","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":215291,"byte_end":215304,"line_start":1176,"line_end":1176,"column_start":5,"column_end":18}},{"value":"/     (Dname::root_ref(), 86400, A::from_octets(192, 0, 2, 1))","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":215309,"byte_end":215373,"line_start":1177,"line_end":1177,"column_start":5,"column_end":69}},{"value":"/ ).unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":215378,"byte_end":215393,"line_start":1178,"line_end":1178,"column_start":5,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":215398,"byte_end":215405,"line_start":1179,"line_end":1179,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":216174,"byte_end":216177,"line_start":1199,"line_end":1199,"column_start":12,"column_end":15},"name":"opt","qualname":"<AdditionalBuilder<Target>>::opt","value":"fn <F, R> (&mut self, build: F) -> Result<R, ShortBuf>","parent":null,"children":[],"decl_id":null,"docs":" Appends and builds an OPT record.","sig":null,"attributes":[{"value":"/ Appends and builds an OPT record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":215720,"byte_end":215757,"line_start":1189,"line_end":1189,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":215762,"byte_end":215765,"line_start":1190,"line_end":1190,"column_start":5,"column_end":8}},{"value":"/ The actual building of the record is handled by a closure that","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":215770,"byte_end":215836,"line_start":1191,"line_end":1191,"column_start":5,"column_end":71}},{"value":"/ receives an [`OptBuilder`] which can both change the header of the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":215841,"byte_end":215911,"line_start":1192,"line_end":1192,"column_start":5,"column_end":75}},{"value":"/ record and add options.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":215916,"byte_end":215943,"line_start":1193,"line_end":1193,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":215948,"byte_end":215951,"line_start":1194,"line_end":1194,"column_start":5,"column_end":8}},{"value":"/ The method will return whatever the closure returns. In addition, it","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":215956,"byte_end":216028,"line_start":1195,"line_end":1195,"column_start":5,"column_end":77}},{"value":"/ will return an error if it failed to add the header of the OPT record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":216033,"byte_end":216107,"line_start":1196,"line_end":1196,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":216112,"byte_end":216115,"line_start":1197,"line_end":1197,"column_start":5,"column_end":8}},{"value":"/ [`OptBuilder`]: struct.OptBuilder.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":216120,"byte_end":216162,"line_start":1198,"line_end":1198,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":216641,"byte_end":216647,"line_start":1213,"line_end":1213,"column_start":12,"column_end":18},"name":"rewind","qualname":"<AdditionalBuilder<Target>>::rewind","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Rewinds to an empty additional section.","sig":null,"attributes":[{"value":"/ Rewinds to an empty additional section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":216516,"byte_end":216559,"line_start":1210,"line_end":1210,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":216564,"byte_end":216567,"line_start":1211,"line_end":1211,"column_start":5,"column_end":8}},{"value":"/ All previously added additional records will be lost.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":216572,"byte_end":216629,"line_start":1212,"line_end":1212,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":216944,"byte_end":216951,"line_start":1222,"line_end":1222,"column_start":12,"column_end":19},"name":"builder","qualname":"<AdditionalBuilder<Target>>::builder","value":"fn (self) -> MessageBuilder<Target>","parent":null,"children":[],"decl_id":null,"docs":" Converts the additional builder into a message builder.","sig":null,"attributes":[{"value":"/ Converts the additional builder into a message builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":216775,"byte_end":216834,"line_start":1218,"line_end":1218,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":216839,"byte_end":216842,"line_start":1219,"line_end":1219,"column_start":5,"column_end":8}},{"value":"/ All questions and records will be dropped and all sections will be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":216847,"byte_end":216917,"line_start":1220,"line_end":1220,"column_start":5,"column_end":75}},{"value":"/ empty.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":216922,"byte_end":216932,"line_start":1221,"line_end":1221,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":217244,"byte_end":217252,"line_start":1230,"line_end":1230,"column_start":12,"column_end":20},"name":"question","qualname":"<AdditionalBuilder<Target>>::question","value":"fn (self) -> QuestionBuilder<Target>","parent":null,"children":[],"decl_id":null,"docs":" Converts the additional builder into a question builder.","sig":null,"attributes":[{"value":"/ Converts the additional builder into a question builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":217031,"byte_end":217091,"line_start":1226,"line_end":1226,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":217096,"byte_end":217099,"line_start":1227,"line_end":1227,"column_start":5,"column_end":8}},{"value":"/ All answer, authority, and additional records will be dropped. All","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":217104,"byte_end":217174,"line_start":1228,"line_end":1228,"column_start":5,"column_end":75}},{"value":"/ previously added questions will, however, remain.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":217179,"byte_end":217232,"line_start":1229,"line_end":1229,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":217527,"byte_end":217533,"line_start":1238,"line_end":1238,"column_start":12,"column_end":18},"name":"answer","qualname":"<AdditionalBuilder<Target>>::answer","value":"fn (self) -> AnswerBuilder<Target>","parent":null,"children":[],"decl_id":null,"docs":" Converts the additional builder into an answer builder.","sig":null,"attributes":[{"value":"/ Converts the additional builder into an answer builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":217332,"byte_end":217391,"line_start":1234,"line_end":1234,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":217396,"byte_end":217399,"line_start":1235,"line_end":1235,"column_start":5,"column_end":8}},{"value":"/ All authority and additional records will be dropped. All questions","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":217404,"byte_end":217475,"line_start":1236,"line_end":1236,"column_start":5,"column_end":76}},{"value":"/ and answer records will remain.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":217480,"byte_end":217515,"line_start":1237,"line_end":1237,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":217808,"byte_end":217817,"line_start":1246,"line_end":1246,"column_start":12,"column_end":21},"name":"authority","qualname":"<AdditionalBuilder<Target>>::authority","value":"fn (mut self) -> AuthorityBuilder<Target>","parent":null,"children":[],"decl_id":null,"docs":" Converts the additional builder into an authority builder.","sig":null,"attributes":[{"value":"/ Converts the additional builder into an authority builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":217612,"byte_end":217674,"line_start":1242,"line_end":1242,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":217679,"byte_end":217682,"line_start":1243,"line_end":1243,"column_start":5,"column_end":8}},{"value":"/ All additional records will be dropped. All questions, answer, and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":217687,"byte_end":217757,"line_start":1244,"line_end":1244,"column_start":5,"column_end":75}},{"value":"/ authority records will remain.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":217762,"byte_end":217796,"line_start":1245,"line_end":1245,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":218047,"byte_end":218057,"line_start":1254,"line_end":1254,"column_start":12,"column_end":22},"name":"additional","qualname":"<AdditionalBuilder<Target>>::additional","value":"fn (self) -> AdditionalBuilder<Target>","parent":null,"children":[],"decl_id":null,"docs":" Converts the additional builder into an additional builder.","sig":null,"attributes":[{"value":"/ Converts the additional builder into an additional builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":217915,"byte_end":217978,"line_start":1251,"line_end":1251,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":217983,"byte_end":217986,"line_start":1252,"line_end":1252,"column_start":5,"column_end":8}},{"value":"/ In other words, does absolutely nothing.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":217991,"byte_end":218035,"line_start":1253,"line_end":1253,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":218202,"byte_end":218208,"line_start":1259,"line_end":1259,"column_start":12,"column_end":18},"name":"finish","qualname":"<AdditionalBuilder<Target>>::finish","value":"fn (self) -> Target","parent":null,"children":[],"decl_id":null,"docs":" Converts the additional builder into the underlying octets builder.\n","sig":null,"attributes":[{"value":"/ Converts the additional builder into the underlying octets builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":218119,"byte_end":218190,"line_start":1258,"line_end":1258,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":218474,"byte_end":218486,"line_start":1267,"line_end":1267,"column_start":12,"column_end":24},"name":"into_message","qualname":"<AdditionalBuilder<Target>>::into_message","value":"fn (self) -> Message<Target::Octets>","parent":null,"children":[],"decl_id":null,"docs":" Converts the additional builder into the final message.","sig":null,"attributes":[{"value":"/ Converts the additional builder into the final message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":218270,"byte_end":218329,"line_start":1263,"line_end":1263,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":218334,"byte_end":218337,"line_start":1264,"line_end":1264,"column_start":5,"column_end":8}},{"value":"/ The method will return a message atop whatever octets sequence the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":218342,"byte_end":218412,"line_start":1265,"line_end":1265,"column_start":5,"column_end":75}},{"value":"/ builder’s octets builder converts into.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":218417,"byte_end":218462,"line_start":1266,"line_end":1266,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":218713,"byte_end":218723,"line_start":1275,"line_end":1275,"column_start":12,"column_end":22},"name":"as_builder","qualname":"<AdditionalBuilder<Target>>::as_builder","value":"fn (&self) -> &MessageBuilder<Target>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying message builder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying message builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":218643,"byte_end":218701,"line_start":1274,"line_end":1274,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":218885,"byte_end":218899,"line_start":1280,"line_end":1280,"column_start":12,"column_end":26},"name":"as_builder_mut","qualname":"<AdditionalBuilder<Target>>::as_builder_mut","value":"fn (&mut self) -> &mut MessageBuilder<Target>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying message builder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying message builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":218807,"byte_end":218873,"line_start":1279,"line_end":1279,"column_start":5,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":888},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":221167,"byte_end":221187,"line_start":1368,"line_end":1368,"column_start":11,"column_end":31},"name":"RecordSectionBuilder","qualname":"::base::message_builder::RecordSectionBuilder","value":"RecordSectionBuilder","parent":null,"children":[{"krate":0,"index":889}],"decl_id":null,"docs":" A section that can have records pushed to it.","sig":null,"attributes":[{"value":"/ A section that can have records pushed to it.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":220787,"byte_end":220836,"line_start":1360,"line_end":1360,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":220837,"byte_end":220840,"line_start":1361,"line_end":1361,"column_start":1,"column_end":4}},{"value":"/ This trait exists to make it possible to write code that works for all","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":220841,"byte_end":220915,"line_start":1362,"line_end":1362,"column_start":1,"column_end":75}},{"value":"/ three record sections. It basically just duplicates the `push` method of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":220916,"byte_end":220992,"line_start":1363,"line_end":1363,"column_start":1,"column_end":77}},{"value":"/ these sections.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":220993,"byte_end":221012,"line_start":1364,"line_end":1364,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":221013,"byte_end":221016,"line_start":1365,"line_end":1365,"column_start":1,"column_end":4}},{"value":"/ (This method is available on the sections as a method, too, so you don’t","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":221017,"byte_end":221095,"line_start":1366,"line_end":1366,"column_start":1,"column_end":77}},{"value":"/ need to import the `RecordSectionBuilder` all the time.)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":221096,"byte_end":221156,"line_start":1367,"line_end":1367,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":221520,"byte_end":221524,"line_start":1375,"line_end":1375,"column_start":8,"column_end":12},"name":"push","qualname":"::base::message_builder::RecordSectionBuilder::push","value":"fn (&mut self, record: impl AsRecord) -> Result<(), ShortBuf>","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Appends a record to a record section.","sig":null,"attributes":[{"value":"/ Appends a record to a record section.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":221194,"byte_end":221235,"line_start":1369,"line_end":1369,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":221240,"byte_end":221243,"line_start":1370,"line_end":1370,"column_start":5,"column_end":8}},{"value":"/ The methods accepts anything that implements the [`AsRecord`] trait.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":221248,"byte_end":221320,"line_start":1371,"line_end":1371,"column_start":5,"column_end":77}},{"value":"/ Apart from record values and references, this are tuples of the owner","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":221325,"byte_end":221398,"line_start":1372,"line_end":1372,"column_start":5,"column_end":78}},{"value":"/ domain name, optionally the class (which is taken to be IN if","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":221403,"byte_end":221468,"line_start":1373,"line_end":1373,"column_start":5,"column_end":70}},{"value":"/ missing), the TTL, and record data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":221473,"byte_end":221512,"line_start":1374,"line_end":1374,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":5417},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":222624,"byte_end":222634,"line_start":1409,"line_end":1409,"column_start":12,"column_end":22},"name":"OptBuilder","qualname":"::base::message_builder::OptBuilder","value":"OptBuilder {  }","parent":null,"children":[{"krate":0,"index":5420},{"krate":0,"index":5421},{"krate":0,"index":5422}],"decl_id":null,"docs":" Builds an OPT record.","sig":null,"attributes":[{"value":"/ Builds an OPT record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":222274,"byte_end":222299,"line_start":1401,"line_end":1401,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":222300,"byte_end":222303,"line_start":1402,"line_end":1402,"column_start":1,"column_end":4}},{"value":"/ A mutable reference of this type is passed to the closure given to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":222304,"byte_end":222374,"line_start":1403,"line_end":1403,"column_start":1,"column_end":71}},{"value":"/ [`AdditionalBuilder::opt`] allowing this closure to manipulate both the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":222375,"byte_end":222450,"line_start":1404,"line_end":1404,"column_start":1,"column_end":76}},{"value":"/ header values of the record and push options to the record data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":222451,"byte_end":222519,"line_start":1405,"line_end":1405,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":222520,"byte_end":222523,"line_start":1406,"line_end":1406,"column_start":1,"column_end":4}},{"value":"/ [`AdditionalBuilder::opt`]: struct.AdditonalBuilder.html#method.opt","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":222524,"byte_end":222595,"line_start":1407,"line_end":1407,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":223789,"byte_end":223793,"line_start":1446,"line_end":1446,"column_start":12,"column_end":16},"name":"push","qualname":"<OptBuilder>::push","value":"fn <Opt> (&mut self, opt: &Opt) -> Result<(), ShortBuf>","parent":null,"children":[],"decl_id":null,"docs":" Appends an option to the OPT record.\n","sig":null,"attributes":[{"value":"/ Appends an option to the OPT record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":223737,"byte_end":223777,"line_start":1445,"line_end":1445,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":224163,"byte_end":224178,"line_start":1456,"line_end":1456,"column_start":12,"column_end":27},"name":"push_raw_option","qualname":"<OptBuilder>::push_raw_option","value":"fn <F> (&mut self, code: OptionCode, op: F) -> Result<(), ShortBuf>","parent":null,"children":[],"decl_id":null,"docs":" Appends a raw option to the OPT record.","sig":null,"attributes":[{"value":"/ Appends a raw option to the OPT record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":223962,"byte_end":224005,"line_start":1452,"line_end":1452,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":224010,"byte_end":224013,"line_start":1453,"line_end":1453,"column_start":5,"column_end":8}},{"value":"/ The method will append an option with the given option code. The data","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":224018,"byte_end":224091,"line_start":1454,"line_end":1454,"column_start":5,"column_end":78}},{"value":"/ of the option will be written via the closure `op`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":224096,"byte_end":224151,"line_start":1455,"line_end":1455,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":225378,"byte_end":225394,"line_start":1487,"line_end":1487,"column_start":12,"column_end":28},"name":"udp_payload_size","qualname":"<OptBuilder>::udp_payload_size","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the current UDP payload size field of the OPT record.","sig":null,"attributes":[{"value":"/ Returns the current UDP payload size field of the OPT record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":225123,"byte_end":225188,"line_start":1482,"line_end":1482,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":225193,"byte_end":225196,"line_start":1483,"line_end":1483,"column_start":5,"column_end":8}},{"value":"/ This field contains the largest UDP datagram the sender can accept.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":225201,"byte_end":225272,"line_start":1484,"line_end":1484,"column_start":5,"column_end":76}},{"value":"/ This is not the path MTU but really what the sender can work with","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":225277,"byte_end":225346,"line_start":1485,"line_end":1485,"column_start":5,"column_end":74}},{"value":"/ internally.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":225351,"byte_end":225366,"line_start":1486,"line_end":1486,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":225533,"byte_end":225553,"line_start":1492,"line_end":1492,"column_start":12,"column_end":32},"name":"set_udp_payload_size","qualname":"<OptBuilder>::set_udp_payload_size","value":"fn (&mut self, value: u16) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the UDP payload size field of the OPT record.\n","sig":null,"attributes":[{"value":"/ Sets the UDP payload size field of the OPT record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":225467,"byte_end":225521,"line_start":1491,"line_end":1491,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":225810,"byte_end":225815,"line_start":1500,"line_end":1500,"column_start":12,"column_end":17},"name":"rcode","qualname":"<OptBuilder>::rcode","value":"fn (&self) -> OptRcode","parent":null,"children":[],"decl_id":null,"docs":" Returns the extended rcode of the message.","sig":null,"attributes":[{"value":"/ Returns the extended rcode of the message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":225648,"byte_end":225694,"line_start":1496,"line_end":1496,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":225699,"byte_end":225702,"line_start":1497,"line_end":1497,"column_start":5,"column_end":8}},{"value":"/ The method assembles the rcode both from the message header and the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":225707,"byte_end":225778,"line_start":1498,"line_end":1498,"column_start":5,"column_end":76}},{"value":"/ OPT header.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":225783,"byte_end":225798,"line_start":1499,"line_end":1499,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":226044,"byte_end":226053,"line_start":1507,"line_end":1507,"column_start":12,"column_end":21},"name":"set_rcode","qualname":"<OptBuilder>::set_rcode","value":"fn (&mut self, rcode: OptRcode) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the extended rcode of the message.","sig":null,"attributes":[{"value":"/ Sets the extended rcode of the message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":225906,"byte_end":225949,"line_start":1504,"line_end":1504,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":225954,"byte_end":225957,"line_start":1505,"line_end":1505,"column_start":5,"column_end":8}},{"value":"/ The method will update both the message header and the OPT header.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":225962,"byte_end":226032,"line_start":1506,"line_end":1506,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":226322,"byte_end":226329,"line_start":1515,"line_end":1515,"column_start":12,"column_end":19},"name":"version","qualname":"<OptBuilder>::version","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the EDNS version of the OPT header.","sig":null,"attributes":[{"value":"/ Returns the EDNS version of the OPT header.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":226205,"byte_end":226252,"line_start":1512,"line_end":1512,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":226257,"byte_end":226260,"line_start":1513,"line_end":1513,"column_start":5,"column_end":8}},{"value":"/ Only EDNS version 0 is currently defined.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":226265,"byte_end":226310,"line_start":1514,"line_end":1514,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":226448,"byte_end":226459,"line_start":1520,"line_end":1520,"column_start":12,"column_end":23},"name":"set_version","qualname":"<OptBuilder>::set_version","value":"fn (&mut self, version: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the EDNS version of the OPT header.\n","sig":null,"attributes":[{"value":"/ Sets the EDNS version of the OPT header.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":226392,"byte_end":226436,"line_start":1519,"line_end":1519,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":226925,"byte_end":226934,"line_start":1532,"line_end":1532,"column_start":12,"column_end":21},"name":"dnssec_ok","qualname":"<OptBuilder>::dnssec_ok","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the DNSSEC OK (DO) bit.","sig":null,"attributes":[{"value":"/ Returns the value of the DNSSEC OK (DO) bit.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":226548,"byte_end":226596,"line_start":1524,"line_end":1524,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":226601,"byte_end":226604,"line_start":1525,"line_end":1525,"column_start":5,"column_end":8}},{"value":"/ By setting this bit, a resolver indicates that it is interested in","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":226609,"byte_end":226679,"line_start":1526,"line_end":1526,"column_start":5,"column_end":75}},{"value":"/ also receiving the DNSSEC-related resource records necessary to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":226684,"byte_end":226751,"line_start":1527,"line_end":1527,"column_start":5,"column_end":72}},{"value":"/ validate an answer. The bit and the related procedures are defined in","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":226756,"byte_end":226829,"line_start":1528,"line_end":1528,"column_start":5,"column_end":78}},{"value":"/ [RFC 3225].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":226834,"byte_end":226849,"line_start":1529,"line_end":1529,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":226854,"byte_end":226857,"line_start":1530,"line_end":1530,"column_start":5,"column_end":8}},{"value":"/ [RFC 3225]: https://tools.ietf.org/html/rfc3225","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":226862,"byte_end":226913,"line_start":1531,"line_end":1531,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":227064,"byte_end":227077,"line_start":1537,"line_end":1537,"column_start":12,"column_end":25},"name":"set_dnssec_ok","qualname":"<OptBuilder>::set_dnssec_ok","value":"fn (&mut self, value: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the DNSSEC OK (DO) bit to the given value.\n","sig":null,"attributes":[{"value":"/ Sets the DNSSEC OK (DO) bit to the given value.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":227001,"byte_end":227052,"line_start":1536,"line_end":1536,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":227665,"byte_end":227674,"line_start":1555,"line_end":1555,"column_start":12,"column_end":21},"name":"as_target","qualname":"<OptBuilder>::as_target","value":"fn (&self) -> &Target","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying octets builder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying octets builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":227596,"byte_end":227653,"line_start":1554,"line_end":1554,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":5427},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":228715,"byte_end":228727,"line_start":1581,"line_end":1581,"column_start":12,"column_end":24},"name":"StreamTarget","qualname":"::base::message_builder::StreamTarget","value":"StreamTarget {  }","parent":null,"children":[{"krate":0,"index":5429}],"decl_id":null,"docs":" A builder target for sending messages on stream transports.","sig":null,"attributes":[{"value":"/ A builder target for sending messages on stream transports.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":227987,"byte_end":228050,"line_start":1568,"line_end":1568,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":228051,"byte_end":228054,"line_start":1569,"line_end":1569,"column_start":1,"column_end":4}},{"value":"/ When messages are sent over stream-oriented transports such as TCP, a DNS","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":228055,"byte_end":228132,"line_start":1570,"line_end":1570,"column_start":1,"column_end":78}},{"value":"/ message is preceded by a 16 bit length value in order to determine the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":228133,"byte_end":228207,"line_start":1571,"line_end":1571,"column_start":1,"column_end":75}},{"value":"/ end of a message. This type transparently adds this length value as the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":228208,"byte_end":228283,"line_start":1572,"line_end":1572,"column_start":1,"column_end":76}},{"value":"/ first two octets of an octets builder and itself presents an octets","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":228284,"byte_end":228355,"line_start":1573,"line_end":1573,"column_start":1,"column_end":72}},{"value":"/ builder interface for building the actual message. Whenever data is pushed","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":228356,"byte_end":228434,"line_start":1574,"line_end":1574,"column_start":1,"column_end":79}},{"value":"/ to that builder interface, the type will update the length value.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":228435,"byte_end":228504,"line_start":1575,"line_end":1575,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":228505,"byte_end":228508,"line_start":1576,"line_end":1576,"column_start":1,"column_end":4}},{"value":"/ Because the length is 16 bits long, the assembled message can be at most","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":228509,"byte_end":228585,"line_start":1577,"line_end":1577,"column_start":1,"column_end":77}},{"value":"/ 65536 octets long, independently of the maximum length the underlying","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":228586,"byte_end":228659,"line_start":1578,"line_end":1578,"column_start":1,"column_end":74}},{"value":"/ builder allows.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":228660,"byte_end":228679,"line_start":1579,"line_end":1579,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":229135,"byte_end":229138,"line_start":1592,"line_end":1592,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamTarget<Target>>::new","value":"fn (mut target: Target) -> Result<Self, ShortBuf>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream target wrapping an octets builder.","sig":null,"attributes":[{"value":"/ Creates a new stream target wrapping an octets builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":228854,"byte_end":228913,"line_start":1587,"line_end":1587,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":228918,"byte_end":228921,"line_start":1588,"line_end":1588,"column_start":5,"column_end":8}},{"value":"/ The function will truncate the builder back to empty and appends the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":228926,"byte_end":228998,"line_start":1589,"line_end":1589,"column_start":5,"column_end":77}},{"value":"/ length value. Because of the latter, this can fail if the octets","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":229003,"byte_end":229071,"line_start":1590,"line_end":1590,"column_start":5,"column_end":73}},{"value":"/ builder doesn’t even have space for that.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":229076,"byte_end":229123,"line_start":1591,"line_end":1591,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":229417,"byte_end":229424,"line_start":1602,"line_end":1602,"column_start":12,"column_end":19},"name":"new_vec","qualname":"<StreamTarget<Vec<u8>>>::new_vec","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream target atop an empty `Vec<u8>`.\n","sig":null,"attributes":[{"value":"/ Creates a stream target atop an empty `Vec<u8>`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":229353,"byte_end":229405,"line_start":1601,"line_end":1601,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":229609,"byte_end":229618,"line_start":1609,"line_end":1609,"column_start":12,"column_end":21},"name":"as_target","qualname":"<StreamTarget<Target>>::as_target","value":"fn (&self) -> &Target","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying octets builder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying octets builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":229540,"byte_end":229597,"line_start":1608,"line_end":1608,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":229887,"byte_end":229898,"line_start":1617,"line_end":1617,"column_start":12,"column_end":23},"name":"into_target","qualname":"<StreamTarget<Target>>::into_target","value":"fn (self) -> Target","parent":null,"children":[],"decl_id":null,"docs":" Converts the stream target into the underlying octets builder.","sig":null,"attributes":[{"value":"/ Converts the stream target into the underlying octets builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":229675,"byte_end":229741,"line_start":1613,"line_end":1613,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":229746,"byte_end":229749,"line_start":1614,"line_end":1614,"column_start":5,"column_end":8}},{"value":"/ The returned builder will contain the 16 bit length value with the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":229754,"byte_end":229824,"line_start":1615,"line_end":1615,"column_start":5,"column_end":75}},{"value":"/ correct content and the assembled message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":229829,"byte_end":229875,"line_start":1616,"line_end":1616,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":230384,"byte_end":230399,"line_start":1631,"line_end":1631,"column_start":12,"column_end":27},"name":"as_stream_slice","qualname":"<StreamTarget<Target>>::as_stream_slice","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns an octets slice of the message for stream transports.","sig":null,"attributes":[{"value":"/ Returns an octets slice of the message for stream transports.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":230177,"byte_end":230242,"line_start":1627,"line_end":1627,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":230247,"byte_end":230250,"line_start":1628,"line_end":1628,"column_start":5,"column_end":8}},{"value":"/ The slice will start with the length octets and can be send as is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":230255,"byte_end":230324,"line_start":1629,"line_end":1629,"column_start":5,"column_end":74}},{"value":"/ through a stream transport such as TCP.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":230329,"byte_end":230372,"line_start":1630,"line_end":1630,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":230722,"byte_end":230736,"line_start":1640,"line_end":1640,"column_start":12,"column_end":26},"name":"as_dgram_slice","qualname":"<StreamTarget<Target>>::as_dgram_slice","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns an octets slice of the message for datagram transports.","sig":null,"attributes":[{"value":"/ Returns an octets slice of the message for datagram transports.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":230458,"byte_end":230525,"line_start":1635,"line_end":1635,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":230530,"byte_end":230533,"line_start":1636,"line_end":1636,"column_start":5,"column_end":8}},{"value":"/ The slice will not contain the length octets but only the actual","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":230538,"byte_end":230606,"line_start":1637,"line_end":1637,"column_start":5,"column_end":73}},{"value":"/ message itself. This slice can be used for sending via datagram","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":230611,"byte_end":230678,"line_start":1638,"line_end":1638,"column_start":5,"column_end":72}},{"value":"/ transports such as UDP.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":230683,"byte_end":230710,"line_start":1639,"line_end":1639,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":5436},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":232398,"byte_end":232414,"line_start":1697,"line_end":1697,"column_start":12,"column_end":28},"name":"StaticCompressor","qualname":"::base::message_builder::StaticCompressor","value":"StaticCompressor {  }","parent":null,"children":[{"krate":0,"index":5438},{"krate":0,"index":5439},{"krate":0,"index":5441}],"decl_id":null,"docs":" A domain name compressor that doesn’t require an allocator.","sig":null,"attributes":[{"value":"/ A domain name compressor that doesn’t require an allocator.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":231679,"byte_end":231744,"line_start":1683,"line_end":1683,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":231745,"byte_end":231748,"line_start":1684,"line_end":1684,"column_start":1,"column_end":4}},{"value":"/ This type wraps around an octets builder and implements domain name","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":231749,"byte_end":231820,"line_start":1685,"line_end":1685,"column_start":1,"column_end":72}},{"value":"/ compression. It does not require an allocator but because of that it","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":231821,"byte_end":231893,"line_start":1686,"line_end":1686,"column_start":1,"column_end":73}},{"value":"/ can only remember the position of up to 24 domain names. This should be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":231894,"byte_end":231969,"line_start":1687,"line_end":1687,"column_start":1,"column_end":76}},{"value":"/ sufficient for most messages.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":231970,"byte_end":232003,"line_start":1688,"line_end":1688,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":232004,"byte_end":232007,"line_start":1689,"line_end":1689,"column_start":1,"column_end":4}},{"value":"/ The position of a domain name is calculated relative to the beginning of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":232008,"byte_end":232084,"line_start":1690,"line_end":1690,"column_start":1,"column_end":77}},{"value":"/ the underlying octets builder. This means that this builder must represent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":232085,"byte_end":232163,"line_start":1691,"line_end":1691,"column_start":1,"column_end":79}},{"value":"/ the message only. This means that if you are using the [`StreamTarget`],","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":232164,"byte_end":232240,"line_start":1692,"line_end":1692,"column_start":1,"column_end":77}},{"value":"/ you need to place it inside this type, _not_ the other way around.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":232241,"byte_end":232311,"line_start":1693,"line_end":1693,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":232312,"byte_end":232315,"line_start":1694,"line_end":1694,"column_start":1,"column_end":4}},{"value":"/ [`StreamTarget`]: struct.StreamTarget.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":232316,"byte_end":232362,"line_start":1695,"line_end":1695,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":232818,"byte_end":232821,"line_start":1712,"line_end":1712,"column_start":12,"column_end":15},"name":"new","qualname":"<StaticCompressor<Target>>::new","value":"fn (target: Target) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a static compressor from an octets builder.\n","sig":null,"attributes":[{"value":"/ Creates a static compressor from an octets builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":232751,"byte_end":232806,"line_start":1711,"line_end":1711,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":233045,"byte_end":233054,"line_start":1721,"line_end":1721,"column_start":12,"column_end":21},"name":"as_target","qualname":"<StaticCompressor<Target>>::as_target","value":"fn (&self) -> &Target","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying octets builder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying octets builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":232976,"byte_end":233033,"line_start":1720,"line_end":1720,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":953},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":233189,"byte_end":233200,"line_start":1726,"line_end":1726,"column_start":12,"column_end":23},"name":"into_target","qualname":"<StaticCompressor<Target>>::into_target","value":"fn (self) -> Target","parent":null,"children":[],"decl_id":null,"docs":" Converts the static compressor into the underlying octets builder.\n","sig":null,"attributes":[{"value":"/ Converts the static compressor into the underlying octets builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":233107,"byte_end":233177,"line_start":1725,"line_end":1725,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":233321,"byte_end":233329,"line_start":1731,"line_end":1731,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<StaticCompressor<Target>>::as_slice","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the octets slice of the content.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the octets slice of the content.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":233250,"byte_end":233309,"line_start":1730,"line_end":1730,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":955},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":233489,"byte_end":233501,"line_start":1737,"line_end":1737,"column_start":12,"column_end":24},"name":"as_slice_mut","qualname":"<StaticCompressor<Target>>::as_slice_mut","value":"fn (&mut self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the octets slice of the content.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the octets slice of the content.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":233418,"byte_end":233477,"line_start":1736,"line_end":1736,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":5448},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":237093,"byte_end":237107,"line_start":1859,"line_end":1859,"column_start":12,"column_end":26},"name":"TreeCompressor","qualname":"::base::message_builder::TreeCompressor","value":"TreeCompressor {  }","parent":null,"children":[{"krate":0,"index":5450},{"krate":0,"index":5451}],"decl_id":null,"docs":" A domain name compressor that uses a tree.","sig":null,"attributes":[{"value":"/ A domain name compressor that uses a tree.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":236452,"byte_end":236498,"line_start":1845,"line_end":1845,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":236499,"byte_end":236502,"line_start":1846,"line_end":1846,"column_start":1,"column_end":4}},{"value":"/ This type wraps around an octets builder and implements domain name","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":236503,"byte_end":236574,"line_start":1847,"line_end":1847,"column_start":1,"column_end":72}},{"value":"/ compression for it. It stores the position of any domain name it has seen","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":236575,"byte_end":236652,"line_start":1848,"line_end":1848,"column_start":1,"column_end":78}},{"value":"/ in a binary tree.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":236653,"byte_end":236674,"line_start":1849,"line_end":1849,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":236675,"byte_end":236678,"line_start":1850,"line_end":1850,"column_start":1,"column_end":4}},{"value":"/ The position of a domain name is calculated relative to the beginning of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":236679,"byte_end":236755,"line_start":1851,"line_end":1851,"column_start":1,"column_end":77}},{"value":"/ the underlying octets builder. This means that this builder must represent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":236756,"byte_end":236834,"line_start":1852,"line_end":1852,"column_start":1,"column_end":79}},{"value":"/ the message only. This means that if you are using the [`StreamTarget`],","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":236835,"byte_end":236911,"line_start":1853,"line_end":1853,"column_start":1,"column_end":77}},{"value":"/ you need to place it inside this type, _not_ the other way around.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":236912,"byte_end":236982,"line_start":1854,"line_end":1854,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":236983,"byte_end":236986,"line_start":1855,"line_end":1855,"column_start":1,"column_end":4}},{"value":"/ [`StreamTarget`]: struct.StreamTarget.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":236987,"byte_end":237033,"line_start":1856,"line_end":1856,"column_start":1,"column_end":47}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":237034,"byte_end":237057,"line_start":1857,"line_end":1857,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":238390,"byte_end":238393,"line_start":1900,"line_end":1900,"column_start":12,"column_end":15},"name":"new","qualname":"<TreeCompressor<Target>>::new","value":"fn (target: Target) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new compressor from an underlying octets builder.\n","sig":null,"attributes":[{"value":"/ Creates a new compressor from an underlying octets builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":238315,"byte_end":238378,"line_start":1899,"line_end":1899,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":238593,"byte_end":238602,"line_start":1908,"line_end":1908,"column_start":12,"column_end":21},"name":"as_target","qualname":"<TreeCompressor<Target>>::as_target","value":"fn (&self) -> &Target","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying octets builder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying octets builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":238524,"byte_end":238581,"line_start":1907,"line_end":1907,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":238730,"byte_end":238741,"line_start":1913,"line_end":1913,"column_start":12,"column_end":23},"name":"into_target","qualname":"<TreeCompressor<Target>>::into_target","value":"fn (self) -> Target","parent":null,"children":[],"decl_id":null,"docs":" Converts the compressor into the underlying octets builder.\n","sig":null,"attributes":[{"value":"/ Converts the compressor into the underlying octets builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":238655,"byte_end":238718,"line_start":1912,"line_end":1912,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":238843,"byte_end":238851,"line_start":1918,"line_end":1918,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<TreeCompressor<Target>>::as_slice","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns an octets slice of the data.\n","sig":null,"attributes":[{"value":"/ Returns an octets slice of the data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":238791,"byte_end":238831,"line_start":1917,"line_end":1917,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":239000,"byte_end":239012,"line_start":1924,"line_end":1924,"column_start":12,"column_end":24},"name":"as_slice_mut","qualname":"<TreeCompressor<Target>>::as_slice_mut","value":"fn (&mut self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns an mutable octets slice of the data.\n","sig":null,"attributes":[{"value":"/ Returns an mutable octets slice of the data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":238940,"byte_end":238988,"line_start":1923,"line_end":1923,"column_start":5,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":1001},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"name","qualname":"::base::name","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","parent":null,"children":[{"krate":0,"index":1002},{"krate":0,"index":1007},{"krate":0,"index":1012},{"krate":0,"index":1015},{"krate":0,"index":1022},{"krate":0,"index":1026},{"krate":0,"index":1031},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1113},{"krate":0,"index":1235},{"krate":0,"index":1424},{"krate":0,"index":1566},{"krate":0,"index":1698},{"krate":0,"index":1878},{"krate":0,"index":1955}],"decl_id":null,"docs":" Domain names.","sig":null,"attributes":[{"value":"! Domain names.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":245071,"byte_end":245088,"line_start":1,"line_end":1,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":245089,"byte_end":245092,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module provides various types for working with domain names.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":245093,"byte_end":245162,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":245163,"byte_end":245166,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! Main types: [`Dname`], [`RelativeDname`], [`ParsedDname`],","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":245167,"byte_end":245229,"line_start":5,"line_end":5,"column_start":1,"column_end":63}},{"value":"! [`UncertainDname`], [`DnameBuilder`].<br/>","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":245230,"byte_end":245276,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"! Main traits: [`ToDname`], [`ToRelativeDname`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":245277,"byte_end":245327,"line_start":7,"line_end":7,"column_start":1,"column_end":51}},{"value":"! ","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":245328,"byte_end":245332,"line_start":8,"line_end":8,"column_start":1,"column_end":5}},{"value":"! Domain names are a sequence of *labels* which are in turn a sequence of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":245333,"byte_end":245408,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"! up to 63 octets. While they are limited to a subset of ASCII by","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":245409,"byte_end":245476,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"! convention, all octet values are allowed. In their wire-format","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":245477,"byte_end":245543,"line_start":11,"line_end":11,"column_start":1,"column_end":67}},{"value":"! representation labels are prefixed with an octet containing the the number","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":245544,"byte_end":245622,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"! of octets in the label. The labels in a domain name are nominally arranged","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":245623,"byte_end":245701,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"! backwards. That is, the ‘most significant’ label is the last one. In an","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":245702,"byte_end":245781,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"! *absolute* domain name, this last label is an empty label, called the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":245782,"byte_end":245855,"line_start":15,"line_end":15,"column_start":1,"column_end":74}},{"value":"! *root label* and indicating the root of the domain name tree. Only","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":245856,"byte_end":245926,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"! absolute names can appear inside DNS messages.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":245927,"byte_end":245977,"line_start":17,"line_end":17,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":245978,"byte_end":245981,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! In order to save space in DNS messages (which were originally limited to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":245982,"byte_end":246058,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"! 512 bytes for most cases), a name can end in a pointer to another name","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":246059,"byte_end":246133,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"! stored elsewhere in the message. This makes lazy message parsing somewhat","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":246134,"byte_end":246211,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"! difficult since you need to carry around a reference to the original","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":246212,"byte_end":246284,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"! message until actual parsing happens.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":246285,"byte_end":246326,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":246327,"byte_end":246330,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! As a consequence, this module provides three different basic types for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":246331,"byte_end":246405,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"! domain names: A self-contained, absolute domain name is represented by","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":246406,"byte_end":246480,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"! [`Dname`], a self-contained, relative domain is [`RelativeDname`]. These","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":246481,"byte_end":246557,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"! are generic over an underlying octets sequence. Additionally, a possibly","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":246558,"byte_end":246634,"line_start":28,"line_end":28,"column_start":1,"column_end":77}},{"value":"! compressed absolute domain name taken from a message becomes a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":246635,"byte_end":246701,"line_start":29,"line_end":29,"column_start":1,"column_end":67}},{"value":"! [`ParsedDname`]. This type is generic over an octets reference which makes","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":246702,"byte_end":246780,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"! it a little more unwieldy.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":246781,"byte_end":246811,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":246812,"byte_end":246815,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! Sometimes, it isn’t quite clear if a domain name is absolute or relative.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":246816,"byte_end":246895,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"! This often happens because in a name’s string representation, which","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":246896,"byte_end":246969,"line_start":34,"line_end":34,"column_start":1,"column_end":72}},{"value":"! contains each label’s content separated by dots, the final dot before the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":246970,"byte_end":247049,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"! empty root label is omitted. For instance, instead of the strictly","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":247050,"byte_end":247120,"line_start":36,"line_end":36,"column_start":1,"column_end":71}},{"value":"! correct `www.example.com.` the slightly shorter `www.example.com` is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":247121,"byte_end":247193,"line_start":37,"line_end":37,"column_start":1,"column_end":73}},{"value":"! accepted as an absolute name if it is clear from context that the name","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":247194,"byte_end":247268,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"! is absolute. The [`UncertainDname`] type provides a means to keep such","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":247269,"byte_end":247343,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"! a name that may be absolute or relative.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":247344,"byte_end":247388,"line_start":40,"line_end":40,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":247389,"byte_end":247392,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! In order to make it cheap to combine names, a mechanism exists to chain","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":247393,"byte_end":247468,"line_start":42,"line_end":42,"column_start":1,"column_end":76}},{"value":"! names together and treat them as a single name. The two traits [`ToDname`]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":247469,"byte_end":247547,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"! and [`ToRelativeDname`] allow writing code that is generic over any kind","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":247548,"byte_end":247624,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"! of either absolute or relative domain name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":247625,"byte_end":247672,"line_start":45,"line_end":45,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":247673,"byte_end":247676,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! Alternatively, you can use [`DnameBuilder`] to construct a name manually","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":247677,"byte_end":247753,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"! from individual labels.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":247754,"byte_end":247781,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":247782,"byte_end":247785,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"! [`Bytes`]: ../../../bytes/struct.Bytes.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":247786,"byte_end":247833,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"! [`Dname`]: struct.Dname.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":247834,"byte_end":247866,"line_start":51,"line_end":51,"column_start":1,"column_end":33}},{"value":"! [`DnameBuilder`]: struct.DnameBuilder.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":247867,"byte_end":247913,"line_start":52,"line_end":52,"column_start":1,"column_end":47}},{"value":"! [`FromStr`]: ../../../std/str/trait.FromStr.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":247914,"byte_end":247966,"line_start":53,"line_end":53,"column_start":1,"column_end":53}},{"value":"! [`ParsedDname`]: struct.ParsedDname.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":247967,"byte_end":248011,"line_start":54,"line_end":54,"column_start":1,"column_end":45}},{"value":"! [`RelativeDname`]: struct.RelativeDname.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":248012,"byte_end":248060,"line_start":55,"line_end":55,"column_start":1,"column_end":49}},{"value":"! [`ToDname`]: trait.ToDname.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":248061,"byte_end":248096,"line_start":56,"line_end":56,"column_start":1,"column_end":36}},{"value":"! [`ToRelativeDname`]: trait.ToRelativeDname.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":248097,"byte_end":248148,"line_start":57,"line_end":57,"column_start":1,"column_end":52}},{"value":"! [`UncertainDname`]: enum.UncertainDname.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/mod.rs","byte_start":248149,"byte_end":248197,"line_start":58,"line_end":58,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":5467},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":249734,"byte_end":249746,"line_start":23,"line_end":23,"column_start":12,"column_end":24},"name":"DnameBuilder","qualname":"::base::name::builder::DnameBuilder","value":"DnameBuilder {  }","parent":null,"children":[{"krate":0,"index":5469},{"krate":0,"index":5470}],"decl_id":null,"docs":" Builds a domain name step by step by appending data.\n \n The domain name builder is the most fundamental way to construct a new\n domain name. It wraps an octets builder and allows adding single octets,\n octet slices, or entire labels.\n","sig":null,"attributes":[{"value":"/ Builds a domain name step by step by appending data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":249456,"byte_end":249512,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/ ","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":249513,"byte_end":249517,"line_start":18,"line_end":18,"column_start":1,"column_end":5}},{"value":"/ The domain name builder is the most fundamental way to construct a new","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":249518,"byte_end":249592,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ domain name. It wraps an octets builder and allows adding single octets,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":249593,"byte_end":249669,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ octet slices, or entire labels.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":249670,"byte_end":249705,"line_start":21,"line_end":21,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":250437,"byte_end":250440,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<DnameBuilder<Builder>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty name builder.\n","sig":null,"attributes":[{"value":"/ Creates a new, empty name builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":250387,"byte_end":250425,"line_start":43,"line_end":43,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":250637,"byte_end":250650,"line_start":50,"line_end":50,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<DnameBuilder<Builder>>::with_capacity","value":"fn (capacity: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty builder with a given capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new, empty builder with a given capacity.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":250570,"byte_end":250625,"line_start":49,"line_end":49,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":251082,"byte_end":251094,"line_start":63,"line_end":63,"column_start":12,"column_end":24},"name":"from_builder","qualname":"<DnameBuilder<Builder>>::from_builder","value":"fn (builder: Builder) -> Result<Self, RelativeDnameError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new domain name builder atop an existing octets builder.","sig":null,"attributes":[{"value":"/ Creates a new domain name builder atop an existing octets builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":250861,"byte_end":250931,"line_start":59,"line_end":59,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":250936,"byte_end":250939,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ The function checks that whatever is in the builder already","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":250944,"byte_end":251007,"line_start":61,"line_end":61,"column_start":5,"column_end":68}},{"value":"/ consititutes a correctly encoded relative domain name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":251012,"byte_end":251070,"line_start":62,"line_end":62,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":251444,"byte_end":251451,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"new_vec","qualname":"<DnameBuilder<Vec<u8>>>::new_vec","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty domain name builder atop a `Vec<u8>`.\n","sig":null,"attributes":[{"value":"/ Creates an empty domain name builder atop a `Vec<u8>`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":251374,"byte_end":251432,"line_start":72,"line_end":72,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1063},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":251690,"byte_end":251707,"line_start":81,"line_end":81,"column_start":12,"column_end":29},"name":"vec_with_capacity","qualname":"<DnameBuilder<Vec<u8>>>::vec_with_capacity","value":"fn (capacity: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty builder atop a `Vec<u8>` with given capacity.","sig":null,"attributes":[{"value":"/ Creates an empty builder atop a `Vec<u8>` with given capacity.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":251495,"byte_end":251561,"line_start":77,"line_end":77,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":251566,"byte_end":251569,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Names are limited to a length of 255 octets, but you can provide any","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":251574,"byte_end":251646,"line_start":79,"line_end":79,"column_start":5,"column_end":77}},{"value":"/ capacity you like here.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":251651,"byte_end":251678,"line_start":80,"line_end":80,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1065},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":251913,"byte_end":251922,"line_start":89,"line_end":89,"column_start":12,"column_end":21},"name":"new_bytes","qualname":"<DnameBuilder<BytesMut>>::new_bytes","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty domain name bulider atop a bytes value.\n","sig":null,"attributes":[{"value":"/ Creates an empty domain name bulider atop a bytes value.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":251841,"byte_end":251901,"line_start":88,"line_end":88,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":252163,"byte_end":252182,"line_start":97,"line_end":97,"column_start":12,"column_end":31},"name":"bytes_with_capacity","qualname":"<DnameBuilder<BytesMut>>::bytes_with_capacity","value":"fn (capacity: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty bulider atop a bytes value with given capacity.","sig":null,"attributes":[{"value":"/ Creates an empty bulider atop a bytes value with given capacity.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":251966,"byte_end":252034,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":252039,"byte_end":252042,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Names are limited to a length of 255 octets, but you can provide any","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":252047,"byte_end":252119,"line_start":95,"line_end":95,"column_start":5,"column_end":77}},{"value":"/ capacity you like here.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":252124,"byte_end":252151,"line_start":96,"line_end":96,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":252576,"byte_end":252584,"line_start":109,"line_end":109,"column_start":12,"column_end":20},"name":"in_label","qualname":"<DnameBuilder<Builder>>::in_label","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether there currently is a label under construction.","sig":null,"attributes":[{"value":"/ Returns whether there currently is a label under construction.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":252314,"byte_end":252380,"line_start":103,"line_end":103,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":252385,"byte_end":252388,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ This returns `false` if the name is still empty or if the last thing","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":252393,"byte_end":252465,"line_start":105,"line_end":105,"column_start":5,"column_end":77}},{"value":"/ that happend was a call to [`end_label`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":252470,"byte_end":252515,"line_start":106,"line_end":106,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":252520,"byte_end":252523,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ [`end_label`]: #method.end_label","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":252528,"byte_end":252564,"line_start":108,"line_end":108,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":252855,"byte_end":252859,"line_start":117,"line_end":117,"column_start":12,"column_end":16},"name":"push","qualname":"<DnameBuilder<Builder>>::push","value":"fn (&mut self, ch: u8) -> Result<(), PushError>","parent":null,"children":[],"decl_id":null,"docs":" Pushes an octet to the end of the domain name.","sig":null,"attributes":[{"value":"/ Pushes an octet to the end of the domain name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":252641,"byte_end":252691,"line_start":113,"line_end":113,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":252696,"byte_end":252699,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Starts a new label if necessary. Returns an error if pushing the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":252704,"byte_end":252772,"line_start":115,"line_end":115,"column_start":5,"column_end":73}},{"value":"/ octet would exceed the size limits for labels or domain names.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":252777,"byte_end":252843,"line_start":116,"line_end":116,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":253633,"byte_end":253645,"line_start":141,"line_end":141,"column_start":12,"column_end":24},"name":"append_slice","qualname":"<DnameBuilder<Builder>>::append_slice","value":"fn (&mut self, slice: &[u8]) -> Result<(), PushError>","parent":null,"children":[],"decl_id":null,"docs":" Appends the content of an octets slice to the end of the domain name.","sig":null,"attributes":[{"value":"/ Appends the content of an octets slice to the end of the domain name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":253344,"byte_end":253417,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":253422,"byte_end":253425,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Starts a new label if necessary. Returns an error if pushing","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":253430,"byte_end":253494,"line_start":137,"line_end":137,"column_start":5,"column_end":69}},{"value":"/ would exceed the size limits for labels or domain names.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":253499,"byte_end":253559,"line_start":138,"line_end":138,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":253564,"byte_end":253567,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ If `slice` is empty, does absolutely nothing.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":253572,"byte_end":253621,"line_start":140,"line_end":140,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":254425,"byte_end":254434,"line_start":167,"line_end":167,"column_start":12,"column_end":21},"name":"end_label","qualname":"<DnameBuilder<Builder>>::end_label","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Ends the current label.","sig":null,"attributes":[{"value":"/ Ends the current label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":254322,"byte_end":254349,"line_start":164,"line_end":164,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":254354,"byte_end":254357,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ If there isn’t a current label, does nothing.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":254362,"byte_end":254413,"line_start":166,"line_end":166,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":254992,"byte_end":255004,"line_start":183,"line_end":183,"column_start":12,"column_end":24},"name":"append_label","qualname":"<DnameBuilder<Builder>>::append_label","value":"fn (&mut self, label: &[u8]) -> Result<(), PushError>","parent":null,"children":[],"decl_id":null,"docs":" Appends an octets slice as a complete label.","sig":null,"attributes":[{"value":"/ Appends an octets slice as a complete label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":254637,"byte_end":254685,"line_start":175,"line_end":175,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":254690,"byte_end":254693,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ If there currently is a label under construction, it will be ended","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":254698,"byte_end":254768,"line_start":177,"line_end":177,"column_start":5,"column_end":75}},{"value":"/ before appending `label`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":254773,"byte_end":254802,"line_start":178,"line_end":178,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":254807,"byte_end":254810,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Returns an error if `label` exceeds the label size limit of 63 bytes","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":254815,"byte_end":254887,"line_start":180,"line_end":180,"column_start":5,"column_end":77}},{"value":"/ or appending the label would exceed the domain name size limit of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":254892,"byte_end":254961,"line_start":181,"line_end":181,"column_start":5,"column_end":74}},{"value":"/ 255 bytes.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":254966,"byte_end":254980,"line_start":182,"line_end":182,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":255580,"byte_end":255591,"line_start":203,"line_end":203,"column_start":12,"column_end":23},"name":"append_name","qualname":"<DnameBuilder<Builder>>::append_name","value":"fn <N> (&mut self, name: &N) -> Result<(), PushNameError>","parent":null,"children":[],"decl_id":null,"docs":" Appends a relative domain name.","sig":null,"attributes":[{"value":"/ Appends a relative domain name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":255286,"byte_end":255321,"line_start":194,"line_end":194,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":255326,"byte_end":255329,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ If there currently is a label under construction, it will be ended","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":255334,"byte_end":255404,"line_start":196,"line_end":196,"column_start":5,"column_end":75}},{"value":"/ before appending `name`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":255409,"byte_end":255437,"line_start":197,"line_end":197,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":255442,"byte_end":255445,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ Returns an error if appending would result in a name longer than 254","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":255450,"byte_end":255522,"line_start":199,"line_end":199,"column_start":5,"column_end":77}},{"value":"/ bytes.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":255527,"byte_end":255537,"line_start":200,"line_end":200,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":256783,"byte_end":256795,"line_start":234,"line_end":234,"column_start":12,"column_end":24},"name":"append_chars","qualname":"<DnameBuilder<Builder>>::append_chars","value":"fn <C> (&mut self, chars: C) -> Result<(), FromStrError>","parent":null,"children":[],"decl_id":null,"docs":" Appends a name from a sequence of characters.","sig":null,"attributes":[{"value":"/ Appends a name from a sequence of characters.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":255994,"byte_end":256043,"line_start":218,"line_end":218,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":256048,"byte_end":256051,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ If there currently is a label under construction, it will be ended","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":256056,"byte_end":256126,"line_start":220,"line_end":220,"column_start":5,"column_end":75}},{"value":"/ before appending `chars`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":256131,"byte_end":256160,"line_start":221,"line_end":221,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":256165,"byte_end":256168,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ The character sequence must result in a domain name in master format","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":256173,"byte_end":256245,"line_start":223,"line_end":223,"column_start":5,"column_end":77}},{"value":"/ representation. That is, its labels should be separated by dots,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":256250,"byte_end":256318,"line_start":224,"line_end":224,"column_start":5,"column_end":73}},{"value":"/ actual dots, white space and backslashes should be escaped by a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":256323,"byte_end":256390,"line_start":225,"line_end":225,"column_start":5,"column_end":72}},{"value":"/ preceeding backslash, and any byte value that is not a printable","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":256395,"byte_end":256463,"line_start":226,"line_end":226,"column_start":5,"column_end":73}},{"value":"/ ASCII character should be encoded by a backslash followed by its","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":256468,"byte_end":256536,"line_start":227,"line_end":227,"column_start":5,"column_end":73}},{"value":"/ three digit decimal value.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":256541,"byte_end":256571,"line_start":228,"line_end":228,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":256576,"byte_end":256579,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The last label will only be ended if the last character was a dot.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":256584,"byte_end":256654,"line_start":230,"line_end":230,"column_start":5,"column_end":75}},{"value":"/ Thus, you can determine if that was the case via [`in_label`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":256659,"byte_end":256725,"line_start":231,"line_end":231,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":256730,"byte_end":256733,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ [`in_label`] #method.in_label","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":256738,"byte_end":256771,"line_start":233,"line_end":233,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":258180,"byte_end":258186,"line_start":272,"line_end":272,"column_start":12,"column_end":18},"name":"finish","qualname":"<DnameBuilder<Builder>>::finish","value":"fn (mut self) -> RelativeDname<Builder::Octets>","parent":null,"children":[],"decl_id":null,"docs":" Finishes building the name and returns the resulting relative name.\n \n If there currently is a label being built, ends the label first\n before returning the name. I.e., you don’t have to call [`end_label`]\n explicitely.","sig":null,"attributes":[{"value":"/ Finishes building the name and returns the resulting relative name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":257618,"byte_end":257689,"line_start":260,"line_end":260,"column_start":5,"column_end":76}},{"value":"/ ","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":257694,"byte_end":257698,"line_start":261,"line_end":261,"column_start":5,"column_end":9}},{"value":"/ If there currently is a label being built, ends the label first","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":257703,"byte_end":257770,"line_start":262,"line_end":262,"column_start":5,"column_end":72}},{"value":"/ before returning the name. I.e., you don’t have to call [`end_label`]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":257775,"byte_end":257850,"line_start":263,"line_end":263,"column_start":5,"column_end":78}},{"value":"/ explicitely.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":257855,"byte_end":257871,"line_start":264,"line_end":264,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":257876,"byte_end":257879,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ This method converts the builder into a relative name. If you would","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":257884,"byte_end":257955,"line_start":266,"line_end":266,"column_start":5,"column_end":76}},{"value":"/ like to turn it into an absolute name, use [`into_dname`] which","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":257960,"byte_end":258027,"line_start":267,"line_end":267,"column_start":5,"column_end":72}},{"value":"/ appends the root label before finishing.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":258032,"byte_end":258076,"line_start":268,"line_end":268,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":258081,"byte_end":258084,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ [`end_label`]: #method.end_label","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":258089,"byte_end":258125,"line_start":270,"line_end":270,"column_start":5,"column_end":41}},{"value":"/ [`into_dname`]: #method.into_dname","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":258130,"byte_end":258168,"line_start":271,"line_end":271,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":258666,"byte_end":258676,"line_start":287,"line_end":287,"column_start":12,"column_end":22},"name":"into_dname","qualname":"<DnameBuilder<Builder>>::into_dname","value":"fn (mut self) -> Result<Dname<Builder::Octets>, PushError>","parent":null,"children":[],"decl_id":null,"docs":" Appends the root label to the name and returns it as a `Dname`.","sig":null,"attributes":[{"value":"/ Appends the root label to the name and returns it as a `Dname`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":258418,"byte_end":258485,"line_start":282,"line_end":282,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":258490,"byte_end":258493,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ If there currently is a label under construction, ends the label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":258498,"byte_end":258567,"line_start":284,"line_end":284,"column_start":5,"column_end":74}},{"value":"/ Then adds the empty root label and transforms the name into a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":258572,"byte_end":258637,"line_start":285,"line_end":285,"column_start":5,"column_end":70}},{"value":"/ `Dname`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":258642,"byte_end":258654,"line_start":286,"line_end":286,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":259210,"byte_end":259223,"line_start":304,"line_end":304,"column_start":12,"column_end":25},"name":"append_origin","qualname":"<DnameBuilder<Builder>>::append_origin","value":"fn <N> (mut self, origin: &N) -> Result<Dname<Builder::Octets>, PushNameError>","parent":null,"children":[],"decl_id":null,"docs":" Appends an origin and returns the resulting `Dname`.\n If there currently is a label under construction, ends the label.\n Then adds the `origin` and transforms the name into a\n `Dname`. \n","sig":null,"attributes":[{"value":"/ Appends an origin and returns the resulting `Dname`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":258957,"byte_end":259013,"line_start":298,"line_end":298,"column_start":5,"column_end":61}},{"value":"/ If there currently is a label under construction, ends the label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":259018,"byte_end":259087,"line_start":299,"line_end":299,"column_start":5,"column_end":74}},{"value":"/ Then adds the `origin` and transforms the name into a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":259092,"byte_end":259149,"line_start":300,"line_end":300,"column_start":5,"column_end":62}},{"value":"/ `Dname`. ","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":259154,"byte_end":259167,"line_start":301,"line_end":301,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5475},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":261827,"byte_end":261836,"line_start":392,"line_end":392,"column_start":5,"column_end":14},"name":"LongLabel","qualname":"::base::name::builder::PushError::LongLabel","value":"PushError::LongLabel","parent":{"krate":0,"index":5474},"children":[],"decl_id":null,"docs":" The current label would exceed the limit of 63 bytes.\n","sig":null,"attributes":[{"value":"/ The current label would exceed the limit of 63 bytes.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":261765,"byte_end":261822,"line_start":391,"line_end":391,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5477},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":261897,"byte_end":261905,"line_start":395,"line_end":395,"column_start":5,"column_end":13},"name":"LongName","qualname":"::base::name::builder::PushError::LongName","value":"PushError::LongName","parent":{"krate":0,"index":5474},"children":[],"decl_id":null,"docs":" The name would exceed the limit of 255 bytes.\n","sig":null,"attributes":[{"value":"/ The name would exceed the limit of 255 bytes.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":261843,"byte_end":261892,"line_start":394,"line_end":394,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5479},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":261965,"byte_end":261973,"line_start":398,"line_end":398,"column_start":5,"column_end":13},"name":"ShortBuf","qualname":"::base::name::builder::PushError::ShortBuf","value":"PushError::ShortBuf","parent":{"krate":0,"index":5474},"children":[],"decl_id":null,"docs":" The buffer is too short to contain the name.\n","sig":null,"attributes":[{"value":"/ The buffer is too short to contain the name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":261912,"byte_end":261960,"line_start":397,"line_end":397,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":5474},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":261749,"byte_end":261758,"line_start":390,"line_end":390,"column_start":10,"column_end":19},"name":"PushError","qualname":"::base::name::builder::PushError","value":"PushError::{LongLabel, LongName, ShortBuf}","parent":null,"children":[{"krate":0,"index":5475},{"krate":0,"index":5477},{"krate":0,"index":5479}],"decl_id":null,"docs":" An error happened while trying to push data to a domain name builder.\n","sig":null,"attributes":[{"value":"/ An error happened while trying to push data to a domain name builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":261621,"byte_end":261694,"line_start":388,"line_end":388,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5493},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":262845,"byte_end":262853,"line_start":436,"line_end":436,"column_start":5,"column_end":13},"name":"LongName","qualname":"::base::name::builder::PushNameError::LongName","value":"PushNameError::LongName","parent":{"krate":0,"index":5492},"children":[],"decl_id":null,"docs":" The name would exceed the limit of 255 bytes.\n","sig":null,"attributes":[{"value":"/ The name would exceed the limit of 255 bytes.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":262791,"byte_end":262840,"line_start":435,"line_end":435,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5495},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":262913,"byte_end":262921,"line_start":439,"line_end":439,"column_start":5,"column_end":13},"name":"ShortBuf","qualname":"::base::name::builder::PushNameError::ShortBuf","value":"PushNameError::ShortBuf","parent":{"krate":0,"index":5492},"children":[],"decl_id":null,"docs":" The buffer is too short to contain the name.\n","sig":null,"attributes":[{"value":"/ The buffer is too short to contain the name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":262860,"byte_end":262908,"line_start":438,"line_end":438,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":5492},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":262771,"byte_end":262784,"line_start":434,"line_end":434,"column_start":10,"column_end":23},"name":"PushNameError","qualname":"::base::name::builder::PushNameError","value":"PushNameError::{LongName, ShortBuf}","parent":null,"children":[{"krate":0,"index":5493},{"krate":0,"index":5495}],"decl_id":null,"docs":" An error happened while trying to push a name to a domain name builder.\n","sig":null,"attributes":[{"value":"/ An error happened while trying to push a name to a domain name builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":262641,"byte_end":262716,"line_start":432,"line_end":432,"column_start":1,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5509},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":263767,"byte_end":263780,"line_start":476,"line_end":476,"column_start":5,"column_end":18},"name":"UnexpectedEnd","qualname":"::base::name::builder::FromStrError::UnexpectedEnd","value":"FromStrError::UnexpectedEnd","parent":{"krate":0,"index":5508},"children":[],"decl_id":null,"docs":" The string ended when there should have been more characters.","sig":null,"attributes":[{"value":"/ The string ended when there should have been more characters.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":263619,"byte_end":263684,"line_start":473,"line_end":473,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":263689,"byte_end":263692,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ This most likely happens inside escape sequences and quoting.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":263697,"byte_end":263762,"line_start":475,"line_end":475,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5511},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":263827,"byte_end":263837,"line_start":479,"line_end":479,"column_start":5,"column_end":15},"name":"EmptyLabel","qualname":"::base::name::builder::FromStrError::EmptyLabel","value":"FromStrError::EmptyLabel","parent":{"krate":0,"index":5508},"children":[],"decl_id":null,"docs":" An empty label was encountered.\n","sig":null,"attributes":[{"value":"/ An empty label was encountered.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":263787,"byte_end":263822,"line_start":478,"line_end":478,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5513},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":263884,"byte_end":263895,"line_start":482,"line_end":482,"column_start":5,"column_end":16},"name":"BinaryLabel","qualname":"::base::name::builder::FromStrError::BinaryLabel","value":"FromStrError::BinaryLabel","parent":{"krate":0,"index":5508},"children":[],"decl_id":null,"docs":" A binary label was encountered.\n","sig":null,"attributes":[{"value":"/ A binary label was encountered.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":263844,"byte_end":263879,"line_start":481,"line_end":481,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5515},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":263955,"byte_end":263964,"line_start":485,"line_end":485,"column_start":5,"column_end":14},"name":"LongLabel","qualname":"::base::name::builder::FromStrError::LongLabel","value":"FromStrError::LongLabel","parent":{"krate":0,"index":5508},"children":[],"decl_id":null,"docs":" A domain name label has more than 63 octets.\n","sig":null,"attributes":[{"value":"/ A domain name label has more than 63 octets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":263902,"byte_end":263950,"line_start":484,"line_end":484,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5517},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":264215,"byte_end":264228,"line_start":492,"line_end":492,"column_start":5,"column_end":18},"name":"IllegalEscape","qualname":"::base::name::builder::FromStrError::IllegalEscape","value":"FromStrError::IllegalEscape","parent":{"krate":0,"index":5508},"children":[],"decl_id":null,"docs":" An illegal escape sequence was encountered.","sig":null,"attributes":[{"value":"/ An illegal escape sequence was encountered.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":263971,"byte_end":264018,"line_start":487,"line_end":487,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":264023,"byte_end":264026,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ Escape sequences are a backslash character followed by either a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":264031,"byte_end":264098,"line_start":489,"line_end":489,"column_start":5,"column_end":72}},{"value":"/ three decimal digit sequence encoding a byte value or a single","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":264103,"byte_end":264169,"line_start":490,"line_end":490,"column_start":5,"column_end":71}},{"value":"/ other printable ASCII character.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":264174,"byte_end":264210,"line_start":491,"line_end":491,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5519},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":264342,"byte_end":264358,"line_start":497,"line_end":497,"column_start":5,"column_end":21},"name":"IllegalCharacter","qualname":"::base::name::builder::FromStrError::IllegalCharacter","value":"FromStrError::IllegalCharacter(char)","parent":{"krate":0,"index":5508},"children":[],"decl_id":null,"docs":" An illegal character was encountered.","sig":null,"attributes":[{"value":"/ An illegal character was encountered.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":264235,"byte_end":264276,"line_start":494,"line_end":494,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":264281,"byte_end":264284,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ Only printable ASCII characters are allowed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":264289,"byte_end":264337,"line_start":496,"line_end":496,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5522},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":264418,"byte_end":264426,"line_start":500,"line_end":500,"column_start":5,"column_end":13},"name":"LongName","qualname":"::base::name::builder::FromStrError::LongName","value":"FromStrError::LongName","parent":{"krate":0,"index":5508},"children":[],"decl_id":null,"docs":" The name has more than 255 characters.\n","sig":null,"attributes":[{"value":"/ The name has more than 255 characters.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":264371,"byte_end":264413,"line_start":499,"line_end":499,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5524},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":264486,"byte_end":264494,"line_start":503,"line_end":503,"column_start":5,"column_end":13},"name":"ShortBuf","qualname":"::base::name::builder::FromStrError::ShortBuf","value":"FromStrError::ShortBuf","parent":{"krate":0,"index":5508},"children":[],"decl_id":null,"docs":" The buffer is too short to contain the name.\n","sig":null,"attributes":[{"value":"/ The buffer is too short to contain the name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":264433,"byte_end":264481,"line_start":502,"line_end":502,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":5508},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":263600,"byte_end":263612,"line_start":472,"line_end":472,"column_start":10,"column_end":22},"name":"FromStrError","qualname":"::base::name::builder::FromStrError","value":"FromStrError::{UnexpectedEnd, EmptyLabel, BinaryLabel, LongLabel, IllegalEscape, IllegalCharacter, LongName, ShortBuf}","parent":null,"children":[{"krate":0,"index":5509},{"krate":0,"index":5511},{"krate":0,"index":5513},{"krate":0,"index":5515},{"krate":0,"index":5517},{"krate":0,"index":5519},{"krate":0,"index":5522},{"krate":0,"index":5524}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":263573,"byte_end":263590,"line_start":471,"line_end":471,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":5538},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":270806,"byte_end":270811,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"name":"Chain","qualname":"::base::name::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":5541},{"krate":0,"index":5542}],"decl_id":null,"docs":" Two domain names chained together.","sig":null,"attributes":[{"value":"/ Two domain names chained together.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":270015,"byte_end":270053,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":270054,"byte_end":270057,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This type is the result of calling the `chain` method on","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":270058,"byte_end":270118,"line_start":18,"line_end":18,"column_start":1,"column_end":61}},{"value":"/ [`RelativeDname`], [`UncertainDname`], or on [`Chain`] itself.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":270119,"byte_end":270185,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":270186,"byte_end":270189,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The chain can be both an absolute or relative domain name—and implements","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":270190,"byte_end":270268,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/ the respective traits [`ToDname`] or [`ToRelativeDname`]—, depending on","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":270269,"byte_end":270346,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ whether the second name is absolute or relative.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":270347,"byte_end":270399,"line_start":23,"line_end":23,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":270400,"byte_end":270403,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ A chain on an uncertain name is special in that the second name is only","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":270404,"byte_end":270479,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ used if the uncertain name is relative.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":270480,"byte_end":270523,"line_start":26,"line_end":26,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":270524,"byte_end":270527,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`RelativeDname`]: struct.RelativeDname.html#method.chain","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":270528,"byte_end":270589,"line_start":28,"line_end":28,"column_start":1,"column_end":62}},{"value":"/ [`Chain`]: #method.chain","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":270590,"byte_end":270618,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ [`ToDname`]: trait.ToDname.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":270619,"byte_end":270654,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/ [`ToRelativeDname`]: trait.ToRelativeDname.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":270655,"byte_end":270706,"line_start":31,"line_end":31,"column_start":1,"column_end":52}},{"value":"/ [`UncertainDname`]: struct.UncertainDname.html#method.chain","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":270707,"byte_end":270770,"line_start":32,"line_end":32,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":272493,"byte_end":272498,"line_start":85,"line_end":85,"column_start":12,"column_end":17},"name":"chain","qualname":"<Chain<L, R>>::chain","value":"fn <N> (self, other: N) -> Result<Chain<Self, N>, LongChainError>","parent":null,"children":[],"decl_id":null,"docs":" Extends the chain with another domain name.","sig":null,"attributes":[{"value":"/ Extends the chain with another domain name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":271903,"byte_end":271950,"line_start":72,"line_end":72,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":271955,"byte_end":271958,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ While the method accepts anything [`Compose`] as the second element of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":271963,"byte_end":272037,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ the chain, the resulting `Chain` will only implement [`ToDname`] or","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":272042,"byte_end":272113,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ [`ToRelativeDname`] if if also implements [`ToDname`] or","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":272118,"byte_end":272178,"line_start":76,"line_end":76,"column_start":5,"column_end":65}},{"value":"/ [`ToRelativeDname`], respectively.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":272183,"byte_end":272221,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":272226,"byte_end":272229,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ The method will fail with an error if the chained name is longer than","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":272234,"byte_end":272307,"line_start":79,"line_end":79,"column_start":5,"column_end":78}},{"value":"/ 255 bytes.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":272312,"byte_end":272326,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":272331,"byte_end":272334,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Compose`]: ../compose/trait.Compose.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":272339,"byte_end":272385,"line_start":82,"line_end":82,"column_start":5,"column_end":51}},{"value":"/ [`ToDname`]: trait.ToDname.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":272390,"byte_end":272425,"line_start":83,"line_end":83,"column_start":5,"column_end":40}},{"value":"/ [`ToRelativeDname`]: trait.ToRelativeDname.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":272430,"byte_end":272481,"line_start":84,"line_end":84,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1145},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":272739,"byte_end":272745,"line_start":95,"line_end":95,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Chain<L, R>>::unwrap","value":"fn (self) -> (L, R)","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the chain into its two constituent components.\n","sig":null,"attributes":[{"value":"/ Unwraps the chain into its two constituent components.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":272669,"byte_end":272727,"line_start":94,"line_end":94,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":5551},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":276032,"byte_end":276041,"line_start":215,"line_end":215,"column_start":12,"column_end":21},"name":"ChainIter","qualname":"::base::name::chain::ChainIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" The label iterator for chained domain names.\n","sig":null,"attributes":[{"value":"/ The label iterator for chained domain names.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":275955,"byte_end":276003,"line_start":213,"line_end":213,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1209},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":276946,"byte_end":276954,"line_start":247,"line_end":247,"column_start":5,"column_end":13},"name":"Absolute","qualname":"::base::name::chain::UncertainChainIter::Absolute","value":"UncertainChainIter::Absolute(DnameIter<'a>)","parent":{"krate":0,"index":1205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1212},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":276975,"byte_end":276983,"line_start":248,"line_end":248,"column_start":5,"column_end":13},"name":"Relative","qualname":"::base::name::chain::UncertainChainIter::Relative","value":"UncertainChainIter::Relative(ChainIter<'a, UncertainDname<Octets>, R>)","parent":{"krate":0,"index":1205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1205},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":276876,"byte_end":276894,"line_start":246,"line_end":246,"column_start":10,"column_end":28},"name":"UncertainChainIter","qualname":"::base::name::chain::UncertainChainIter","value":"UncertainChainIter::{Absolute, Relative}","parent":null,"children":[{"krate":0,"index":1209},{"krate":0,"index":1212}],"decl_id":null,"docs":" The label iterator for domain name chains with uncertain domain names.\n","sig":null,"attributes":[{"value":"/ The label iterator for domain name chains with uncertain domain names.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":276792,"byte_end":276866,"line_start":245,"line_end":245,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":5562},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":278390,"byte_end":278404,"line_start":294,"line_end":294,"column_start":12,"column_end":26},"name":"LongChainError","qualname":"::base::name::chain::LongChainError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Chaining domain names would exceed the size limit.\n","sig":null,"attributes":[{"value":"/ Chaining domain names would exceed the size limit.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":278279,"byte_end":278333,"line_start":292,"line_end":292,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":5575},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":286785,"byte_end":286790,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"Dname","qualname":"::base::name::dname::Dname","value":"","parent":null,"children":[],"decl_id":null,"docs":" An uncompressed, absolute domain name.","sig":null,"attributes":[{"value":"/ An uncompressed, absolute domain name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":285892,"byte_end":285934,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":285935,"byte_end":285938,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ The type wraps an octets sequence and guarantees that it always contains","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":285939,"byte_end":286015,"line_start":28,"line_end":28,"column_start":1,"column_end":77}},{"value":"/ a correctly encoded, absolute domain name. It provides an interface","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":286016,"byte_end":286087,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"/ similar to a slice of the labels of the name, i.e., you can iterate over","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":286088,"byte_end":286164,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ the labels, split them off, etc.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":286165,"byte_end":286201,"line_start":31,"line_end":31,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":286202,"byte_end":286205,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ You can construct a domain name from a string via the `FromStr` trait or","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":286206,"byte_end":286282,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ manually via a [`DnameBuilder`]. In addition, you can also parse it from","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":286283,"byte_end":286359,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ a message. This will, however, require the name to be uncompressed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":286360,"byte_end":286431,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/ Otherwise, you would receive a [`ParsedDname`] which can be converted into","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":286432,"byte_end":286510,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ `Dname` via [`ToDname::to_dname`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":286511,"byte_end":286549,"line_start":37,"line_end":37,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":286550,"byte_end":286553,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`DnameBuilder`]: struct.DnameBuilder.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":286554,"byte_end":286600,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/ [`ParsedDname`]: struct.ParsedDname.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":286601,"byte_end":286645,"line_start":40,"line_end":40,"column_start":1,"column_end":45}},{"value":"/ [`RelativeDname`]: struct.RelativeDname.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":286646,"byte_end":286694,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ [`ToDname::to_dname`]: trait.ToDname.html#method.to_dname","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":286695,"byte_end":286756,"line_start":42,"line_end":42,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1273},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":287356,"byte_end":287377,"line_start":59,"line_end":59,"column_start":25,"column_end":46},"name":"from_octets_unchecked","qualname":"<Dname<Octets>>::from_octets_unchecked","value":"fn (octets: Octets) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a domain name from the underlying octets without any check.","sig":null,"attributes":[{"value":"/ Creates a domain name from the underlying octets without any check.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":286876,"byte_end":286947,"line_start":49,"line_end":49,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":286952,"byte_end":286955,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Since this will allow to actually construct an incorrectly encoded","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":286960,"byte_end":287030,"line_start":51,"line_end":51,"column_start":5,"column_end":75}},{"value":"/ domain name value, the function is unsafe.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":287035,"byte_end":287081,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":287086,"byte_end":287089,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":287094,"byte_end":287106,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":287111,"byte_end":287114,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ The octets sequence passed in `octets` must contain a correctly","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":287119,"byte_end":287186,"line_start":56,"line_end":56,"column_start":5,"column_end":72}},{"value":"/ encoded absolute domain name. It must be at most 255 octets long.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":287191,"byte_end":287260,"line_start":57,"line_end":57,"column_start":5,"column_end":74}},{"value":"/ It must contain the root label exactly once as its last label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":287265,"byte_end":287331,"line_start":58,"line_end":58,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1274},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":287678,"byte_end":287689,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"from_octets","qualname":"<Dname<Octets>>::from_octets","value":"fn (octets: Octets) -> Result<Self, DnameError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a domain name from an octet sequence.","sig":null,"attributes":[{"value":"/ Creates a domain name from an octet sequence.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":287437,"byte_end":287486,"line_start":63,"line_end":63,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":287491,"byte_end":287494,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This will only succeed if `octets` contains a properly encoded","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":287499,"byte_end":287565,"line_start":65,"line_end":65,"column_start":5,"column_end":71}},{"value":"/ absolute domain name. Because the function checks, this will take","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":287570,"byte_end":287639,"line_start":66,"line_end":66,"column_start":5,"column_end":74}},{"value":"/ a wee bit of time.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":287644,"byte_end":287666,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1275},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":288719,"byte_end":288729,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"from_chars","qualname":"<Dname<Octets>>::from_chars","value":"fn <C> (chars: C) -> Result<Self, FromStrError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a domain name from a sequence of characters.","sig":null,"attributes":[{"value":"/ Creates a domain name from a sequence of characters.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":287883,"byte_end":287939,"line_start":74,"line_end":74,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":287944,"byte_end":287947,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ The sequence must result in a domain name in master format","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":287952,"byte_end":288014,"line_start":76,"line_end":76,"column_start":5,"column_end":67}},{"value":"/ representation. That is, its labels should be separated by dots.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":288019,"byte_end":288087,"line_start":77,"line_end":77,"column_start":5,"column_end":73}},{"value":"/ Actual dots, white space and backslashes should be escaped by a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":288092,"byte_end":288159,"line_start":78,"line_end":78,"column_start":5,"column_end":72}},{"value":"/ preceeding backslash, and any byte value that is not a printable","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":288164,"byte_end":288232,"line_start":79,"line_end":79,"column_start":5,"column_end":73}},{"value":"/ ASCII character should be encoded by a backslash followed by its","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":288237,"byte_end":288305,"line_start":80,"line_end":80,"column_start":5,"column_end":73}},{"value":"/ three digit decimal value.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":288310,"byte_end":288340,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":288345,"byte_end":288348,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The name will always be an absolute name. If the last character in the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":288353,"byte_end":288427,"line_start":83,"line_end":83,"column_start":5,"column_end":79}},{"value":"/ sequence is not a dot, the function will quietly add a root label,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":288432,"byte_end":288502,"line_start":84,"line_end":84,"column_start":5,"column_end":75}},{"value":"/ anyway. In most cases, this is likely what you want. If it isn’t,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":288507,"byte_end":288578,"line_start":85,"line_end":85,"column_start":5,"column_end":74}},{"value":"/ though, use [`UncertainDname`] instead to be able to check.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":288583,"byte_end":288646,"line_start":86,"line_end":86,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":288651,"byte_end":288654,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ [`UncertainDname`]: enum.UncertainDname.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":288659,"byte_end":288707,"line_start":88,"line_end":88,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1277},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":289580,"byte_end":289584,"line_start":110,"line_end":110,"column_start":12,"column_end":16},"name":"root","qualname":"<Dname<Octets>>::root","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a domain name consisting of the root label only.","sig":null,"attributes":[{"value":"/ Returns a domain name consisting of the root label only.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":289073,"byte_end":289133,"line_start":100,"line_end":100,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":289138,"byte_end":289141,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ This function will work for any kind octets sequence that can be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":289146,"byte_end":289214,"line_start":102,"line_end":102,"column_start":5,"column_end":73}},{"value":"/ created from an octets slice. Since this will require providing the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":289219,"byte_end":289290,"line_start":103,"line_end":103,"column_start":5,"column_end":76}},{"value":"/ type parameter in some cases, there are shortcuts methods for specific","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":289295,"byte_end":289369,"line_start":104,"line_end":104,"column_start":5,"column_end":79}},{"value":"/ octets types: [`root_ref`], [`root_vec`], and [`root_bytes`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":289374,"byte_end":289439,"line_start":105,"line_end":105,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":289444,"byte_end":289447,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ [`root_ref`]: #method.root_ref","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":289452,"byte_end":289486,"line_start":107,"line_end":107,"column_start":5,"column_end":39}},{"value":"/ [`root_vec`]: #method.root_vec","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":289491,"byte_end":289525,"line_start":108,"line_end":108,"column_start":5,"column_end":39}},{"value":"/ [`root_bytes`]: #method.root_bytes","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":289530,"byte_end":289568,"line_start":109,"line_end":109,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1280},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":290095,"byte_end":290105,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<Dname<[u8]>>::from_slice","value":"fn (slice: &[u8]) -> Result<&Self, DnameError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a domain name from an octets slice.","sig":null,"attributes":[{"value":"/ Creates a domain name from an octets slice.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":289927,"byte_end":289974,"line_start":122,"line_end":122,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":289979,"byte_end":289982,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This will only succeed if `slice` contains a properly encoded","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":289987,"byte_end":290052,"line_start":124,"line_end":124,"column_start":5,"column_end":70}},{"value":"/ absolute domain name. ","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":290057,"byte_end":290083,"line_start":125,"line_end":125,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1281},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":290337,"byte_end":290347,"line_start":132,"line_end":132,"column_start":12,"column_end":22},"name":"root_slice","qualname":"<Dname<[u8]>>::root_slice","value":"fn () -> &'static Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a domain name for the root label only atop an octets slice.\n","sig":null,"attributes":[{"value":"/ Creates a domain name for the root label only atop an octets slice.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":290254,"byte_end":290325,"line_start":131,"line_end":131,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1284},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":291240,"byte_end":291248,"line_start":162,"line_end":162,"column_start":12,"column_end":20},"name":"root_ref","qualname":"<Dname<&'static [u8]>>::root_ref","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a domain name for the root label only atop a slice reference.\n","sig":null,"attributes":[{"value":"/ Creates a domain name for the root label only atop a slice reference.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":291155,"byte_end":291228,"line_start":161,"line_end":161,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1286},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":291420,"byte_end":291428,"line_start":170,"line_end":170,"column_start":12,"column_end":20},"name":"root_vec","qualname":"<Dname<Vec<u8>>>::root_vec","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a domain name for the root label only atop a `Vec<u8>`.\n","sig":null,"attributes":[{"value":"/ Creates a domain name for the root label only atop a `Vec<u8>`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":291341,"byte_end":291408,"line_start":169,"line_end":169,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1287},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":291559,"byte_end":291571,"line_start":175,"line_end":175,"column_start":12,"column_end":24},"name":"vec_from_str","qualname":"<Dname<Vec<u8>>>::vec_from_str","value":"fn (s: &str) -> Result<Self, FromStrError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a domain name atop a `Vec<u8>` from its string representation.\n","sig":null,"attributes":[{"value":"/ Creates a domain name atop a `Vec<u8>` from its string representation.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":291473,"byte_end":291547,"line_start":174,"line_end":174,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1289},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":291782,"byte_end":291792,"line_start":183,"line_end":183,"column_start":12,"column_end":22},"name":"root_bytes","qualname":"<Dname<Bytes>>::root_bytes","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a domain name for the root label only atop a bytes values.\n","sig":null,"attributes":[{"value":"/ Creates a domain name for the root label only atop a bytes values.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":291700,"byte_end":291770,"line_start":182,"line_end":182,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1290},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":291919,"byte_end":291933,"line_start":188,"line_end":188,"column_start":12,"column_end":26},"name":"bytes_from_str","qualname":"<Dname<Bytes>>::bytes_from_str","value":"fn (s: &str) -> Result<Self, FromStrError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a domain name atop a Bytes from its string representation.\n","sig":null,"attributes":[{"value":"/ Creates a domain name atop a Bytes from its string representation.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":291837,"byte_end":291907,"line_start":187,"line_end":187,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":292147,"byte_end":292156,"line_start":198,"line_end":198,"column_start":12,"column_end":21},"name":"as_octets","qualname":"<Dname<Octets>>::as_octets","value":"fn (&self) -> &Octets","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying octets sequence.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying octets sequence.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":292077,"byte_end":292135,"line_start":197,"line_end":197,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":292281,"byte_end":292292,"line_start":203,"line_end":203,"column_start":12,"column_end":23},"name":"into_octets","qualname":"<Dname<Octets>>::into_octets","value":"fn (self) -> Octets","parent":null,"children":[],"decl_id":null,"docs":" Converts the domain name into the underlying octets sequence.\n","sig":null,"attributes":[{"value":"/ Converts the domain name into the underlying octets sequence.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":292204,"byte_end":292269,"line_start":202,"line_end":202,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1295},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":292444,"byte_end":292457,"line_start":209,"line_end":209,"column_start":12,"column_end":25},"name":"into_relative","qualname":"<Dname<Octets>>::into_relative","value":"fn (mut self) -> RelativeDname<Octets>","parent":null,"children":[],"decl_id":null,"docs":" Converts the name into a relative name by dropping the root label.\n","sig":null,"attributes":[{"value":"/ Converts the name into a relative name by dropping the root label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":292362,"byte_end":292432,"line_start":208,"line_end":208,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1296},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":292751,"byte_end":292758,"line_start":217,"line_end":217,"column_start":12,"column_end":19},"name":"for_ref","qualname":"<Dname<Octets>>::for_ref","value":"fn (&self) -> Dname<&Octets>","parent":null,"children":[],"decl_id":null,"docs":" Returns a domain name using a reference to the octets.\n","sig":null,"attributes":[{"value":"/ Returns a domain name using a reference to the octets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":292681,"byte_end":292739,"line_start":216,"line_end":216,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1297},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":292921,"byte_end":292929,"line_start":222,"line_end":222,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Dname<Octets>>::as_slice","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying octets slice.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying octets slice.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":292854,"byte_end":292909,"line_start":221,"line_end":221,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1298},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":293087,"byte_end":293096,"line_start":228,"line_end":228,"column_start":12,"column_end":21},"name":"for_slice","qualname":"<Dname<Octets>>::for_slice","value":"fn (&self) -> Dname<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns a domain name for the octets slice of the content.\n","sig":null,"attributes":[{"value":"/ Returns a domain name for the octets slice of the content.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":293013,"byte_end":293075,"line_start":227,"line_end":227,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1301},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":293503,"byte_end":293510,"line_start":241,"line_end":241,"column_start":12,"column_end":19},"name":"is_root","qualname":"<Dname<Octets>>::is_root","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the name is the root label only.\n","sig":null,"attributes":[{"value":"/ Returns whether the name is the root label only.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":293439,"byte_end":293491,"line_start":240,"line_end":240,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1304},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":293946,"byte_end":293950,"line_start":254,"line_end":254,"column_start":12,"column_end":16},"name":"iter","qualname":"<Dname<Octets>>::iter","value":"fn (&self) -> DnameIter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the labels of the domain name.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the labels of the domain name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":293875,"byte_end":293934,"line_start":253,"line_end":253,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1305},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":294290,"byte_end":294303,"line_start":263,"line_end":263,"column_start":12,"column_end":25},"name":"iter_suffixes","qualname":"<Dname<Octets>>::iter_suffixes","value":"fn (&self) -> SuffixIter<&Octets>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the suffixes of the name.","sig":null,"attributes":[{"value":"/ Returns an iterator over the suffixes of the name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":294024,"byte_end":294078,"line_start":258,"line_end":258,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":294083,"byte_end":294086,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ The returned iterator starts with the full name and then for each","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":294091,"byte_end":294160,"line_start":260,"line_end":260,"column_start":5,"column_end":74}},{"value":"/ additional step returns a name with the left-most label stripped off","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":294165,"byte_end":294237,"line_start":261,"line_end":261,"column_start":5,"column_end":77}},{"value":"/ until it reaches the root label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":294242,"byte_end":294278,"line_start":262,"line_end":262,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1306},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":294451,"byte_end":294462,"line_start":268,"line_end":268,"column_start":12,"column_end":23},"name":"label_count","qualname":"<Dname<Octets>>::label_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of labels in the domain name.\n","sig":null,"attributes":[{"value":"/ Returns the number of labels in the domain name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":294387,"byte_end":294439,"line_start":267,"line_end":267,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1307},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":294575,"byte_end":294580,"line_start":273,"line_end":273,"column_start":12,"column_end":17},"name":"first","qualname":"<Dname<Octets>>::first","value":"fn (&self) -> &Label","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the first label.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the first label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":294520,"byte_end":294563,"line_start":272,"line_end":272,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1308},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":294900,"byte_end":294904,"line_start":282,"line_end":282,"column_start":12,"column_end":16},"name":"last","qualname":"<Dname<Octets>>::last","value":"fn (&self) -> &'static Label","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the last label.","sig":null,"attributes":[{"value":"/ Returns a reference to the last label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":294647,"byte_end":294689,"line_start":277,"line_end":277,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":294694,"byte_end":294697,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ Because the last label in an absolute name is always the root label,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":294702,"byte_end":294774,"line_start":279,"line_end":279,"column_start":5,"column_end":77}},{"value":"/ this method can return a static reference. It is also a wee bit silly,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":294779,"byte_end":294853,"line_start":280,"line_end":280,"column_start":5,"column_end":79}},{"value":"/ but here for completeness.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":294858,"byte_end":294888,"line_start":281,"line_end":281,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1309},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":295029,"byte_end":295040,"line_start":287,"line_end":287,"column_start":12,"column_end":23},"name":"starts_with","qualname":"<Dname<Octets>>::starts_with","value":"fn <'a, N> (&'a self, base: &'a N) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether `base` is a prefix of `self`.\n","sig":null,"attributes":[{"value":"/ Determines whether `base` is a prefix of `self`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":294965,"byte_end":295017,"line_start":286,"line_end":286,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1312},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":295251,"byte_end":295260,"line_start":294,"line_end":294,"column_start":12,"column_end":21},"name":"ends_with","qualname":"<Dname<Octets>>::ends_with","value":"fn <'a, N> (&'a self, base: &'a N) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether `base` is a suffix of `self`.\n","sig":null,"attributes":[{"value":"/ Determines whether `base` is a suffix of `self`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":295187,"byte_end":295239,"line_start":293,"line_end":293,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1315},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":295491,"byte_end":295505,"line_start":301,"line_end":301,"column_start":12,"column_end":26},"name":"is_label_start","qualname":"<Dname<Octets>>::is_label_start","value":"fn (&self, mut index: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether an index points to the first byte of a non-root label.\n","sig":null,"attributes":[{"value":"/ Returns whether an index points to the first byte of a non-root label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":295405,"byte_end":295479,"line_start":300,"line_end":300,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1317},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":297303,"byte_end":297308,"line_start":350,"line_end":350,"column_start":12,"column_end":17},"name":"slice","qualname":"<Dname<Octets>>::slice","value":"fn (&self, begin: usize, end: usize) -> &RelativeDname<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the part of the name indicated by start and end positions.","sig":null,"attributes":[{"value":"/ Returns the part of the name indicated by start and end positions.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":296254,"byte_end":296324,"line_start":328,"line_end":328,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":296329,"byte_end":296332,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ The returned name will start at position `begin` and end right before","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":296337,"byte_end":296410,"line_start":330,"line_end":330,"column_start":5,"column_end":78}},{"value":"/ position `end`. Both positions are given as indexes into the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":296415,"byte_end":296479,"line_start":331,"line_end":331,"column_start":5,"column_end":69}},{"value":"/ underlying octets sequence and must point to the begining of a label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":296484,"byte_end":296557,"line_start":332,"line_end":332,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":296562,"byte_end":296565,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ The method returns a reference to an unsized relative domain name and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":296570,"byte_end":296643,"line_start":334,"line_end":334,"column_start":5,"column_end":78}},{"value":"/ is thus best suited for temporary referencing. If you want to keep the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":296648,"byte_end":296722,"line_start":335,"line_end":335,"column_start":5,"column_end":79}},{"value":"/ part of the name around, [`range`] is likely a better choice.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":296727,"byte_end":296792,"line_start":336,"line_end":336,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":296797,"byte_end":296800,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":296805,"byte_end":296817,"line_start":338,"line_end":338,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":296822,"byte_end":296825,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ The method panics if either position is not the start of a label or","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":296830,"byte_end":296901,"line_start":340,"line_end":340,"column_start":5,"column_end":76}},{"value":"/ is out of bounds.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":296906,"byte_end":296927,"line_start":341,"line_end":341,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":296932,"byte_end":296935,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ Because the returned domain name is relative, the method will also","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":296940,"byte_end":297010,"line_start":343,"line_end":343,"column_start":5,"column_end":75}},{"value":"/ panic if the end is equal to the length of the name. If you","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":297015,"byte_end":297078,"line_start":344,"line_end":344,"column_start":5,"column_end":68}},{"value":"/ want to slice the entire end of the name including the final root","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":297083,"byte_end":297152,"line_start":345,"line_end":345,"column_start":5,"column_end":74}},{"value":"/ label, you can use [`slice_from()`] instead.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":297157,"byte_end":297205,"line_start":346,"line_end":346,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":297210,"byte_end":297213,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ [`range`]: #method.range","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":297218,"byte_end":297246,"line_start":348,"line_end":348,"column_start":5,"column_end":33}},{"value":"/ [`slice_from()`]: #method.slice_from","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":297251,"byte_end":297291,"line_start":349,"line_end":349,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1318},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":298303,"byte_end":298313,"line_start":375,"line_end":375,"column_start":12,"column_end":22},"name":"slice_from","qualname":"<Dname<Octets>>::slice_from","value":"fn (&self, begin: usize) -> &Dname<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the part of the name starting at the given position.","sig":null,"attributes":[{"value":"/ Returns the part of the name starting at the given position.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":297548,"byte_end":297612,"line_start":358,"line_end":358,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":297617,"byte_end":297620,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ The returned name will start at the given postion and cover the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":297625,"byte_end":297692,"line_start":360,"line_end":360,"column_start":5,"column_end":72}},{"value":"/ remainder of the name. The position `begin` is provided as an index","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":297697,"byte_end":297768,"line_start":361,"line_end":361,"column_start":5,"column_end":76}},{"value":"/ into the underlying octets sequence and must point to the beginning","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":297773,"byte_end":297844,"line_start":362,"line_end":362,"column_start":5,"column_end":76}},{"value":"/ of a label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":297849,"byte_end":297864,"line_start":363,"line_end":363,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":297869,"byte_end":297872,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The method returns a reference to an unsized domain name and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":297877,"byte_end":297941,"line_start":365,"line_end":365,"column_start":5,"column_end":69}},{"value":"/ is thus best suited for temporary referencing. If you want to keep the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":297946,"byte_end":298020,"line_start":366,"line_end":366,"column_start":5,"column_end":79}},{"value":"/ part of the name around, [`range_from`] is likely a better choice.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":298025,"byte_end":298095,"line_start":367,"line_end":367,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":298100,"byte_end":298103,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":298108,"byte_end":298120,"line_start":369,"line_end":369,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":298125,"byte_end":298128,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ The method panics if `begin` isn’t the index of the beginning of a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":298133,"byte_end":298205,"line_start":371,"line_end":371,"column_start":5,"column_end":75}},{"value":"/ label or is out of bounds.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":298210,"byte_end":298240,"line_start":372,"line_end":372,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":298245,"byte_end":298248,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ [`range_from`]: #method.range_from","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":298253,"byte_end":298291,"line_start":374,"line_end":374,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1319},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":299367,"byte_end":299375,"line_start":400,"line_end":400,"column_start":12,"column_end":20},"name":"slice_to","qualname":"<Dname<Octets>>::slice_to","value":"fn (&self, end: usize) -> &RelativeDname<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the part of the name ending at the given position.","sig":null,"attributes":[{"value":"/ Returns the part of the name ending at the given position.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":298491,"byte_end":298553,"line_start":382,"line_end":382,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":298558,"byte_end":298561,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ The returned name will start at beginning of the name and continue","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":298566,"byte_end":298636,"line_start":384,"line_end":384,"column_start":5,"column_end":75}},{"value":"/ until just before the given postion. The position `end` is considered","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":298641,"byte_end":298714,"line_start":385,"line_end":385,"column_start":5,"column_end":78}},{"value":"/ as an index into the underlying octets sequence and must point to the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":298719,"byte_end":298792,"line_start":386,"line_end":386,"column_start":5,"column_end":78}},{"value":"/ beginning of a label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":298797,"byte_end":298822,"line_start":387,"line_end":387,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":298827,"byte_end":298830,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ The method returns a reference to an unsized domain name and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":298835,"byte_end":298899,"line_start":389,"line_end":389,"column_start":5,"column_end":69}},{"value":"/ is thus best suited for temporary referencing. If you want to keep the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":298904,"byte_end":298978,"line_start":390,"line_end":390,"column_start":5,"column_end":79}},{"value":"/ part of the name around, [`range_to`] is likely a better choice.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":298983,"byte_end":299051,"line_start":391,"line_end":391,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":299056,"byte_end":299059,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":299064,"byte_end":299076,"line_start":393,"line_end":393,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":299081,"byte_end":299084,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ The method panics if `end` is not the beginning of a label or is out","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":299089,"byte_end":299161,"line_start":395,"line_end":395,"column_start":5,"column_end":77}},{"value":"/ of bounds. Because the returned domain name is relative, the method","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":299166,"byte_end":299237,"line_start":396,"line_end":396,"column_start":5,"column_end":76}},{"value":"/ will also panic if the end is equal to the length of the name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":299242,"byte_end":299308,"line_start":397,"line_end":397,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":299313,"byte_end":299316,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ [`range_to`]: #method.range_to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":299321,"byte_end":299355,"line_start":399,"line_end":399,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1320},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":300344,"byte_end":300349,"line_start":424,"line_end":424,"column_start":12,"column_end":17},"name":"range","qualname":"<Dname<Octets>>::range","value":"fn <'a> (&'a self, begin: usize, end: usize) -> RelativeDname<<&'a Octets as OctetsRef>::Range>","parent":null,"children":[],"decl_id":null,"docs":" Returns the part of the name indicated by start and end positions.","sig":null,"attributes":[{"value":"/ Returns the part of the name indicated by start and end positions.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":299563,"byte_end":299633,"line_start":407,"line_end":407,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":299638,"byte_end":299641,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ The returned name will start at position `begin` and end right before","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":299646,"byte_end":299719,"line_start":409,"line_end":409,"column_start":5,"column_end":78}},{"value":"/ position `end`. Both positions are given as indexes into the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":299724,"byte_end":299788,"line_start":410,"line_end":410,"column_start":5,"column_end":69}},{"value":"/ underlying octets sequence and must point to the begining of a label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":299793,"byte_end":299866,"line_start":411,"line_end":411,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":299871,"byte_end":299874,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":299879,"byte_end":299891,"line_start":413,"line_end":413,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":299896,"byte_end":299899,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ The method panics if either position is not the start of a label or","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":299904,"byte_end":299975,"line_start":415,"line_end":415,"column_start":5,"column_end":76}},{"value":"/ is out of bounds.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":299980,"byte_end":300001,"line_start":416,"line_end":416,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":300006,"byte_end":300009,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ Because the returned domain name is relative, the method will also","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":300014,"byte_end":300084,"line_start":418,"line_end":418,"column_start":5,"column_end":75}},{"value":"/ panic if the end is equal to the length of the name. If you","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":300089,"byte_end":300152,"line_start":419,"line_end":419,"column_start":5,"column_end":68}},{"value":"/ want to slice the entire end of the name including the final root","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":300157,"byte_end":300226,"line_start":420,"line_end":420,"column_start":5,"column_end":74}},{"value":"/ label, you can use [`range_from()`] instead.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":300231,"byte_end":300279,"line_start":421,"line_end":421,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":300284,"byte_end":300287,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ [`range_from()`]: #method.range_from","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":300292,"byte_end":300332,"line_start":423,"line_end":423,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1322},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":301139,"byte_end":301149,"line_start":446,"line_end":446,"column_start":12,"column_end":22},"name":"range_from","qualname":"<Dname<Octets>>::range_from","value":"fn <'a> (&'a self, begin: usize) -> Dname<<&'a Octets as OctetsRef>::Range>","parent":null,"children":[],"decl_id":null,"docs":" Returns the part of the name starting at the given position.","sig":null,"attributes":[{"value":"/ Returns the part of the name starting at the given position.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":300666,"byte_end":300730,"line_start":435,"line_end":435,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":300735,"byte_end":300738,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ The returned name will start at the given postion and cover the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":300743,"byte_end":300810,"line_start":437,"line_end":437,"column_start":5,"column_end":72}},{"value":"/ remainder of the name. The position `begin` is provided as an index","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":300815,"byte_end":300886,"line_start":438,"line_end":438,"column_start":5,"column_end":76}},{"value":"/ into the underlying octets sequence and must point to the beginning","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":300891,"byte_end":300962,"line_start":439,"line_end":439,"column_start":5,"column_end":76}},{"value":"/ of a label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":300967,"byte_end":300982,"line_start":440,"line_end":440,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":300987,"byte_end":300990,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":300995,"byte_end":301007,"line_start":442,"line_end":442,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":301012,"byte_end":301015,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ The method panics if `begin` isn’t the index of the beginning of a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":301020,"byte_end":301092,"line_start":444,"line_end":444,"column_start":5,"column_end":75}},{"value":"/ label or is out of bounds.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":301097,"byte_end":301127,"line_start":445,"line_end":445,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1324},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":302007,"byte_end":302015,"line_start":468,"line_end":468,"column_start":12,"column_end":20},"name":"range_to","qualname":"<Dname<Octets>>::range_to","value":"fn <'a> (&'a self, end: usize) -> RelativeDname<<&'a Octets as OctetsRef>::Range>","parent":null,"children":[],"decl_id":null,"docs":" Returns the part of the name ending at the given position.","sig":null,"attributes":[{"value":"/ Returns the part of the name ending at the given position.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":301407,"byte_end":301469,"line_start":456,"line_end":456,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":301474,"byte_end":301477,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ The returned name will start at beginning of the name and continue","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":301482,"byte_end":301552,"line_start":458,"line_end":458,"column_start":5,"column_end":75}},{"value":"/ until just before the given postion. The position `end` is considered","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":301557,"byte_end":301630,"line_start":459,"line_end":459,"column_start":5,"column_end":78}},{"value":"/ as an index into the underlying octets sequence and must point to the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":301635,"byte_end":301708,"line_start":460,"line_end":460,"column_start":5,"column_end":78}},{"value":"/ beginning of a label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":301713,"byte_end":301738,"line_start":461,"line_end":461,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":301743,"byte_end":301746,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":301751,"byte_end":301763,"line_start":463,"line_end":463,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":301768,"byte_end":301771,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ The method panics if `end` is not the beginning of a label or is out","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":301776,"byte_end":301848,"line_start":465,"line_end":465,"column_start":5,"column_end":77}},{"value":"/ of bounds. Because the returned domain name is relative, the method","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":301853,"byte_end":301924,"line_start":466,"line_end":466,"column_start":5,"column_end":76}},{"value":"/ will also panic if the end is equal to the length of the name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":301929,"byte_end":301995,"line_start":467,"line_end":467,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1328},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":302625,"byte_end":302633,"line_start":489,"line_end":489,"column_start":12,"column_end":20},"name":"split_at","qualname":"<Dname<Octets>>::split_at","value":"fn (mut self, mid: usize) -> (RelativeDname<Octets>, Self)","parent":null,"children":[],"decl_id":null,"docs":" Splits the name into two at the given position.","sig":null,"attributes":[{"value":"/ Splits the name into two at the given position.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":302333,"byte_end":302384,"line_start":481,"line_end":481,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":302389,"byte_end":302392,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ Returns a pair of the left and right part of the split name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":302397,"byte_end":302461,"line_start":483,"line_end":483,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":302466,"byte_end":302469,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":302474,"byte_end":302486,"line_start":485,"line_end":485,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":302491,"byte_end":302494,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ The method will panic if `mid` is not the index of the beginning of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":302499,"byte_end":302570,"line_start":487,"line_end":487,"column_start":5,"column_end":76}},{"value":"/ a label or if it is out of bounds.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":302575,"byte_end":302613,"line_start":488,"line_end":488,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1330},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":303160,"byte_end":303168,"line_start":504,"line_end":504,"column_start":12,"column_end":20},"name":"split_to","qualname":"<Dname<Octets>>::split_to","value":"fn (&mut self, mid: usize) -> RelativeDname<Octets>","parent":null,"children":[],"decl_id":null,"docs":" Splits the name into two at the given position.","sig":null,"attributes":[{"value":"/ Splits the name into two at the given position.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":302818,"byte_end":302869,"line_start":495,"line_end":495,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":302874,"byte_end":302877,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ Afterwards, `self` will contain the name starting at the position","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":302882,"byte_end":302951,"line_start":497,"line_end":497,"column_start":5,"column_end":74}},{"value":"/ while the name ending right before it will be returned.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":302956,"byte_end":303015,"line_start":498,"line_end":498,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":303020,"byte_end":303023,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":303028,"byte_end":303040,"line_start":500,"line_end":500,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":303045,"byte_end":303048,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ The method will panic if `mid` is not the start of a new label or is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":303053,"byte_end":303125,"line_start":502,"line_end":502,"column_start":5,"column_end":77}},{"value":"/ out of bounds.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":303130,"byte_end":303148,"line_start":503,"line_end":503,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1332},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":303775,"byte_end":303783,"line_start":523,"line_end":523,"column_start":12,"column_end":20},"name":"truncate","qualname":"<Dname<Octets>>::truncate","value":"fn (mut self, len: usize) -> RelativeDname<Octets>","parent":null,"children":[],"decl_id":null,"docs":" Truncates the name before `len`.","sig":null,"attributes":[{"value":"/ Truncates the name before `len`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":303479,"byte_end":303515,"line_start":514,"line_end":514,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":303520,"byte_end":303523,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ Because truncating converts the name into a relative name, the method","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":303528,"byte_end":303601,"line_start":516,"line_end":516,"column_start":5,"column_end":78}},{"value":"/ consumes self.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":303606,"byte_end":303624,"line_start":517,"line_end":517,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":303629,"byte_end":303632,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":303637,"byte_end":303649,"line_start":519,"line_end":519,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":303654,"byte_end":303657,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ The method will panic if `len` is not the index of a new label or if","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":303662,"byte_end":303734,"line_start":521,"line_end":521,"column_start":5,"column_end":77}},{"value":"/ it is out of bounds.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":303739,"byte_end":303763,"line_start":522,"line_end":522,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1333},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":304270,"byte_end":304281,"line_start":535,"line_end":535,"column_start":12,"column_end":23},"name":"split_first","qualname":"<Dname<Octets>>::split_first","value":"fn (&mut self) -> Option<RelativeDname<Octets>>","parent":null,"children":[],"decl_id":null,"docs":" Splits off the first label.","sig":null,"attributes":[{"value":"/ Splits off the first label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":303997,"byte_end":304028,"line_start":530,"line_end":530,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":304033,"byte_end":304036,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ If this name is longer than just the root label, returns the first","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":304041,"byte_end":304111,"line_start":532,"line_end":532,"column_start":5,"column_end":75}},{"value":"/ label as a relative name and removes it from the name itself. If the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":304116,"byte_end":304188,"line_start":533,"line_end":533,"column_start":5,"column_end":77}},{"value":"/ name is only the root label, returns `None` and does nothing.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":304193,"byte_end":304258,"line_start":534,"line_end":534,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1335},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":304771,"byte_end":304777,"line_start":548,"line_end":548,"column_start":12,"column_end":18},"name":"parent","qualname":"<Dname<Octets>>::parent","value":"fn (&mut self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Reduces the name to the parent of the current name.","sig":null,"attributes":[{"value":"/ Reduces the name to the parent of the current name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":304548,"byte_end":304603,"line_start":544,"line_end":544,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":304608,"byte_end":304611,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ If the name consists of the root label only, returns `false` and does","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":304616,"byte_end":304689,"line_start":546,"line_end":546,"column_start":5,"column_end":78}},{"value":"/ nothing. Otherwise, drops the first label and returns `true`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":304694,"byte_end":304759,"line_start":547,"line_end":547,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1337},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":305145,"byte_end":305157,"line_start":558,"line_end":558,"column_start":12,"column_end":24},"name":"strip_suffix","qualname":"<Dname<Octets>>::strip_suffix","value":"fn <N> (self, base: &N) -> Result<RelativeDname<Octets>, Self>","parent":null,"children":[],"decl_id":null,"docs":" Strips the suffix `base` from the domain name.","sig":null,"attributes":[{"value":"/ Strips the suffix `base` from the domain name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":304903,"byte_end":304953,"line_start":553,"line_end":553,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":304958,"byte_end":304961,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ If `base` is indeed a suffix, returns a relative domain name with the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":304966,"byte_end":305039,"line_start":555,"line_end":555,"column_start":5,"column_end":78}},{"value":"/ remainder of the name. Otherwise, returns an error with an unmodified","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":305044,"byte_end":305117,"line_start":556,"line_end":556,"column_start":5,"column_end":78}},{"value":"/ `self`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":305122,"byte_end":305133,"line_start":557,"line_end":557,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":5582},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":311919,"byte_end":311929,"line_start":829,"line_end":829,"column_start":12,"column_end":22},"name":"SuffixIter","qualname":"::base::name::dname::SuffixIter","value":"SuffixIter {  }","parent":null,"children":[{"krate":0,"index":5584},{"krate":0,"index":5585}],"decl_id":null,"docs":" An iterator over ever shorter suffixes of a domain name.\n","sig":null,"attributes":[{"value":"/ An iterator over ever shorter suffixes of a domain name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":311830,"byte_end":311890,"line_start":827,"line_end":827,"column_start":1,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5590},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":313014,"byte_end":313022,"line_start":870,"line_end":870,"column_start":5,"column_end":13},"name":"BadLabel","qualname":"::base::name::dname::DnameError::BadLabel","value":"DnameError::BadLabel(LabelTypeError)","parent":{"krate":0,"index":5589},"children":[],"decl_id":null,"docs":" The encoding contained an unknown or disallowed label type.\n","sig":null,"attributes":[{"value":"/ The encoding contained an unknown or disallowed label type.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":312946,"byte_end":313009,"line_start":869,"line_end":869,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5593},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":313099,"byte_end":313113,"line_start":873,"line_end":873,"column_start":5,"column_end":19},"name":"CompressedName","qualname":"::base::name::dname::DnameError::CompressedName","value":"DnameError::CompressedName","parent":{"krate":0,"index":5589},"children":[],"decl_id":null,"docs":" The encoding contained a compression pointer.\n","sig":null,"attributes":[{"value":"/ The encoding contained a compression pointer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":313045,"byte_end":313094,"line_start":872,"line_end":872,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5595},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":313165,"byte_end":313173,"line_start":876,"line_end":876,"column_start":5,"column_end":13},"name":"LongName","qualname":"::base::name::dname::DnameError::LongName","value":"DnameError::LongName","parent":{"krate":0,"index":5589},"children":[],"decl_id":null,"docs":" The name was longer than 255 octets.\n","sig":null,"attributes":[{"value":"/ The name was longer than 255 octets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":313120,"byte_end":313160,"line_start":875,"line_end":875,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5597},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":313230,"byte_end":313242,"line_start":879,"line_end":879,"column_start":5,"column_end":17},"name":"RelativeName","qualname":"::base::name::dname::DnameError::RelativeName","value":"DnameError::RelativeName","parent":{"krate":0,"index":5589},"children":[],"decl_id":null,"docs":" The name did not end with the root label.\n","sig":null,"attributes":[{"value":"/ The name did not end with the root label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":313180,"byte_end":313225,"line_start":878,"line_end":878,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5599},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":313315,"byte_end":313327,"line_start":882,"line_end":882,"column_start":5,"column_end":17},"name":"TrailingData","qualname":"::base::name::dname::DnameError::TrailingData","value":"DnameError::TrailingData","parent":{"krate":0,"index":5589},"children":[],"decl_id":null,"docs":" There was more data after the root label was encountered.\n","sig":null,"attributes":[{"value":"/ There was more data after the root label was encountered.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":313249,"byte_end":313310,"line_start":881,"line_end":881,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5601},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":313384,"byte_end":313394,"line_start":885,"line_end":885,"column_start":5,"column_end":15},"name":"ShortInput","qualname":"::base::name::dname::DnameError::ShortInput","value":"DnameError::ShortInput","parent":{"krate":0,"index":5589},"children":[],"decl_id":null,"docs":" The input ended in the middle of a label.\n","sig":null,"attributes":[{"value":"/ The input ended in the middle of a label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":313334,"byte_end":313379,"line_start":884,"line_end":884,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":5589},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":312929,"byte_end":312939,"line_start":868,"line_end":868,"column_start":10,"column_end":20},"name":"DnameError","qualname":"::base::name::dname::DnameError","value":"DnameError::{BadLabel, CompressedName, LongName, RelativeName, TrailingData, ShortInput}","parent":null,"children":[{"krate":0,"index":5590},{"krate":0,"index":5593},{"krate":0,"index":5595},{"krate":0,"index":5597},{"krate":0,"index":5599},{"krate":0,"index":5601}],"decl_id":null,"docs":" A domain name wasn’t encoded correctly.\n","sig":null,"attributes":[{"value":"/ A domain name wasn’t encoded correctly.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":312829,"byte_end":312874,"line_start":866,"line_end":866,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1437},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":342435,"byte_end":342440,"line_start":38,"line_end":38,"column_start":12,"column_end":17},"name":"Label","qualname":"::base::name::label::Label","value":"","parent":null,"children":[],"decl_id":null,"docs":" An octets slice with the content of a domain name label.","sig":null,"attributes":[{"value":"/ An octets slice with the content of a domain name label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":341111,"byte_end":341171,"line_start":14,"line_end":14,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":341172,"byte_end":341175,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This is an unsized type wrapping the content of a valid label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":341176,"byte_end":341242,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":341243,"byte_end":341246,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ There are two types of such labels: normal labels and binary labels.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":341247,"byte_end":341319,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ Normal labels consist of up to 63 octets of data. Binary labels are a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":341320,"byte_end":341393,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/ sequence of up to 256 one-bit labels. They have been invented for reverse","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":341394,"byte_end":341471,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ pointer records for IPv6 but have quickly been found to be rather","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":341472,"byte_end":341541,"line_start":21,"line_end":21,"column_start":1,"column_end":70}},{"value":"/ unwieldy and were never widely implemented. Subsequently they have been","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":341542,"byte_end":341617,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ declared historic and are forbidden to be supported. So we don’t.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":341618,"byte_end":341689,"line_start":23,"line_end":23,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":341690,"byte_end":341693,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ In theory there can be even more types of labels, but based on the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":341694,"byte_end":341764,"line_start":25,"line_end":25,"column_start":1,"column_end":71}},{"value":"/ experience with binary labels, it is very unlikely that there ever will","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":341765,"byte_end":341840,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ be any.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":341841,"byte_end":341852,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":341853,"byte_end":341856,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Consequently, `Label` will only ever contain an octets slice of up to 63","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":341857,"byte_end":341933,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ octets. It only contains the label’s content, not the length octet it is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":341934,"byte_end":342012,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ preceded by in wire format. The type `Deref`s to `[u8]`, providing access","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":342013,"byte_end":342090,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ to all of an octets slice’s methods. As an unsized type, it needs to be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":342091,"byte_end":342168,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ used behind some kind of pointer, most likely a reference.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":342169,"byte_end":342231,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":342232,"byte_end":342235,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ `Label` differs from an octets slice in how it compares: as labels are to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":342236,"byte_end":342313,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ be case-insensitive, all the comparison traits as well as `Hash` are","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":342314,"byte_end":342386,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ implemented ignoring ASCII-case.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":342387,"byte_end":342423,"line_start":37,"line_end":37,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1443},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":343192,"byte_end":343196,"line_start":66,"line_end":66,"column_start":12,"column_end":16},"name":"root","qualname":"<Label>::root","value":"fn () -> &'static Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a static reference to the root label.","sig":null,"attributes":[{"value":"/ Returns a static reference to the root label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":343081,"byte_end":343130,"line_start":63,"line_end":63,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":343135,"byte_end":343138,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The root label is an empty label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":343143,"byte_end":343180,"line_start":65,"line_end":65,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1444},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":343351,"byte_end":343359,"line_start":71,"line_end":71,"column_start":12,"column_end":20},"name":"wildcard","qualname":"<Label>::wildcard","value":"fn () -> &'static Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a static reference to the wildcard label `\"*\"`.\n","sig":null,"attributes":[{"value":"/ Returns a static reference to the wildcard label `\"*\"`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":343280,"byte_end":343339,"line_start":70,"line_end":70,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1445},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":343568,"byte_end":343578,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<Label>::from_slice","value":"fn (slice: &[u8]) -> Result<&Self, LongLabelError>","parent":null,"children":[],"decl_id":null,"docs":" Converts an octets slice into a label.","sig":null,"attributes":[{"value":"/ Converts an octets slice into a label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":343444,"byte_end":343486,"line_start":75,"line_end":75,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":343491,"byte_end":343494,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ This will fail if the slice is longer than 63 octets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":343499,"byte_end":343556,"line_start":77,"line_end":77,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1446},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":343928,"byte_end":343942,"line_start":90,"line_end":90,"column_start":12,"column_end":26},"name":"from_slice_mut","qualname":"<Label>::from_slice_mut","value":"fn (slice: &mut [u8]) -> Result<&mut Self, LongLabelError>","parent":null,"children":[],"decl_id":null,"docs":" Converts a mutable octets slice into a label.","sig":null,"attributes":[{"value":"/ Converts a mutable octets slice into a label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":343797,"byte_end":343846,"line_start":87,"line_end":87,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":343851,"byte_end":343854,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This will fail of the slice is longer than 63 octets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":343859,"byte_end":343916,"line_start":89,"line_end":89,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1447},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":344353,"byte_end":344363,"line_start":105,"line_end":105,"column_start":12,"column_end":22},"name":"split_from","qualname":"<Label>::split_from","value":"fn (slice: &[u8]) -> Result<(&Self, &[u8]), SplitLabelError>","parent":null,"children":[],"decl_id":null,"docs":" Splits a label from the beginning of an octets slice.","sig":null,"attributes":[{"value":"/ Splits a label from the beginning of an octets slice.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":344187,"byte_end":344244,"line_start":101,"line_end":101,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":344249,"byte_end":344252,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ On success, the function returns a label and the remainder of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":344257,"byte_end":344322,"line_start":103,"line_end":103,"column_start":5,"column_end":70}},{"value":"/ the slice.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":344327,"byte_end":344341,"line_start":104,"line_end":104,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1448},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":345910,"byte_end":345920,"line_start":149,"line_end":149,"column_start":12,"column_end":22},"name":"iter_slice","qualname":"<Label>::iter_slice","value":"fn (slice: &[u8], start: usize) -> SliceLabelsIter","parent":null,"children":[],"decl_id":null,"docs":" Iterates over the labels in some part of an octets slice.","sig":null,"attributes":[{"value":"/ Iterates over the labels in some part of an octets slice.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":345542,"byte_end":345603,"line_start":139,"line_end":139,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":345608,"byte_end":345611,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ The first label is assumed to start at index `start`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":345616,"byte_end":345673,"line_start":141,"line_end":141,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":345678,"byte_end":345681,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Stops at the root label, the first broken label, or if a compression","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":345686,"byte_end":345758,"line_start":143,"line_end":143,"column_start":5,"column_end":77}},{"value":"/ pointer is found that is pointing forward.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":345763,"byte_end":345809,"line_start":144,"line_end":144,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":345814,"byte_end":345817,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":345822,"byte_end":345834,"line_start":146,"line_end":146,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":345839,"byte_end":345842,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Panics if `start` is beyond the end of `slice`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":345847,"byte_end":345898,"line_start":148,"line_end":148,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1449},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":346089,"byte_end":346097,"line_start":154,"line_end":154,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Label>::as_slice","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying octets slice.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying octets slice.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":346022,"byte_end":346077,"line_start":153,"line_end":153,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1450},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":346260,"byte_end":346272,"line_start":159,"line_end":159,"column_start":12,"column_end":24},"name":"as_slice_mut","qualname":"<Label>::as_slice_mut","value":"fn (&mut self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying octets slice.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying octets slice.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":346185,"byte_end":346248,"line_start":158,"line_end":158,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1451},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":346485,"byte_end":346497,"line_start":166,"line_end":166,"column_start":12,"column_end":24},"name":"to_canonical","qualname":"<Label>::to_canonical","value":"fn (&self) -> OwnedLabel","parent":null,"children":[],"decl_id":null,"docs":" Returns the label in canonical form.\n \n In this form, all ASCII letters are lowercase.\n","sig":null,"attributes":[{"value":"/ Returns the label in canonical form.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":346369,"byte_end":346409,"line_start":163,"line_end":163,"column_start":5,"column_end":45}},{"value":"/ ","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":346414,"byte_end":346418,"line_start":164,"line_end":164,"column_start":5,"column_end":9}},{"value":"/ In this form, all ASCII letters are lowercase.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":346423,"byte_end":346473,"line_start":165,"line_end":165,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1452},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":346678,"byte_end":346690,"line_start":173,"line_end":173,"column_start":12,"column_end":24},"name":"composed_cmp","qualname":"<Label>::composed_cmp","value":"fn (&self, other: &Self) -> cmp::Ordering","parent":null,"children":[],"decl_id":null,"docs":" Returns the composed label ordering.\n","sig":null,"attributes":[{"value":"/ Returns the composed label ordering.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":346626,"byte_end":346666,"line_start":172,"line_end":172,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1453},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":346986,"byte_end":347008,"line_start":182,"line_end":182,"column_start":12,"column_end":34},"name":"lowercase_composed_cmp","qualname":"<Label>::lowercase_composed_cmp","value":"fn (&self, other: &Self) -> cmp::Ordering","parent":null,"children":[],"decl_id":null,"docs":" Returns the composed ordering with ASCII letters lowercased.\n","sig":null,"attributes":[{"value":"/ Returns the composed ordering with ASCII letters lowercased.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":346910,"byte_end":346974,"line_start":181,"line_end":181,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1454},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":347391,"byte_end":347396,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"build","qualname":"<Label>::build","value":"fn <Builder> (&self, target: &mut Builder) -> Result<(), ShortBuf>","parent":null,"children":[],"decl_id":null,"docs":" Appends the label to an octets builder.","sig":null,"attributes":[{"value":"/ Appends the label to an octets builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":347217,"byte_end":347260,"line_start":190,"line_end":190,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":347265,"byte_end":347268,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ The method builds the encoded form of the label that starts with a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":347273,"byte_end":347343,"line_start":192,"line_end":192,"column_start":5,"column_end":75}},{"value":"/ one octet length indicator.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":347348,"byte_end":347379,"line_start":193,"line_end":193,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1457},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":347908,"byte_end":347923,"line_start":208,"line_end":208,"column_start":12,"column_end":27},"name":"build_lowercase","qualname":"<Label>::build_lowercase","value":"fn <Builder> (&self, target: &mut Builder) -> Result<(), ShortBuf>","parent":null,"children":[],"decl_id":null,"docs":" Appends the lowercased label to an octets builder.","sig":null,"attributes":[{"value":"/ Appends the lowercased label to an octets builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":347653,"byte_end":347707,"line_start":203,"line_end":203,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":347712,"byte_end":347715,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ The method builds the encoded form of the label that starts with a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":347720,"byte_end":347790,"line_start":205,"line_end":205,"column_start":5,"column_end":75}},{"value":"/ one octet length indicator. It also converts all ASCII letters into","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":347795,"byte_end":347866,"line_start":206,"line_end":206,"column_start":5,"column_end":76}},{"value":"/ their lowercase form.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":347871,"byte_end":347896,"line_start":207,"line_end":207,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1461},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":348369,"byte_end":348376,"line_start":226,"line_end":226,"column_start":12,"column_end":19},"name":"is_root","qualname":"<Label>::is_root","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the label is the root label.\n","sig":null,"attributes":[{"value":"/ Returns whether the label is the root label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":348309,"byte_end":348357,"line_start":225,"line_end":225,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1462},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":348493,"byte_end":348504,"line_start":231,"line_end":231,"column_start":12,"column_end":23},"name":"is_wildcard","qualname":"<Label>::is_wildcard","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the label is the wildcard label.\n","sig":null,"attributes":[{"value":"/ Returns whether the label is the wildcard label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":348429,"byte_end":348481,"line_start":230,"line_end":230,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1463},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":348765,"byte_end":348776,"line_start":239,"line_end":239,"column_start":12,"column_end":23},"name":"compose_len","qualname":"<Label>::compose_len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the composed version of the label.","sig":null,"attributes":[{"value":"/ Returns the length of the composed version of the label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":348580,"byte_end":348640,"line_start":235,"line_end":235,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":348645,"byte_end":348648,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ This length is one more than the length of the label as their is a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":348653,"byte_end":348723,"line_start":237,"line_end":237,"column_start":5,"column_end":75}},{"value":"/ leading length octet.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":348728,"byte_end":348753,"line_start":238,"line_end":238,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":1502},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":352668,"byte_end":352678,"line_start":416,"line_end":416,"column_start":12,"column_end":22},"name":"OwnedLabel","qualname":"::base::name::label::OwnedLabel","value":"","parent":null,"children":[],"decl_id":null,"docs":" An owned label.","sig":null,"attributes":[{"value":"/ An owned label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":352398,"byte_end":352417,"line_start":409,"line_end":409,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":352418,"byte_end":352421,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ Since labels are relatively short, this type doesn’t actually allocate any","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":352422,"byte_end":352502,"line_start":411,"line_end":411,"column_start":1,"column_end":79}},{"value":"/ memory but is a 64 octet array.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":352503,"byte_end":352538,"line_start":412,"line_end":412,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1507},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":352778,"byte_end":352788,"line_start":420,"line_end":420,"column_start":12,"column_end":22},"name":"from_label","qualname":"<OwnedLabel>::from_label","value":"fn (label: &Label) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new owned label from an existing label.\n","sig":null,"attributes":[{"value":"/ Creates a new owned label from an existing label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":352713,"byte_end":352766,"line_start":419,"line_end":419,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1509},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":353151,"byte_end":353165,"line_start":431,"line_end":431,"column_start":12,"column_end":26},"name":"make_canonical","qualname":"<OwnedLabel>::make_canonical","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Converts the label into the canonical form.","sig":null,"attributes":[{"value":"/ Converts the label into the canonical form.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":352980,"byte_end":353027,"line_start":427,"line_end":427,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":353032,"byte_end":353035,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ This form has all octets representing ASCII letters converted to their","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":353040,"byte_end":353114,"line_start":429,"line_end":429,"column_start":5,"column_end":79}},{"value":"/ lower case form.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":353119,"byte_end":353139,"line_start":430,"line_end":430,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1510},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":353282,"byte_end":353290,"line_start":436,"line_end":436,"column_start":12,"column_end":20},"name":"as_label","qualname":"<OwnedLabel>::as_label","value":"fn (&self) -> &Label","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the label.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":353233,"byte_end":353270,"line_start":435,"line_end":435,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1511},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":353480,"byte_end":353492,"line_start":443,"line_end":443,"column_start":12,"column_end":24},"name":"as_label_mut","qualname":"<OwnedLabel>::as_label_mut","value":"fn (&mut self) -> &mut Label","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the label.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":353423,"byte_end":353468,"line_start":442,"line_end":442,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1512},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":353769,"byte_end":353782,"line_start":453,"line_end":453,"column_start":12,"column_end":25},"name":"as_wire_slice","qualname":"<OwnedLabel>::as_wire_slice","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice that is the wire-representation of the label.\n","sig":null,"attributes":[{"value":"/ Returns a slice that is the wire-representation of the label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":353692,"byte_end":353757,"line_start":452,"line_end":452,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":1545},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":356029,"byte_end":356044,"line_start":566,"line_end":566,"column_start":12,"column_end":27},"name":"SliceLabelsIter","qualname":"::base::name::label::SliceLabelsIter","value":"SliceLabelsIter {  }","parent":null,"children":[{"krate":0,"index":1547},{"krate":0,"index":1548}],"decl_id":null,"docs":" An iterator over the labels in an octets slice.","sig":null,"attributes":[{"value":"/ An iterator over the labels in an octets slice.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":355754,"byte_end":355805,"line_start":559,"line_end":559,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":355806,"byte_end":355809,"line_start":560,"line_end":560,"column_start":1,"column_end":4}},{"value":"/ This keeps returning [`Label`]s until it encounters the root label. If","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":355810,"byte_end":355884,"line_start":561,"line_end":561,"column_start":1,"column_end":75}},{"value":"/ the slice ends before a root label is seen, returns the last label seen","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":355885,"byte_end":355960,"line_start":562,"line_end":562,"column_start":1,"column_end":76}},{"value":"/ and then stops.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":355961,"byte_end":355980,"line_start":563,"line_end":563,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":355981,"byte_end":355984,"line_start":564,"line_end":564,"column_start":1,"column_end":4}},{"value":"/ [`Label`]: struct.Label.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":355985,"byte_end":356017,"line_start":565,"line_end":565,"column_start":1,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5616},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":357844,"byte_end":357853,"line_start":623,"line_end":623,"column_start":5,"column_end":14},"name":"Undefined","qualname":"::base::name::label::LabelTypeError::Undefined","value":"LabelTypeError::Undefined","parent":{"krate":0,"index":5615},"children":[],"decl_id":null,"docs":" The label was of the undefined type `0b10`.\n","sig":null,"attributes":[{"value":"/ The label was of the undefined type `0b10`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":357792,"byte_end":357839,"line_start":622,"line_end":622,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5618},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":358053,"byte_end":358061,"line_start":629,"line_end":629,"column_start":5,"column_end":13},"name":"Extended","qualname":"::base::name::label::LabelTypeError::Extended","value":"LabelTypeError::Extended(u8)","parent":{"krate":0,"index":5615},"children":[],"decl_id":null,"docs":" The label was of the extended label type given.\n \n The type value will be in the range `0x40` to `0x7F`, that is, it\n includes the original label type bits `0b01`.\n","sig":null,"attributes":[{"value":"/ The label was of the extended label type given.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":357860,"byte_end":357911,"line_start":625,"line_end":625,"column_start":5,"column_end":56}},{"value":"/ ","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":357916,"byte_end":357920,"line_start":626,"line_end":626,"column_start":5,"column_end":9}},{"value":"/ The type value will be in the range `0x40` to `0x7F`, that is, it","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":357925,"byte_end":357994,"line_start":627,"line_end":627,"column_start":5,"column_end":74}},{"value":"/ includes the original label type bits `0b01`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":357999,"byte_end":358048,"line_start":628,"line_end":628,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":5615},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":357771,"byte_end":357785,"line_start":621,"line_end":621,"column_start":10,"column_end":24},"name":"LabelTypeError","qualname":"::base::name::label::LabelTypeError","value":"LabelTypeError::{Undefined, Extended}","parent":null,"children":[{"krate":0,"index":5616},{"krate":0,"index":5618}],"decl_id":null,"docs":" A bad label type was encountered.\n","sig":null,"attributes":[{"value":"/ A bad label type was encountered.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":357679,"byte_end":357716,"line_start":619,"line_end":619,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5633},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":358703,"byte_end":358717,"line_start":654,"line_end":654,"column_start":12,"column_end":26},"name":"LongLabelError","qualname":"::base::name::label::LongLabelError","value":"","parent":null,"children":[],"decl_id":null,"docs":" A label was longer than the allowed 63 octets.\n","sig":null,"attributes":[{"value":"/ A label was longer than the allowed 63 octets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":358596,"byte_end":358646,"line_start":652,"line_end":652,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5647},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":359239,"byte_end":359246,"line_start":675,"line_end":675,"column_start":5,"column_end":12},"name":"Pointer","qualname":"::base::name::label::SplitLabelError::Pointer","value":"SplitLabelError::Pointer(u16)","parent":{"krate":0,"index":5646},"children":[],"decl_id":null,"docs":" The label was a pointer to the given position.\n","sig":null,"attributes":[{"value":"/ The label was a pointer to the given position.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":359184,"byte_end":359234,"line_start":674,"line_end":674,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5650},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":359294,"byte_end":359301,"line_start":678,"line_end":678,"column_start":5,"column_end":12},"name":"BadType","qualname":"::base::name::label::SplitLabelError::BadType","value":"SplitLabelError::BadType(LabelTypeError)","parent":{"krate":0,"index":5646},"children":[],"decl_id":null,"docs":" The label type was invalid.\n","sig":null,"attributes":[{"value":"/ The label type was invalid.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":359258,"byte_end":359289,"line_start":677,"line_end":677,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5653},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":359397,"byte_end":359407,"line_start":681,"line_end":681,"column_start":5,"column_end":15},"name":"ShortInput","qualname":"::base::name::label::SplitLabelError::ShortInput","value":"SplitLabelError::ShortInput","parent":{"krate":0,"index":5646},"children":[],"decl_id":null,"docs":" The octets slice was shorter than indicated by the label length.\n","sig":null,"attributes":[{"value":"/ The octets slice was shorter than indicated by the label length.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":359324,"byte_end":359392,"line_start":680,"line_end":680,"column_start":5,"column_end":73}}]},{"kind":"Enum","id":{"krate":0,"index":5646},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":359162,"byte_end":359177,"line_start":673,"line_end":673,"column_start":10,"column_end":25},"name":"SplitLabelError","qualname":"::base::name::label::SplitLabelError","value":"SplitLabelError::{Pointer, BadType, ShortInput}","parent":null,"children":[{"krate":0,"index":5647},{"krate":0,"index":5650},{"krate":0,"index":5653}],"decl_id":null,"docs":" An error happened while splitting a label from an octets slice.\n","sig":null,"attributes":[{"value":"/ An error happened while splitting a label from an octets slice.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":359039,"byte_end":359106,"line_start":671,"line_end":671,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5667},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":366585,"byte_end":366596,"line_start":53,"line_end":53,"column_start":12,"column_end":23},"name":"ParsedDname","qualname":"::base::name::parsed::ParsedDname","value":"ParsedDname {  }","parent":null,"children":[{"krate":0,"index":5669},{"krate":0,"index":5670},{"krate":0,"index":5671}],"decl_id":null,"docs":" A domain name parsed from a DNS message.","sig":null,"attributes":[{"value":"/ A domain name parsed from a DNS message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":364760,"byte_end":364804,"line_start":20,"line_end":20,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":364805,"byte_end":364808,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In an attempt to keep messages small, DNS uses a procedure called ‘name","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":364809,"byte_end":364886,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ compression.’ It tries to minimize the space used for repeatedly","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":364887,"byte_end":364957,"line_start":23,"line_end":23,"column_start":1,"column_end":69}},{"value":"/ appearing domain names by simply refering to the first occurence of the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":364958,"byte_end":365033,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/ name. This works not only for complete names but also for suffixes. In","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":365034,"byte_end":365108,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ this case, the first unique labels of the name are included and then a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":365109,"byte_end":365183,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ pointer is included for the remainder of the name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":365184,"byte_end":365238,"line_start":27,"line_end":27,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":365239,"byte_end":365242,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ A consequence of this is that when parsing a domain name, its labels can","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":365243,"byte_end":365319,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ be scattered all over the message and we would need to allocate some","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":365320,"byte_end":365392,"line_start":30,"line_end":30,"column_start":1,"column_end":73}},{"value":"/ space to re-assemble the original name. However, in many cases we don’t","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":365393,"byte_end":365470,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ need the complete name. Many operations can be performed by just","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":365471,"byte_end":365539,"line_start":32,"line_end":32,"column_start":1,"column_end":69}},{"value":"/ iterating over the labels which we can do in place.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":365540,"byte_end":365595,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":365596,"byte_end":365599,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ `ParsedDname` deals with such names. It takes a copy of a [`Parser`]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":365600,"byte_end":365672,"line_start":35,"line_end":35,"column_start":1,"column_end":73}},{"value":"/ representing a reference to the underlying DNS message and, if nedded,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":365673,"byte_end":365747,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ traverses over the name starting at the current position of the parser.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":365748,"byte_end":365823,"line_start":37,"line_end":37,"column_start":1,"column_end":76}},{"value":"/ When being created, the type quickly walks over the name to check that it","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":365824,"byte_end":365901,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ is, indeed, a valid name. While this does take a bit of time, it spares","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":365902,"byte_end":365977,"line_start":39,"line_end":39,"column_start":1,"column_end":76}},{"value":"/ you having to deal with possible parse errors later on.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":365978,"byte_end":366037,"line_start":40,"line_end":40,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":366038,"byte_end":366041,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ `ParsedDname` implementes the [`ToDname`] trait, so you can use it","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":366042,"byte_end":366112,"line_start":42,"line_end":42,"column_start":1,"column_end":71}},{"value":"/ everywhere where a generic absolute domain name is accepted. In","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":366113,"byte_end":366180,"line_start":43,"line_end":43,"column_start":1,"column_end":68}},{"value":"/ particular, you can compare it to other names or chain it to the end of a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":366181,"byte_end":366258,"line_start":44,"line_end":44,"column_start":1,"column_end":78}},{"value":"/ relative name. If necessary, [`ToDname::to_name`] can be used to produce","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":366259,"byte_end":366335,"line_start":45,"line_end":45,"column_start":1,"column_end":77}},{"value":"/ a flat, self-contained [`Dname`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":366336,"byte_end":366373,"line_start":46,"line_end":46,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":366374,"byte_end":366377,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`Dname`]: struct.Dname.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":366378,"byte_end":366410,"line_start":48,"line_end":48,"column_start":1,"column_end":33}},{"value":"/ [`Parser`]: ../parse/struct.Parser.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":366411,"byte_end":366454,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/ [`ToDname`]: trait.ToDname.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":366455,"byte_end":366490,"line_start":50,"line_end":50,"column_start":1,"column_end":36}},{"value":"/ [`ToDname::to_name`]: trait.ToDname.html#method.to_name","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":366491,"byte_end":366550,"line_start":51,"line_end":51,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1591},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":367082,"byte_end":367095,"line_start":73,"line_end":73,"column_start":12,"column_end":25},"name":"is_compressed","qualname":"<ParsedDname<Ref>>::is_compressed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the name is compressed.\n","sig":null,"attributes":[{"value":"/ Returns whether the name is compressed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":367027,"byte_end":367070,"line_start":72,"line_end":72,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1592},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":367212,"byte_end":367219,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"is_root","qualname":"<ParsedDname<Ref>>::is_root","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the name is the root label only.\n","sig":null,"attributes":[{"value":"/ Returns whether the name is the root label only.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":367148,"byte_end":367200,"line_start":77,"line_end":77,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1595},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":367408,"byte_end":367412,"line_start":87,"line_end":87,"column_start":12,"column_end":16},"name":"iter","qualname":"<ParsedDname<Ref>>::iter","value":"fn (&self) -> ParsedDnameIter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the labels of the name.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the labels of the name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":367344,"byte_end":367396,"line_start":86,"line_end":86,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1596},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":367771,"byte_end":367784,"line_start":96,"line_end":96,"column_start":12,"column_end":25},"name":"iter_suffixes","qualname":"<ParsedDname<Ref>>::iter_suffixes","value":"fn (&self) -> ParsedSuffixIter<Ref>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the suffixes of the name.","sig":null,"attributes":[{"value":"/ Returns an iterator over the suffixes of the name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":367505,"byte_end":367559,"line_start":91,"line_end":91,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":367564,"byte_end":367567,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ The returned iterator starts with the full name and then for each","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":367572,"byte_end":367641,"line_start":93,"line_end":93,"column_start":5,"column_end":74}},{"value":"/ additional step returns a name with the left-most label stripped off","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":367646,"byte_end":367718,"line_start":94,"line_end":94,"column_start":5,"column_end":77}},{"value":"/ until it reaches the root label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":367723,"byte_end":367759,"line_start":95,"line_end":95,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1597},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":367959,"byte_end":367970,"line_start":102,"line_end":102,"column_start":12,"column_end":23},"name":"label_count","qualname":"<ParsedDname<Ref>>::label_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of labels in the domain name.\n","sig":null,"attributes":[{"value":"/ Returns the number of labels in the domain name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":367895,"byte_end":367947,"line_start":101,"line_end":101,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1598},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":368083,"byte_end":368088,"line_start":107,"line_end":107,"column_start":12,"column_end":17},"name":"first","qualname":"<ParsedDname<Ref>>::first","value":"fn (&self) -> &Label","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the first label.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the first label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":368028,"byte_end":368071,"line_start":106,"line_end":106,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1599},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":368408,"byte_end":368412,"line_start":116,"line_end":116,"column_start":12,"column_end":16},"name":"last","qualname":"<ParsedDname<Ref>>::last","value":"fn (&self) -> &'static Label","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the last label.","sig":null,"attributes":[{"value":"/ Returns a reference to the last label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":368155,"byte_end":368197,"line_start":111,"line_end":111,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":368202,"byte_end":368205,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ Because the last label in an absolute name is always the root label,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":368210,"byte_end":368282,"line_start":113,"line_end":113,"column_start":5,"column_end":77}},{"value":"/ this method can return a static reference. It is also a wee bit silly,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":368287,"byte_end":368361,"line_start":114,"line_end":114,"column_start":5,"column_end":79}},{"value":"/ but here for completeness.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":368366,"byte_end":368396,"line_start":115,"line_end":115,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1600},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":368537,"byte_end":368548,"line_start":121,"line_end":121,"column_start":12,"column_end":23},"name":"starts_with","qualname":"<ParsedDname<Ref>>::starts_with","value":"fn <'a, N> (&'a self, base: &'a N) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether `base` is a prefix of `self`.\n","sig":null,"attributes":[{"value":"/ Determines whether `base` is a prefix of `self`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":368473,"byte_end":368525,"line_start":120,"line_end":120,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1603},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":368736,"byte_end":368745,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"ends_with","qualname":"<ParsedDname<Ref>>::ends_with","value":"fn <'a, N> (&'a self, base: &'a N) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether `base` is a suffix of `self`.\n","sig":null,"attributes":[{"value":"/ Determines whether `base` is a suffix of `self`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":368672,"byte_end":368724,"line_start":125,"line_end":125,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1606},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":369140,"byte_end":369151,"line_start":135,"line_end":135,"column_start":12,"column_end":23},"name":"split_first","qualname":"<ParsedDname<Ref>>::split_first","value":"fn (&mut self) -> Option<RelativeDname<Ref::Range>>","parent":null,"children":[],"decl_id":null,"docs":" Splits off the first label.","sig":null,"attributes":[{"value":"/ Splits off the first label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":368867,"byte_end":368898,"line_start":130,"line_end":130,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":368903,"byte_end":368906,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ If this name is longer than just the root label, returns the first","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":368911,"byte_end":368981,"line_start":132,"line_end":132,"column_start":5,"column_end":75}},{"value":"/ label as a relative name and removes it from the name itself. If the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":368986,"byte_end":369058,"line_start":133,"line_end":133,"column_start":5,"column_end":77}},{"value":"/ name is only the root label, returns `None` and does nothing.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":369063,"byte_end":369128,"line_start":134,"line_end":134,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1607},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":370132,"byte_end":370138,"line_start":164,"line_end":164,"column_start":12,"column_end":18},"name":"parent","qualname":"<ParsedDname<Ref>>::parent","value":"fn (&mut self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Reduces the name to the parent of the current name.","sig":null,"attributes":[{"value":"/ Reduces the name to the parent of the current name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":369909,"byte_end":369964,"line_start":160,"line_end":160,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":369969,"byte_end":369972,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ If the name consists of the root label only, returns `false` and does","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":369977,"byte_end":370050,"line_start":162,"line_end":162,"column_start":5,"column_end":78}},{"value":"/ nothing. Otherwise, drops the first label and returns `true`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":370055,"byte_end":370120,"line_start":163,"line_end":163,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":5677},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":379000,"byte_end":379015,"line_start":470,"line_end":470,"column_start":12,"column_end":27},"name":"ParsedDnameIter","qualname":"::base::name::parsed::ParsedDnameIter","value":"ParsedDnameIter {  }","parent":null,"children":[{"krate":0,"index":5679},{"krate":0,"index":5680},{"krate":0,"index":5681}],"decl_id":null,"docs":" An iterator over the labels in a parsed domain name.\n","sig":null,"attributes":[{"value":"/ An iterator over the labels in a parsed domain name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":378915,"byte_end":378971,"line_start":468,"line_end":468,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":5685},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":381207,"byte_end":381223,"line_start":546,"line_end":546,"column_start":12,"column_end":28},"name":"ParsedSuffixIter","qualname":"::base::name::parsed::ParsedSuffixIter","value":"ParsedSuffixIter {  }","parent":null,"children":[{"krate":0,"index":5687}],"decl_id":null,"docs":" An iterator over ever shorter suffixes of a parsed domain name.\n","sig":null,"attributes":[{"value":"/ An iterator over ever shorter suffixes of a parsed domain name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":381111,"byte_end":381178,"line_start":544,"line_end":544,"column_start":1,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5711},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":383652,"byte_end":383660,"line_start":627,"line_end":627,"column_start":5,"column_end":13},"name":"BadLabel","qualname":"::base::name::parsed::ParsedDnameError::BadLabel","value":"ParsedDnameError::BadLabel(LabelTypeError)","parent":{"krate":0,"index":5710},"children":[],"decl_id":null,"docs":" A bad label was encountered.\n","sig":null,"attributes":[{"value":"/ A bad label was encountered.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":383615,"byte_end":383647,"line_start":626,"line_end":626,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5714},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":383739,"byte_end":383747,"line_start":630,"line_end":630,"column_start":5,"column_end":13},"name":"LongName","qualname":"::base::name::parsed::ParsedDnameError::LongName","value":"ParsedDnameError::LongName","parent":{"krate":0,"index":5710},"children":[],"decl_id":null,"docs":" The name is longer than the 255 octets allowed.\n","sig":null,"attributes":[{"value":"/ The name is longer than the 255 octets allowed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":383683,"byte_end":383734,"line_start":629,"line_end":629,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5716},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":383793,"byte_end":383813,"line_start":633,"line_end":633,"column_start":5,"column_end":25},"name":"ExcessiveCompression","qualname":"::base::name::parsed::ParsedDnameError::ExcessiveCompression","value":"ParsedDnameError::ExcessiveCompression","parent":{"krate":0,"index":5710},"children":[],"decl_id":null,"docs":" Too many compression pointers.\n","sig":null,"attributes":[{"value":"/ Too many compression pointers.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":383754,"byte_end":383788,"line_start":632,"line_end":632,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":5710},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":383592,"byte_end":383608,"line_start":625,"line_end":625,"column_start":10,"column_end":26},"name":"ParsedDnameError","qualname":"::base::name::parsed::ParsedDnameError","value":"ParsedDnameError::{BadLabel, LongName, ExcessiveCompression}","parent":null,"children":[{"krate":0,"index":5711},{"krate":0,"index":5714},{"krate":0,"index":5716}],"decl_id":null,"docs":" Parsing a domain name failed.\n","sig":null,"attributes":[{"value":"/ Parsing a domain name failed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":383504,"byte_end":383537,"line_start":623,"line_end":623,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":5730},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":402033,"byte_end":402046,"line_start":38,"line_end":38,"column_start":12,"column_end":25},"name":"RelativeDname","qualname":"::base::name::relative::RelativeDname","value":"","parent":null,"children":[],"decl_id":null,"docs":" An uncompressed, relative domain name.","sig":null,"attributes":[{"value":"/ An uncompressed, relative domain name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":401204,"byte_end":401246,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":401247,"byte_end":401250,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ A relative domain name is one that doesn’t end with the root label. As the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":401251,"byte_end":401331,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ name suggests, it is relative to some other domain name. This type wraps","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":401332,"byte_end":401408,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ a octets sequence containing such a relative name similarly to the way","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":401409,"byte_end":401483,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ [`Dname`] wraps an absolute one. In fact, it behaves very similarly to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":401484,"byte_end":401558,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ [`Dname`] taking into account differences when slicing and dicing names.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":401559,"byte_end":401635,"line_start":28,"line_end":28,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":401636,"byte_end":401639,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ `RelativeDname` guarantees that the name is at most 254 bytes long. As the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":401640,"byte_end":401718,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ length limit for a domain name is actually 255 bytes, this means that you","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":401719,"byte_end":401796,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ can always safely turn a `RelativeDname` into a `Dname` by adding the root","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":401797,"byte_end":401875,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ label (which is exactly one byte long).","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":401876,"byte_end":401919,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":401920,"byte_end":401923,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`Bytes`]: ../../../bytes/struct.Bytes.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":401924,"byte_end":401971,"line_start":35,"line_end":35,"column_start":1,"column_end":48}},{"value":"/ [`Dname`]: struct.Dname.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":401972,"byte_end":402004,"line_start":36,"line_end":36,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1733},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":402586,"byte_end":402607,"line_start":53,"line_end":53,"column_start":25,"column_end":46},"name":"from_octets_unchecked","qualname":"<RelativeDname<Octets>>::from_octets_unchecked","value":"fn (octets: Octets) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a relative domain name from octets without checking.","sig":null,"attributes":[{"value":"/ Creates a relative domain name from octets without checking.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":402140,"byte_end":402204,"line_start":43,"line_end":43,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":402209,"byte_end":402212,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Since the content of the octets sequence can be anything, really,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":402217,"byte_end":402286,"line_start":45,"line_end":45,"column_start":5,"column_end":74}},{"value":"/ this is an unsafe function.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":402291,"byte_end":402322,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":402327,"byte_end":402330,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":402335,"byte_end":402347,"line_start":48,"line_end":48,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":402352,"byte_end":402355,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ The octets sequence passed via `octets` must contain a correctly","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":402360,"byte_end":402428,"line_start":50,"line_end":50,"column_start":5,"column_end":73}},{"value":"/ encoded relative domain name. It must be at most 254 octets long.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":402433,"byte_end":402502,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ There must be no root labels anywhere in the name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":402507,"byte_end":402561,"line_start":52,"line_end":52,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1734},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":402872,"byte_end":402883,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"from_octets","qualname":"<RelativeDname<Octets>>::from_octets","value":"fn (octets: Octets) -> Result<Self, RelativeDnameError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a relative domain name from an octets sequence.","sig":null,"attributes":[{"value":"/ Creates a relative domain name from an octets sequence.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":402675,"byte_end":402734,"line_start":57,"line_end":57,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":402739,"byte_end":402742,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This checks that `octets` contains a properly encoded relative domain","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":402747,"byte_end":402820,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ name and fails if it doesn’t.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":402825,"byte_end":402860,"line_start":60,"line_end":60,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1735},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":403155,"byte_end":403160,"line_start":68,"line_end":68,"column_start":12,"column_end":17},"name":"empty","qualname":"<RelativeDname<Octets>>::empty","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty relative domain name.\n","sig":null,"attributes":[{"value":"/ Creates an empty relative domain name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":403101,"byte_end":403143,"line_start":67,"line_end":67,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1736},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":403648,"byte_end":403656,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"wildcard","qualname":"<RelativeDname<Octets>>::wildcard","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a relative domain name representing the wildcard label.","sig":null,"attributes":[{"value":"/ Creates a relative domain name representing the wildcard label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":403299,"byte_end":403366,"line_start":73,"line_end":73,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":403371,"byte_end":403374,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ The wildcard label is intended to match any label. There are special","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":403379,"byte_end":403451,"line_start":75,"line_end":75,"column_start":5,"column_end":77}},{"value":"/ rules for names with wildcard labels. Note that the comparison traits","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":403456,"byte_end":403529,"line_start":76,"line_end":76,"column_start":5,"column_end":78}},{"value":"/ implemented for domain names do *not* consider wildcards and treat","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":403534,"byte_end":403604,"line_start":77,"line_end":77,"column_start":5,"column_end":75}},{"value":"/ them as regular labels.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":403609,"byte_end":403636,"line_start":78,"line_end":78,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1739},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":404219,"byte_end":404229,"line_start":98,"line_end":98,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<RelativeDname<[u8]>>::from_slice","value":"fn (slice: &[u8]) -> Result<&Self, RelativeDnameError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a relative domain name from an octet slice.\n","sig":null,"attributes":[{"value":"/ Creates a relative domain name from an octet slice.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":404152,"byte_end":404207,"line_start":97,"line_end":97,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1740},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":404454,"byte_end":404465,"line_start":104,"line_end":104,"column_start":12,"column_end":23},"name":"empty_slice","qualname":"<RelativeDname<[u8]>>::empty_slice","value":"fn () -> &'static Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an empty relative name atop a unsized slice.\n","sig":null,"attributes":[{"value":"/ Returns an empty relative name atop a unsized slice.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":404386,"byte_end":404442,"line_start":103,"line_end":103,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1741},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":404556,"byte_end":404570,"line_start":108,"line_end":108,"column_start":12,"column_end":26},"name":"wildcard_slice","qualname":"<RelativeDname<[u8]>>::wildcard_slice","value":"fn () -> &'static Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1744},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":405292,"byte_end":405301,"line_start":132,"line_end":132,"column_start":12,"column_end":21},"name":"empty_ref","qualname":"<RelativeDname<&'static [u8]>>::empty_ref","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty relative name atop a slice reference.\n","sig":null,"attributes":[{"value":"/ Creates an empty relative name atop a slice reference.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":405222,"byte_end":405280,"line_start":131,"line_end":131,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1745},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":405419,"byte_end":405431,"line_start":137,"line_end":137,"column_start":12,"column_end":24},"name":"wildcard_ref","qualname":"<RelativeDname<&'static [u8]>>::wildcard_ref","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a wildcard relative name atop a slice reference.\n","sig":null,"attributes":[{"value":"/ Creates a wildcard relative name atop a slice reference.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":405347,"byte_end":405407,"line_start":136,"line_end":136,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1747},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":405600,"byte_end":405609,"line_start":145,"line_end":145,"column_start":12,"column_end":21},"name":"empty_vec","qualname":"<RelativeDname<Vec<u8>>>::empty_vec","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty relative name atop a `Vec<u8>`.\n","sig":null,"attributes":[{"value":"/ Creates an empty relative name atop a `Vec<u8>`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":405536,"byte_end":405588,"line_start":144,"line_end":144,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1748},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":405721,"byte_end":405733,"line_start":150,"line_end":150,"column_start":12,"column_end":24},"name":"wildcard_vec","qualname":"<RelativeDname<Vec<u8>>>::wildcard_vec","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a wildcard relative name atop a `Vec<u8>`.\n","sig":null,"attributes":[{"value":"/ Creates a wildcard relative name atop a `Vec<u8>`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":405655,"byte_end":405709,"line_start":149,"line_end":149,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1750},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":405903,"byte_end":405914,"line_start":158,"line_end":158,"column_start":12,"column_end":23},"name":"empty_bytes","qualname":"<RelativeDname<Bytes>>::empty_bytes","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty relative name atop a bytes value.\n","sig":null,"attributes":[{"value":"/ Creates an empty relative name atop a bytes value.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":405837,"byte_end":405891,"line_start":157,"line_end":157,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1751},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":406028,"byte_end":406042,"line_start":163,"line_end":163,"column_start":12,"column_end":26},"name":"wildcard_bytes","qualname":"<RelativeDname<Bytes>>::wildcard_bytes","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a wildcard relative name atop a bytes value.\n","sig":null,"attributes":[{"value":"/ Creates a wildcard relative name atop a bytes value.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":405960,"byte_end":406016,"line_start":162,"line_end":162,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1754},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":406222,"byte_end":406231,"line_start":173,"line_end":173,"column_start":12,"column_end":21},"name":"as_octets","qualname":"<RelativeDname<Octets>>::as_octets","value":"fn (&self) -> &Octets","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying octets.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying octets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":406161,"byte_end":406210,"line_start":172,"line_end":172,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1755},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":406340,"byte_end":406351,"line_start":178,"line_end":178,"column_start":12,"column_end":23},"name":"into_octets","qualname":"<RelativeDname<Octets>>::into_octets","value":"fn (self) -> Octets","parent":null,"children":[],"decl_id":null,"docs":" Converts the name into the underlying octets.\n","sig":null,"attributes":[{"value":"/ Converts the name into the underlying octets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":406279,"byte_end":406328,"line_start":177,"line_end":177,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1756},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":406490,"byte_end":406497,"line_start":184,"line_end":184,"column_start":12,"column_end":19},"name":"for_ref","qualname":"<RelativeDname<Octets>>::for_ref","value":"fn (&self) -> RelativeDname<&Octets>","parent":null,"children":[],"decl_id":null,"docs":" Returns a domain name using a reference to the octets.\n","sig":null,"attributes":[{"value":"/ Returns a domain name using a reference to the octets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":406420,"byte_end":406478,"line_start":183,"line_end":183,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1757},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":406693,"byte_end":406701,"line_start":189,"line_end":189,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<RelativeDname<Octets>>::as_slice","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to an octets slice with the content of the name.\n","sig":null,"attributes":[{"value":"/ Returns a reference to an octets slice with the content of the name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":406609,"byte_end":406681,"line_start":188,"line_end":188,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1758},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":406859,"byte_end":406868,"line_start":195,"line_end":195,"column_start":12,"column_end":21},"name":"for_slice","qualname":"<RelativeDname<Octets>>::for_slice","value":"fn (&self) -> RelativeDname<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns a domain name for the octets slice of the content.\n","sig":null,"attributes":[{"value":"/ Returns a domain name for the octets slice of the content.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":406785,"byte_end":406847,"line_start":194,"line_end":194,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1761},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":407279,"byte_end":407291,"line_start":206,"line_end":206,"column_start":12,"column_end":24},"name":"into_builder","qualname":"<RelativeDname<Octets>>::into_builder","value":"fn (self) -> DnameBuilder<<Octets as IntoBuilder>::Builder>","parent":null,"children":[],"decl_id":null,"docs":" Converts the name into a domain name builder for appending data.","sig":null,"attributes":[{"value":"/ Converts the name into a domain name builder for appending data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":407055,"byte_end":407123,"line_start":202,"line_end":202,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":407128,"byte_end":407131,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ This method is only available for octets sequences that have an","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":407136,"byte_end":407203,"line_start":204,"line_end":204,"column_start":5,"column_end":72}},{"value":"/ associated octets builder such as `Vec<u8>` or `Bytes`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":407208,"byte_end":407267,"line_start":205,"line_end":205,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1762},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":407824,"byte_end":407837,"line_start":222,"line_end":222,"column_start":12,"column_end":25},"name":"into_absolute","qualname":"<RelativeDname<Octets>>::into_absolute","value":"fn (self) -> Result<Dname<<<Octets as IntoBuilder>::Builder as IntoOctets>::Octets>,\n       PushError>","parent":null,"children":[],"decl_id":null,"docs":" Converts the name into an absolute name by appending the root label.","sig":null,"attributes":[{"value":"/ Converts the name into an absolute name by appending the root label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":407504,"byte_end":407576,"line_start":215,"line_end":215,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":407581,"byte_end":407584,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ This manipulates the name itself and thus is only available for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":407589,"byte_end":407656,"line_start":217,"line_end":217,"column_start":5,"column_end":72}},{"value":"/ octets sequences that can be converted into an octets builer and back","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":407661,"byte_end":407734,"line_start":218,"line_end":218,"column_start":5,"column_end":78}},{"value":"/ such as `Vec<u8>`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":407739,"byte_end":407761,"line_start":219,"line_end":219,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":407766,"byte_end":407769,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ [`chain_root`]: #method.chain_root","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":407774,"byte_end":407812,"line_start":221,"line_end":221,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1763},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":408582,"byte_end":408587,"line_start":244,"line_end":244,"column_start":12,"column_end":17},"name":"chain","qualname":"<RelativeDname<Octets>>::chain","value":"fn <N> (self, other: N) -> Result<Chain<Self, N>, LongChainError>","parent":null,"children":[],"decl_id":null,"docs":" Chains another name to the end of this name.","sig":null,"attributes":[{"value":"/ Chains another name to the end of this name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":408117,"byte_end":408165,"line_start":235,"line_end":235,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":408170,"byte_end":408173,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ Depending on whether `other` is an absolute or relative domain name,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":408178,"byte_end":408250,"line_start":237,"line_end":237,"column_start":5,"column_end":77}},{"value":"/ the resulting name will behave like an absolute or relative name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":408255,"byte_end":408324,"line_start":238,"line_end":238,"column_start":5,"column_end":74}},{"value":"/ ","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":408329,"byte_end":408333,"line_start":239,"line_end":239,"column_start":5,"column_end":9}},{"value":"/ The method will fail if the combined length of the two names is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":408338,"byte_end":408405,"line_start":240,"line_end":240,"column_start":5,"column_end":72}},{"value":"/ greater than the size limit of 255. Note that in this case you will","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":408410,"byte_end":408481,"line_start":241,"line_end":241,"column_start":5,"column_end":76}},{"value":"/ loose both `self` and `other`, so it might be worthwhile to check","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":408486,"byte_end":408555,"line_start":242,"line_end":242,"column_start":5,"column_end":74}},{"value":"/ first.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":408560,"byte_end":408570,"line_start":243,"line_end":243,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1765},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":408827,"byte_end":408837,"line_start":252,"line_end":252,"column_start":12,"column_end":22},"name":"chain_root","qualname":"<RelativeDname<Octets>>::chain_root","value":"fn (self) -> Chain<Self, Dname<&'static [u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an absolute name by chaining the root label to it.\n","sig":null,"attributes":[{"value":"/ Creates an absolute name by chaining the root label to it.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":408753,"byte_end":408815,"line_start":251,"line_end":251,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1768},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":409129,"byte_end":409133,"line_start":262,"line_end":262,"column_start":12,"column_end":16},"name":"iter","qualname":"<RelativeDname<Octets>>::iter","value":"fn (&self) -> DnameIter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the labels of the domain name.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the labels of the domain name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":409058,"byte_end":409117,"line_start":261,"line_end":261,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1769},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":409264,"byte_end":409275,"line_start":267,"line_end":267,"column_start":12,"column_end":23},"name":"label_count","qualname":"<RelativeDname<Octets>>::label_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of labels in the name.\n","sig":null,"attributes":[{"value":"/ Returns the number of labels in the name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":409207,"byte_end":409252,"line_start":266,"line_end":266,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1770},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":409414,"byte_end":409419,"line_start":272,"line_end":272,"column_start":12,"column_end":17},"name":"first","qualname":"<RelativeDname<Octets>>::first","value":"fn (&self) -> Option<&Label>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the first label if the name isn’t empty.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the first label if the name isn’t empty.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":409333,"byte_end":409402,"line_start":271,"line_end":271,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1771},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":409565,"byte_end":409569,"line_start":277,"line_end":277,"column_start":12,"column_end":16},"name":"last","qualname":"<RelativeDname<Octets>>::last","value":"fn (&self) -> Option<&Label>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the last label if the name isn’t empty.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the last label if the name isn’t empty.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":409485,"byte_end":409553,"line_start":276,"line_end":276,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1772},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":409875,"byte_end":409880,"line_start":285,"line_end":285,"column_start":12,"column_end":17},"name":"ndots","qualname":"<RelativeDname<Octets>>::ndots","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of dots in the string representation of the name.","sig":null,"attributes":[{"value":"/ Returns the number of dots in the string representation of the name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":409640,"byte_end":409712,"line_start":281,"line_end":281,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":409717,"byte_end":409720,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Specifically, returns a value equal to the number of labels minus one,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":409725,"byte_end":409799,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/ except for an empty name where it returns a zero, also.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":409804,"byte_end":409863,"line_start":284,"line_end":284,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1773},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":410078,"byte_end":410089,"line_start":293,"line_end":293,"column_start":12,"column_end":23},"name":"starts_with","qualname":"<RelativeDname<Octets>>::starts_with","value":"fn <'a, N> (&'a self, base: &'a N) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether `base` is a prefix of `self`.\n","sig":null,"attributes":[{"value":"/ Determines whether `base` is a prefix of `self`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":410014,"byte_end":410066,"line_start":292,"line_end":292,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1776},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":410277,"byte_end":410286,"line_start":298,"line_end":298,"column_start":12,"column_end":21},"name":"ends_with","qualname":"<RelativeDname<Octets>>::ends_with","value":"fn <'a, N> (&'a self, base: &'a N) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether `base` is a suffix of `self`.\n","sig":null,"attributes":[{"value":"/ Determines whether `base` is a suffix of `self`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":410213,"byte_end":410265,"line_start":297,"line_end":297,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1779},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":410486,"byte_end":410500,"line_start":303,"line_end":303,"column_start":12,"column_end":26},"name":"is_label_start","qualname":"<RelativeDname<Octets>>::is_label_start","value":"fn (&self, mut index: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether an index points to the first octet of a label.\n","sig":null,"attributes":[{"value":"/ Returns whether an index points to the first octet of a label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":410408,"byte_end":410474,"line_start":302,"line_end":302,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1781},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":411962,"byte_end":411967,"line_start":345,"line_end":345,"column_start":12,"column_end":17},"name":"slice","qualname":"<RelativeDname<Octets>>::slice","value":"fn (&self, begin: usize, end: usize) -> &RelativeDname<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns a part of the name indicated by start and end positions.","sig":null,"attributes":[{"value":"/ Returns a part of the name indicated by start and end positions.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":411234,"byte_end":411302,"line_start":329,"line_end":329,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":411307,"byte_end":411310,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ The returned name will start at position `begin` and end right before","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":411315,"byte_end":411388,"line_start":331,"line_end":331,"column_start":5,"column_end":78}},{"value":"/ position `end`. Both positions are given as indexes into the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":411393,"byte_end":411457,"line_start":332,"line_end":332,"column_start":5,"column_end":69}},{"value":"/ underlying octets sequence and must point to the begining of a label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":411462,"byte_end":411535,"line_start":333,"line_end":333,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":411540,"byte_end":411543,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ The method returns a reference to an unsized relative domain name and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":411548,"byte_end":411621,"line_start":335,"line_end":335,"column_start":5,"column_end":78}},{"value":"/ is thus best suited for temporary referencing. If you want to keep the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":411626,"byte_end":411700,"line_start":336,"line_end":336,"column_start":5,"column_end":79}},{"value":"/ part of the name around, [`range`] is likely a better choice.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":411705,"byte_end":411770,"line_start":337,"line_end":337,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":411775,"byte_end":411778,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":411783,"byte_end":411795,"line_start":339,"line_end":339,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":411800,"byte_end":411803,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ The method panics if either position is not the beginning of a label","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":411808,"byte_end":411880,"line_start":341,"line_end":341,"column_start":5,"column_end":77}},{"value":"/ or is out of bounds.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":411885,"byte_end":411909,"line_start":342,"line_end":342,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":411914,"byte_end":411917,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ [`range`]: #method.range","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":411922,"byte_end":411950,"line_start":344,"line_end":344,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1782},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":412951,"byte_end":412961,"line_start":368,"line_end":368,"column_start":12,"column_end":22},"name":"slice_from","qualname":"<RelativeDname<Octets>>::slice_from","value":"fn (&self, begin: usize) -> &RelativeDname<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the part of the name starting at the given position.","sig":null,"attributes":[{"value":"/ Returns the part of the name starting at the given position.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":412192,"byte_end":412256,"line_start":351,"line_end":351,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":412261,"byte_end":412264,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ The returned name will start at the given postion and cover the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":412269,"byte_end":412336,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ remainder of the name. The position `begin` is provided as an index","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":412341,"byte_end":412412,"line_start":354,"line_end":354,"column_start":5,"column_end":76}},{"value":"/ into the underlying octets sequence and must point to the beginning","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":412417,"byte_end":412488,"line_start":355,"line_end":355,"column_start":5,"column_end":76}},{"value":"/ of a label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":412493,"byte_end":412508,"line_start":356,"line_end":356,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":412513,"byte_end":412516,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ The method returns a reference to an unsized domain name and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":412521,"byte_end":412585,"line_start":358,"line_end":358,"column_start":5,"column_end":69}},{"value":"/ is thus best suited for temporary referencing. If you want to keep the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":412590,"byte_end":412664,"line_start":359,"line_end":359,"column_start":5,"column_end":79}},{"value":"/ part of the name around, [`range_from`] is likely a better choice.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":412669,"byte_end":412739,"line_start":360,"line_end":360,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":412744,"byte_end":412747,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":412752,"byte_end":412764,"line_start":362,"line_end":362,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":412769,"byte_end":412772,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ The method panics if the position is not the beginning of a label","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":412777,"byte_end":412846,"line_start":364,"line_end":364,"column_start":5,"column_end":74}},{"value":"/ or is beyond the end of the name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":412851,"byte_end":412888,"line_start":365,"line_end":365,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":412893,"byte_end":412896,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ [`range_from`]: #method.range_from","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":412901,"byte_end":412939,"line_start":367,"line_end":367,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1783},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":413927,"byte_end":413935,"line_start":392,"line_end":392,"column_start":12,"column_end":20},"name":"slice_to","qualname":"<RelativeDname<Octets>>::slice_to","value":"fn (&self, end: usize) -> &RelativeDname<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the part of the name ending before the given position.","sig":null,"attributes":[{"value":"/ Returns the part of the name ending before the given position.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":413155,"byte_end":413221,"line_start":375,"line_end":375,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":413226,"byte_end":413229,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ The returned name will start at beginning of the name and continue","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":413234,"byte_end":413304,"line_start":377,"line_end":377,"column_start":5,"column_end":75}},{"value":"/ until just before the given postion. The position `end` is considered","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":413309,"byte_end":413382,"line_start":378,"line_end":378,"column_start":5,"column_end":78}},{"value":"/ as an index into the underlying octets sequence and must point to the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":413387,"byte_end":413460,"line_start":379,"line_end":379,"column_start":5,"column_end":78}},{"value":"/ beginning of a label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":413465,"byte_end":413490,"line_start":380,"line_end":380,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":413495,"byte_end":413498,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ The method returns a reference to an unsized domain name and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":413503,"byte_end":413567,"line_start":382,"line_end":382,"column_start":5,"column_end":69}},{"value":"/ is thus best suited for temporary referencing. If you want to keep the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":413572,"byte_end":413646,"line_start":383,"line_end":383,"column_start":5,"column_end":79}},{"value":"/ part of the name around, [`range_to`] is likely a better choice.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":413651,"byte_end":413719,"line_start":384,"line_end":384,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":413724,"byte_end":413727,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":413732,"byte_end":413744,"line_start":386,"line_end":386,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":413749,"byte_end":413752,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ The method panics if the position is not the beginning of a label","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":413757,"byte_end":413826,"line_start":388,"line_end":388,"column_start":5,"column_end":74}},{"value":"/ or is beyond the end of the name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":413831,"byte_end":413868,"line_start":389,"line_end":389,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":413873,"byte_end":413876,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ [`range_to`]: #method.range_to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":413881,"byte_end":413915,"line_start":391,"line_end":391,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1784},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":414575,"byte_end":414580,"line_start":409,"line_end":409,"column_start":12,"column_end":17},"name":"range","qualname":"<RelativeDname<Octets>>::range","value":"fn <'a> (&'a self, begin: usize, end: usize) -> RelativeDname<<&'a Octets as OctetsRef>::Range>","parent":null,"children":[],"decl_id":null,"docs":" Returns a part of the name indicated by start and end positions.","sig":null,"attributes":[{"value":"/ Returns a part of the name indicated by start and end positions.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":414123,"byte_end":414191,"line_start":399,"line_end":399,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":414196,"byte_end":414199,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ The returned name will start at position `begin` and end right before","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":414204,"byte_end":414277,"line_start":401,"line_end":401,"column_start":5,"column_end":78}},{"value":"/ position `end`. Both positions are given as indexes into the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":414282,"byte_end":414346,"line_start":402,"line_end":402,"column_start":5,"column_end":69}},{"value":"/ underlying octets sequence and must point to the begining of a label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":414351,"byte_end":414424,"line_start":403,"line_end":403,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":414429,"byte_end":414432,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":414437,"byte_end":414449,"line_start":405,"line_end":405,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":414454,"byte_end":414457,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ The method panics if either position is not the beginning of a label","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":414462,"byte_end":414534,"line_start":407,"line_end":407,"column_start":5,"column_end":77}},{"value":"/ or is out of bounds.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":414539,"byte_end":414563,"line_start":408,"line_end":408,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1786},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":415358,"byte_end":415368,"line_start":429,"line_end":429,"column_start":12,"column_end":22},"name":"range_from","qualname":"<RelativeDname<Octets>>::range_from","value":"fn <'a> (&'a self, begin: usize) -> RelativeDname<<&'a Octets as OctetsRef>::Range>","parent":null,"children":[],"decl_id":null,"docs":" Returns the part of the name starting at the given position.","sig":null,"attributes":[{"value":"/ Returns the part of the name starting at the given position.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":414881,"byte_end":414945,"line_start":418,"line_end":418,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":414950,"byte_end":414953,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ The returned name will start at the given postion and cover the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":414958,"byte_end":415025,"line_start":420,"line_end":420,"column_start":5,"column_end":72}},{"value":"/ remainder of the name. The position `begin` is provided as an index","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":415030,"byte_end":415101,"line_start":421,"line_end":421,"column_start":5,"column_end":76}},{"value":"/ into the underlying octets sequence and must point to the beginning","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":415106,"byte_end":415177,"line_start":422,"line_end":422,"column_start":5,"column_end":76}},{"value":"/ of a label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":415182,"byte_end":415197,"line_start":423,"line_end":423,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":415202,"byte_end":415205,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":415210,"byte_end":415222,"line_start":425,"line_end":425,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":415227,"byte_end":415230,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ The method panics if the position is not the beginning of a label","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":415235,"byte_end":415304,"line_start":427,"line_end":427,"column_start":5,"column_end":74}},{"value":"/ or is beyond the end of the name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":415309,"byte_end":415346,"line_start":428,"line_end":428,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1788},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":416138,"byte_end":416146,"line_start":450,"line_end":450,"column_start":12,"column_end":20},"name":"range_to","qualname":"<RelativeDname<Octets>>::range_to","value":"fn <'a> (&'a self, end: usize) -> RelativeDname<<&'a Octets as OctetsRef>::Range>","parent":null,"children":[],"decl_id":null,"docs":" Returns the part of the name ending before the given position.","sig":null,"attributes":[{"value":"/ Returns the part of the name ending before the given position.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":415642,"byte_end":415708,"line_start":439,"line_end":439,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":415713,"byte_end":415716,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ The returned name will start at beginning of the name and continue","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":415721,"byte_end":415791,"line_start":441,"line_end":441,"column_start":5,"column_end":75}},{"value":"/ until just before the given postion. The position `end` is considered","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":415796,"byte_end":415869,"line_start":442,"line_end":442,"column_start":5,"column_end":78}},{"value":"/ as an index into the underlying octets sequence and must point to the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":415874,"byte_end":415947,"line_start":443,"line_end":443,"column_start":5,"column_end":78}},{"value":"/ beginning of a label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":415952,"byte_end":415977,"line_start":444,"line_end":444,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":415982,"byte_end":415985,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":415990,"byte_end":416002,"line_start":446,"line_end":446,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":416007,"byte_end":416010,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ The method panics if the position is not the beginning of a label","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":416015,"byte_end":416084,"line_start":448,"line_end":448,"column_start":5,"column_end":74}},{"value":"/ or is beyond the end of the name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":416089,"byte_end":416126,"line_start":449,"line_end":449,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1792},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":416806,"byte_end":416815,"line_start":469,"line_end":469,"column_start":12,"column_end":21},"name":"split_off","qualname":"<RelativeDname<Octets>>::split_off","value":"fn (&mut self, mid: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Splits the name into two at the given position.","sig":null,"attributes":[{"value":"/ Splits the name into two at the given position.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":416444,"byte_end":416495,"line_start":460,"line_end":460,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":416500,"byte_end":416503,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ Afterwards, `self` will contain the name ending before the position","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":416508,"byte_end":416579,"line_start":462,"line_end":462,"column_start":5,"column_end":76}},{"value":"/ while the name starting at the position will be returned.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":416584,"byte_end":416645,"line_start":463,"line_end":463,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":416650,"byte_end":416653,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":416658,"byte_end":416670,"line_start":465,"line_end":465,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":416675,"byte_end":416678,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ The method panics if the position is not the beginning of a label","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":416683,"byte_end":416752,"line_start":467,"line_end":467,"column_start":5,"column_end":74}},{"value":"/ or is beyond the end of the name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":416757,"byte_end":416794,"line_start":468,"line_end":468,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1794},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":417439,"byte_end":417447,"line_start":486,"line_end":486,"column_start":12,"column_end":20},"name":"split_to","qualname":"<RelativeDname<Octets>>::split_to","value":"fn (&mut self, mid: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Splits the name into two at the given position.","sig":null,"attributes":[{"value":"/ Splits the name into two at the given position.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":417080,"byte_end":417131,"line_start":477,"line_end":477,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":417136,"byte_end":417139,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ Afterwards, `self` will contain the name starting at the position","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":417144,"byte_end":417213,"line_start":479,"line_end":479,"column_start":5,"column_end":74}},{"value":"/ while the name ending right before it will be returned. ","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":417218,"byte_end":417278,"line_start":480,"line_end":480,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":417283,"byte_end":417286,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":417291,"byte_end":417303,"line_start":482,"line_end":482,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":417308,"byte_end":417311,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ The method panics if the position is not the beginning of a label","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":417316,"byte_end":417385,"line_start":484,"line_end":484,"column_start":5,"column_end":74}},{"value":"/ or is beyond the end of the name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":417390,"byte_end":417427,"line_start":485,"line_end":485,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1796},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":417917,"byte_end":417925,"line_start":500,"line_end":500,"column_start":12,"column_end":20},"name":"truncate","qualname":"<RelativeDname<Octets>>::truncate","value":"fn (&mut self, len: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Truncates the name to the given length.","sig":null,"attributes":[{"value":"/ Truncates the name to the given length.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":417713,"byte_end":417756,"line_start":494,"line_end":494,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":417761,"byte_end":417764,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":417769,"byte_end":417781,"line_start":496,"line_end":496,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":417786,"byte_end":417789,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ The method panics if the position is not the beginning of a label","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":417794,"byte_end":417863,"line_start":498,"line_end":498,"column_start":5,"column_end":74}},{"value":"/ or is beyond the end of the name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":417868,"byte_end":417905,"line_start":499,"line_end":499,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1797},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":418363,"byte_end":418374,"line_start":512,"line_end":512,"column_start":12,"column_end":23},"name":"split_first","qualname":"<RelativeDname<Octets>>::split_first","value":"fn (&mut self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Splits off the first label.","sig":null,"attributes":[{"value":"/ Splits off the first label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":418051,"byte_end":418082,"line_start":506,"line_end":506,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":418087,"byte_end":418090,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ If there is at least one label in the name, returns the first label","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":418095,"byte_end":418166,"line_start":508,"line_end":508,"column_start":5,"column_end":76}},{"value":"/ as a relative domain name with exactly one label and makes `self`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":418171,"byte_end":418240,"line_start":509,"line_end":509,"column_start":5,"column_end":74}},{"value":"/ contain the domain name starting after that first label. If the name","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":418245,"byte_end":418317,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ is empty, returns `None`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":418322,"byte_end":418351,"line_start":511,"line_end":511,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1799},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":418859,"byte_end":418865,"line_start":528,"line_end":528,"column_start":12,"column_end":18},"name":"parent","qualname":"<RelativeDname<Octets>>::parent","value":"fn (&mut self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Reduces the name to its parent.","sig":null,"attributes":[{"value":"/ Reduces the name to its parent.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":418703,"byte_end":418738,"line_start":524,"line_end":524,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":418743,"byte_end":418746,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ Returns whether that actually happened, since an empty name doesn’t","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":418751,"byte_end":418824,"line_start":526,"line_end":526,"column_start":5,"column_end":76}},{"value":"/ have a parent.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":418829,"byte_end":418847,"line_start":527,"line_end":527,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1801},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":419226,"byte_end":419238,"line_start":539,"line_end":539,"column_start":12,"column_end":24},"name":"strip_suffix","qualname":"<RelativeDname<Octets>>::strip_suffix","value":"fn <N> (&mut self, base: &N) -> Result<(), StripSuffixError>","parent":null,"children":[],"decl_id":null,"docs":" Strips the suffix `base` from the domain name.","sig":null,"attributes":[{"value":"/ Strips the suffix `base` from the domain name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":418991,"byte_end":419041,"line_start":533,"line_end":533,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":419046,"byte_end":419049,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ This will fail if `base` isn’t actually a suffix, i.e., if","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":419054,"byte_end":419118,"line_start":535,"line_end":535,"column_start":5,"column_end":67}},{"value":"/ [`ends_with`] doesn’t return `true`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":419123,"byte_end":419165,"line_start":536,"line_end":536,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":419170,"byte_end":419173,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ [`ends_with`]: #method.ends_with","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":419178,"byte_end":419214,"line_start":538,"line_end":538,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":5737},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":423021,"byte_end":423030,"line_start":709,"line_end":709,"column_start":12,"column_end":21},"name":"DnameIter","qualname":"::base::name::relative::DnameIter","value":"DnameIter {  }","parent":null,"children":[{"krate":0,"index":5739}],"decl_id":null,"docs":" An iterator over the labels in an uncompressed name.\n","sig":null,"attributes":[{"value":"/ An iterator over the labels in an uncompressed name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":422929,"byte_end":422985,"line_start":707,"line_end":707,"column_start":1,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5747},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":424380,"byte_end":424388,"line_start":761,"line_end":761,"column_start":5,"column_end":13},"name":"BadLabel","qualname":"::base::name::relative::RelativeDnameError::BadLabel","value":"RelativeDnameError::BadLabel(LabelTypeError)","parent":{"krate":0,"index":5746},"children":[],"decl_id":null,"docs":" A bad label was encountered.\n","sig":null,"attributes":[{"value":"/ A bad label was encountered.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":424343,"byte_end":424375,"line_start":760,"line_end":760,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5750},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":424454,"byte_end":424468,"line_start":764,"line_end":764,"column_start":5,"column_end":19},"name":"CompressedName","qualname":"::base::name::relative::RelativeDnameError::CompressedName","value":"RelativeDnameError::CompressedName","parent":{"krate":0,"index":5746},"children":[],"decl_id":null,"docs":" A compressed name was encountered.\n","sig":null,"attributes":[{"value":"/ A compressed name was encountered.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":424411,"byte_end":424449,"line_start":763,"line_end":763,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5752},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":424525,"byte_end":424535,"line_start":767,"line_end":767,"column_start":5,"column_end":15},"name":"ShortInput","qualname":"::base::name::relative::RelativeDnameError::ShortInput","value":"RelativeDnameError::ShortInput","parent":{"krate":0,"index":5746},"children":[],"decl_id":null,"docs":" The data ended before the end of a label.\n","sig":null,"attributes":[{"value":"/ The data ended before the end of a label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":424475,"byte_end":424520,"line_start":766,"line_end":766,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5754},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":424594,"byte_end":424602,"line_start":770,"line_end":770,"column_start":5,"column_end":13},"name":"LongName","qualname":"::base::name::relative::RelativeDnameError::LongName","value":"RelativeDnameError::LongName","parent":{"krate":0,"index":5746},"children":[],"decl_id":null,"docs":" The domain name was longer than 255 octets.\n","sig":null,"attributes":[{"value":"/ The domain name was longer than 255 octets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":424542,"byte_end":424589,"line_start":769,"line_end":769,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5756},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":424649,"byte_end":424661,"line_start":773,"line_end":773,"column_start":5,"column_end":17},"name":"AbsoluteName","qualname":"::base::name::relative::RelativeDnameError::AbsoluteName","value":"RelativeDnameError::AbsoluteName","parent":{"krate":0,"index":5746},"children":[],"decl_id":null,"docs":" The root label was encountered.\n","sig":null,"attributes":[{"value":"/ The root label was encountered.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":424609,"byte_end":424644,"line_start":772,"line_end":772,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":5746},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":424318,"byte_end":424336,"line_start":759,"line_end":759,"column_start":10,"column_end":28},"name":"RelativeDnameError","qualname":"::base::name::relative::RelativeDnameError","value":"RelativeDnameError::{BadLabel, CompressedName, ShortInput, LongName, AbsoluteName}","parent":null,"children":[{"krate":0,"index":5747},{"krate":0,"index":5750},{"krate":0,"index":5752},{"krate":0,"index":5754},{"krate":0,"index":5756}],"decl_id":null,"docs":" An error happened while creating a domain name from octets.\n","sig":null,"attributes":[{"value":"/ An error happened while creating a domain name from octets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":424200,"byte_end":424263,"line_start":757,"line_end":757,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":5770},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":426114,"byte_end":426130,"line_start":823,"line_end":823,"column_start":12,"column_end":28},"name":"StripSuffixError","qualname":"::base::name::relative::StripSuffixError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An attempt was made to strip a suffix that wasn’t actually a suffix.\n","sig":null,"attributes":[{"value":"/ An attempt was made to strip a suffix that wasn’t actually a suffix.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":425983,"byte_end":426057,"line_start":821,"line_end":821,"column_start":1,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":1894},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":450556,"byte_end":450567,"line_start":28,"line_end":28,"column_start":11,"column_end":22},"name":"ToLabelIter","qualname":"::base::name::traits::ToLabelIter","value":"ToLabelIter<'a>","parent":null,"children":[{"krate":0,"index":1896},{"krate":0,"index":1897},{"krate":0,"index":1898},{"krate":0,"index":1899},{"krate":0,"index":1901}],"decl_id":null,"docs":" A type that can produce an iterator over its labels.","sig":null,"attributes":[{"value":"/ A type that can produce an iterator over its labels.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":450099,"byte_end":450155,"line_start":18,"line_end":18,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":450156,"byte_end":450159,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This trait is used as a trait bound for both [`ToDname`] and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":450160,"byte_end":450224,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/ [`ToRelativeDname`]. It is separate since it has to be generic over the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":450225,"byte_end":450300,"line_start":21,"line_end":21,"column_start":1,"column_end":76}},{"value":"/ lifetime of the label reference but we don’t want to have this lifetime","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":450301,"byte_end":450378,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ parameter pollute those traits.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":450379,"byte_end":450414,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":450415,"byte_end":450418,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`ToDname`]: trait.ToDname.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":450419,"byte_end":450454,"line_start":25,"line_end":25,"column_start":1,"column_end":36}},{"value":"/ [`ToRelativeDname`]: trait ToRelativeDname.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":450455,"byte_end":450506,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"allow(clippy :: len_without_is_empty)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":450507,"byte_end":450545,"line_start":27,"line_end":27,"column_start":1,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":1896},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":450821,"byte_end":450830,"line_start":34,"line_end":34,"column_start":10,"column_end":19},"name":"LabelIter","qualname":"::base::name::traits::ToLabelIter::LabelIter","value":"type LabelIter: Iterator<Item=&'a Label> + DoubleEndedIterator + Clone;","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" The type of the iterator over the labels.","sig":null,"attributes":[{"value":"/ The type of the iterator over the labels.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":450578,"byte_end":450623,"line_start":29,"line_end":29,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":450628,"byte_end":450631,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This iterator types needs to be double ended so that we can deal with","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":450636,"byte_end":450709,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ name suffixes. It needs to be cloneable to be able to cascade over","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":450714,"byte_end":450784,"line_start":32,"line_end":32,"column_start":5,"column_end":75}},{"value":"/ parents of a name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":450789,"byte_end":450811,"line_start":33,"line_end":33,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1897},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":450941,"byte_end":450952,"line_start":37,"line_end":37,"column_start":8,"column_end":19},"name":"iter_labels","qualname":"::base::name::traits::ToLabelIter::iter_labels","value":"fn (&'a self) -> Self::LabelIter","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" Returns an iterator over the labels.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the labels.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":450893,"byte_end":450933,"line_start":36,"line_end":36,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1898},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":451049,"byte_end":451052,"line_start":40,"line_end":40,"column_start":8,"column_end":11},"name":"len","qualname":"::base::name::traits::ToLabelIter::len","value":"fn (&'a self) -> usize","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" Returns the length in octets of the encoded name.\n","sig":null,"attributes":[{"value":"/ Returns the length in octets of the encoded name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":450988,"byte_end":451041,"line_start":39,"line_end":39,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1899},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":451202,"byte_end":451213,"line_start":45,"line_end":45,"column_start":8,"column_end":19},"name":"starts_with","qualname":"::base::name::traits::ToLabelIter::starts_with","value":"fn <N> (&'a self, base: &'a N) -> bool","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" Determines whether `base` is a prefix of `self`.\n","sig":null,"attributes":[{"value":"/ Determines whether `base` is a prefix of `self`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":451142,"byte_end":451194,"line_start":44,"line_end":44,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1901},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":451753,"byte_end":451762,"line_start":62,"line_end":62,"column_start":8,"column_end":17},"name":"ends_with","qualname":"::base::name::traits::ToLabelIter::ends_with","value":"fn <N> (&'a self, base: &'a N) -> bool","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" Determines whether `base` is a suffix of `self`.\n","sig":null,"attributes":[{"value":"/ Determines whether `base` is a suffix of `self`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":451693,"byte_end":451745,"line_start":61,"line_end":61,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":1909},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":453195,"byte_end":453202,"line_start":104,"line_end":104,"column_start":11,"column_end":18},"name":"ToDname","qualname":"::base::name::traits::ToDname","value":"ToDname: Compose + for<'a> ToLabelIter<'a>","parent":null,"children":[{"krate":0,"index":1911},{"krate":0,"index":1913},{"krate":0,"index":1914},{"krate":0,"index":1916},{"krate":0,"index":1917},{"krate":0,"index":1918},{"krate":0,"index":1920},{"krate":0,"index":1922},{"krate":0,"index":1924},{"krate":0,"index":1926}],"decl_id":null,"docs":" A type that represents an absolute domain name.","sig":null,"attributes":[{"value":"/ A type that represents an absolute domain name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":452526,"byte_end":452577,"line_start":90,"line_end":90,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":452578,"byte_end":452581,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ An absolute domain name is a sequence of labels where the last label is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":452582,"byte_end":452657,"line_start":92,"line_end":92,"column_start":1,"column_end":76}},{"value":"/ the root label and where the wire-format representation is not longer than","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":452658,"byte_end":452736,"line_start":93,"line_end":93,"column_start":1,"column_end":79}},{"value":"/ 255 characters. Implementers of this trait need to provide access to the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":452737,"byte_end":452813,"line_start":94,"line_end":94,"column_start":1,"column_end":77}},{"value":"/ label sequence via an iterator and know how to compose the wire-format","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":452814,"byte_end":452888,"line_start":95,"line_end":95,"column_start":1,"column_end":75}},{"value":"/ representation into a buffer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":452889,"byte_end":452922,"line_start":96,"line_end":96,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":452923,"byte_end":452926,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ The most common types implementing this trait are [`Dname`],","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":452927,"byte_end":452991,"line_start":98,"line_end":98,"column_start":1,"column_end":65}},{"value":"/ [`ParsedDname`], and [`Chain<L, R>`] where `R` is `ToDname` itself.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":452992,"byte_end":453063,"line_start":99,"line_end":99,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":453064,"byte_end":453067,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ [`Chain<L, R>`]: struct.Chain.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":453068,"byte_end":453106,"line_start":101,"line_end":101,"column_start":1,"column_end":39}},{"value":"/ [`Dname`]: struct.Dname.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":453107,"byte_end":453139,"line_start":102,"line_end":102,"column_start":1,"column_end":33}},{"value":"/ [`ParsedDname`]: struct.ParsedDname.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":453140,"byte_end":453184,"line_start":103,"line_end":103,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1911},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":453620,"byte_end":453628,"line_start":113,"line_end":113,"column_start":8,"column_end":16},"name":"to_dname","qualname":"::base::name::traits::ToDname::to_dname","value":"fn <Octets> (&self) -> Result<Dname<Octets>, PushError>","parent":{"krate":0,"index":1909},"children":[],"decl_id":null,"docs":" Converts the name into a single, uncompressed name.","sig":null,"attributes":[{"value":"/ Converts the name into a single, uncompressed name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":453244,"byte_end":453299,"line_start":105,"line_end":105,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":453304,"byte_end":453307,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The canonical implementation provided by the trait iterates over the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":453312,"byte_end":453384,"line_start":107,"line_end":107,"column_start":5,"column_end":77}},{"value":"/ labels of the name and adds them one by one to [`Dname`]. This will","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":453389,"byte_end":453460,"line_start":108,"line_end":108,"column_start":5,"column_end":76}},{"value":"/ work for any name but an optimized implementation can be provided for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":453465,"byte_end":453538,"line_start":109,"line_end":109,"column_start":5,"column_end":78}},{"value":"/ some types of names.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":453543,"byte_end":453567,"line_start":110,"line_end":110,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":453572,"byte_end":453575,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ [`Dname`]: struct.Dname.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":453580,"byte_end":453612,"line_start":112,"line_end":112,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1913},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":454445,"byte_end":454458,"line_start":133,"line_end":133,"column_start":8,"column_end":21},"name":"as_flat_slice","qualname":"::base::name::traits::ToDname::as_flat_slice","value":"fn (&self) -> Option<&[u8]>","parent":{"krate":0,"index":1909},"children":[],"decl_id":null,"docs":" Returns an octets slice of the content if possible.","sig":null,"attributes":[{"value":"/ Returns an octets slice of the content if possible.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":454028,"byte_end":454083,"line_start":125,"line_end":125,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":454088,"byte_end":454091,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ If a value stores the domain name as one single octets sequence, it","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":454096,"byte_end":454167,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/ should return a reference to this sequence here. If the name is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":454172,"byte_end":454239,"line_start":128,"line_end":128,"column_start":5,"column_end":72}},{"value":"/ composed from multiple such sequences, it should return `None`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":454244,"byte_end":454311,"line_start":129,"line_end":129,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":454316,"byte_end":454319,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ This method is used to optimize comparision operations between","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":454324,"byte_end":454390,"line_start":131,"line_end":131,"column_start":5,"column_end":71}},{"value":"/ two values that are indeed flat names.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":454395,"byte_end":454437,"line_start":132,"line_end":132,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1914},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":454904,"byte_end":454910,"line_start":146,"line_end":146,"column_start":8,"column_end":14},"name":"to_cow","qualname":"::base::name::traits::ToDname::to_cow","value":"fn (&self) -> Dname<std::borrow::Cow<[u8]>>","parent":{"krate":0,"index":1909},"children":[],"decl_id":null,"docs":" Returns a cow of the domain name.","sig":null,"attributes":[{"value":"/ Returns a cow of the domain name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":454509,"byte_end":454546,"line_start":137,"line_end":137,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":454551,"byte_end":454554,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ If the name is available as one single slice – i.e.,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":454559,"byte_end":454617,"line_start":139,"line_end":139,"column_start":5,"column_end":61}},{"value":"/ [`as_flat_slice`] returns ‘some,’ creates the borrowed variant from","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":454622,"byte_end":454697,"line_start":140,"line_end":140,"column_start":5,"column_end":76}},{"value":"/ that slice. Otherwise assembles an owned variant via [`to_dname`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":454702,"byte_end":454772,"line_start":141,"line_end":141,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":454777,"byte_end":454780,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ [`as_flat_slice`]: #method.as_flat_slice","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":454785,"byte_end":454829,"line_start":143,"line_end":143,"column_start":5,"column_end":49}},{"value":"/ [`to_dname`]: #method.to_dname","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":454834,"byte_end":454868,"line_start":144,"line_end":144,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":454873,"byte_end":454896,"line_start":145,"line_end":145,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1916},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":455256,"byte_end":455262,"line_start":155,"line_end":155,"column_start":8,"column_end":14},"name":"to_vec","qualname":"::base::name::traits::ToDname::to_vec","value":"fn (&self) -> Dname<std::vec::Vec<u8>>","parent":{"krate":0,"index":1909},"children":[],"decl_id":null,"docs":" Returns the domain name assembled into a `Vec<u8>`.\n","sig":null,"attributes":[{"value":"/ Returns the domain name assembled into a `Vec<u8>`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":455165,"byte_end":455220,"line_start":153,"line_end":153,"column_start":5,"column_end":60}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":455225,"byte_end":455248,"line_start":154,"line_end":154,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1917},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":455438,"byte_end":455446,"line_start":161,"line_end":161,"column_start":8,"column_end":16},"name":"to_bytes","qualname":"::base::name::traits::ToDname::to_bytes","value":"fn (&self) -> Dname<Bytes>","parent":{"krate":0,"index":1909},"children":[],"decl_id":null,"docs":" Returns the domain name assembled into a bytes value.\n","sig":null,"attributes":[{"value":"/ Returns the domain name assembled into a bytes value.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":455344,"byte_end":455401,"line_start":159,"line_end":159,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"bytes\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":455406,"byte_end":455429,"line_start":160,"line_end":160,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1918},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":455830,"byte_end":455837,"line_start":172,"line_end":172,"column_start":8,"column_end":15},"name":"name_eq","qualname":"::base::name::traits::ToDname::name_eq","value":"fn <N> (&self, other: &N) -> bool","parent":{"krate":0,"index":1909},"children":[],"decl_id":null,"docs":" Tests whether `self` and `other` are equal.","sig":null,"attributes":[{"value":"/ Tests whether `self` and `other` are equal.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":455516,"byte_end":455563,"line_start":165,"line_end":165,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":455568,"byte_end":455571,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ This method can be used to implement `PartialEq` on types implementing","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":455576,"byte_end":455650,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/ `ToDname` since a blanket implementation for all pairs of `ToDname`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":455655,"byte_end":455726,"line_start":168,"line_end":168,"column_start":5,"column_end":76}},{"value":"/ is currently impossible.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":455731,"byte_end":455759,"line_start":169,"line_end":169,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":455764,"byte_end":455767,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Domain names are compared ignoring ASCII case.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":455772,"byte_end":455822,"line_start":171,"line_end":171,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1920},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":456824,"byte_end":456832,"line_start":194,"line_end":194,"column_start":8,"column_end":16},"name":"name_cmp","qualname":"::base::name::traits::ToDname::name_cmp","value":"fn <N> (&self, other: &N) -> cmp::Ordering","parent":{"krate":0,"index":1909},"children":[],"decl_id":null,"docs":" Returns the ordering between `self` and `other`.","sig":null,"attributes":[{"value":"/ Returns the ordering between `self` and `other`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":456312,"byte_end":456364,"line_start":184,"line_end":184,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":456369,"byte_end":456372,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ This method can be used to implement both `PartialOrd` and `Ord` on","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":456377,"byte_end":456448,"line_start":186,"line_end":186,"column_start":5,"column_end":76}},{"value":"/ types implementing `ToDname` since a blanket implementation for all","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":456453,"byte_end":456524,"line_start":187,"line_end":187,"column_start":5,"column_end":76}},{"value":"/ pairs of `ToDname`s is currently not possible.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":456529,"byte_end":456579,"line_start":188,"line_end":188,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":456584,"byte_end":456587,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Domain name order is determined according to the ‘canonical DNS","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":456592,"byte_end":456661,"line_start":190,"line_end":190,"column_start":5,"column_end":72}},{"value":"/ name order’ as defined in [section 6.1 of RFC 4034][RFC4034-6.1].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":456666,"byte_end":456737,"line_start":191,"line_end":191,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":456742,"byte_end":456745,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ [RFC4034-6.1]: https://tools.ietf.org/html/rfc4034#section-6.1","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":456750,"byte_end":456816,"line_start":193,"line_end":193,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1922},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":457567,"byte_end":457579,"line_start":213,"line_end":213,"column_start":8,"column_end":20},"name":"composed_cmp","qualname":"::base::name::traits::ToDname::composed_cmp","value":"fn <N> (&self, other: &N) -> cmp::Ordering","parent":{"krate":0,"index":1909},"children":[],"decl_id":null,"docs":" Returns the composed name ordering.\n","sig":null,"attributes":[{"value":"/ Returns the composed name ordering.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":457520,"byte_end":457559,"line_start":212,"line_end":212,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1924},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":458647,"byte_end":458669,"line_start":240,"line_end":240,"column_start":8,"column_end":30},"name":"lowercase_composed_cmp","qualname":"::base::name::traits::ToDname::lowercase_composed_cmp","value":"fn <N> (&self, other: &N) -> cmp::Ordering","parent":{"krate":0,"index":1909},"children":[],"decl_id":null,"docs":" Returns the lowercase composed ordering.\n","sig":null,"attributes":[{"value":"/ Returns the lowercase composed ordering.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":458595,"byte_end":458639,"line_start":239,"line_end":239,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1926},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":459866,"byte_end":459883,"line_start":271,"line_end":271,"column_start":8,"column_end":25},"name":"rrsig_label_count","qualname":"::base::name::traits::ToDname::rrsig_label_count","value":"fn (&self) -> u8","parent":{"krate":0,"index":1909},"children":[],"decl_id":null,"docs":" Returns the number of labels for the RRSIG Labels field.","sig":null,"attributes":[{"value":"/ Returns the number of labels for the RRSIG Labels field.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":459668,"byte_end":459728,"line_start":267,"line_end":267,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":459733,"byte_end":459736,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ This is the actual number of labels without counting the root label","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":459741,"byte_end":459812,"line_start":269,"line_end":269,"column_start":5,"column_end":76}},{"value":"/ or a possible initial asterisk label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":459817,"byte_end":459858,"line_start":270,"line_end":270,"column_start":5,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":1930},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":461032,"byte_end":461047,"line_start":302,"line_end":302,"column_start":11,"column_end":26},"name":"ToRelativeDname","qualname":"::base::name::traits::ToRelativeDname","value":"ToRelativeDname: Compose + for<'a> ToLabelIter<'a>","parent":null,"children":[{"krate":0,"index":1932},{"krate":0,"index":1934},{"krate":0,"index":1935},{"krate":0,"index":1937},{"krate":0,"index":1938},{"krate":0,"index":1939},{"krate":0,"index":1940},{"krate":0,"index":1942},{"krate":0,"index":1943},{"krate":0,"index":1945}],"decl_id":null,"docs":" A type that represents a relative domain name.","sig":null,"attributes":[{"value":"/ A type that represents a relative domain name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":460249,"byte_end":460299,"line_start":287,"line_end":287,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":460300,"byte_end":460303,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ In order to be a relative domain name, a type needs to be able to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":460304,"byte_end":460373,"line_start":289,"line_end":289,"column_start":1,"column_end":70}},{"value":"/ provide a sequence of labels via an iterator where the last label is not","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":460374,"byte_end":460450,"line_start":290,"line_end":290,"column_start":1,"column_end":77}},{"value":"/ the root label. The type also needs to be able to compose the wire-format","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":460451,"byte_end":460528,"line_start":291,"line_end":291,"column_start":1,"column_end":78}},{"value":"/ representation of the domain name it represents which must not be longer","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":460529,"byte_end":460605,"line_start":292,"line_end":292,"column_start":1,"column_end":77}},{"value":"/ than 254 characters. This limit has been chosen so that by attaching the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":460606,"byte_end":460682,"line_start":293,"line_end":293,"column_start":1,"column_end":77}},{"value":"/ one character long root label, a valid absolute name can be constructed","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":460683,"byte_end":460758,"line_start":294,"line_end":294,"column_start":1,"column_end":76}},{"value":"/ from the relative name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":460759,"byte_end":460786,"line_start":295,"line_end":295,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":460787,"byte_end":460790,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ The most important types implementing this trait are [`RelativeDname`]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":460791,"byte_end":460865,"line_start":297,"line_end":297,"column_start":1,"column_end":75}},{"value":"/ and [`Chain<L,R>`] where `R` is a `ToRelativeDname` itself.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":460866,"byte_end":460929,"line_start":298,"line_end":298,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":460930,"byte_end":460933,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ [`Chain<L, R>`]: struct.Chain.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":460934,"byte_end":460972,"line_start":300,"line_end":300,"column_start":1,"column_end":39}},{"value":"/ [`RelativeDname`]: struct.RelativeDname.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":460973,"byte_end":461021,"line_start":301,"line_end":301,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1932},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":461494,"byte_end":461511,"line_start":312,"line_end":312,"column_start":8,"column_end":25},"name":"to_relative_dname","qualname":"::base::name::traits::ToRelativeDname::to_relative_dname","value":"fn <Octets> (&self) -> Result<RelativeDname<Octets>, PushError>","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" Converts the name into a single, continous name.","sig":null,"attributes":[{"value":"/ Converts the name into a single, continous name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":461089,"byte_end":461141,"line_start":303,"line_end":303,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":461146,"byte_end":461149,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ The canonical implementation provided by the trait iterates over the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":461154,"byte_end":461226,"line_start":305,"line_end":305,"column_start":5,"column_end":77}},{"value":"/ labels of the name and adds them one by one to [`RelativeDname`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":461231,"byte_end":461300,"line_start":306,"line_end":306,"column_start":5,"column_end":74}},{"value":"/ This will work for any name but an optimized implementation can be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":461305,"byte_end":461375,"line_start":307,"line_end":307,"column_start":5,"column_end":75}},{"value":"/ provided for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":461380,"byte_end":461396,"line_start":308,"line_end":308,"column_start":5,"column_end":21}},{"value":"/ some types of names.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":461401,"byte_end":461425,"line_start":309,"line_end":309,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":461430,"byte_end":461433,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ [`RelativeDname`]: struct.RelativeDname.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":461438,"byte_end":461486,"line_start":311,"line_end":311,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1934},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":462152,"byte_end":462165,"line_start":332,"line_end":332,"column_start":8,"column_end":21},"name":"as_flat_slice","qualname":"::base::name::traits::ToRelativeDname::as_flat_slice","value":"fn (&self) -> Option<&[u8]>","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" Returns a byte slice of the content if possible.","sig":null,"attributes":[{"value":"/ Returns a byte slice of the content if possible.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":461962,"byte_end":462014,"line_start":328,"line_end":328,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":462019,"byte_end":462022,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ This method can is used to optimize comparision operations between","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":462027,"byte_end":462097,"line_start":330,"line_end":330,"column_start":5,"column_end":75}},{"value":"/ two values that are indeed flat names.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":462102,"byte_end":462144,"line_start":331,"line_end":331,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1935},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":462620,"byte_end":462626,"line_start":345,"line_end":345,"column_start":8,"column_end":14},"name":"to_cow","qualname":"::base::name::traits::ToRelativeDname::to_cow","value":"fn (&self) -> RelativeDname<std::borrow::Cow<[u8]>>","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" Returns a cow of the relative domain name.","sig":null,"attributes":[{"value":"/ Returns a cow of the relative domain name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":462216,"byte_end":462262,"line_start":336,"line_end":336,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":462267,"byte_end":462270,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ If the name is available as one single slice – i.e.,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":462275,"byte_end":462333,"line_start":338,"line_end":338,"column_start":5,"column_end":61}},{"value":"/ [`as_flat_slice`] returns ‘some,’ creates the borrowed variant from","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":462338,"byte_end":462413,"line_start":339,"line_end":339,"column_start":5,"column_end":76}},{"value":"/ that slice. Otherwise assembles an owned variant via [`to_dname`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":462418,"byte_end":462488,"line_start":340,"line_end":340,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":462493,"byte_end":462496,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ [`as_flat_slice`]: #method.as_flat_slice","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":462501,"byte_end":462545,"line_start":342,"line_end":342,"column_start":5,"column_end":49}},{"value":"/ [`to_dname`]: #method.to_dname","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":462550,"byte_end":462584,"line_start":343,"line_end":343,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":462589,"byte_end":462612,"line_start":344,"line_end":344,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1937},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":462988,"byte_end":462994,"line_start":354,"line_end":354,"column_start":8,"column_end":14},"name":"to_vec","qualname":"::base::name::traits::ToRelativeDname::to_vec","value":"fn (&self) -> RelativeDname<std::vec::Vec<u8>>","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" Returns the domain name assembled into a `Vec<u8>`.\n","sig":null,"attributes":[{"value":"/ Returns the domain name assembled into a `Vec<u8>`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":462897,"byte_end":462952,"line_start":352,"line_end":352,"column_start":5,"column_end":60}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":462957,"byte_end":462980,"line_start":353,"line_end":353,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1938},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":463187,"byte_end":463195,"line_start":360,"line_end":360,"column_start":8,"column_end":16},"name":"to_bytes","qualname":"::base::name::traits::ToRelativeDname::to_bytes","value":"fn (&self) -> RelativeDname<Bytes>","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" Returns the domain name assembled into a bytes value.\n","sig":null,"attributes":[{"value":"/ Returns the domain name assembled into a bytes value.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":463093,"byte_end":463150,"line_start":358,"line_end":358,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"bytes\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":463155,"byte_end":463178,"line_start":359,"line_end":359,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1939},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":463328,"byte_end":463336,"line_start":365,"line_end":365,"column_start":8,"column_end":16},"name":"is_empty","qualname":"::base::name::traits::ToRelativeDname::is_empty","value":"fn (&self) -> bool","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" Returns whether the name is empty.\n","sig":null,"attributes":[{"value":"/ Returns whether the name is empty.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":463282,"byte_end":463320,"line_start":364,"line_end":364,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1940},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":463472,"byte_end":463477,"line_start":370,"line_end":370,"column_start":8,"column_end":13},"name":"chain","qualname":"::base::name::traits::ToRelativeDname::chain","value":"fn <N> (self, suffix: N) -> Result<Chain<Self, N>, LongChainError>","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" Returns a chain of this name and the provided name.\n","sig":null,"attributes":[{"value":"/ Returns a chain of this name and the provided name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":463409,"byte_end":463464,"line_start":369,"line_end":369,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1942},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":463718,"byte_end":463728,"line_start":379,"line_end":379,"column_start":8,"column_end":18},"name":"chain_root","qualname":"::base::name::traits::ToRelativeDname::chain_root","value":"fn (self) -> Chain<Self, Dname<&'static [u8]>>","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" Returns the absolute name by chaining it with the root label.\n","sig":null,"attributes":[{"value":"/ Returns the absolute name by chaining it with the root label.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":463645,"byte_end":463710,"line_start":378,"line_end":378,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1943},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":464224,"byte_end":464231,"line_start":392,"line_end":392,"column_start":8,"column_end":15},"name":"name_eq","qualname":"::base::name::traits::ToRelativeDname::name_eq","value":"fn <N> (&self, other: &N) -> bool","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" Tests whether `self` and `other` are equal.","sig":null,"attributes":[{"value":"/ Tests whether `self` and `other` are equal.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":463910,"byte_end":463957,"line_start":385,"line_end":385,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":463962,"byte_end":463965,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ This method can be used to implement `PartialEq` on types implementing","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":463970,"byte_end":464044,"line_start":387,"line_end":387,"column_start":5,"column_end":79}},{"value":"/ `ToDname` since a blanket implementation for all pairs of `ToDname`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":464049,"byte_end":464120,"line_start":388,"line_end":388,"column_start":5,"column_end":76}},{"value":"/ is currently impossible.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":464125,"byte_end":464153,"line_start":389,"line_end":389,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":464158,"byte_end":464161,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ Domain names are compared ignoring ASCII case.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":464166,"byte_end":464216,"line_start":391,"line_end":391,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1945},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":465323,"byte_end":465331,"line_start":416,"line_end":416,"column_start":8,"column_end":16},"name":"name_cmp","qualname":"::base::name::traits::ToRelativeDname::name_cmp","value":"fn <N> (&self, other: &N) -> cmp::Ordering","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" Returns the ordering between `self` and `other`.","sig":null,"attributes":[{"value":"/ Returns the ordering between `self` and `other`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":464570,"byte_end":464622,"line_start":402,"line_end":402,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":464627,"byte_end":464630,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ This method can be used to implement both `PartialOrd` and `Ord` on","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":464635,"byte_end":464706,"line_start":404,"line_end":404,"column_start":5,"column_end":76}},{"value":"/ types implementing `ToDname` since a blanket implementation for all","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":464711,"byte_end":464782,"line_start":405,"line_end":405,"column_start":5,"column_end":76}},{"value":"/ pairs of `ToDname`s is currently not possible.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":464787,"byte_end":464837,"line_start":406,"line_end":406,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":464842,"byte_end":464845,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ Domain name order is determined according to the ‘canonical DNS","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":464850,"byte_end":464919,"line_start":408,"line_end":408,"column_start":5,"column_end":72}},{"value":"/ name order’ as defined in [section 6.1 of RFC 4034][RFC4034-6.1].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":464924,"byte_end":464995,"line_start":409,"line_end":409,"column_start":5,"column_end":74}},{"value":"/ This section describes how absolute domain names are ordered only.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":465000,"byte_end":465070,"line_start":410,"line_end":410,"column_start":5,"column_end":75}},{"value":"/ We will order relative domain names according to these rules as if","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":465075,"byte_end":465145,"line_start":411,"line_end":411,"column_start":5,"column_end":75}},{"value":"/ they had the same origin, i.e., as if they were relative to the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":465150,"byte_end":465217,"line_start":412,"line_end":412,"column_start":5,"column_end":72}},{"value":"/ same name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":465222,"byte_end":465236,"line_start":413,"line_end":413,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":465241,"byte_end":465244,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ [RFC4034-6.1]: https://tools.ietf.org/html/rfc4034#section-6.1","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":465249,"byte_end":465315,"line_start":415,"line_end":415,"column_start":5,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":1950},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":466470,"byte_end":466483,"line_start":451,"line_end":451,"column_start":11,"column_end":24},"name":"ToEitherDname","qualname":"::base::name::traits::ToEitherDname","value":"ToEitherDname: Compose + for<'a> ToLabelIter<'a>","parent":null,"children":[],"decl_id":null,"docs":" A name that is either absolute or relative.","sig":null,"attributes":[{"value":"/ A name that is either absolute or relative.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":466202,"byte_end":466249,"line_start":443,"line_end":443,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":466250,"byte_end":466253,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/ This is anything that can iterate over labels.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":466254,"byte_end":466304,"line_start":445,"line_end":445,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":466305,"byte_end":466308,"line_start":446,"line_end":446,"column_start":1,"column_end":4}},{"value":"/ The trait only exists to avoid the somewhat clumsy trait bounds necessary","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":466309,"byte_end":466386,"line_start":447,"line_end":447,"column_start":1,"column_end":78}},{"value":"/ for [`ToLabelIter`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":466387,"byte_end":466411,"line_start":448,"line_end":448,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":466412,"byte_end":466415,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/ [`ToLabelIter`]: trait.ToLabelIter.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":466416,"byte_end":466459,"line_start":450,"line_end":450,"column_start":1,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5785},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":467735,"byte_end":467743,"line_start":33,"line_end":33,"column_start":5,"column_end":13},"name":"Absolute","qualname":"::base::name::uncertain::UncertainDname::Absolute","value":"UncertainDname::Absolute(Dname<Octets>)","parent":{"krate":0,"index":5783},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5788},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":467764,"byte_end":467772,"line_start":34,"line_end":34,"column_start":5,"column_end":13},"name":"Relative","qualname":"::base::name::uncertain::UncertainDname::Relative","value":"UncertainDname::Relative(RelativeDname<Octets>)","parent":{"krate":0,"index":5783},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5783},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":467706,"byte_end":467720,"line_start":32,"line_end":32,"column_start":10,"column_end":24},"name":"UncertainDname","qualname":"::base::name::uncertain::UncertainDname","value":"UncertainDname::{Absolute, Relative}","parent":null,"children":[{"krate":0,"index":5785},{"krate":0,"index":5788}],"decl_id":null,"docs":" A domain name that may be absolute or relative.","sig":null,"attributes":[{"value":"/ A domain name that may be absolute or relative.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":467508,"byte_end":467559,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":467560,"byte_end":467563,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This type is helpful when reading a domain name from some source where it","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":467564,"byte_end":467641,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ may end up being absolute or not.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":467642,"byte_end":467679,"line_start":30,"line_end":30,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1987},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":467923,"byte_end":467931,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"absolute","qualname":"<UncertainDname<Octets>>::absolute","value":"fn (name: Dname<Octets>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new uncertain domain name from an absolute domain name.\n","sig":null,"attributes":[{"value":"/ Creates a new uncertain domain name from an absolute domain name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":467842,"byte_end":467911,"line_start":38,"line_end":38,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1988},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":468093,"byte_end":468101,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"relative","qualname":"<UncertainDname<Octets>>::relative","value":"fn (name: RelativeDname<Octets>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new uncertain domain name from a relative domain name.\n","sig":null,"attributes":[{"value":"/ Creates a new uncertain domain name from a relative domain name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":468013,"byte_end":468081,"line_start":43,"line_end":43,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1989},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":468274,"byte_end":468278,"line_start":49,"line_end":49,"column_start":12,"column_end":16},"name":"root","qualname":"<UncertainDname<Octets>>::root","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new uncertain domain name containing the root label only.\n","sig":null,"attributes":[{"value":"/ Creates a new uncertain domain name containing the root label only.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":468191,"byte_end":468262,"line_start":48,"line_end":48,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1990},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":468450,"byte_end":468455,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"empty","qualname":"<UncertainDname<Octets>>::empty","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new uncertain yet empty domain name.\n","sig":null,"attributes":[{"value":"/ Creates a new uncertain yet empty domain name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":468388,"byte_end":468438,"line_start":54,"line_end":54,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1991},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":469275,"byte_end":469285,"line_start":74,"line_end":74,"column_start":12,"column_end":22},"name":"from_chars","qualname":"<UncertainDname<Octets>>::from_chars","value":"fn <C> (chars: C) -> Result<Self, FromStrError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a domain name from a sequence of characters.","sig":null,"attributes":[{"value":"/ Creates a domain name from a sequence of characters.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":468574,"byte_end":468630,"line_start":60,"line_end":60,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":468635,"byte_end":468638,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The sequence must result in a domain name in master format","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":468643,"byte_end":468705,"line_start":62,"line_end":62,"column_start":5,"column_end":67}},{"value":"/ representation. That is, its labels should be separated by dots,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":468710,"byte_end":468778,"line_start":63,"line_end":63,"column_start":5,"column_end":73}},{"value":"/ actual dots, white space and backslashes should be escaped by a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":468783,"byte_end":468850,"line_start":64,"line_end":64,"column_start":5,"column_end":72}},{"value":"/ preceeding backslash, and any byte value that is not a printable","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":468855,"byte_end":468923,"line_start":65,"line_end":65,"column_start":5,"column_end":73}},{"value":"/ ASCII character should be encoded by a backslash followed by its","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":468928,"byte_end":468996,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/ three digit decimal value.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":469001,"byte_end":469031,"line_start":67,"line_end":67,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":469036,"byte_end":469039,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the last character is a dot, the name will be absolute, otherwise","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":469044,"byte_end":469116,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ it will be relative.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":469121,"byte_end":469145,"line_start":70,"line_end":70,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":469150,"byte_end":469153,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ If you have a string, you can also use the `FromStr` trait, which","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":469158,"byte_end":469227,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/ really does the same thing.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":469232,"byte_end":469263,"line_start":73,"line_end":73,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1994},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":469893,"byte_end":469902,"line_start":95,"line_end":95,"column_start":12,"column_end":21},"name":"empty_ref","qualname":"<UncertainDname<&'static [u8]>>::empty_ref","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty relative name atop a slice reference.\n","sig":null,"attributes":[{"value":"/ Creates an empty relative name atop a slice reference.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":469823,"byte_end":469881,"line_start":94,"line_end":94,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1995},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":470035,"byte_end":470043,"line_start":100,"line_end":100,"column_start":12,"column_end":20},"name":"root_ref","qualname":"<UncertainDname<&'static [u8]>>::root_ref","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an absolute name that is the root label atop a slice reference.\n","sig":null,"attributes":[{"value":"/ Creates an absolute name that is the root label atop a slice reference.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":469948,"byte_end":470023,"line_start":99,"line_end":99,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1997},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":470209,"byte_end":470218,"line_start":108,"line_end":108,"column_start":12,"column_end":21},"name":"empty_vec","qualname":"<UncertainDname<Vec<u8>>>::empty_vec","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty relative name atop a `Vec<u8>`.\n","sig":null,"attributes":[{"value":"/ Creates an empty relative name atop a `Vec<u8>`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":470145,"byte_end":470197,"line_start":107,"line_end":107,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1998},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":470342,"byte_end":470350,"line_start":113,"line_end":113,"column_start":12,"column_end":20},"name":"root_vec","qualname":"<UncertainDname<Vec<u8>>>::root_vec","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an absolute name from the root label atop a `Vec<u8>`.\n","sig":null,"attributes":[{"value":"/ Creates an absolute name from the root label atop a `Vec<u8>`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":470264,"byte_end":470330,"line_start":112,"line_end":112,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2000},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":470517,"byte_end":470528,"line_start":121,"line_end":121,"column_start":12,"column_end":23},"name":"empty_bytes","qualname":"<UncertainDname<Bytes>>::empty_bytes","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty relative name atop a bytes value.\n","sig":null,"attributes":[{"value":"/ Creates an empty relative name atop a bytes value.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":470451,"byte_end":470505,"line_start":120,"line_end":120,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2001},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":470654,"byte_end":470664,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"root_bytes","qualname":"<UncertainDname<Bytes>>::root_bytes","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an absolute name from the root label atop a bytes value.\n","sig":null,"attributes":[{"value":"/ Creates an absolute name from the root label atop a bytes value.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":470574,"byte_end":470642,"line_start":125,"line_end":125,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2004},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":470802,"byte_end":470813,"line_start":133,"line_end":133,"column_start":12,"column_end":23},"name":"is_absolute","qualname":"<UncertainDname<Octets>>::is_absolute","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the name is absolute.\n","sig":null,"attributes":[{"value":"/ Returns whether the name is absolute.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":470749,"byte_end":470790,"line_start":132,"line_end":132,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2005},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":471026,"byte_end":471037,"line_start":141,"line_end":141,"column_start":12,"column_end":23},"name":"is_relative","qualname":"<UncertainDname<Octets>>::is_relative","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the name is relative.\n","sig":null,"attributes":[{"value":"/ Returns whether the name is relative.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":470973,"byte_end":471014,"line_start":140,"line_end":140,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2006},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":471176,"byte_end":471187,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"as_absolute","qualname":"<UncertainDname<Octets>>::as_absolute","value":"fn (&self) -> Option<&Dname<Octets>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to an absolute name, if this name is absolute.\n","sig":null,"attributes":[{"value":"/ Returns a reference to an absolute name, if this name is absolute.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":471094,"byte_end":471164,"line_start":145,"line_end":145,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2007},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":471430,"byte_end":471441,"line_start":154,"line_end":154,"column_start":12,"column_end":23},"name":"as_relative","qualname":"<UncertainDname<Octets>>::as_relative","value":"fn (&self) -> Option<&RelativeDname<Octets>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a relative name, if the name is relative.\n","sig":null,"attributes":[{"value":"/ Returns a reference to a relative name, if the name is relative.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":471350,"byte_end":471418,"line_start":153,"line_end":153,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2008},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":471896,"byte_end":471909,"line_start":168,"line_end":168,"column_start":12,"column_end":25},"name":"into_absolute","qualname":"<UncertainDname<Octets>>::into_absolute","value":"fn (self) -> Result<Dname<<<Octets as IntoBuilder>::Builder as IntoOctets>::Octets>,\n       PushError>","parent":null,"children":[],"decl_id":null,"docs":" Converts the name into an absolute name.","sig":null,"attributes":[{"value":"/ Converts the name into an absolute name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":471613,"byte_end":471657,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":471662,"byte_end":471665,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ If the name is relative, appends the root label to it using","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":471670,"byte_end":471733,"line_start":163,"line_end":163,"column_start":5,"column_end":68}},{"value":"/ [`RelativeDname::into_absolute`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":471738,"byte_end":471775,"line_start":164,"line_end":164,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":471780,"byte_end":471783,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ [`RelativeDname::into_absolute`]:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":471788,"byte_end":471825,"line_start":166,"line_end":166,"column_start":5,"column_end":42}},{"value":"/     struct.RelativeDname.html#method.into_absolute","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":471830,"byte_end":471884,"line_start":167,"line_end":167,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2009},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":472463,"byte_end":472480,"line_start":187,"line_end":187,"column_start":12,"column_end":29},"name":"try_into_absolute","qualname":"<UncertainDname<Octets>>::try_into_absolute","value":"fn (self) -> Result<Dname<Octets>, Self>","parent":null,"children":[],"decl_id":null,"docs":" Converts the name into an absolute name if it is absolute.","sig":null,"attributes":[{"value":"/ Converts the name into an absolute name if it is absolute.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":472333,"byte_end":472395,"line_start":184,"line_end":184,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":472400,"byte_end":472403,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ Otherwise, returns itself as the error.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":472408,"byte_end":472451,"line_start":186,"line_end":186,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2010},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":472797,"byte_end":472814,"line_start":199,"line_end":199,"column_start":12,"column_end":29},"name":"try_into_relative","qualname":"<UncertainDname<Octets>>::try_into_relative","value":"fn (self) -> Result<RelativeDname<Octets>, Self>","parent":null,"children":[],"decl_id":null,"docs":" Converts the name into a relative name if it is relative.","sig":null,"attributes":[{"value":"/ Converts the name into a relative name if it is relative.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":472664,"byte_end":472725,"line_start":196,"line_end":196,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":472730,"byte_end":472733,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ Otherwise just returns itself as the error.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":472738,"byte_end":472785,"line_start":198,"line_end":198,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2011},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":473076,"byte_end":473085,"line_start":209,"line_end":209,"column_start":12,"column_end":21},"name":"as_octets","qualname":"<UncertainDname<Octets>>::as_octets","value":"fn (&self) -> &Octets","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying octets sequence.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying octets sequence.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":473006,"byte_end":473064,"line_start":208,"line_end":208,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2012},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":473357,"byte_end":473365,"line_start":217,"line_end":217,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<UncertainDname<Octets>>::as_slice","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns an octets slice with the raw content of the name.\n","sig":null,"attributes":[{"value":"/ Returns an octets slice with the raw content of the name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":473284,"byte_end":473345,"line_start":216,"line_end":216,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2013},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":473931,"byte_end":473936,"line_start":231,"line_end":231,"column_start":12,"column_end":17},"name":"chain","qualname":"<UncertainDname<Octets>>::chain","value":"fn <S> (self, suffix: S) -> Result<Chain<Self, S>, LongChainError>","parent":null,"children":[],"decl_id":null,"docs":" Makes an uncertain name absolute by chaining on a suffix if needed.","sig":null,"attributes":[{"value":"/ Makes an uncertain name absolute by chaining on a suffix if needed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":473591,"byte_end":473662,"line_start":225,"line_end":225,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":473667,"byte_end":473670,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ The method converts the uncertain name into a chain that will","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":473675,"byte_end":473740,"line_start":227,"line_end":227,"column_start":5,"column_end":70}},{"value":"/ be absolute. If the name is already absolute, the chain will be the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":473745,"byte_end":473816,"line_start":228,"line_end":228,"column_start":5,"column_end":76}},{"value":"/ name itself. If it is relative, if will be the concatenation of the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":473821,"byte_end":473892,"line_start":229,"line_end":229,"column_start":5,"column_end":76}},{"value":"/ name and `suffix`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":473897,"byte_end":473919,"line_start":230,"line_end":230,"column_start":5,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":2063},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/net.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::base::net","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/net.rs","parent":null,"children":[{"krate":0,"index":2064}],"decl_id":null,"docs":" Networking-related types not available in core.","sig":null,"attributes":[{"value":"! Networking-related types not available in core.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/net.rs","byte_start":482910,"byte_end":482961,"line_start":1,"line_end":1,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/net.rs","byte_start":482962,"byte_end":482965,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module either re-exports or re-defines a number of types related to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/net.rs","byte_start":482966,"byte_end":483042,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"! networking that are not available in a `no_std` environment but are used","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/net.rs","byte_start":483043,"byte_end":483119,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"! in DNS data. Currently, these are types for IP addresses.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/net.rs","byte_start":483120,"byte_end":483181,"line_start":5,"line_end":5,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/net.rs","byte_start":483182,"byte_end":483185,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! The `no_std` version currently is only the bare minimum implementation","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/net.rs","byte_start":483186,"byte_end":483260,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"! and doesn’t provide all the features the `std` version has.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/net.rs","byte_start":483261,"byte_end":483326,"line_start":8,"line_end":8,"column_start":1,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":2069},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"octets","qualname":"::base::octets","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","parent":null,"children":[{"krate":0,"index":2070},{"krate":0,"index":2074},{"krate":0,"index":2075},{"krate":0,"index":2076},{"krate":0,"index":2077},{"krate":0,"index":2078},{"krate":0,"index":2081},{"krate":0,"index":2084},{"krate":0,"index":2085},{"krate":0,"index":2088},{"krate":0,"index":2090},{"krate":0,"index":2093},{"krate":0,"index":2096},{"krate":0,"index":2098},{"krate":0,"index":2100},{"krate":0,"index":2103},{"krate":0,"index":2109},{"krate":0,"index":2114},{"krate":0,"index":2118},{"krate":0,"index":2123},{"krate":0,"index":2127},{"krate":0,"index":2131},{"krate":0,"index":2136},{"krate":0,"index":2149},{"krate":0,"index":2154},{"krate":0,"index":2157},{"krate":0,"index":2160},{"krate":0,"index":2164},{"krate":0,"index":2167},{"krate":0,"index":2170},{"krate":0,"index":2173},{"krate":0,"index":2177},{"krate":0,"index":2180},{"krate":0,"index":2183},{"krate":0,"index":2186},{"krate":0,"index":2190},{"krate":0,"index":2193},{"krate":0,"index":2196},{"krate":0,"index":2200},{"krate":0,"index":2204},{"krate":0,"index":2207},{"krate":0,"index":2211},{"krate":0,"index":2214},{"krate":0,"index":2217},{"krate":0,"index":2220},{"krate":0,"index":5794},{"krate":0,"index":5804},{"krate":0,"index":5802},{"krate":0,"index":5799},{"krate":0,"index":2224},{"krate":0,"index":2231},{"krate":0,"index":2233},{"krate":0,"index":2244},{"krate":0,"index":2261},{"krate":0,"index":2265},{"krate":0,"index":2269},{"krate":0,"index":2273},{"krate":0,"index":2277},{"krate":0,"index":2281},{"krate":0,"index":2285},{"krate":0,"index":2289},{"krate":0,"index":2293},{"krate":0,"index":2298},{"krate":0,"index":2303},{"krate":0,"index":2310},{"krate":0,"index":2313},{"krate":0,"index":2316},{"krate":0,"index":2319},{"krate":0,"index":2322},{"krate":0,"index":2325},{"krate":0,"index":2328},{"krate":0,"index":2331},{"krate":0,"index":2334},{"krate":0,"index":5861},{"krate":0,"index":5865},{"krate":0,"index":5807},{"krate":0,"index":5811},{"krate":0,"index":5814},{"krate":0,"index":5818},{"krate":0,"index":5821},{"krate":0,"index":5823},{"krate":0,"index":5825},{"krate":0,"index":5827},{"krate":0,"index":5829},{"krate":0,"index":5831},{"krate":0,"index":5834},{"krate":0,"index":5838},{"krate":0,"index":5841},{"krate":0,"index":5844},{"krate":0,"index":5847},{"krate":0,"index":5850},{"krate":0,"index":5851},{"krate":0,"index":5854},{"krate":0,"index":5856},{"krate":0,"index":5859},{"krate":0,"index":5921},{"krate":0,"index":5925},{"krate":0,"index":5867},{"krate":0,"index":5871},{"krate":0,"index":5874},{"krate":0,"index":5878},{"krate":0,"index":5881},{"krate":0,"index":5883},{"krate":0,"index":5885},{"krate":0,"index":5887},{"krate":0,"index":5889},{"krate":0,"index":5891},{"krate":0,"index":5894},{"krate":0,"index":5898},{"krate":0,"index":5901},{"krate":0,"index":5904},{"krate":0,"index":5907},{"krate":0,"index":5910},{"krate":0,"index":5911},{"krate":0,"index":5914},{"krate":0,"index":5916},{"krate":0,"index":5919},{"krate":0,"index":5981},{"krate":0,"index":5985},{"krate":0,"index":5927},{"krate":0,"index":5931},{"krate":0,"index":5934},{"krate":0,"index":5938},{"krate":0,"index":5941},{"krate":0,"index":5943},{"krate":0,"index":5945},{"krate":0,"index":5947},{"krate":0,"index":5949},{"krate":0,"index":5951},{"krate":0,"index":5954},{"krate":0,"index":5958},{"krate":0,"index":5961},{"krate":0,"index":5964},{"krate":0,"index":5967},{"krate":0,"index":5970},{"krate":0,"index":5971},{"krate":0,"index":5974},{"krate":0,"index":5976},{"krate":0,"index":5979},{"krate":0,"index":6041},{"krate":0,"index":6045},{"krate":0,"index":5987},{"krate":0,"index":5991},{"krate":0,"index":5994},{"krate":0,"index":5998},{"krate":0,"index":6001},{"krate":0,"index":6003},{"krate":0,"index":6005},{"krate":0,"index":6007},{"krate":0,"index":6009},{"krate":0,"index":6011},{"krate":0,"index":6014},{"krate":0,"index":6018},{"krate":0,"index":6021},{"krate":0,"index":6024},{"krate":0,"index":6027},{"krate":0,"index":6030},{"krate":0,"index":6031},{"krate":0,"index":6034},{"krate":0,"index":6036},{"krate":0,"index":6039},{"krate":0,"index":6101},{"krate":0,"index":6105},{"krate":0,"index":6047},{"krate":0,"index":6051},{"krate":0,"index":6054},{"krate":0,"index":6058},{"krate":0,"index":6061},{"krate":0,"index":6063},{"krate":0,"index":6065},{"krate":0,"index":6067},{"krate":0,"index":6069},{"krate":0,"index":6071},{"krate":0,"index":6074},{"krate":0,"index":6078},{"krate":0,"index":6081},{"krate":0,"index":6084},{"krate":0,"index":6087},{"krate":0,"index":6090},{"krate":0,"index":6091},{"krate":0,"index":6094},{"krate":0,"index":6096},{"krate":0,"index":6099},{"krate":0,"index":6161},{"krate":0,"index":6165},{"krate":0,"index":6107},{"krate":0,"index":6111},{"krate":0,"index":6114},{"krate":0,"index":6118},{"krate":0,"index":6121},{"krate":0,"index":6123},{"krate":0,"index":6125},{"krate":0,"index":6127},{"krate":0,"index":6129},{"krate":0,"index":6131},{"krate":0,"index":6134},{"krate":0,"index":6138},{"krate":0,"index":6141},{"krate":0,"index":6144},{"krate":0,"index":6147},{"krate":0,"index":6150},{"krate":0,"index":6151},{"krate":0,"index":6154},{"krate":0,"index":6156},{"krate":0,"index":6159},{"krate":0,"index":6221},{"krate":0,"index":6225},{"krate":0,"index":6167},{"krate":0,"index":6171},{"krate":0,"index":6174},{"krate":0,"index":6178},{"krate":0,"index":6181},{"krate":0,"index":6183},{"krate":0,"index":6185},{"krate":0,"index":6187},{"krate":0,"index":6189},{"krate":0,"index":6191},{"krate":0,"index":6194},{"krate":0,"index":6198},{"krate":0,"index":6201},{"krate":0,"index":6204},{"krate":0,"index":6207},{"krate":0,"index":6210},{"krate":0,"index":6211},{"krate":0,"index":6214},{"krate":0,"index":6216},{"krate":0,"index":6219},{"krate":0,"index":6281},{"krate":0,"index":6285},{"krate":0,"index":6227},{"krate":0,"index":6231},{"krate":0,"index":6234},{"krate":0,"index":6238},{"krate":0,"index":6241},{"krate":0,"index":6243},{"krate":0,"index":6245},{"krate":0,"index":6247},{"krate":0,"index":6249},{"krate":0,"index":6251},{"krate":0,"index":6254},{"krate":0,"index":6258},{"krate":0,"index":6261},{"krate":0,"index":6264},{"krate":0,"index":6267},{"krate":0,"index":6270},{"krate":0,"index":6271},{"krate":0,"index":6274},{"krate":0,"index":6276},{"krate":0,"index":6279},{"krate":0,"index":2335},{"krate":0,"index":6287},{"krate":0,"index":6297},{"krate":0,"index":6295},{"krate":0,"index":6292},{"krate":0,"index":6293},{"krate":0,"index":6289},{"krate":0,"index":6290},{"krate":0,"index":2337},{"krate":0,"index":2339},{"krate":0,"index":6299},{"krate":0,"index":6315},{"krate":0,"index":6314},{"krate":0,"index":6312},{"krate":0,"index":6309},{"krate":0,"index":6310},{"krate":0,"index":6305},{"krate":0,"index":6306},{"krate":0,"index":2340},{"krate":0,"index":2342},{"krate":0,"index":2344},{"krate":0,"index":2346},{"krate":0,"index":6317},{"krate":0,"index":6330},{"krate":0,"index":6329},{"krate":0,"index":6327},{"krate":0,"index":6324},{"krate":0,"index":6325},{"krate":0,"index":6320},{"krate":0,"index":6321},{"krate":0,"index":2347},{"krate":0,"index":2349},{"krate":0,"index":2351}],"decl_id":null,"docs":" Variable length octet sequences.","sig":null,"attributes":[{"value":"! Variable length octet sequences.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":489259,"byte_end":489295,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":489296,"byte_end":489299,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module provides the basic traits that allow defining types that are","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":489300,"byte_end":489376,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"! generic over a variable length sequence of octets. It implements these","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":489377,"byte_end":489451,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"! traits for most comonly used types of such sequences and provides a few","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":489452,"byte_end":489527,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"! additional types for use in a no-std environment. In addition, it provides","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":489528,"byte_end":489606,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"! a few types and traits that make it easier to access data contained in","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":489607,"byte_end":489681,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"! such sequences.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":489682,"byte_end":489701,"line_start":8,"line_end":8,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":489702,"byte_end":489705,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":489706,"byte_end":489709,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! # Traits for Octet Sequences","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":489710,"byte_end":489742,"line_start":11,"line_end":11,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":489743,"byte_end":489746,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! There are two fundamental types of octet sequences. If a sequence is of a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":489747,"byte_end":489824,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"! given size, we call it simply ‘octets.’ If the sequence is actually a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":489825,"byte_end":489902,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"! buffer into which octets can be placed, it is called an `octets builder.`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":489903,"byte_end":489980,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":489981,"byte_end":489984,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":489985,"byte_end":489988,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! ## Octets and Octets References","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":489989,"byte_end":490024,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":490025,"byte_end":490028,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! There is no special trait for octets, we simply use `AsRef<[u8]>` for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":490029,"byte_end":490102,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"! imutable octets or `AsMut<[u8]>` if the octets of the sequence can be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":490103,"byte_end":490176,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"! manipulated (but the length is still fixed). This way, any type","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":490177,"byte_end":490244,"line_start":22,"line_end":22,"column_start":1,"column_end":68}},{"value":"! implementing these traits can be used already. The trait [`OctetsExt`]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":490245,"byte_end":490319,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"! has been defined to collect additional methods that aren’t available via","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":490320,"byte_end":490398,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"! plain `AsRef<[u8]>`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":490399,"byte_end":490423,"line_start":25,"line_end":25,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":490424,"byte_end":490427,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! A reference to an octets type implements [`OctetsRef`]. The main purpose","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":490428,"byte_end":490504,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"! of this trait is to allow cheaply taking a sub-sequence, called a ‘range’,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":490505,"byte_end":490587,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"! out of the octets. For most types, ranges will be octet slices `&[u8]` but","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":490588,"byte_end":490666,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"! some shareable types (most notably `bytes::Bytes`) allow ranges to be ","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":490667,"byte_end":490741,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"! owned values, thus avoiding the lifetime limitations a slice would","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":490742,"byte_end":490812,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"! bring. ","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":490813,"byte_end":490824,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":490825,"byte_end":490828,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"! One type is special in that it is its own octets reference: `&[u8]`,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":490829,"byte_end":490901,"line_start":34,"line_end":34,"column_start":1,"column_end":73}},{"value":"! referred to as an octets slice in the documentation. This means that you","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":490902,"byte_end":490978,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"! always use an octets slice irregardless whether a type is generic over","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":490979,"byte_end":491053,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"! an octets sequence or an octets reference. Because an octets slice is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":491054,"byte_end":491127,"line_start":37,"line_end":37,"column_start":1,"column_end":74}},{"value":"! also a useful basis when only looking at some value without planning on","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":491128,"byte_end":491203,"line_start":38,"line_end":38,"column_start":1,"column_end":76}},{"value":"! keeping any ranges from it, most generic types provide a method","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":491204,"byte_end":491271,"line_start":39,"line_end":39,"column_start":1,"column_end":68}},{"value":"! `for_slice` that converts the value from whatever octets type it is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":491272,"byte_end":491343,"line_start":40,"line_end":40,"column_start":1,"column_end":72}},{"value":"! currently generic over into an identical value atop a octets slice of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":491344,"byte_end":491417,"line_start":41,"line_end":41,"column_start":1,"column_end":74}},{"value":"! that sequence.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":491418,"byte_end":491436,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":491437,"byte_end":491440,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! The trait is separate because of limitations of lifetimes in traits. It","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":491441,"byte_end":491516,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"! has an associated type `OctetsRef::Range` that defines the type of a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":491517,"byte_end":491589,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"! range. When using the trait as a trait bound for a generic type, you will","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":491590,"byte_end":491667,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"! typically bound a reference to this type. For instance, a generic function","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":491668,"byte_end":491746,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"! taking part out of some octets and returning a reference to it could be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":491747,"byte_end":491822,"line_start":48,"line_end":48,"column_start":1,"column_end":76}},{"value":"! defined like so:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":491823,"byte_end":491843,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":491844,"byte_end":491847,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":491848,"byte_end":491855,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"! # use domain::base::octets::OctetsRef;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":491856,"byte_end":491898,"line_start":52,"line_end":52,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":491899,"byte_end":491902,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"! fn take_part<'a, Octets>(","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":491903,"byte_end":491932,"line_start":54,"line_end":54,"column_start":1,"column_end":30}},{"value":"!     src: &'a Octets","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":491933,"byte_end":491956,"line_start":55,"line_end":55,"column_start":1,"column_end":24}},{"value":"! ) -> <&'a Octets as OctetsRef>::Range","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":491957,"byte_end":491998,"line_start":56,"line_end":56,"column_start":1,"column_end":42}},{"value":"! where &'a Octets: OctetsRef {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":491999,"byte_end":492032,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"!     unimplemented!()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":492033,"byte_end":492057,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"! }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":492058,"byte_end":492063,"line_start":59,"line_end":59,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":492064,"byte_end":492071,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"! ","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":492072,"byte_end":492076,"line_start":61,"line_end":61,"column_start":1,"column_end":5}},{"value":"! The where clause demands that whatever octets type is being used, a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":492077,"byte_end":492148,"line_start":62,"line_end":62,"column_start":1,"column_end":72}},{"value":"! reference to it must be an octets ref. The return value refers to the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":492149,"byte_end":492222,"line_start":63,"line_end":63,"column_start":1,"column_end":74}},{"value":"! range type defined for this octets ref. The lifetime argument is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":492223,"byte_end":492291,"line_start":64,"line_end":64,"column_start":1,"column_end":69}},{"value":"! necessary to tie all these references together.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":492292,"byte_end":492343,"line_start":65,"line_end":65,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":492344,"byte_end":492347,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":492348,"byte_end":492351,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"! ## Octets Builders","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":492352,"byte_end":492374,"line_start":68,"line_end":68,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":492375,"byte_end":492378,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! Octets builders and their [`OctetsBuilder`] trait are comparatively","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":492379,"byte_end":492450,"line_start":70,"line_end":70,"column_start":1,"column_end":72}},{"value":"! straightforward. They represent a buffer to which octets can be appended.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":492451,"byte_end":492528,"line_start":71,"line_end":71,"column_start":1,"column_end":78}},{"value":"! Whether the buffer can grow to accommodate appended data depends on the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":492529,"byte_end":492604,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"! underlying type. Because it may not, all such operations may fail with a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":492605,"byte_end":492681,"line_start":73,"line_end":73,"column_start":1,"column_end":77}},{"value":"! [`ShortBuf`] error.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":492682,"byte_end":492705,"line_start":74,"line_end":74,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":492706,"byte_end":492709,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! The [`EmptyBuilder`] trait marks a type as being able to create a new,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":492710,"byte_end":492784,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"! empty builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":492785,"byte_end":492803,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":492804,"byte_end":492807,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":492808,"byte_end":492811,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"! ## Conversion Traits","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":492812,"byte_end":492836,"line_start":80,"line_end":80,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":492837,"byte_end":492840,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"! A series of special traits allows converting octets into octets builder","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":492841,"byte_end":492916,"line_start":82,"line_end":82,"column_start":1,"column_end":76}},{"value":"! and vice versa. They pair octets with their natural builders via","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":492917,"byte_end":492985,"line_start":83,"line_end":83,"column_start":1,"column_end":69}},{"value":"! associated types. These conversions are always cyclic, i.e., if an","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":492986,"byte_end":493056,"line_start":84,"line_end":84,"column_start":1,"column_end":71}},{"value":"! octets value is converted into a builder and then that builder is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":493057,"byte_end":493126,"line_start":85,"line_end":85,"column_start":1,"column_end":70}},{"value":"! converted back into an octets value, the initial and final octets value","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":493127,"byte_end":493202,"line_start":86,"line_end":86,"column_start":1,"column_end":76}},{"value":"! have the same type.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":493203,"byte_end":493226,"line_start":87,"line_end":87,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":493227,"byte_end":493230,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":493231,"byte_end":493234,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"! ## Using Trait Bounds","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":493235,"byte_end":493260,"line_start":90,"line_end":90,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":493261,"byte_end":493264,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"! When using these traits as bounds for generic types, always limit yourself","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":493265,"byte_end":493343,"line_start":92,"line_end":92,"column_start":1,"column_end":79}},{"value":"! to the most loose bounds you can get away with. Not all types holding","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":493344,"byte_end":493417,"line_start":93,"line_end":93,"column_start":1,"column_end":74}},{"value":"! octet sequences can actually implement all these traits, so by being to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":493418,"byte_end":493493,"line_start":94,"line_end":94,"column_start":1,"column_end":76}},{"value":"! eager you may paint yourself into a corner.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":493494,"byte_end":493541,"line_start":95,"line_end":95,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":493542,"byte_end":493545,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"! In many cases you can get away with a simple `AsRef<[u8]>` bound. Only use","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":493546,"byte_end":493624,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"! an explicit `OctetsRef` bound when you need to return a range that may be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":493625,"byte_end":493702,"line_start":98,"line_end":98,"column_start":1,"column_end":78}},{"value":"! kept around.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":493703,"byte_end":493719,"line_start":99,"line_end":99,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":493720,"byte_end":493723,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":493724,"byte_end":493727,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"! # Composing and Parsing","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":493728,"byte_end":493755,"line_start":102,"line_end":102,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":493756,"byte_end":493759,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"! Octet sequences are often used to encode data, such as with the DNS wire","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":493760,"byte_end":493836,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"! format. We call the process of converting data into its octet sequence","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":493837,"byte_end":493911,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"! encoding ‘composing’ and the reverse process of reading data out of its","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":493912,"byte_end":493991,"line_start":106,"line_end":106,"column_start":1,"column_end":76}},{"value":"! encoded form ‘parsing.’ In order to make implementing these functions","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":493992,"byte_end":494069,"line_start":107,"line_end":107,"column_start":1,"column_end":74}},{"value":"! easier, the module contains a traits for types that can be composed or","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":494070,"byte_end":494144,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"! parsed as well as helper types for parsing.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":494145,"byte_end":494192,"line_start":109,"line_end":109,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":494193,"byte_end":494196,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"! ## Composing","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":494197,"byte_end":494213,"line_start":111,"line_end":111,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":494214,"byte_end":494217,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"! Composing encoded data always happens directly into an octets builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":494218,"byte_end":494292,"line_start":113,"line_end":113,"column_start":1,"column_end":75}},{"value":"! Any type that can be encoded as DNS wire data implements the [`Compose`]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":494293,"byte_end":494369,"line_start":114,"line_end":114,"column_start":1,"column_end":77}},{"value":"! trait through which its values can be appened to the builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":494370,"byte_end":494435,"line_start":115,"line_end":115,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":494436,"byte_end":494439,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"! ## Parsing","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":494440,"byte_end":494454,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":494455,"byte_end":494458,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"! Parsing is a little more complicated since encoded data may very well be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":494459,"byte_end":494535,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"! broken or ambiguously encoded. The helper type [`Parser`] wraps an octets","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":494536,"byte_end":494613,"line_start":120,"line_end":120,"column_start":1,"column_end":78}},{"value":"! ref and allows to parse values from the octets. The trait [`Parse`] is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":494614,"byte_end":494688,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"! implemented by types that can decode values from octets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":494689,"byte_end":494749,"line_start":122,"line_end":122,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":494750,"byte_end":494753,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":494754,"byte_end":494757,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"! # Octet Sequences for `no_std` Use","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":494758,"byte_end":494796,"line_start":125,"line_end":125,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":494797,"byte_end":494800,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"! When using the crate without an allocator, creating octets sequences can","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":494801,"byte_end":494877,"line_start":127,"line_end":127,"column_start":1,"column_end":77}},{"value":"! be difficult. However, since DNS data is often limited in size, you can in","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":494878,"byte_end":494956,"line_start":128,"line_end":128,"column_start":1,"column_end":79}},{"value":"! many cases get away with using a octets array as the basis for an octets","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":494957,"byte_end":495033,"line_start":129,"line_end":129,"column_start":1,"column_end":77}},{"value":"! sequence. The crate provides a macro [`octets_array!`] to define such a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":495034,"byte_end":495109,"line_start":130,"line_end":130,"column_start":1,"column_end":76}},{"value":"! type for specific array length. The octets module also contains a number","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":495110,"byte_end":495186,"line_start":131,"line_end":131,"column_start":1,"column_end":77}},{"value":"! of types defined via that module for typical array sizes.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":495187,"byte_end":495248,"line_start":132,"line_end":132,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":495249,"byte_end":495252,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":495253,"byte_end":495256,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"! [`Compose`]: trait.Compose.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":495257,"byte_end":495292,"line_start":135,"line_end":135,"column_start":1,"column_end":36}},{"value":"! [`EmptyBuilder`]: trait.EmptyBuilder.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":495293,"byte_end":495338,"line_start":136,"line_end":136,"column_start":1,"column_end":46}},{"value":"! [`Octets`]: trait.Octets.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":495339,"byte_end":495372,"line_start":137,"line_end":137,"column_start":1,"column_end":34}},{"value":"! [`OctetsExt`]: trait.OctetsExt.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":495373,"byte_end":495412,"line_start":138,"line_end":138,"column_start":1,"column_end":40}},{"value":"! [`OctetsBuilder`]: trait.OctetsBuilder.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":495413,"byte_end":495460,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"! [`OctetsRef`]: trait.OctetsRef.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":495461,"byte_end":495500,"line_start":140,"line_end":140,"column_start":1,"column_end":40}},{"value":"! [`Parse`]: trait.Parse.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":495501,"byte_end":495532,"line_start":141,"line_end":141,"column_start":1,"column_end":32}},{"value":"! [`Parser`]: struct.Parser.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":495533,"byte_end":495567,"line_start":142,"line_end":142,"column_start":1,"column_end":35}},{"value":"! [`ShortBuf`]: struct.ShortBuf.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":495568,"byte_end":495606,"line_start":143,"line_end":143,"column_start":1,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":2088},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":496370,"byte_end":496379,"line_start":165,"line_end":165,"column_start":11,"column_end":20},"name":"OctetsExt","qualname":"::base::octets::OctetsExt","value":"OctetsExt: AsRef<[u8]>","parent":null,"children":[{"krate":0,"index":2089}],"decl_id":null,"docs":" An extension trait for octet sequences.","sig":null,"attributes":[{"value":"/ An extension trait for octet sequences.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":496125,"byte_end":496168,"line_start":160,"line_end":160,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":496169,"byte_end":496172,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ This trait collects some additional functionality that is not available","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":496173,"byte_end":496248,"line_start":162,"line_end":162,"column_start":1,"column_end":76}},{"value":"/ via the more general `AsRef<[u8]>`. Currently, that is only truncating","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":496249,"byte_end":496323,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"/ the sequence to a given length.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":496324,"byte_end":496359,"line_start":164,"line_end":164,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2089},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":496534,"byte_end":496542,"line_start":169,"line_end":169,"column_start":8,"column_end":16},"name":"truncate","qualname":"::base::octets::OctetsExt::truncate","value":"fn (&mut self, len: usize) -> ()","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":" Truncate the sequence to `len` octets.","sig":null,"attributes":[{"value":"/ Truncate the sequence to `len` octets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":496399,"byte_end":496441,"line_start":166,"line_end":166,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":496446,"byte_end":496449,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ If `len` is larger than the length of the sequence, nothing happens.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":496454,"byte_end":496526,"line_start":168,"line_end":168,"column_start":5,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":2103},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":498899,"byte_end":498908,"line_start":240,"line_end":240,"column_start":11,"column_end":20},"name":"OctetsRef","qualname":"::base::octets::OctetsRef","value":"OctetsRef: AsRef<[u8]> + Copy + Sized","parent":null,"children":[{"krate":0,"index":2104},{"krate":0,"index":2105},{"krate":0,"index":2106},{"krate":0,"index":2107},{"krate":0,"index":2108}],"decl_id":null,"docs":" A reference to an octets sequence.","sig":null,"attributes":[{"value":"/ A reference to an octets sequence.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":497529,"byte_end":497567,"line_start":216,"line_end":216,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":497568,"byte_end":497571,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ This trait is to be implemented for a (imutable) reference to a type of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":497572,"byte_end":497647,"line_start":218,"line_end":218,"column_start":1,"column_end":76}},{"value":"/ an octets sequence. I.e., it `T` is an octets sequence, `OctetsRef` needs","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":497648,"byte_end":497725,"line_start":219,"line_end":219,"column_start":1,"column_end":78}},{"value":"/ to be implemented for `&T`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":497726,"byte_end":497757,"line_start":220,"line_end":220,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":497758,"byte_end":497761,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ The primary purpose of the trait is to allow access to a sub-sequence,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":497762,"byte_end":497836,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ called a ‘range.’ The type of this range is given via the `Range`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":497837,"byte_end":497910,"line_start":223,"line_end":223,"column_start":1,"column_end":70}},{"value":"/ associated type. For most types it will be a `&[u8]` with a lifetime equal","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":497911,"byte_end":497989,"line_start":224,"line_end":224,"column_start":1,"column_end":79}},{"value":"/ to that of the reference itself. Only if an owned range can be created","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":497990,"byte_end":498064,"line_start":225,"line_end":225,"column_start":1,"column_end":75}},{"value":"/ cheaply, it should be that type.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":498065,"byte_end":498101,"line_start":226,"line_end":226,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":498102,"byte_end":498105,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ There is two basic ways of using the trait for a trait bound. You can","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":498106,"byte_end":498179,"line_start":228,"line_end":228,"column_start":1,"column_end":74}},{"value":"/ either limit the octets sequence type itself by bounding references to it","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":498180,"byte_end":498257,"line_start":229,"line_end":229,"column_start":1,"column_end":78}},{"value":"/ via a where clause. I.e., for an  octets sequence type argument `Octets`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":498258,"byte_end":498334,"line_start":230,"line_end":230,"column_start":1,"column_end":77}},{"value":"/ you can specify `where &'a Octets: OctetsRef` or, if you don’t have a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":498335,"byte_end":498410,"line_start":231,"line_end":231,"column_start":1,"column_end":74}},{"value":"/ lifetime argument available `where for<'a> &'a Octets: OctetsRef`. For","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":498411,"byte_end":498485,"line_start":232,"line_end":232,"column_start":1,"column_end":75}},{"value":"/ this option, you’d typically refer to values as references to the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":498486,"byte_end":498557,"line_start":233,"line_end":233,"column_start":1,"column_end":70}},{"value":"/ octets type, i.e., `&Octets`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":498558,"byte_end":498591,"line_start":234,"line_end":234,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":498592,"byte_end":498595,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ Alternatively, you can refer to the reference itself as a owned value.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":498596,"byte_end":498670,"line_start":236,"line_end":236,"column_start":1,"column_end":75}},{"value":"/ This works out fine since all octets references are required to be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":498671,"byte_end":498741,"line_start":237,"line_end":237,"column_start":1,"column_end":71}},{"value":"/ `Copy`. For instance, a function can take a value of generic type `Oref`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":498742,"byte_end":498818,"line_start":238,"line_end":238,"column_start":1,"column_end":77}},{"value":"/ and that type can then be directly bounded via `Oref: OctetsRef`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":498819,"byte_end":498888,"line_start":239,"line_end":239,"column_start":1,"column_end":70}}]},{"kind":"Type","id":{"krate":0,"index":2104},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":498993,"byte_end":498998,"line_start":242,"line_end":242,"column_start":10,"column_end":15},"name":"Range","qualname":"::base::octets::OctetsRef::Range","value":"type Range: AsRef<[u8]>;","parent":{"krate":0,"index":2103},"children":[],"decl_id":null,"docs":" The type of a range of the sequence.\n","sig":null,"attributes":[{"value":"/ The type of a range of the sequence.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":498943,"byte_end":498983,"line_start":241,"line_end":241,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2105},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":499084,"byte_end":499089,"line_start":245,"line_end":245,"column_start":8,"column_end":13},"name":"range","qualname":"::base::octets::OctetsRef::range","value":"fn (self, start: usize, end: usize) -> Self::Range","parent":{"krate":0,"index":2103},"children":[],"decl_id":null,"docs":" Returns a sub-sequence or ‘range’ of the sequence.\n","sig":null,"attributes":[{"value":"/ Returns a sub-sequence or ‘range’ of the sequence.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":499018,"byte_end":499076,"line_start":244,"line_end":244,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2106},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":499218,"byte_end":499228,"line_start":248,"line_end":248,"column_start":8,"column_end":18},"name":"range_from","qualname":"::base::octets::OctetsRef::range_from","value":"fn (self, start: usize) -> Self::Range","parent":{"krate":0,"index":2103},"children":[],"decl_id":null,"docs":" Returns a range starting at index `start` and going to the end.\n","sig":null,"attributes":[{"value":"/ Returns a range starting at index `start` and going to the end.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":499143,"byte_end":499210,"line_start":247,"line_end":247,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2107},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":499389,"byte_end":499397,"line_start":253,"line_end":253,"column_start":8,"column_end":16},"name":"range_to","qualname":"::base::octets::OctetsRef::range_to","value":"fn (self, end: usize) -> Self::Range","parent":{"krate":0,"index":2103},"children":[],"decl_id":null,"docs":" Returns a range from the start to before index `end`.\n","sig":null,"attributes":[{"value":"/ Returns a range from the start to before index `end`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":499324,"byte_end":499381,"line_start":252,"line_end":252,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2108},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":499531,"byte_end":499540,"line_start":258,"line_end":258,"column_start":8,"column_end":17},"name":"range_all","qualname":"::base::octets::OctetsRef::range_all","value":"fn (self) -> Self::Range","parent":{"krate":0,"index":2103},"children":[],"decl_id":null,"docs":" Returns a range that covers the entire sequence.\n","sig":null,"attributes":[{"value":"/ Returns a range that covers the entire sequence.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":499471,"byte_end":499523,"line_start":257,"line_end":257,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":2136},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":501274,"byte_end":501287,"line_start":327,"line_end":327,"column_start":11,"column_end":24},"name":"OctetsBuilder","qualname":"::base::octets::OctetsBuilder","value":"OctetsBuilder: AsRef<[u8]> + AsMut<[u8]> + Sized","parent":null,"children":[{"krate":0,"index":2137},{"krate":0,"index":2138},{"krate":0,"index":2139},{"krate":0,"index":2140},{"krate":0,"index":2141},{"krate":0,"index":2143},{"krate":0,"index":2146}],"decl_id":null,"docs":" A buffer to construct an octet sequence.","sig":null,"attributes":[{"value":"/ A buffer to construct an octet sequence.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":500841,"byte_end":500885,"line_start":318,"line_end":318,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":500886,"byte_end":500889,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ Octet builders represent a buffer of space available for building an","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":500890,"byte_end":500962,"line_start":320,"line_end":320,"column_start":1,"column_end":73}},{"value":"/ octets sequence by appending the contents of octet slices. The buffers","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":500963,"byte_end":501037,"line_start":321,"line_end":321,"column_start":1,"column_end":75}},{"value":"/ may consist of a predefined amount of space or grow as needed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":501038,"byte_end":501104,"line_start":322,"line_end":322,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":501105,"byte_end":501108,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ Octet builders provide access to the already assembled data through","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":501109,"byte_end":501180,"line_start":324,"line_end":324,"column_start":1,"column_end":72}},{"value":"/ octet slices via their implementations of `AsRef<[u8]>` and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":501181,"byte_end":501244,"line_start":325,"line_end":325,"column_start":1,"column_end":64}},{"value":"/ `AsMut<[u8]>`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":501245,"byte_end":501263,"line_start":326,"line_end":326,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":2137},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":501523,"byte_end":501535,"line_start":332,"line_end":332,"column_start":8,"column_end":20},"name":"append_slice","qualname":"::base::octets::OctetsBuilder::append_slice","value":"fn (&mut self, slice: &[u8]) -> Result<(), ShortBuf>","parent":{"krate":0,"index":2136},"children":[],"decl_id":null,"docs":" Appends the content of a slice to the builder.","sig":null,"attributes":[{"value":"/ Appends the content of a slice to the builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":501329,"byte_end":501379,"line_start":328,"line_end":328,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":501384,"byte_end":501387,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ If there isn’t enough space available for appending the slice,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":501392,"byte_end":501460,"line_start":330,"line_end":330,"column_start":5,"column_end":71}},{"value":"/ returns an error and leaves the builder alone.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":501465,"byte_end":501515,"line_start":331,"line_end":331,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2138},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":501658,"byte_end":501666,"line_start":335,"line_end":335,"column_start":8,"column_end":16},"name":"truncate","qualname":"::base::octets::OctetsBuilder::truncate","value":"fn (&mut self, len: usize) -> ()","parent":{"krate":0,"index":2136},"children":[],"decl_id":null,"docs":" Truncates the builder back to a length of `len` octets.\n","sig":null,"attributes":[{"value":"/ Truncates the builder back to a length of `len` octets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":501591,"byte_end":501650,"line_start":334,"line_end":334,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2139},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":501842,"byte_end":501845,"line_start":340,"line_end":340,"column_start":8,"column_end":11},"name":"len","qualname":"::base::octets::OctetsBuilder::len","value":"fn (&self) -> usize","parent":{"krate":0,"index":2136},"children":[],"decl_id":null,"docs":" Returns the length of the already assembled data.","sig":null,"attributes":[{"value":"/ Returns the length of the already assembled data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":501696,"byte_end":501749,"line_start":337,"line_end":337,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":501754,"byte_end":501757,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ This is a convenience method and identical to `self.as_ref().len()`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":501762,"byte_end":501834,"line_start":339,"line_end":339,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2140},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":502060,"byte_end":502068,"line_start":348,"line_end":348,"column_start":8,"column_end":16},"name":"is_empty","qualname":"::base::octets::OctetsBuilder::is_empty","value":"fn (&self) -> bool","parent":{"krate":0,"index":2136},"children":[],"decl_id":null,"docs":" Returns whether the builder is currently empty.","sig":null,"attributes":[{"value":"/ Returns whether the builder is currently empty.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":501903,"byte_end":501954,"line_start":344,"line_end":344,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":501959,"byte_end":501962,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This is a convenience method and identical to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":501967,"byte_end":502016,"line_start":346,"line_end":346,"column_start":5,"column_end":54}},{"value":"/ `self.as_ref().is_empty()`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":502021,"byte_end":502052,"line_start":347,"line_end":347,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2141},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":502658,"byte_end":502668,"line_start":362,"line_end":362,"column_start":8,"column_end":18},"name":"append_all","qualname":"::base::octets::OctetsBuilder::append_all","value":"fn <F> (&mut self, op: F) -> Result<(), ShortBuf>","parent":{"krate":0,"index":2136},"children":[],"decl_id":null,"docs":" Appends all data or nothing.","sig":null,"attributes":[{"value":"/ Appends all data or nothing.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":502130,"byte_end":502162,"line_start":352,"line_end":352,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":502167,"byte_end":502170,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ The method executes the provided closure that presumably will try to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":502175,"byte_end":502247,"line_start":354,"line_end":354,"column_start":5,"column_end":77}},{"value":"/ append data to the builder and propagates an error from the builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":502252,"byte_end":502324,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ If the closure returns with an error, the builder is truncated back","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":502329,"byte_end":502400,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/ to the length from before the closure was executed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":502405,"byte_end":502460,"line_start":357,"line_end":357,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":502465,"byte_end":502468,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ Note that upon an error the builder is _only_ truncated. If the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":502473,"byte_end":502540,"line_start":359,"line_end":359,"column_start":5,"column_end":72}},{"value":"/ closure modified any already present data via `AsMut<[u8]>`, these","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":502545,"byte_end":502615,"line_start":360,"line_end":360,"column_start":5,"column_end":75}},{"value":"/ modification will survive.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":502620,"byte_end":502650,"line_start":361,"line_end":361,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2143},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":503689,"byte_end":503712,"line_start":386,"line_end":386,"column_start":8,"column_end":31},"name":"append_compressed_dname","qualname":"::base::octets::OctetsBuilder::append_compressed_dname","value":"fn <N> (&mut self, name: &N) -> Result<(), ShortBuf>","parent":{"krate":0,"index":2136},"children":[],"decl_id":null,"docs":" Appends a domain name using name compression if supported.","sig":null,"attributes":[{"value":"/ Appends a domain name using name compression if supported.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":502980,"byte_end":503042,"line_start":374,"line_end":374,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":503047,"byte_end":503050,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ Domain name compression attempts to lower the size of a DNS message","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":503055,"byte_end":503126,"line_start":376,"line_end":376,"column_start":5,"column_end":76}},{"value":"/ by avoiding to include repeated domain name suffixes. Instead of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":503131,"byte_end":503199,"line_start":377,"line_end":377,"column_start":5,"column_end":73}},{"value":"/ adding the full suffix, a pointer to the location of the previous","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":503204,"byte_end":503273,"line_start":378,"line_end":378,"column_start":5,"column_end":74}},{"value":"/ occurence is added. Since that occurence may itself contain a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":503278,"byte_end":503343,"line_start":379,"line_end":379,"column_start":5,"column_end":70}},{"value":"/ compressed suffix, doing name compression isn’t cheap and therefore","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":503348,"byte_end":503421,"line_start":380,"line_end":380,"column_start":5,"column_end":76}},{"value":"/ optional. However, in order to be able to opt in, we need to know","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":503426,"byte_end":503495,"line_start":381,"line_end":381,"column_start":5,"column_end":74}},{"value":"/ if we are dealing with a domain name that ought to be compressed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":503500,"byte_end":503569,"line_start":382,"line_end":382,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":503574,"byte_end":503577,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ The trait provides a default implementation which simply appends the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":503582,"byte_end":503654,"line_start":384,"line_end":384,"column_start":5,"column_end":77}},{"value":"/ name uncompressed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":503659,"byte_end":503681,"line_start":385,"line_end":385,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2146},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":504631,"byte_end":504647,"line_start":412,"line_end":412,"column_start":8,"column_end":24},"name":"u16_len_prefixed","qualname":"::base::octets::OctetsBuilder::u16_len_prefixed","value":"fn <F> (&mut self, op: F) -> Result<(), ShortBuf>","parent":{"krate":0,"index":2136},"children":[],"decl_id":null,"docs":" Prepends some appended data with its length as a `u16`.","sig":null,"attributes":[{"value":"/ Prepends some appended data with its length as a `u16`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":504116,"byte_end":504175,"line_start":403,"line_end":403,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":504180,"byte_end":504183,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ The method will append the data being added via the closure `op` to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":504188,"byte_end":504259,"line_start":405,"line_end":405,"column_start":5,"column_end":76}},{"value":"/ the builder prepended with a 16 bit unsigned value of its length.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":504264,"byte_end":504333,"line_start":406,"line_end":406,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":504338,"byte_end":504341,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ The implementation will prepend a `0u16` before executing the closure","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":504346,"byte_end":504419,"line_start":408,"line_end":408,"column_start":5,"column_end":78}},{"value":"/ and update it to the number of octets added afterwards. If the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":504424,"byte_end":504490,"line_start":409,"line_end":409,"column_start":5,"column_end":71}},{"value":"/ closure adds more than 65535 octets or if any appending fails, the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":504495,"byte_end":504565,"line_start":410,"line_end":410,"column_start":5,"column_end":75}},{"value":"/ builder will be truncated to its previous length.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":504570,"byte_end":504623,"line_start":411,"line_end":411,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":2164},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":506662,"byte_end":506674,"line_start":489,"line_end":489,"column_start":11,"column_end":23},"name":"EmptyBuilder","qualname":"::base::octets::EmptyBuilder","value":"EmptyBuilder","parent":null,"children":[{"krate":0,"index":2165},{"krate":0,"index":2166}],"decl_id":null,"docs":" An octets builder that can be newly created empty.\n","sig":null,"attributes":[{"value":"/ An octets builder that can be newly created empty.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":506597,"byte_end":506651,"line_start":488,"line_end":488,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2165},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":506748,"byte_end":506753,"line_start":491,"line_end":491,"column_start":8,"column_end":13},"name":"empty","qualname":"::base::octets::EmptyBuilder::empty","value":"fn () -> Self","parent":{"krate":0,"index":2164},"children":[],"decl_id":null,"docs":" Creates a new empty octets builder with a default size.\n","sig":null,"attributes":[{"value":"/ Creates a new empty octets builder with a default size.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":506681,"byte_end":506740,"line_start":490,"line_end":490,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2166},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":507190,"byte_end":507203,"line_start":500,"line_end":500,"column_start":8,"column_end":21},"name":"with_capacity","qualname":"::base::octets::EmptyBuilder::with_capacity","value":"fn (capacity: usize) -> Self","parent":{"krate":0,"index":2164},"children":[],"decl_id":null,"docs":" Creates a new empty octets builder with a suggested initial size.","sig":null,"attributes":[{"value":"/ Creates a new empty octets builder with a suggested initial size.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":506770,"byte_end":506839,"line_start":493,"line_end":493,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":506844,"byte_end":506847,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ The builder may or may not use the size provided by `capacity` as the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":506852,"byte_end":506925,"line_start":495,"line_end":495,"column_start":5,"column_end":78}},{"value":"/ initial size of the buffer. It may very well be possibly that the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":506930,"byte_end":506999,"line_start":496,"line_end":496,"column_start":5,"column_end":74}},{"value":"/ builder is never able to grow to this capacity at all. Therefore,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":507004,"byte_end":507073,"line_start":497,"line_end":497,"column_start":5,"column_end":74}},{"value":"/ even if you create a builder for your data size via this function,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":507078,"byte_end":507148,"line_start":498,"line_end":498,"column_start":5,"column_end":75}},{"value":"/ appending may still fail.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":507153,"byte_end":507182,"line_start":499,"line_end":499,"column_start":5,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":2177},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":508035,"byte_end":508045,"line_start":540,"line_end":540,"column_start":11,"column_end":21},"name":"IntoOctets","qualname":"::base::octets::IntoOctets","value":"IntoOctets","parent":null,"children":[{"krate":0,"index":2178},{"krate":0,"index":2179}],"decl_id":null,"docs":" An octets builder that can be converted into octets.\n","sig":null,"attributes":[{"value":"/ An octets builder that can be converted into octets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":507968,"byte_end":508024,"line_start":539,"line_end":539,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":2178},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":508303,"byte_end":508309,"line_start":547,"line_end":547,"column_start":10,"column_end":16},"name":"Octets","qualname":"::base::octets::IntoOctets::Octets","value":"type Octets: AsRef<[u8]>;","parent":{"krate":0,"index":2177},"children":[],"decl_id":null,"docs":" The type of the octets the builder can be converted into.","sig":null,"attributes":[{"value":"/ The type of the octets the builder can be converted into.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":508052,"byte_end":508113,"line_start":541,"line_end":541,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":508118,"byte_end":508121,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ If `Octets` implements [`IntoBuilder`], the `Builder` associated","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":508126,"byte_end":508194,"line_start":543,"line_end":543,"column_start":5,"column_end":73}},{"value":"/ type of that trait must be `Self`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":508199,"byte_end":508237,"line_start":544,"line_end":544,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":508242,"byte_end":508245,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ [`IntoBuilder`]: trait.IntoBuilder.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":508250,"byte_end":508293,"line_start":546,"line_end":546,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2179},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":508378,"byte_end":508389,"line_start":550,"line_end":550,"column_start":8,"column_end":19},"name":"into_octets","qualname":"::base::octets::IntoOctets::into_octets","value":"fn (self) -> Self::Octets","parent":{"krate":0,"index":2177},"children":[],"decl_id":null,"docs":" Converts the builder into the octets.\n","sig":null,"attributes":[{"value":"/ Converts the builder into the octets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":508329,"byte_end":508370,"line_start":549,"line_end":549,"column_start":5,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":2190},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":509045,"byte_end":509056,"line_start":584,"line_end":584,"column_start":11,"column_end":22},"name":"IntoBuilder","qualname":"::base::octets::IntoBuilder","value":"IntoBuilder","parent":null,"children":[{"krate":0,"index":2191},{"krate":0,"index":2192}],"decl_id":null,"docs":" An octets type that can be converted into an octets builder.\n","sig":null,"attributes":[{"value":"/ An octets type that can be converted into an octets builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":508970,"byte_end":509034,"line_start":583,"line_end":583,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":2191},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":509320,"byte_end":509327,"line_start":591,"line_end":591,"column_start":10,"column_end":17},"name":"Builder","qualname":"::base::octets::IntoBuilder::Builder","value":"type Builder: OctetsBuilder;","parent":{"krate":0,"index":2190},"children":[],"decl_id":null,"docs":" The type of octets builder this octets type can be converted into.","sig":null,"attributes":[{"value":"/ The type of octets builder this octets type can be converted into.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":509063,"byte_end":509133,"line_start":585,"line_end":585,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":509138,"byte_end":509141,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ If `Builder` implements [`IntoOctets`], the `Octets` associated","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":509146,"byte_end":509213,"line_start":587,"line_end":587,"column_start":5,"column_end":72}},{"value":"/ type of that trait must be `Self`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":509218,"byte_end":509256,"line_start":588,"line_end":588,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":509261,"byte_end":509264,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ [`IntoOctets`]: trait.IntoOctets.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":509269,"byte_end":509310,"line_start":590,"line_end":590,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2192},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":509409,"byte_end":509421,"line_start":594,"line_end":594,"column_start":8,"column_end":20},"name":"into_builder","qualname":"::base::octets::IntoBuilder::into_builder","value":"fn (self) -> Self::Builder","parent":{"krate":0,"index":2190},"children":[],"decl_id":null,"docs":" Converts an octets value into an octets builder.\n","sig":null,"attributes":[{"value":"/ Converts an octets value into an octets builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":509349,"byte_end":509401,"line_start":593,"line_end":593,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":2211},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":510882,"byte_end":510893,"line_start":655,"line_end":655,"column_start":11,"column_end":22},"name":"FromBuilder","qualname":"::base::octets::FromBuilder","value":"FromBuilder: AsRef<[u8]> + Sized","parent":null,"children":[{"krate":0,"index":2212},{"krate":0,"index":2213}],"decl_id":null,"docs":" An octets type that can be created from an octets builder.","sig":null,"attributes":[{"value":"/ An octets type that can be created from an octets builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":510567,"byte_end":510629,"line_start":648,"line_end":648,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":510630,"byte_end":510633,"line_start":649,"line_end":649,"column_start":1,"column_end":4}},{"value":"/ This trait is a mirror of [`IntoOctets`] and only exists because otherwise","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":510634,"byte_end":510712,"line_start":650,"line_end":650,"column_start":1,"column_end":79}},{"value":"/ trait bounds become ridiculously complex. The implementations of the two","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":510713,"byte_end":510789,"line_start":651,"line_end":651,"column_start":1,"column_end":77}},{"value":"/ traits must behave identically.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":510790,"byte_end":510825,"line_start":652,"line_end":652,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":510826,"byte_end":510829,"line_start":653,"line_end":653,"column_start":1,"column_end":4}},{"value":"/ [`IntoOctets`]: trait.IntoOctets.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":510830,"byte_end":510871,"line_start":654,"line_end":654,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":2212},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":510992,"byte_end":510999,"line_start":657,"line_end":657,"column_start":10,"column_end":17},"name":"Builder","qualname":"::base::octets::FromBuilder::Builder","value":"type Builder: OctetsBuilder + IntoOctets<Octets = Self>;","parent":{"krate":0,"index":2211},"children":[],"decl_id":null,"docs":" The type of builder this octets type can be created from.\n","sig":null,"attributes":[{"value":"/ The type of builder this octets type can be created from.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":510921,"byte_end":510982,"line_start":656,"line_end":656,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2213},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":511108,"byte_end":511120,"line_start":660,"line_end":660,"column_start":8,"column_end":20},"name":"from_builder","qualname":"::base::octets::FromBuilder::from_builder","value":"fn (builder: Self::Builder) -> Self","parent":{"krate":0,"index":2211},"children":[],"decl_id":null,"docs":" Creates an octets value from an octets builder.\n","sig":null,"attributes":[{"value":"/ Creates an octets value from an octets builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":511049,"byte_end":511100,"line_start":659,"line_end":659,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":5794},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":512181,"byte_end":512187,"line_start":703,"line_end":703,"column_start":12,"column_end":18},"name":"Parser","qualname":"::base::octets::Parser","value":"Parser {  }","parent":null,"children":[{"krate":0,"index":5796},{"krate":0,"index":5797},{"krate":0,"index":5798}],"decl_id":null,"docs":" A parser for sequentially extracting data from an octets sequence. ","sig":null,"attributes":[{"value":"/ A parser for sequentially extracting data from an octets sequence. ","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":511821,"byte_end":511892,"line_start":695,"line_end":695,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":511893,"byte_end":511896,"line_start":696,"line_end":696,"column_start":1,"column_end":4}},{"value":"/ The parser wraps an [octets reference] and remembers the read position on","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":511897,"byte_end":511974,"line_start":697,"line_end":697,"column_start":1,"column_end":78}},{"value":"/ the referenced sequence. Methods allow reading out data and progressing","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":511975,"byte_end":512050,"line_start":698,"line_end":698,"column_start":1,"column_end":76}},{"value":"/ the position beyond processed data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":512051,"byte_end":512090,"line_start":699,"line_end":699,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":512091,"byte_end":512094,"line_start":700,"line_end":700,"column_start":1,"column_end":4}},{"value":"/ [octets reference]: trait.OctetsRef.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":512095,"byte_end":512139,"line_start":701,"line_end":701,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2226},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":512688,"byte_end":512696,"line_start":720,"line_end":720,"column_start":12,"column_end":20},"name":"from_ref","qualname":"<Parser<Ref>>::from_ref","value":"fn (octets: Ref) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new parser atop a reference to an octet sequence.\n","sig":null,"attributes":[{"value":"/ Creates a new parser atop a reference to an octet sequence.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":512613,"byte_end":512676,"line_start":719,"line_end":719,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2227},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":512900,"byte_end":512910,"line_start":726,"line_end":726,"column_start":12,"column_end":22},"name":"octets_ref","qualname":"<Parser<Ref>>::octets_ref","value":"fn (&self) -> Ref","parent":null,"children":[],"decl_id":null,"docs":" Returns the wrapped reference to the underlying octets sequence.\n","sig":null,"attributes":[{"value":"/ Returns the wrapped reference to the underlying octets sequence.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":512820,"byte_end":512888,"line_start":725,"line_end":725,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2228},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":513057,"byte_end":513060,"line_start":732,"line_end":732,"column_start":12,"column_end":15},"name":"pos","qualname":"<Parser<Ref>>::pos","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current parse position as an index into the octets.\n","sig":null,"attributes":[{"value":"/ Returns the current parse position as an index into the octets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":512978,"byte_end":513045,"line_start":731,"line_end":731,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2229},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":513329,"byte_end":513332,"line_start":742,"line_end":742,"column_start":12,"column_end":15},"name":"len","qualname":"<Parser<Ref>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the underlying octet sequence.","sig":null,"attributes":[{"value":"/ Returns the length of the underlying octet sequence.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":513107,"byte_end":513163,"line_start":736,"line_end":736,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":513168,"byte_end":513171,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ This is _not_ the number of octets left for parsing. Use","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":513176,"byte_end":513236,"line_start":738,"line_end":738,"column_start":5,"column_end":65}},{"value":"/ [`remaining`] for that.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":513241,"byte_end":513268,"line_start":739,"line_end":739,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":513273,"byte_end":513276,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ [`remaining`]: #method.remaining","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":513281,"byte_end":513317,"line_start":741,"line_end":741,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2230},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":513538,"byte_end":513546,"line_start":749,"line_end":749,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Parser<Ref>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying octets sequence is empty.","sig":null,"attributes":[{"value":"/ Returns whether the underlying octets sequence is empty.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":513379,"byte_end":513439,"line_start":746,"line_end":746,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":513444,"byte_end":513447,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ This does _not_ return whether there are no more octets left to parse.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":513452,"byte_end":513526,"line_start":748,"line_end":748,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2232},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":513748,"byte_end":513759,"line_start":758,"line_end":758,"column_start":12,"column_end":23},"name":"from_static","qualname":"<Parser<&'static [u8]>>::from_static","value":"fn (slice: &'static [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new parser atop a static byte slice.","sig":null,"attributes":[{"value":"/ Creates a new parser atop a static byte slice.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":513628,"byte_end":513678,"line_start":755,"line_end":755,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":513683,"byte_end":513686,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ This function is most useful for testing.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":513691,"byte_end":513736,"line_start":757,"line_end":757,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2235},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":514100,"byte_end":514108,"line_start":770,"line_end":770,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Parser<Ref>>::as_slice","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns an octets slice of the underlying sequence.","sig":null,"attributes":[{"value":"/ Returns an octets slice of the underlying sequence.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":513872,"byte_end":513927,"line_start":764,"line_end":764,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":513932,"byte_end":513935,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ The slice covers the entire sequence, not just the remaining data. You","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":513940,"byte_end":514014,"line_start":766,"line_end":766,"column_start":5,"column_end":79}},{"value":"/ can use [`peek`] for that.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":514019,"byte_end":514049,"line_start":767,"line_end":767,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":514054,"byte_end":514057,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ [`peek`]: #method.peek","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":514062,"byte_end":514088,"line_start":769,"line_end":769,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2236},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":514337,"byte_end":514349,"line_start":777,"line_end":777,"column_start":12,"column_end":24},"name":"as_slice_mut","qualname":"<Parser<Ref>>::as_slice_mut","value":"fn (&mut self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable octets slice of the underlying sequence.","sig":null,"attributes":[{"value":"/ Returns a mutable octets slice of the underlying sequence.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":514180,"byte_end":514242,"line_start":774,"line_end":774,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":514247,"byte_end":514250,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ The slice covers the entire sequence, not just the remaining data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":514255,"byte_end":514325,"line_start":776,"line_end":776,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2237},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":514524,"byte_end":514533,"line_start":783,"line_end":783,"column_start":12,"column_end":21},"name":"remaining","qualname":"<Parser<Ref>>::remaining","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of remaining octets to parse.\n","sig":null,"attributes":[{"value":"/ Returns the number of remaining octets to parse.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":514460,"byte_end":514512,"line_start":782,"line_end":782,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2238},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":514719,"byte_end":514723,"line_start":790,"line_end":790,"column_start":12,"column_end":16},"name":"peek","qualname":"<Parser<Ref>>::peek","value":"fn (&self, len: usize) -> Result<&[u8], ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice for the next `len` octets.","sig":null,"attributes":[{"value":"/ Returns a slice for the next `len` octets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":514591,"byte_end":514637,"line_start":787,"line_end":787,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":514642,"byte_end":514645,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ If less than `len` octets are left, returns an error.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":514650,"byte_end":514707,"line_start":789,"line_end":789,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2239},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":514909,"byte_end":514917,"line_start":796,"line_end":796,"column_start":12,"column_end":20},"name":"peek_all","qualname":"<Parser<Ref>>::peek_all","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of the data left to parse.\n","sig":null,"attributes":[{"value":"/ Returns a slice of the data left to parse.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":514851,"byte_end":514897,"line_start":795,"line_end":795,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2240},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":515217,"byte_end":515221,"line_start":805,"line_end":805,"column_start":12,"column_end":16},"name":"seek","qualname":"<Parser<Ref>>::seek","value":"fn (&mut self, pos: usize) -> Result<(), ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Repositions the parser to the given index.","sig":null,"attributes":[{"value":"/ Repositions the parser to the given index.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":514989,"byte_end":515035,"line_start":800,"line_end":800,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":515040,"byte_end":515043,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ It is okay to reposition anywhere within the sequence. However,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":515048,"byte_end":515115,"line_start":802,"line_end":802,"column_start":5,"column_end":72}},{"value":"/ if `pos` is larger than the length of the sequence, an error is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":515120,"byte_end":515187,"line_start":803,"line_end":803,"column_start":5,"column_end":72}},{"value":"/ returned.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":515192,"byte_end":515205,"line_start":804,"line_end":804,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2241},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":515583,"byte_end":515590,"line_start":818,"line_end":818,"column_start":12,"column_end":19},"name":"advance","qualname":"<Parser<Ref>>::advance","value":"fn (&mut self, len: usize) -> Result<(), ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Advances the parser‘s position by `len` octets.","sig":null,"attributes":[{"value":"/ Advances the parser‘s position by `len` octets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":515434,"byte_end":515487,"line_start":815,"line_end":815,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":515492,"byte_end":515495,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ If this would take the parser beyond its end, an error is returned.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":515500,"byte_end":515571,"line_start":817,"line_end":817,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2242},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":515862,"byte_end":515876,"line_start":829,"line_end":829,"column_start":12,"column_end":26},"name":"advance_to_end","qualname":"<Parser<Ref>>::advance_to_end","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Advances to the end of the parser.\n","sig":null,"attributes":[{"value":"/ Advances to the end of the parser.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":515812,"byte_end":515850,"line_start":828,"line_end":828,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2243},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":516047,"byte_end":516056,"line_start":836,"line_end":836,"column_start":12,"column_end":21},"name":"check_len","qualname":"<Parser<Ref>>::check_len","value":"fn (&self, len: usize) -> Result<(), ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Checks that there are `len` octets left to parse.","sig":null,"attributes":[{"value":"/ Checks that there are `len` octets left to parse.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":515929,"byte_end":515982,"line_start":833,"line_end":833,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":515987,"byte_end":515990,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ If there aren’t, returns an error.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":515995,"byte_end":516035,"line_start":835,"line_end":835,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2246},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":516497,"byte_end":516509,"line_start":851,"line_end":851,"column_start":12,"column_end":24},"name":"parse_octets","qualname":"<Parser<Ref>>::parse_octets","value":"fn (&mut self, len: usize) -> Result<Ref::Range, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Takes and returns the next `len` octets.","sig":null,"attributes":[{"value":"/ Takes and returns the next `len` octets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":516284,"byte_end":516328,"line_start":847,"line_end":847,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":516333,"byte_end":516336,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ Advances the parser by `len` octets. If there aren’t enough octats","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":516341,"byte_end":516413,"line_start":849,"line_end":849,"column_start":5,"column_end":75}},{"value":"/ left, leaves the parser untouched and returns an error instead.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":516418,"byte_end":516485,"line_start":850,"line_end":850,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2247},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":517214,"byte_end":517223,"line_start":872,"line_end":872,"column_start":12,"column_end":21},"name":"parse_buf","qualname":"<Parser<Ref>>::parse_buf","value":"fn (&mut self, buf: &mut [u8]) -> Result<(), ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Fills the provided buffer by taking octets from the parser.","sig":null,"attributes":[{"value":"/ Fills the provided buffer by taking octets from the parser.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":516838,"byte_end":516901,"line_start":865,"line_end":865,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":516906,"byte_end":516909,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ Copies as many octets as the buffer is long from the parser into the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":516914,"byte_end":516986,"line_start":867,"line_end":867,"column_start":5,"column_end":77}},{"value":"/ buffer and advances the parser by that many octets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":516991,"byte_end":517046,"line_start":868,"line_end":868,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":517051,"byte_end":517054,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ If there aren’t enough octets left in the parser to fill the buffer","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":517059,"byte_end":517132,"line_start":870,"line_end":870,"column_start":5,"column_end":76}},{"value":"/ completely, returns an error and leaves the parser untouched.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":517137,"byte_end":517202,"line_start":871,"line_end":871,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2248},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":517651,"byte_end":517659,"line_start":883,"line_end":883,"column_start":12,"column_end":20},"name":"parse_i8","qualname":"<Parser<Ref>>::parse_i8","value":"fn (&mut self) -> Result<i8, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Takes an `i8` from the beginning of the parser.","sig":null,"attributes":[{"value":"/ Takes an `i8` from the beginning of the parser.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":517434,"byte_end":517485,"line_start":879,"line_end":879,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":517490,"byte_end":517493,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ Advances the parser by one octet. If there aren’t enough octets left,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":517498,"byte_end":517573,"line_start":881,"line_end":881,"column_start":5,"column_end":78}},{"value":"/ leaves the parser untouched and returns an error instead.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":517578,"byte_end":517639,"line_start":882,"line_end":882,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2249},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":518007,"byte_end":518015,"line_start":893,"line_end":893,"column_start":12,"column_end":20},"name":"parse_u8","qualname":"<Parser<Ref>>::parse_u8","value":"fn (&mut self) -> Result<u8, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Takes a `u8` from the beginning of the parser.","sig":null,"attributes":[{"value":"/ Takes a `u8` from the beginning of the parser.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":517791,"byte_end":517841,"line_start":889,"line_end":889,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":517846,"byte_end":517849,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ Advances the parser by one octet. If there aren’t enough octets left,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":517854,"byte_end":517929,"line_start":891,"line_end":891,"column_start":5,"column_end":78}},{"value":"/ leaves the parser untouched and returns an error instead.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":517934,"byte_end":517995,"line_start":892,"line_end":892,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2250},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":518475,"byte_end":518484,"line_start":905,"line_end":905,"column_start":12,"column_end":21},"name":"parse_i16","qualname":"<Parser<Ref>>::parse_i16","value":"fn (&mut self) -> Result<i16, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Takes an `i16` from the beginning of the parser.","sig":null,"attributes":[{"value":"/ Takes an `i16` from the beginning of the parser.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":518141,"byte_end":518193,"line_start":899,"line_end":899,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":518198,"byte_end":518201,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ The value is converted from network byte order into the system’s own","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":518206,"byte_end":518280,"line_start":901,"line_end":901,"column_start":5,"column_end":77}},{"value":"/ byte order if necessary. The parser is advanced by two octets. If","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":518285,"byte_end":518354,"line_start":902,"line_end":902,"column_start":5,"column_end":74}},{"value":"/ there aren’t enough octets left, leaves the parser untouched and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":518359,"byte_end":518429,"line_start":903,"line_end":903,"column_start":5,"column_end":73}},{"value":"/ returns an error instead.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":518434,"byte_end":518463,"line_start":904,"line_end":904,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2252},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":518971,"byte_end":518980,"line_start":917,"line_end":917,"column_start":12,"column_end":21},"name":"parse_u16","qualname":"<Parser<Ref>>::parse_u16","value":"fn (&mut self) -> Result<u16, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Takes a `u16` from the beginning of the parser.","sig":null,"attributes":[{"value":"/ Takes a `u16` from the beginning of the parser.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":518637,"byte_end":518688,"line_start":911,"line_end":911,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":518693,"byte_end":518696,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ The value is converted from network byte order into the system’s own","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":518701,"byte_end":518775,"line_start":913,"line_end":913,"column_start":5,"column_end":77}},{"value":"/ byte order if necessary. The parser is advanced by two ocetets. If","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":518780,"byte_end":518850,"line_start":914,"line_end":914,"column_start":5,"column_end":75}},{"value":"/ there aren’t enough octets left, leaves the parser untouched and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":518855,"byte_end":518925,"line_start":915,"line_end":915,"column_start":5,"column_end":73}},{"value":"/ returns an error instead.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":518930,"byte_end":518959,"line_start":916,"line_end":916,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2254},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":519468,"byte_end":519477,"line_start":929,"line_end":929,"column_start":12,"column_end":21},"name":"parse_i32","qualname":"<Parser<Ref>>::parse_i32","value":"fn (&mut self) -> Result<i32, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Takes an `i32` from the beginning of the parser.","sig":null,"attributes":[{"value":"/ Takes an `i32` from the beginning of the parser.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":519133,"byte_end":519185,"line_start":923,"line_end":923,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":519190,"byte_end":519193,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/ The value is converted from network byte order into the system’s own","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":519198,"byte_end":519272,"line_start":925,"line_end":925,"column_start":5,"column_end":77}},{"value":"/ byte order if necessary. The parser is advanced by four octets. If","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":519277,"byte_end":519347,"line_start":926,"line_end":926,"column_start":5,"column_end":75}},{"value":"/ there aren’t enough octets left, leaves the parser untouched and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":519352,"byte_end":519422,"line_start":927,"line_end":927,"column_start":5,"column_end":73}},{"value":"/ returns an error instead.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":519427,"byte_end":519456,"line_start":928,"line_end":928,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2256},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":519964,"byte_end":519973,"line_start":941,"line_end":941,"column_start":12,"column_end":21},"name":"parse_u32","qualname":"<Parser<Ref>>::parse_u32","value":"fn (&mut self) -> Result<u32, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Takes a `u32` from the beginning of the parser.","sig":null,"attributes":[{"value":"/ Takes a `u32` from the beginning of the parser.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":519630,"byte_end":519681,"line_start":935,"line_end":935,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":519686,"byte_end":519689,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ The value is converted from network byte order into the system’s own","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":519694,"byte_end":519768,"line_start":937,"line_end":937,"column_start":5,"column_end":77}},{"value":"/ byte order if necessary. The parser is advanced by four octets. If","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":519773,"byte_end":519843,"line_start":938,"line_end":938,"column_start":5,"column_end":75}},{"value":"/ there aren’t enough octets left, leaves the parser untouched and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":519848,"byte_end":519918,"line_start":939,"line_end":939,"column_start":5,"column_end":73}},{"value":"/ returns an error instead.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":519923,"byte_end":519952,"line_start":940,"line_end":940,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2258},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":520921,"byte_end":520932,"line_start":962,"line_end":962,"column_start":12,"column_end":23},"name":"parse_block","qualname":"<Parser<Ref>>::parse_block","value":"fn <F, U> (&mut self, limit: usize, op: F) -> Result<U, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Parses a given amount of octets through a closure.","sig":null,"attributes":[{"value":"/ Parses a given amount of octets through a closure.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":520126,"byte_end":520180,"line_start":947,"line_end":947,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":520185,"byte_end":520188,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ Parses a block of `limit` octets and moves the parser to the end of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":520193,"byte_end":520264,"line_start":949,"line_end":949,"column_start":5,"column_end":76}},{"value":"/ that block or, if less than `limit` octets are still available, to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":520269,"byte_end":520339,"line_start":950,"line_end":950,"column_start":5,"column_end":75}},{"value":"/ the end of the parser.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":520344,"byte_end":520370,"line_start":951,"line_end":951,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":520375,"byte_end":520378,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ The closure `op` will be allowed to parse up to `limit` octets. If it","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":520383,"byte_end":520456,"line_start":953,"line_end":953,"column_start":5,"column_end":78}},{"value":"/ does so successfully or returns with a form error, the method returns","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":520461,"byte_end":520534,"line_start":954,"line_end":954,"column_start":5,"column_end":78}},{"value":"/ its return value. If it returns with a short buffer error, the method","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":520539,"byte_end":520612,"line_start":955,"line_end":955,"column_start":5,"column_end":78}},{"value":"/ returns a form error. If it returns successfully with less than","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":520617,"byte_end":520684,"line_start":956,"line_end":956,"column_start":5,"column_end":72}},{"value":"/ `limit` octets parsed, returns a form error indicating trailing data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":520689,"byte_end":520762,"line_start":957,"line_end":957,"column_start":5,"column_end":78}},{"value":"/ If the limit is larger than the remaining number of octets, returns a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":520767,"byte_end":520840,"line_start":958,"line_end":958,"column_start":5,"column_end":78}},{"value":"/ `ParseError::ShortInput`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":520845,"byte_end":520874,"line_start":959,"line_end":959,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":520879,"byte_end":520882,"line_start":960,"line_end":960,"column_start":5,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":2261},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":522661,"byte_end":522666,"line_start":1015,"line_end":1015,"column_start":11,"column_end":16},"name":"Parse","qualname":"::base::octets::Parse","value":"Parse<Ref>: Sized","parent":null,"children":[{"krate":0,"index":2263},{"krate":0,"index":2264}],"decl_id":null,"docs":" A type that can extract a value from a parser.","sig":null,"attributes":[{"value":"/ A type that can extract a value from a parser.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":521763,"byte_end":521813,"line_start":994,"line_end":994,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":521814,"byte_end":521817,"line_start":995,"line_end":995,"column_start":1,"column_end":4}},{"value":"/ The trait is a companion to [`Parser<Ref>`]: it allows a type to use a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":521818,"byte_end":521892,"line_start":996,"line_end":996,"column_start":1,"column_end":75}},{"value":"/ parser to create a value of itself. Because types may be generic over","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":521893,"byte_end":521966,"line_start":997,"line_end":997,"column_start":1,"column_end":74}},{"value":"/ octets types, the trait is generic over the octets reference of the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":521967,"byte_end":522038,"line_start":998,"line_end":998,"column_start":1,"column_end":72}},{"value":"/ parser in question. Implementations should use minimal trait bounds","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":522039,"byte_end":522110,"line_start":999,"line_end":999,"column_start":1,"column_end":72}},{"value":"/ matching the parser methods they use. ","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":522111,"byte_end":522153,"line_start":1000,"line_end":1000,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":522154,"byte_end":522157,"line_start":1001,"line_end":1001,"column_start":1,"column_end":4}},{"value":"/ For types that are generic over an octets sequence, the reference type","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":522158,"byte_end":522232,"line_start":1002,"line_end":1002,"column_start":1,"column_end":75}},{"value":"/ should be tied to the type’s own type argument. This will avoid having","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":522233,"byte_end":522309,"line_start":1003,"line_end":1003,"column_start":1,"column_end":75}},{"value":"/ to provide type annotations when simply calling `Parse::parse` for the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":522310,"byte_end":522384,"line_start":1004,"line_end":1004,"column_start":1,"column_end":75}},{"value":"/ type. Typically this will happen via `OctetsRef::Range`. For instance,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":522385,"byte_end":522459,"line_start":1005,"line_end":1005,"column_start":1,"column_end":75}},{"value":"/ a type `Foo<Octets>` should provide:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":522460,"byte_end":522500,"line_start":1006,"line_end":1006,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":522501,"byte_end":522504,"line_start":1007,"line_end":1007,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":522505,"byte_end":522518,"line_start":1008,"line_end":1008,"column_start":1,"column_end":14}},{"value":"/ impl<Ref: OctetsRef> Parse<Ref> for Foo<Ref::Range> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":522519,"byte_end":522576,"line_start":1009,"line_end":1009,"column_start":1,"column_end":58}},{"value":"/     // etc.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":522577,"byte_end":522592,"line_start":1010,"line_end":1010,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":522593,"byte_end":522598,"line_start":1011,"line_end":1011,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":522599,"byte_end":522606,"line_start":1012,"line_end":1012,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":522607,"byte_end":522610,"line_start":1013,"line_end":1013,"column_start":1,"column_end":4}},{"value":"/ [`Parser<Ref>`]: struct.Parser.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":522611,"byte_end":522650,"line_start":1014,"line_end":1014,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2263},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":523043,"byte_end":523048,"line_start":1022,"line_end":1022,"column_start":8,"column_end":13},"name":"parse","qualname":"::base::octets::Parse::parse","value":"fn (parser: &mut Parser<Ref>) -> Result<Self, ParseError>","parent":{"krate":0,"index":2261},"children":[],"decl_id":null,"docs":" Extracts a value from the beginning of `parser`.","sig":null,"attributes":[{"value":"/ Extracts a value from the beginning of `parser`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":522685,"byte_end":522737,"line_start":1016,"line_end":1016,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":522742,"byte_end":522745,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/ If parsing fails and an error is returned, the parser’s position","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":522750,"byte_end":522820,"line_start":1018,"line_end":1018,"column_start":5,"column_end":73}},{"value":"/ should be considered to be undefined. If it is supposed to be reused","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":522825,"byte_end":522897,"line_start":1019,"line_end":1019,"column_start":5,"column_end":77}},{"value":"/ in this case, you should store the position before attempting to parse","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":522902,"byte_end":522976,"line_start":1020,"line_end":1020,"column_start":5,"column_end":79}},{"value":"/ and seek to that position again before continuing.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":522981,"byte_end":523035,"line_start":1021,"line_end":1021,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2264},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":523392,"byte_end":523396,"line_start":1029,"line_end":1029,"column_start":8,"column_end":12},"name":"skip","qualname":"::base::octets::Parse::skip","value":"fn (parser: &mut Parser<Ref>) -> Result<(), ParseError>","parent":{"krate":0,"index":2261},"children":[],"decl_id":null,"docs":" Skips over a value of this type at the beginning of `parser`.","sig":null,"attributes":[{"value":"/ Skips over a value of this type at the beginning of `parser`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":523109,"byte_end":523174,"line_start":1024,"line_end":1024,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":523179,"byte_end":523182,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ This function is the same as `parse` but doesn’t return the result.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":523187,"byte_end":523260,"line_start":1026,"line_end":1026,"column_start":5,"column_end":76}},{"value":"/ It can be used to check if the content of `parser` is correct or to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":523265,"byte_end":523336,"line_start":1027,"line_end":1027,"column_start":5,"column_end":76}},{"value":"/ skip over unneeded parts of the parser.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":523341,"byte_end":523384,"line_start":1028,"line_end":1028,"column_start":5,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":2298},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":526874,"byte_end":526881,"line_start":1140,"line_end":1140,"column_start":11,"column_end":18},"name":"Compose","qualname":"::base::octets::Compose","value":"Compose","parent":null,"children":[{"krate":0,"index":2299},{"krate":0,"index":2301}],"decl_id":null,"docs":" A type that knows how to compose itself into an octets builder.","sig":null,"attributes":[{"value":"/ A type that knows how to compose itself into an octets builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":526020,"byte_end":526087,"line_start":1124,"line_end":1124,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":526088,"byte_end":526091,"line_start":1125,"line_end":1125,"column_start":1,"column_end":4}},{"value":"/ The term ‘composing’ refers to the process of creating a DNS wire-format","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":526092,"byte_end":526172,"line_start":1126,"line_end":1126,"column_start":1,"column_end":77}},{"value":"/ representation of a value’s data by appending this representation to the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":526173,"byte_end":526251,"line_start":1127,"line_end":1127,"column_start":1,"column_end":77}},{"value":"/ end of an [octets builder].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":526252,"byte_end":526283,"line_start":1128,"line_end":1128,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":526284,"byte_end":526287,"line_start":1129,"line_end":1129,"column_start":1,"column_end":4}},{"value":"/ The trait supports two different representations: a concrete and a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":526288,"byte_end":526358,"line_start":1130,"line_end":1130,"column_start":1,"column_end":71}},{"value":"/ canonical representation. The former represents the actual data of the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":526359,"byte_end":526433,"line_start":1131,"line_end":1131,"column_start":1,"column_end":75}},{"value":"/ value. For instance, it reflects the capitalisation of strings. The","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":526434,"byte_end":526505,"line_start":1132,"line_end":1132,"column_start":1,"column_end":72}},{"value":"/ canonical representation is used when calculating digests or ordering","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":526506,"byte_end":526579,"line_start":1133,"line_end":1133,"column_start":1,"column_end":74}},{"value":"/ values. Typically, it ignores capitalization and never compresses domain","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":526580,"byte_end":526656,"line_start":1134,"line_end":1134,"column_start":1,"column_end":77}},{"value":"/ names. See the documentation of [`CanonicalOrd`] for more details on","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":526657,"byte_end":526729,"line_start":1135,"line_end":1135,"column_start":1,"column_end":73}},{"value":"/ canonical representation.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":526730,"byte_end":526759,"line_start":1136,"line_end":1136,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":526760,"byte_end":526763,"line_start":1137,"line_end":1137,"column_start":1,"column_end":4}},{"value":"/ [octets builder]: trait.OctetsBuilder.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":526764,"byte_end":526810,"line_start":1138,"line_end":1138,"column_start":1,"column_end":47}},{"value":"/ [`CanonicalOrd`]: ../cmp/trait.CanonicalOrd.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":526811,"byte_end":526863,"line_start":1139,"line_end":1139,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2299},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":527183,"byte_end":527190,"line_start":1146,"line_end":1146,"column_start":8,"column_end":15},"name":"compose","qualname":"::base::octets::Compose::compose","value":"fn <T> (&self, target: &mut T) -> Result<(), ShortBuf>","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":" Appends the concrete representation of the value to the target.","sig":null,"attributes":[{"value":"/ Appends the concrete representation of the value to the target.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":526888,"byte_end":526955,"line_start":1141,"line_end":1141,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":526960,"byte_end":526963,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ If the representation doesn’t fit into the builder, returns an error.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":526968,"byte_end":527043,"line_start":1143,"line_end":1143,"column_start":5,"column_end":78}},{"value":"/ In this case the target is considered undefined. If it is supposed to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":527048,"byte_end":527121,"line_start":1144,"line_end":1144,"column_start":5,"column_end":78}},{"value":"/ be reused, it needs to be reset specifically.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":527126,"byte_end":527175,"line_start":1145,"line_end":1145,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2301},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":527580,"byte_end":527597,"line_start":1156,"line_end":1156,"column_start":8,"column_end":25},"name":"compose_canonical","qualname":"::base::octets::Compose::compose_canonical","value":"fn <T> (&self, target: &mut T) -> Result<(), ShortBuf>","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":" Appends the canonical representation of the value to the target.","sig":null,"attributes":[{"value":"/ Appends the canonical representation of the value to the target.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":527284,"byte_end":527352,"line_start":1151,"line_end":1151,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":527357,"byte_end":527360,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ If the representation doesn’t fit into the builder, returns an error.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":527365,"byte_end":527440,"line_start":1153,"line_end":1153,"column_start":5,"column_end":78}},{"value":"/ In this case the target is considered undefined. If it is supposed to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":527445,"byte_end":527518,"line_start":1154,"line_end":1154,"column_start":5,"column_end":78}},{"value":"/ be reused, it needs to be reset specifically.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":527523,"byte_end":527572,"line_start":1155,"line_end":1155,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":5861},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":534715,"byte_end":534723,"line_start":1441,"line_end":1441,"column_start":19,"column_end":27},"name":"Octets32","qualname":"::base::octets::Octets32","value":"Octets32 {  }","parent":null,"children":[{"krate":0,"index":5862},{"krate":0,"index":5864}],"decl_id":null,"docs":" A fixed length octet buffer.","sig":null,"attributes":[{"value":"/ A fixed length octet buffer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529723,"byte_end":529755,"line_start":1257,"line_end":1257,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529764,"byte_end":529767,"line_start":1258,"line_end":1258,"column_start":9,"column_end":12}},{"value":"/ The type functions both as an octets sequence and an octets","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529776,"byte_end":529839,"line_start":1259,"line_end":1259,"column_start":9,"column_end":72}},{"value":"/ builder atop a fixed size bytes array.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529848,"byte_end":529890,"line_start":1260,"line_end":1260,"column_start":9,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":5921},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":534750,"byte_end":534758,"line_start":1442,"line_end":1442,"column_start":19,"column_end":27},"name":"Octets64","qualname":"::base::octets::Octets64","value":"Octets64 {  }","parent":null,"children":[{"krate":0,"index":5922},{"krate":0,"index":5924}],"decl_id":null,"docs":" A fixed length octet buffer.","sig":null,"attributes":[{"value":"/ A fixed length octet buffer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529723,"byte_end":529755,"line_start":1257,"line_end":1257,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529764,"byte_end":529767,"line_start":1258,"line_end":1258,"column_start":9,"column_end":12}},{"value":"/ The type functions both as an octets sequence and an octets","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529776,"byte_end":529839,"line_start":1259,"line_end":1259,"column_start":9,"column_end":72}},{"value":"/ builder atop a fixed size bytes array.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529848,"byte_end":529890,"line_start":1260,"line_end":1260,"column_start":9,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":5981},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":534785,"byte_end":534794,"line_start":1443,"line_end":1443,"column_start":19,"column_end":28},"name":"Octets128","qualname":"::base::octets::Octets128","value":"Octets128 {  }","parent":null,"children":[{"krate":0,"index":5982},{"krate":0,"index":5984}],"decl_id":null,"docs":" A fixed length octet buffer.","sig":null,"attributes":[{"value":"/ A fixed length octet buffer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529723,"byte_end":529755,"line_start":1257,"line_end":1257,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529764,"byte_end":529767,"line_start":1258,"line_end":1258,"column_start":9,"column_end":12}},{"value":"/ The type functions both as an octets sequence and an octets","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529776,"byte_end":529839,"line_start":1259,"line_end":1259,"column_start":9,"column_end":72}},{"value":"/ builder atop a fixed size bytes array.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529848,"byte_end":529890,"line_start":1260,"line_end":1260,"column_start":9,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":6041},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":534822,"byte_end":534831,"line_start":1444,"line_end":1444,"column_start":19,"column_end":28},"name":"Octets256","qualname":"::base::octets::Octets256","value":"Octets256 {  }","parent":null,"children":[{"krate":0,"index":6042},{"krate":0,"index":6044}],"decl_id":null,"docs":" A fixed length octet buffer.","sig":null,"attributes":[{"value":"/ A fixed length octet buffer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529723,"byte_end":529755,"line_start":1257,"line_end":1257,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529764,"byte_end":529767,"line_start":1258,"line_end":1258,"column_start":9,"column_end":12}},{"value":"/ The type functions both as an octets sequence and an octets","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529776,"byte_end":529839,"line_start":1259,"line_end":1259,"column_start":9,"column_end":72}},{"value":"/ builder atop a fixed size bytes array.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529848,"byte_end":529890,"line_start":1260,"line_end":1260,"column_start":9,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":6101},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":534859,"byte_end":534868,"line_start":1445,"line_end":1445,"column_start":19,"column_end":28},"name":"Octets512","qualname":"::base::octets::Octets512","value":"Octets512 {  }","parent":null,"children":[{"krate":0,"index":6102},{"krate":0,"index":6104}],"decl_id":null,"docs":" A fixed length octet buffer.","sig":null,"attributes":[{"value":"/ A fixed length octet buffer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529723,"byte_end":529755,"line_start":1257,"line_end":1257,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529764,"byte_end":529767,"line_start":1258,"line_end":1258,"column_start":9,"column_end":12}},{"value":"/ The type functions both as an octets sequence and an octets","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529776,"byte_end":529839,"line_start":1259,"line_end":1259,"column_start":9,"column_end":72}},{"value":"/ builder atop a fixed size bytes array.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529848,"byte_end":529890,"line_start":1260,"line_end":1260,"column_start":9,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":6161},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":534896,"byte_end":534906,"line_start":1446,"line_end":1446,"column_start":19,"column_end":29},"name":"Octets1024","qualname":"::base::octets::Octets1024","value":"Octets1024 {  }","parent":null,"children":[{"krate":0,"index":6162},{"krate":0,"index":6164}],"decl_id":null,"docs":" A fixed length octet buffer.","sig":null,"attributes":[{"value":"/ A fixed length octet buffer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529723,"byte_end":529755,"line_start":1257,"line_end":1257,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529764,"byte_end":529767,"line_start":1258,"line_end":1258,"column_start":9,"column_end":12}},{"value":"/ The type functions both as an octets sequence and an octets","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529776,"byte_end":529839,"line_start":1259,"line_end":1259,"column_start":9,"column_end":72}},{"value":"/ builder atop a fixed size bytes array.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529848,"byte_end":529890,"line_start":1260,"line_end":1260,"column_start":9,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":6221},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":534935,"byte_end":534945,"line_start":1447,"line_end":1447,"column_start":19,"column_end":29},"name":"Octets2048","qualname":"::base::octets::Octets2048","value":"Octets2048 {  }","parent":null,"children":[{"krate":0,"index":6222},{"krate":0,"index":6224}],"decl_id":null,"docs":" A fixed length octet buffer.","sig":null,"attributes":[{"value":"/ A fixed length octet buffer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529723,"byte_end":529755,"line_start":1257,"line_end":1257,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529764,"byte_end":529767,"line_start":1258,"line_end":1258,"column_start":9,"column_end":12}},{"value":"/ The type functions both as an octets sequence and an octets","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529776,"byte_end":529839,"line_start":1259,"line_end":1259,"column_start":9,"column_end":72}},{"value":"/ builder atop a fixed size bytes array.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529848,"byte_end":529890,"line_start":1260,"line_end":1260,"column_start":9,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":6281},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":534974,"byte_end":534984,"line_start":1448,"line_end":1448,"column_start":19,"column_end":29},"name":"Octets4096","qualname":"::base::octets::Octets4096","value":"Octets4096 {  }","parent":null,"children":[{"krate":0,"index":6282},{"krate":0,"index":6284}],"decl_id":null,"docs":" A fixed length octet buffer.","sig":null,"attributes":[{"value":"/ A fixed length octet buffer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529723,"byte_end":529755,"line_start":1257,"line_end":1257,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529764,"byte_end":529767,"line_start":1258,"line_end":1258,"column_start":9,"column_end":12}},{"value":"/ The type functions both as an octets sequence and an octets","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529776,"byte_end":529839,"line_start":1259,"line_end":1259,"column_start":9,"column_end":72}},{"value":"/ builder atop a fixed size bytes array.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529848,"byte_end":529890,"line_start":1260,"line_end":1260,"column_start":9,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":2335},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":535176,"byte_end":535185,"line_start":1455,"line_end":1455,"column_start":10,"column_end":19},"name":"OctetsVec","qualname":"::base::octets::OctetsVec","value":"SmallVec<[u8; 24]>","parent":null,"children":[],"decl_id":null,"docs":" A octets vector that doesn’t allocate for small sizes.\n","sig":null,"attributes":[{"value":"/ A octets vector that doesn’t allocate for small sizes.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":535077,"byte_end":535137,"line_start":1453,"line_end":1453,"column_start":1,"column_end":59}},{"value":"cfg(feature = \"smallvec\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":535138,"byte_end":535166,"line_start":1454,"line_end":1454,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":6287},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":535725,"byte_end":535733,"line_start":1470,"line_end":1470,"column_start":12,"column_end":20},"name":"ShortBuf","qualname":"::base::octets::ShortBuf","value":"","parent":null,"children":[],"decl_id":null,"docs":" An attempt was made to write beyond the end of a buffer.","sig":null,"attributes":[{"value":"/ An attempt was made to write beyond the end of a buffer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":535370,"byte_end":535430,"line_start":1462,"line_end":1462,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":535431,"byte_end":535434,"line_start":1463,"line_end":1463,"column_start":1,"column_end":4}},{"value":"/ This type is returned as an error by all functions and methods that append","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":535435,"byte_end":535513,"line_start":1464,"line_end":1464,"column_start":1,"column_end":79}},{"value":"/ data to an [octets builder] when the buffer size of the builder is not","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":535514,"byte_end":535588,"line_start":1465,"line_end":1465,"column_start":1,"column_end":75}},{"value":"/ sufficient to append the data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":535589,"byte_end":535623,"line_start":1466,"line_end":1466,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":535624,"byte_end":535627,"line_start":1467,"line_end":1467,"column_start":1,"column_end":4}},{"value":"/ [octets builder]: trait.OctetsBuilder.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":535628,"byte_end":535674,"line_start":1468,"line_end":1468,"column_start":1,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6300},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":536230,"byte_end":536240,"line_start":1491,"line_end":1491,"column_start":5,"column_end":15},"name":"ShortInput","qualname":"::base::octets::ParseError::ShortInput","value":"ParseError::ShortInput","parent":{"krate":0,"index":6299},"children":[],"decl_id":null,"docs":" An attempt was made to go beyond the end of the parser.\n","sig":null,"attributes":[{"value":"/ An attempt was made to go beyond the end of the parser.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":536166,"byte_end":536225,"line_start":1490,"line_end":1490,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6302},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":536284,"byte_end":536288,"line_start":1494,"line_end":1494,"column_start":5,"column_end":9},"name":"Form","qualname":"::base::octets::ParseError::Form","value":"ParseError::Form(FormError)","parent":{"krate":0,"index":6299},"children":[],"decl_id":null,"docs":" A formatting error occurred.\n","sig":null,"attributes":[{"value":"/ A formatting error occurred.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":536247,"byte_end":536279,"line_start":1493,"line_end":1493,"column_start":5,"column_end":37}}]},{"kind":"Enum","id":{"krate":0,"index":6299},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":536149,"byte_end":536159,"line_start":1489,"line_end":1489,"column_start":10,"column_end":20},"name":"ParseError","qualname":"::base::octets::ParseError","value":"ParseError::{ShortInput, Form}","parent":null,"children":[{"krate":0,"index":6300},{"krate":0,"index":6302}],"decl_id":null,"docs":" An error happened while parsing data.\n","sig":null,"attributes":[{"value":"/ An error happened while parsing data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":536053,"byte_end":536094,"line_start":1487,"line_end":1487,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2341},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":536406,"byte_end":536416,"line_start":1499,"line_end":1499,"column_start":12,"column_end":22},"name":"form_error","qualname":"<ParseError>::form_error","value":"fn (msg: &'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new parse error as a form error with the given message.\n","sig":null,"attributes":[{"value":"/ Creates a new parse error as a form error with the given message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":536325,"byte_end":536394,"line_start":1498,"line_end":1498,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6317},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":537366,"byte_end":537375,"line_start":1539,"line_end":1539,"column_start":12,"column_end":21},"name":"FormError","qualname":"::base::octets::FormError","value":"","parent":null,"children":[],"decl_id":null,"docs":" A formatting error occured.","sig":null,"attributes":[{"value":"/ A formatting error occured.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":537089,"byte_end":537120,"line_start":1533,"line_end":1533,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":537121,"byte_end":537124,"line_start":1534,"line_end":1534,"column_start":1,"column_end":4}},{"value":"/ This is a generic error for all kinds of error cases that result in data","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":537125,"byte_end":537201,"line_start":1535,"line_end":1535,"column_start":1,"column_end":77}},{"value":"/ not being accepted. For diagnostics, the error is being given a static","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":537202,"byte_end":537276,"line_start":1536,"line_end":1536,"column_start":1,"column_end":75}},{"value":"/ string describing the error.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":537277,"byte_end":537309,"line_start":1537,"line_end":1537,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2348},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":537494,"byte_end":537497,"line_start":1543,"line_end":1543,"column_start":12,"column_end":15},"name":"new","qualname":"<FormError>::new","value":"fn (msg: &'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new form error value with the given diagnostics string.\n","sig":null,"attributes":[{"value":"/ Creates a new form error value with the given diagnostics string.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":537413,"byte_end":537482,"line_start":1542,"line_end":1542,"column_start":5,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":2352},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"opt","qualname":"::base::opt","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","parent":null,"children":[{"krate":0,"index":2353},{"krate":0,"index":6332},{"krate":0,"index":6333},{"krate":0,"index":6334},{"krate":0,"index":6335},{"krate":0,"index":6336},{"krate":0,"index":6337},{"krate":0,"index":6338},{"krate":0,"index":6339},{"krate":0,"index":6340},{"krate":0,"index":6341},{"krate":0,"index":6342},{"krate":0,"index":6343},{"krate":0,"index":6378},{"krate":0,"index":6406},{"krate":0,"index":6432},{"krate":0,"index":6457},{"krate":0,"index":6486},{"krate":0,"index":6519},{"krate":0,"index":6548},{"krate":0,"index":6583},{"krate":0,"index":7078},{"krate":0,"index":7116},{"krate":0,"index":6626},{"krate":0,"index":6629},{"krate":0,"index":6632},{"krate":0,"index":6635},{"krate":0,"index":6638},{"krate":0,"index":6641},{"krate":0,"index":6644},{"krate":0,"index":6647},{"krate":0,"index":6650},{"krate":0,"index":6653},{"krate":0,"index":6656},{"krate":0,"index":6659},{"krate":0,"index":6663},{"krate":0,"index":6666},{"krate":0,"index":2355},{"krate":0,"index":2360},{"krate":0,"index":2361},{"krate":0,"index":2362},{"krate":0,"index":2363},{"krate":0,"index":2367},{"krate":0,"index":2368},{"krate":0,"index":2369},{"krate":0,"index":2377},{"krate":0,"index":2378},{"krate":0,"index":7119},{"krate":0,"index":7122},{"krate":0,"index":2379},{"krate":0,"index":2386},{"krate":0,"index":2390},{"krate":0,"index":2392},{"krate":0,"index":2396},{"krate":0,"index":2399},{"krate":0,"index":2403},{"krate":0,"index":2407},{"krate":0,"index":2411},{"krate":0,"index":2414},{"krate":0,"index":2417},{"krate":0,"index":7125},{"krate":0,"index":7141},{"krate":0,"index":7138},{"krate":0,"index":7136},{"krate":0,"index":7132},{"krate":0,"index":7133},{"krate":0,"index":7128},{"krate":0,"index":7129},{"krate":0,"index":2420},{"krate":0,"index":2431},{"krate":0,"index":2433},{"krate":0,"index":7142},{"krate":0,"index":7149},{"krate":0,"index":2436},{"krate":0,"index":2445},{"krate":0,"index":2449},{"krate":0,"index":2453},{"krate":0,"index":7152},{"krate":0,"index":7158},{"krate":0,"index":7157},{"krate":0,"index":7155},{"krate":0,"index":2456},{"krate":0,"index":2460},{"krate":0,"index":2464},{"krate":0,"index":7160},{"krate":0,"index":7169},{"krate":0,"index":7165},{"krate":0,"index":2468},{"krate":0,"index":2474},{"krate":0,"index":2479},{"krate":0,"index":2481},{"krate":0,"index":2484},{"krate":0,"index":2486},{"krate":0,"index":2489},{"krate":0,"index":7173},{"krate":0,"index":7180},{"krate":0,"index":7177},{"krate":0,"index":2493},{"krate":0,"index":2501},{"krate":0,"index":2505},{"krate":0,"index":2508},{"krate":0,"index":2511},{"krate":0,"index":2514},{"krate":0,"index":2517},{"krate":0,"index":2520},{"krate":0,"index":2524},{"krate":0,"index":2527}],"decl_id":null,"docs":" Record data for OPT records.","sig":null,"attributes":[{"value":"! Record data for OPT records.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":542985,"byte_end":543017,"line_start":4,"line_end":4,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":543018,"byte_end":543021,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! Since DNS message headers are relatively short, the amount of information","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":543022,"byte_end":543099,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"! that can be conveyed through them is very limited. In order to provide an","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":543100,"byte_end":543177,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"! extensible means to transmit additional information, [RFC 6891] introduces","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":543178,"byte_end":543256,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"! a resource record called OPT that can be added to the additional section","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":543257,"byte_end":543333,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"! of a message. The record data in turn consists of a sequence of options.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":543334,"byte_end":543410,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":543411,"byte_end":543414,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! This module contains the types for working with both the OPT record and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":543415,"byte_end":543490,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"! its record data. It defines types for each of the currently defined","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":543491,"byte_end":543562,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"! options. As with record data types in the [rdata] module, these are","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":543563,"byte_end":543634,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"! arranged in sub-modules according to the RFC that defined them and then","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":543635,"byte_end":543710,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"! re-exported here.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":543711,"byte_end":543732,"line_start":16,"line_end":16,"column_start":1,"column_end":22}},{"value":"! ","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":543733,"byte_end":543737,"line_start":17,"line_end":17,"column_start":1,"column_end":5}},{"value":"! [RFC 6891]: https://tools.ietf.org/html/rfc6891","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":543738,"byte_end":543789,"line_start":18,"line_end":18,"column_start":1,"column_end":52}},{"value":"! [rdata]: ../../rdata/index.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":543790,"byte_end":543825,"line_start":19,"line_end":19,"column_start":1,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":6343},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc5001.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rfc5001","qualname":"::base::opt::rfc5001","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc5001.rs","parent":null,"children":[{"krate":0,"index":6344},{"krate":0,"index":6345},{"krate":0,"index":6346},{"krate":0,"index":6347},{"krate":0,"index":6355},{"krate":0,"index":6669},{"krate":0,"index":6700},{"krate":0,"index":6697},{"krate":0,"index":6692},{"krate":0,"index":6694},{"krate":0,"index":6688},{"krate":0,"index":6685},{"krate":0,"index":6679},{"krate":0,"index":6681},{"krate":0,"index":6672},{"krate":0,"index":6356},{"krate":0,"index":6359},{"krate":0,"index":6364},{"krate":0,"index":6368},{"krate":0,"index":6371},{"krate":0,"index":6375}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6669},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc5001.rs","byte_start":9142955,"byte_end":9142959,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"name":"Nsid","qualname":"::base::opt::rfc5001::Nsid","value":"Nsid {  }","parent":null,"children":[{"krate":0,"index":6671}],"decl_id":null,"docs":" The Name Server Identifier (NSID) Option.","sig":null,"attributes":[{"value":"/ The Name Server Identifier (NSID) Option.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc5001.rs","byte_start":9142805,"byte_end":9142850,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc5001.rs","byte_start":9142851,"byte_end":9142854,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Specified in RFC 5001.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc5001.rs","byte_start":9142855,"byte_end":9142881,"line_start":16,"line_end":16,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":6358},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc5001.rs","byte_start":9143032,"byte_end":9143043,"line_start":23,"line_end":23,"column_start":12,"column_end":23},"name":"from_octets","qualname":"<Nsid<Octets>>::from_octets","value":"fn (octets: Octets) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6360},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc5001.rs","byte_start":9143130,"byte_end":9143134,"line_start":29,"line_end":29,"column_start":12,"column_end":16},"name":"push","qualname":"<Nsid<()>>::push","value":"fn <Target, Data> (builder: &mut OptBuilder<Target>, data: &Data) -> Result<(), ShortBuf>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6378},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc6975.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rfc6975","qualname":"::base::opt::rfc6975","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc6975.rs","parent":null,"children":[{"krate":0,"index":6379},{"krate":0,"index":6380},{"krate":0,"index":6383},{"krate":0,"index":6384},{"krate":0,"index":6392},{"krate":0,"index":6393},{"krate":0,"index":6729},{"krate":0,"index":6760},{"krate":0,"index":6757},{"krate":0,"index":6752},{"krate":0,"index":6754},{"krate":0,"index":6748},{"krate":0,"index":6745},{"krate":0,"index":6739},{"krate":0,"index":6741},{"krate":0,"index":6732},{"krate":0,"index":6703},{"krate":0,"index":6707},{"krate":0,"index":6712},{"krate":0,"index":6716},{"krate":0,"index":6720},{"krate":0,"index":6723},{"krate":0,"index":6789},{"krate":0,"index":6820},{"krate":0,"index":6817},{"krate":0,"index":6812},{"krate":0,"index":6814},{"krate":0,"index":6808},{"krate":0,"index":6805},{"krate":0,"index":6799},{"krate":0,"index":6801},{"krate":0,"index":6792},{"krate":0,"index":6763},{"krate":0,"index":6767},{"krate":0,"index":6772},{"krate":0,"index":6776},{"krate":0,"index":6780},{"krate":0,"index":6783},{"krate":0,"index":6849},{"krate":0,"index":6880},{"krate":0,"index":6877},{"krate":0,"index":6872},{"krate":0,"index":6874},{"krate":0,"index":6868},{"krate":0,"index":6865},{"krate":0,"index":6859},{"krate":0,"index":6861},{"krate":0,"index":6852},{"krate":0,"index":6823},{"krate":0,"index":6827},{"krate":0,"index":6832},{"krate":0,"index":6836},{"krate":0,"index":6840},{"krate":0,"index":6843},{"krate":0,"index":6394},{"krate":0,"index":6398},{"krate":0,"index":6401}],"decl_id":null,"docs":" EDNS Options from RFC 6975.\n","sig":null,"attributes":[{"value":"! EDNS Options from RFC 6975.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc6975.rs","byte_start":9144640,"byte_end":9144671,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":6729},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc6975.rs","byte_start":9147312,"byte_end":9147315,"line_start":93,"line_end":93,"column_start":14,"column_end":17},"name":"Dau","qualname":"::base::opt::rfc6975::Dau","value":"Dau {  }","parent":null,"children":[{"krate":0,"index":6731}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6789},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc6975.rs","byte_start":9147331,"byte_end":9147334,"line_start":94,"line_end":94,"column_start":14,"column_end":17},"name":"Dhu","qualname":"::base::opt::rfc6975::Dhu","value":"Dhu {  }","parent":null,"children":[{"krate":0,"index":6791}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6849},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc6975.rs","byte_start":9147350,"byte_end":9147353,"line_start":95,"line_end":95,"column_start":14,"column_end":17},"name":"N3u","qualname":"::base::opt::rfc6975::N3u","value":"N3u {  }","parent":null,"children":[{"krate":0,"index":6851}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6394},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc6975.rs","byte_start":9147449,"byte_end":9147460,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"SecAlgsIter","qualname":"::base::opt::rfc6975::SecAlgsIter","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6406},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7314.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rfc7314","qualname":"::base::opt::rfc7314","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7314.rs","parent":null,"children":[{"krate":0,"index":6407},{"krate":0,"index":6408},{"krate":0,"index":6409},{"krate":0,"index":6416},{"krate":0,"index":6883},{"krate":0,"index":6907},{"krate":0,"index":6906},{"krate":0,"index":6904},{"krate":0,"index":6901},{"krate":0,"index":6902},{"krate":0,"index":6898},{"krate":0,"index":6896},{"krate":0,"index":6892},{"krate":0,"index":6893},{"krate":0,"index":6886},{"krate":0,"index":6417},{"krate":0,"index":6422},{"krate":0,"index":6427},{"krate":0,"index":6430}],"decl_id":null,"docs":" EDNS Options from RFC 7314\n","sig":null,"attributes":[{"value":"! EDNS Options from RFC 7314","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7314.rs","byte_start":9147769,"byte_end":9147799,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6883},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7314.rs","byte_start":9148164,"byte_end":9148170,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Expire","qualname":"::base::opt::rfc7314::Expire","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6418},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7314.rs","byte_start":9148211,"byte_end":9148214,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"new","qualname":"<Expire>::new","value":"fn (expire: Option<u32>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6419},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7314.rs","byte_start":9148287,"byte_end":9148291,"line_start":21,"line_end":21,"column_start":12,"column_end":16},"name":"push","qualname":"<Expire>::push","value":"fn <Target> (builder: &mut OptBuilder<Target>, expire: Option<u32>) -> Result<(), ShortBuf>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6421},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7314.rs","byte_start":9148477,"byte_end":9148483,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"expire","qualname":"<Expire>::expire","value":"fn (self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6432},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7828.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rfc7828","qualname":"::base::opt::rfc7828","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7828.rs","parent":null,"children":[{"krate":0,"index":6433},{"krate":0,"index":6434},{"krate":0,"index":6435},{"krate":0,"index":6442},{"krate":0,"index":6909},{"krate":0,"index":6933},{"krate":0,"index":6932},{"krate":0,"index":6930},{"krate":0,"index":6927},{"krate":0,"index":6928},{"krate":0,"index":6924},{"krate":0,"index":6922},{"krate":0,"index":6918},{"krate":0,"index":6919},{"krate":0,"index":6912},{"krate":0,"index":6443},{"krate":0,"index":6448},{"krate":0,"index":6452},{"krate":0,"index":6455}],"decl_id":null,"docs":" EDNS Options from RFC 7828\n","sig":null,"attributes":[{"value":"! EDNS Options from RFC 7828","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7828.rs","byte_start":9149384,"byte_end":9149414,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6909},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7828.rs","byte_start":9149779,"byte_end":9149791,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"TcpKeepalive","qualname":"::base::opt::rfc7828::TcpKeepalive","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6444},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7828.rs","byte_start":9149830,"byte_end":9149833,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"new","qualname":"<TcpKeepalive>::new","value":"fn (timeout: u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6445},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7828.rs","byte_start":9149906,"byte_end":9149910,"line_start":21,"line_end":21,"column_start":12,"column_end":16},"name":"push","qualname":"<TcpKeepalive>::push","value":"fn <Target> (builder: &mut OptBuilder<Target>, timeout: u16) -> Result<(), ShortBuf>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6447},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7828.rs","byte_start":9150090,"byte_end":9150097,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"timeout","qualname":"<TcpKeepalive>::timeout","value":"fn (self) -> u16","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6457},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7830.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rfc7830","qualname":"::base::opt::rfc7830","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7830.rs","parent":null,"children":[{"krate":0,"index":6458},{"krate":0,"index":6459},{"krate":0,"index":6460},{"krate":0,"index":6461},{"krate":0,"index":6468},{"krate":0,"index":6935},{"krate":0,"index":6952},{"krate":0,"index":6951},{"krate":0,"index":6949},{"krate":0,"index":6946},{"krate":0,"index":6947},{"krate":0,"index":6943},{"krate":0,"index":6940},{"krate":0,"index":6941},{"krate":0,"index":6954},{"krate":0,"index":6970},{"krate":0,"index":6969},{"krate":0,"index":6967},{"krate":0,"index":6964},{"krate":0,"index":6965},{"krate":0,"index":6961},{"krate":0,"index":6957},{"krate":0,"index":6958},{"krate":0,"index":6469},{"krate":0,"index":6476},{"krate":0,"index":6480},{"krate":0,"index":6484}],"decl_id":null,"docs":" EDNS Options from RFC 7830\n","sig":null,"attributes":[{"value":"! EDNS Options from RFC 7830","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7830.rs","byte_start":9150726,"byte_end":9150756,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6936},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7830.rs","byte_start":9151138,"byte_end":9151142,"line_start":16,"line_end":16,"column_start":5,"column_end":9},"name":"Zero","qualname":"::base::opt::rfc7830::PaddingMode::Zero","value":"PaddingMode::Zero","parent":{"krate":0,"index":6935},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6938},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7830.rs","byte_start":9151148,"byte_end":9151154,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"Random","qualname":"::base::opt::rfc7830::PaddingMode::Random","value":"PaddingMode::Random","parent":{"krate":0,"index":6935},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6935},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7830.rs","byte_start":9151120,"byte_end":9151131,"line_start":15,"line_end":15,"column_start":10,"column_end":21},"name":"PaddingMode","qualname":"::base::opt::rfc7830::PaddingMode","value":"PaddingMode::{Zero, Random}","parent":null,"children":[{"krate":0,"index":6936},{"krate":0,"index":6938}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6954},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7830.rs","byte_start":9151302,"byte_end":9151309,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"name":"Padding","qualname":"::base::opt::rfc7830::Padding","value":"Padding {  }","parent":null,"children":[{"krate":0,"index":6955},{"krate":0,"index":6956}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6470},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7830.rs","byte_start":9151377,"byte_end":9151380,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<Padding>::new","value":"fn (len: u16, mode: PaddingMode) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6471},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7830.rs","byte_start":9151472,"byte_end":9151476,"line_start":34,"line_end":34,"column_start":12,"column_end":16},"name":"push","qualname":"<Padding>::push","value":"fn <Target> (builder: &mut OptBuilder<Target>, len: u16, mode: PaddingMode) -> Result<(), ShortBuf>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6473},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7830.rs","byte_start":9151681,"byte_end":9151684,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"len","qualname":"<Padding>::len","value":"fn (self) -> u16","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6474},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7830.rs","byte_start":9151735,"byte_end":9151743,"line_start":46,"line_end":46,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Padding>::is_empty","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6475},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7830.rs","byte_start":9151800,"byte_end":9151804,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"mode","qualname":"<Padding>::mode","value":"fn (self) -> PaddingMode","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6486},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7871.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rfc7871","qualname":"::base::opt::rfc7871","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7871.rs","parent":null,"children":[{"krate":0,"index":6487},{"krate":0,"index":6488},{"krate":0,"index":6489},{"krate":0,"index":6490},{"krate":0,"index":6498},{"krate":0,"index":6972},{"krate":0,"index":7005},{"krate":0,"index":7004},{"krate":0,"index":7002},{"krate":0,"index":6999},{"krate":0,"index":7000},{"krate":0,"index":6996},{"krate":0,"index":6994},{"krate":0,"index":6990},{"krate":0,"index":6991},{"krate":0,"index":6976},{"krate":0,"index":6499},{"krate":0,"index":6506},{"krate":0,"index":6512},{"krate":0,"index":6516},{"krate":0,"index":6517}],"decl_id":null,"docs":" EDNS Options from RFC 7871\n","sig":null,"attributes":[{"value":"! EDNS Options from RFC 7871","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7871.rs","byte_start":9152992,"byte_end":9153022,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6972},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7871.rs","byte_start":9153429,"byte_end":9153441,"line_start":15,"line_end":15,"column_start":12,"column_end":24},"name":"ClientSubnet","qualname":"::base::opt::rfc7871::ClientSubnet","value":"ClientSubnet {  }","parent":null,"children":[{"krate":0,"index":6973},{"krate":0,"index":6974},{"krate":0,"index":6975}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6500},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7871.rs","byte_start":9153549,"byte_end":9153552,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<ClientSubnet>::new","value":"fn (source_prefix_len: u8, scope_prefix_len: u8, addr: IpAddr) -> ClientSubnet","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6501},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7871.rs","byte_start":9153745,"byte_end":9153749,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"push","qualname":"<ClientSubnet>::push","value":"fn <Target> (builder: &mut OptBuilder<Target>, source_prefix_len: u8, scope_prefix_len: u8, addr: IpAddr) -> Result<(), ShortBuf>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6503},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7871.rs","byte_start":9154024,"byte_end":9154041,"line_start":39,"line_end":39,"column_start":12,"column_end":29},"name":"source_prefix_len","qualname":"<ClientSubnet>::source_prefix_len","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6504},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7871.rs","byte_start":9154093,"byte_end":9154109,"line_start":40,"line_end":40,"column_start":12,"column_end":28},"name":"scope_prefix_len","qualname":"<ClientSubnet>::scope_prefix_len","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6505},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7871.rs","byte_start":9154160,"byte_end":9154164,"line_start":41,"line_end":41,"column_start":12,"column_end":16},"name":"addr","qualname":"<ClientSubnet>::addr","value":"fn (&self) -> IpAddr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6519},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7873.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rfc7873","qualname":"::base::opt::rfc7873","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7873.rs","parent":null,"children":[{"krate":0,"index":6520},{"krate":0,"index":6521},{"krate":0,"index":6522},{"krate":0,"index":6529},{"krate":0,"index":7007},{"krate":0,"index":7033},{"krate":0,"index":7032},{"krate":0,"index":7030},{"krate":0,"index":7026},{"krate":0,"index":7027},{"krate":0,"index":7023},{"krate":0,"index":7021},{"krate":0,"index":7017},{"krate":0,"index":7018},{"krate":0,"index":7011},{"krate":0,"index":6530},{"krate":0,"index":6538},{"krate":0,"index":6543},{"krate":0,"index":6546}],"decl_id":null,"docs":" EDNS Options form RFC 7873\n","sig":null,"attributes":[{"value":"! EDNS Options form RFC 7873","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7873.rs","byte_start":9157373,"byte_end":9157403,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7007},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7873.rs","byte_start":9157768,"byte_end":9157774,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Cookie","qualname":"::base::opt::rfc7873::Cookie","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6531},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7873.rs","byte_start":9157811,"byte_end":9157814,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"new","qualname":"<Cookie>::new","value":"fn (cookie: [u8; 8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6533},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7873.rs","byte_start":9157883,"byte_end":9157887,"line_start":21,"line_end":21,"column_start":12,"column_end":16},"name":"push","qualname":"<Cookie>::push","value":"fn <Target> (builder: &mut OptBuilder<Target>, cookie: [u8; 8]) -> Result<(), ShortBuf>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6536},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7873.rs","byte_start":9158069,"byte_end":9158075,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"cookie","qualname":"<Cookie>::cookie","value":"fn (self) -> [u8; 8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6548},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7901.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rfc7901","qualname":"::base::opt::rfc7901","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7901.rs","parent":null,"children":[{"krate":0,"index":6549},{"krate":0,"index":6550},{"krate":0,"index":6551},{"krate":0,"index":6554},{"krate":0,"index":6562},{"krate":0,"index":7036},{"krate":0,"index":7039},{"krate":0,"index":6563},{"krate":0,"index":6572},{"krate":0,"index":6576},{"krate":0,"index":6580}],"decl_id":null,"docs":" EDNS Options from RFC 7901\n","sig":null,"attributes":[{"value":"! EDNS Options from RFC 7901","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7901.rs","byte_start":9158752,"byte_end":9158782,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7036},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7901.rs","byte_start":9159258,"byte_end":9159263,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"name":"Chain","qualname":"::base::opt::rfc7901::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":7038}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6565},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7901.rs","byte_start":9159343,"byte_end":9159346,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<Chain<Octets>>::new","value":"fn (start: Dname<Octets>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6566},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7901.rs","byte_start":9159421,"byte_end":9159425,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"push","qualname":"<Chain<Octets>>::push","value":"fn <Target, N> (builder: &mut OptBuilder<Target>, start: &N) -> Result<(), ShortBuf>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6571},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7901.rs","byte_start":9159836,"byte_end":9159841,"line_start":40,"line_end":40,"column_start":12,"column_end":17},"name":"start","qualname":"<Chain<Octets>>::start","value":"fn (&self) -> &Dname<Octets>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6583},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc8145.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rfc8145","qualname":"::base::opt::rfc8145","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc8145.rs","parent":null,"children":[{"krate":0,"index":6584},{"krate":0,"index":6585},{"krate":0,"index":6586},{"krate":0,"index":6587},{"krate":0,"index":6596},{"krate":0,"index":7042},{"krate":0,"index":7063},{"krate":0,"index":7060},{"krate":0,"index":7055},{"krate":0,"index":7057},{"krate":0,"index":7051},{"krate":0,"index":7045},{"krate":0,"index":7047},{"krate":0,"index":6597},{"krate":0,"index":6605},{"krate":0,"index":6609},{"krate":0,"index":6613},{"krate":0,"index":6616},{"krate":0,"index":7066},{"krate":0,"index":7075},{"krate":0,"index":7073},{"krate":0,"index":7070},{"krate":0,"index":6622}],"decl_id":null,"docs":" EDNS Options from RFC 8145.\n","sig":null,"attributes":[{"value":"! EDNS Options from RFC 8145.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc8145.rs","byte_start":9160525,"byte_end":9160556,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":7042},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc8145.rs","byte_start":9160951,"byte_end":9160957,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"KeyTag","qualname":"::base::opt::rfc8145::KeyTag","value":"KeyTag {  }","parent":null,"children":[{"krate":0,"index":7044}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6599},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc8145.rs","byte_start":9161032,"byte_end":9161035,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<KeyTag<Octets>>::new","value":"fn (octets: Octets) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6600},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc8145.rs","byte_start":9161106,"byte_end":9161110,"line_start":25,"line_end":25,"column_start":12,"column_end":16},"name":"push","qualname":"<KeyTag<Octets>>::push","value":"fn <Target> (builder: &mut OptBuilder<Target>, tags: &[u16]) -> Result<(), ShortBuf>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6604},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc8145.rs","byte_start":9161578,"byte_end":9161582,"line_start":41,"line_end":41,"column_start":12,"column_end":16},"name":"iter","qualname":"<KeyTag<Octets>>::iter","value":"fn (&self) -> KeyTagIter","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7066},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc8145.rs","byte_start":9163012,"byte_end":9163022,"line_start":104,"line_end":104,"column_start":12,"column_end":22},"name":"KeyTagIter","qualname":"::base::opt::rfc8145::KeyTagIter","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7119},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":545565,"byte_end":545568,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"Opt","qualname":"::base::opt::Opt","value":"Opt {  }","parent":null,"children":[{"krate":0,"index":7121}],"decl_id":null,"docs":" OPT record data.","sig":null,"attributes":[{"value":"/ OPT record data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":544834,"byte_end":544854,"line_start":58,"line_end":58,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":544855,"byte_end":544858,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This is the record data type for OPT records and can be used as the data","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":544859,"byte_end":544935,"line_start":60,"line_end":60,"column_start":1,"column_end":77}},{"value":"/ type parameter in [`Record`]. It simply wraps an octets sequence with all","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":544936,"byte_end":545013,"line_start":61,"line_end":61,"column_start":1,"column_end":78}},{"value":"/ the record data. It guarantees that the data contains a correctly","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":545014,"byte_end":545083,"line_start":62,"line_end":62,"column_start":1,"column_end":70}},{"value":"/ formatted sequence of options but doesn’t guarantee that the options","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":545084,"byte_end":545158,"line_start":63,"line_end":63,"column_start":1,"column_end":73}},{"value":"/ themselves are correct. You can iterate over options via the [`iter`]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":545159,"byte_end":545232,"line_start":64,"line_end":64,"column_start":1,"column_end":74}},{"value":"/ method.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":545233,"byte_end":545244,"line_start":65,"line_end":65,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":545245,"byte_end":545248,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Since some of the information of the OPT record is transmitted in the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":545249,"byte_end":545322,"line_start":67,"line_end":67,"column_start":1,"column_end":74}},{"value":"/ record header, a special type [`OptRecord`] exists, that contains all","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":545323,"byte_end":545396,"line_start":68,"line_end":68,"column_start":1,"column_end":74}},{"value":"/ the OPT data which is the preferred way of accessing this data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":545397,"byte_end":545464,"line_start":69,"line_end":69,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":545465,"byte_end":545468,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ [`iter`]: #method.iter","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":545469,"byte_end":545495,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"/ [`OptRecord`]: struct.OptRecord.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":545496,"byte_end":545536,"line_start":72,"line_end":72,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2381},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":545864,"byte_end":545875,"line_start":83,"line_end":83,"column_start":12,"column_end":23},"name":"from_octets","qualname":"<Opt<Octets>>::from_octets","value":"fn (octets: Octets) -> Result<Self, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Creates OPT record data from an octets sequence.","sig":null,"attributes":[{"value":"/ Creates OPT record data from an octets sequence.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":545646,"byte_end":545698,"line_start":79,"line_end":79,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":545703,"byte_end":545706,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ The function checks whether the octets contain a sequence of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":545711,"byte_end":545775,"line_start":81,"line_end":81,"column_start":5,"column_end":69}},{"value":"/ options. It does not check whether the options themselves are valid.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":545780,"byte_end":545852,"line_start":82,"line_end":82,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2382},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":546385,"byte_end":546389,"line_start":97,"line_end":97,"column_start":12,"column_end":16},"name":"iter","qualname":"<Opt<Octets>>::iter","value":"fn <Data> (&self) -> OptIter<&Octets, Data>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over options of a given type.","sig":null,"attributes":[{"value":"/ Returns an iterator over options of a given type.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":546187,"byte_end":546240,"line_start":93,"line_end":93,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":546245,"byte_end":546248,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ The returned iterator will return only options represented by type","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":546253,"byte_end":546323,"line_start":95,"line_end":95,"column_start":5,"column_end":75}},{"value":"/ `D` and quietly skip over all the others.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":546328,"byte_end":546373,"line_start":96,"line_end":96,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":7125},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":549719,"byte_end":549728,"line_start":214,"line_end":214,"column_start":12,"column_end":21},"name":"OptHeader","qualname":"::base::opt::OptHeader","value":"OptHeader {  }","parent":null,"children":[{"krate":0,"index":7126}],"decl_id":null,"docs":" The header of an OPT record.","sig":null,"attributes":[{"value":"/ The header of an OPT record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":548677,"byte_end":548709,"line_start":195,"line_end":195,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":548710,"byte_end":548713,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ The OPT record reappropriates the record header for encoding some","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":548714,"byte_end":548783,"line_start":197,"line_end":197,"column_start":1,"column_end":70}},{"value":"/ basic information. This type provides access to this information. It","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":548784,"byte_end":548856,"line_start":198,"line_end":198,"column_start":1,"column_end":73}},{"value":"/ consists of the record header accept for its `rdlen` field.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":548857,"byte_end":548920,"line_start":199,"line_end":199,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":548921,"byte_end":548924,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ This is so that `OptBuilder` can safely deref to this type.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":548925,"byte_end":548988,"line_start":201,"line_end":201,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":548989,"byte_end":548992,"line_start":202,"line_end":202,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":2421},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":549895,"byte_end":549911,"line_start":221,"line_end":221,"column_start":12,"column_end":28},"name":"for_record_slice","qualname":"<OptHeader>::for_record_slice","value":"fn (slice: &[u8]) -> &OptHeader","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to an OPT header pointing into a record’s octets.\n","sig":null,"attributes":[{"value":"/ Returns a reference to an OPT header pointing into a record’s octets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":549808,"byte_end":549883,"line_start":220,"line_end":220,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2422},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":550145,"byte_end":550165,"line_start":227,"line_end":227,"column_start":12,"column_end":32},"name":"for_record_slice_mut","qualname":"<OptHeader>::for_record_slice_mut","value":"fn (slice: &mut [u8]) -> &mut OptHeader","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference pointing into a record’s octets.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference pointing into a record’s octets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":550067,"byte_end":550133,"line_start":226,"line_end":226,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2423},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":550770,"byte_end":550786,"line_start":239,"line_end":239,"column_start":12,"column_end":28},"name":"udp_payload_size","qualname":"<OptHeader>::udp_payload_size","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the UDP payload size.","sig":null,"attributes":[{"value":"/ Returns the UDP payload size.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":550331,"byte_end":550364,"line_start":232,"line_end":232,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":550369,"byte_end":550372,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Through this field a sender of a message can signal the maximum size","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":550377,"byte_end":550449,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/ of UDP payload the sender is able to handle when receiving messages.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":550454,"byte_end":550526,"line_start":235,"line_end":235,"column_start":5,"column_end":77}},{"value":"/ This value refers to the abilities of the sender’s DNS implementation,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":550531,"byte_end":550607,"line_start":236,"line_end":236,"column_start":5,"column_end":79}},{"value":"/ not such things as network MTUs. Which means that the largest UDP","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":550612,"byte_end":550681,"line_start":237,"line_end":237,"column_start":5,"column_end":74}},{"value":"/ payload that can actually be sent back to the sender may be smaller.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":550686,"byte_end":550758,"line_start":238,"line_end":238,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2424},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":550927,"byte_end":550947,"line_start":244,"line_end":244,"column_start":12,"column_end":32},"name":"set_udp_payload_size","qualname":"<OptHeader>::set_udp_payload_size","value":"fn (&mut self, value: u16) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the UDP payload size value.\n","sig":null,"attributes":[{"value":"/ Sets the UDP payload size value.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":550879,"byte_end":550915,"line_start":243,"line_end":243,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2425},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":551234,"byte_end":551239,"line_start":252,"line_end":252,"column_start":12,"column_end":17},"name":"rcode","qualname":"<OptHeader>::rcode","value":"fn (&self, header: Header) -> OptRcode","parent":null,"children":[],"decl_id":null,"docs":" Returns the extended rcode.","sig":null,"attributes":[{"value":"/ Returns the extended rcode.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":551047,"byte_end":551078,"line_start":248,"line_end":248,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":551083,"byte_end":551086,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Some of the bits of the rcode are stored in the regular message","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":551091,"byte_end":551158,"line_start":250,"line_end":250,"column_start":5,"column_end":72}},{"value":"/ header. Such a header needs to be passed to the method.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":551163,"byte_end":551222,"line_start":251,"line_end":251,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2426},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":551534,"byte_end":551543,"line_start":260,"line_end":260,"column_start":12,"column_end":21},"name":"set_rcode","qualname":"<OptHeader>::set_rcode","value":"fn (&mut self, rcode: OptRcode) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the extend rcode of the OPT header.","sig":null,"attributes":[{"value":"/ Sets the extend rcode of the OPT header.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":551348,"byte_end":551392,"line_start":256,"line_end":256,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":551397,"byte_end":551400,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ This method _only_ sets the upper bits of the rcode. The lower bits","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":551405,"byte_end":551476,"line_start":258,"line_end":258,"column_start":5,"column_end":76}},{"value":"/ need to be set in the message header.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":551481,"byte_end":551522,"line_start":259,"line_end":259,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2427},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":551738,"byte_end":551745,"line_start":267,"line_end":267,"column_start":12,"column_end":19},"name":"version","qualname":"<OptHeader>::version","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the EDNS version of the OPT header.","sig":null,"attributes":[{"value":"/ Returns the EDNS version of the OPT header.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":551621,"byte_end":551668,"line_start":264,"line_end":264,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":551673,"byte_end":551676,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Only EDNS version 0 is currently defined.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":551681,"byte_end":551726,"line_start":266,"line_end":266,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2428},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":551850,"byte_end":551861,"line_start":272,"line_end":272,"column_start":12,"column_end":23},"name":"set_version","qualname":"<OptHeader>::set_version","value":"fn (&mut self, version: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the EDNS version of the OPT header.\n","sig":null,"attributes":[{"value":"/ Sets the EDNS version of the OPT header.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":551794,"byte_end":551838,"line_start":271,"line_end":271,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2429},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":552308,"byte_end":552317,"line_start":284,"line_end":284,"column_start":12,"column_end":21},"name":"dnssec_ok","qualname":"<OptHeader>::dnssec_ok","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the DNSSEC OK (DO) bit.","sig":null,"attributes":[{"value":"/ Returns the value of the DNSSEC OK (DO) bit.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":551931,"byte_end":551979,"line_start":276,"line_end":276,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":551984,"byte_end":551987,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ By setting this bit, a resolver indicates that it is interested in","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":551992,"byte_end":552062,"line_start":278,"line_end":278,"column_start":5,"column_end":75}},{"value":"/ also receiving the DNSSEC-related resource records necessary to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":552067,"byte_end":552134,"line_start":279,"line_end":279,"column_start":5,"column_end":72}},{"value":"/ validate an answer. The bit and the related procedures are defined in","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":552139,"byte_end":552212,"line_start":280,"line_end":280,"column_start":5,"column_end":78}},{"value":"/ [RFC 3225].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":552217,"byte_end":552232,"line_start":281,"line_end":281,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":552237,"byte_end":552240,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ [RFC 3225]: https://tools.ietf.org/html/rfc3225","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":552245,"byte_end":552296,"line_start":283,"line_end":283,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2430},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":552443,"byte_end":552456,"line_start":289,"line_end":289,"column_start":12,"column_end":25},"name":"set_dnssec_ok","qualname":"<OptHeader>::set_dnssec_ok","value":"fn (&mut self, value: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the DNSSEC OK (DO) bit to the given value.\n","sig":null,"attributes":[{"value":"/ Sets the DNSSEC OK (DO) bit to the given value.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":552380,"byte_end":552431,"line_start":288,"line_end":288,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":7142},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":553508,"byte_end":553517,"line_start":330,"line_end":330,"column_start":12,"column_end":21},"name":"OptRecord","qualname":"::base::opt::OptRecord","value":"OptRecord {  }","parent":null,"children":[{"krate":0,"index":7144},{"krate":0,"index":7145},{"krate":0,"index":7146},{"krate":0,"index":7147},{"krate":0,"index":7148}],"decl_id":null,"docs":" An entire OPT record.","sig":null,"attributes":[{"value":"/ An entire OPT record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":553001,"byte_end":553026,"line_start":317,"line_end":317,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":553027,"byte_end":553030,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/ Because the EDNS specificiation uses parts of the header of the OPT record","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":553031,"byte_end":553109,"line_start":319,"line_end":319,"column_start":1,"column_end":79}},{"value":"/ to convey some information, a special record type is necessary for OPT","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":553110,"byte_end":553184,"line_start":320,"line_end":320,"column_start":1,"column_end":75}},{"value":"/ records. You can convert a normal record with [`Opt`] record data into","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":553185,"byte_end":553259,"line_start":321,"line_end":321,"column_start":1,"column_end":75}},{"value":"/ an `OptRecord` via the [`from_record`] function.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":553260,"byte_end":553312,"line_start":322,"line_end":322,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":553313,"byte_end":553316,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The type derefs to the [`Opt`] type and provides all its functionality","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":553317,"byte_end":553391,"line_start":324,"line_end":324,"column_start":1,"column_end":75}},{"value":"/ that way.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":553392,"byte_end":553405,"line_start":325,"line_end":325,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":553406,"byte_end":553409,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ [`Opt`]: strait.Opt.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":553410,"byte_end":553438,"line_start":327,"line_end":327,"column_start":1,"column_end":29}},{"value":"/ [`from_record`]: #method.from_record","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":553439,"byte_end":553479,"line_start":328,"line_end":328,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2438},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":553896,"byte_end":553907,"line_start":349,"line_end":349,"column_start":12,"column_end":23},"name":"from_record","qualname":"<OptRecord<Octets>>::from_record","value":"fn <N> (record: Record<N, Opt<Octets>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts a regular record into an OPT record\n","sig":null,"attributes":[{"value":"/ Converts a regular record into an OPT record","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":553836,"byte_end":553884,"line_start":348,"line_end":348,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2440},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":554674,"byte_end":554690,"line_start":366,"line_end":366,"column_start":12,"column_end":28},"name":"udp_payload_size","qualname":"<OptRecord<Octets>>::udp_payload_size","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the UDP payload size.","sig":null,"attributes":[{"value":"/ Returns the UDP payload size.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":554235,"byte_end":554268,"line_start":359,"line_end":359,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":554273,"byte_end":554276,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ Through this field a sender of a message can signal the maximum size","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":554281,"byte_end":554353,"line_start":361,"line_end":361,"column_start":5,"column_end":77}},{"value":"/ of UDP payload the sender is able to handle when receiving messages.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":554358,"byte_end":554430,"line_start":362,"line_end":362,"column_start":5,"column_end":77}},{"value":"/ This value refers to the abilities of the sender’s DNS implementation,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":554435,"byte_end":554511,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ not such things as network MTUs. Which means that the largest UDP","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":554516,"byte_end":554585,"line_start":364,"line_end":364,"column_start":5,"column_end":74}},{"value":"/ payload that can actually be sent back to the sender may be smaller.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":554590,"byte_end":554662,"line_start":365,"line_end":365,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2441},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":554935,"byte_end":554940,"line_start":374,"line_end":374,"column_start":12,"column_end":17},"name":"rcode","qualname":"<OptRecord<Octets>>::rcode","value":"fn (&self, header: Header) -> OptRcode","parent":null,"children":[],"decl_id":null,"docs":" Returns the extended rcode.","sig":null,"attributes":[{"value":"/ Returns the extended rcode.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":554748,"byte_end":554779,"line_start":370,"line_end":370,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":554784,"byte_end":554787,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ Some of the bits of the rcode are stored in the regular message","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":554792,"byte_end":554859,"line_start":372,"line_end":372,"column_start":5,"column_end":72}},{"value":"/ header. Such a header needs to be passed to the method.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":554864,"byte_end":554923,"line_start":373,"line_end":373,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2442},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":555167,"byte_end":555174,"line_start":381,"line_end":381,"column_start":12,"column_end":19},"name":"version","qualname":"<OptRecord<Octets>>::version","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the EDNS version of the OPT header.","sig":null,"attributes":[{"value":"/ Returns the EDNS version of the OPT header.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":555050,"byte_end":555097,"line_start":378,"line_end":378,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":555102,"byte_end":555105,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ Only EDNS version 0 is currently defined.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":555110,"byte_end":555155,"line_start":380,"line_end":380,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2443},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":555599,"byte_end":555608,"line_start":393,"line_end":393,"column_start":12,"column_end":21},"name":"dnssec_ok","qualname":"<OptRecord<Octets>>::dnssec_ok","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the DNSSEC OK (DO) bit.","sig":null,"attributes":[{"value":"/ Returns the value of the DNSSEC OK (DO) bit.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":555222,"byte_end":555270,"line_start":385,"line_end":385,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":555275,"byte_end":555278,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ By setting this bit, a resolver indicates that it is interested in","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":555283,"byte_end":555353,"line_start":387,"line_end":387,"column_start":5,"column_end":75}},{"value":"/ also receiving the DNSSEC-related resource records necessary to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":555358,"byte_end":555425,"line_start":388,"line_end":388,"column_start":5,"column_end":72}},{"value":"/ validate an answer. The bit and the related procedures are defined in","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":555430,"byte_end":555503,"line_start":389,"line_end":389,"column_start":5,"column_end":78}},{"value":"/ [RFC 3225].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":555508,"byte_end":555523,"line_start":390,"line_end":390,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":555528,"byte_end":555531,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ [RFC 3225]: https://tools.ietf.org/html/rfc3225","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":555536,"byte_end":555587,"line_start":392,"line_end":392,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2444},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":555725,"byte_end":555731,"line_start":398,"line_end":398,"column_start":12,"column_end":18},"name":"as_opt","qualname":"<OptRecord<Octets>>::as_opt","value":"fn (&self) -> &Opt<Octets>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the raw options.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the raw options.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":555670,"byte_end":555713,"line_start":397,"line_end":397,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":7152},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":556603,"byte_end":556615,"line_start":438,"line_end":438,"column_start":12,"column_end":24},"name":"OptionHeader","qualname":"::base::opt::OptionHeader","value":"OptionHeader {  }","parent":null,"children":[{"krate":0,"index":7153},{"krate":0,"index":7154}],"decl_id":null,"docs":" The header of an OPT option.","sig":null,"attributes":[{"value":"/ The header of an OPT option.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":556347,"byte_end":556379,"line_start":432,"line_end":432,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":556380,"byte_end":556383,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/ This header contains a 16 bit option code identifying the kind of option","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":556384,"byte_end":556460,"line_start":434,"line_end":434,"column_start":1,"column_end":77}},{"value":"/ we are dealing with and a 16 bit length describing the lenngth in octets","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":556461,"byte_end":556537,"line_start":435,"line_end":435,"column_start":1,"column_end":77}},{"value":"/ of the option data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":556538,"byte_end":556561,"line_start":436,"line_end":436,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2457},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":556857,"byte_end":556860,"line_start":449,"line_end":449,"column_start":12,"column_end":15},"name":"new","qualname":"<OptionHeader>::new","value":"fn (code: u16, len: u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new option header from code and length.\n","sig":null,"attributes":[{"value":"/ Creates a new option header from code and length.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":556792,"byte_end":556845,"line_start":448,"line_end":448,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2458},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":556978,"byte_end":556982,"line_start":454,"line_end":454,"column_start":12,"column_end":16},"name":"code","qualname":"<OptionHeader>::code","value":"fn (self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the option code.\n","sig":null,"attributes":[{"value":"/ Returns the option code.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":556938,"byte_end":556966,"line_start":453,"line_end":453,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2459},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":557081,"byte_end":557084,"line_start":459,"line_end":459,"column_start":12,"column_end":15},"name":"len","qualname":"<OptionHeader>::len","value":"fn (self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the option data.\n","sig":null,"attributes":[{"value":"/ Returns the length of the option data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":557027,"byte_end":557069,"line_start":458,"line_end":458,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":7160},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":558279,"byte_end":558286,"line_start":500,"line_end":500,"column_start":12,"column_end":19},"name":"OptIter","qualname":"::base::opt::OptIter","value":"OptIter {  }","parent":null,"children":[{"krate":0,"index":7163},{"krate":0,"index":7164}],"decl_id":null,"docs":" An iterator over the options of an OPT record.","sig":null,"attributes":[{"value":"/ An iterator over the options of an OPT record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":557817,"byte_end":557867,"line_start":492,"line_end":492,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":557868,"byte_end":557871,"line_start":493,"line_end":493,"column_start":1,"column_end":4}},{"value":"/ The iterator is generic over a specific option type. It skips over all","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":557872,"byte_end":557946,"line_start":494,"line_end":494,"column_start":1,"column_end":75}},{"value":"/ options that this type does not want to parse. It returns a result that","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":557947,"byte_end":558022,"line_start":495,"line_end":495,"column_start":1,"column_end":76}},{"value":"/ is either a parsed option or a parse error. These errors are only for the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":558023,"byte_end":558100,"line_start":496,"line_end":496,"column_start":1,"column_end":78}},{"value":"/ particular option. After such an error you can continue to iterate until","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":558101,"byte_end":558177,"line_start":497,"line_end":497,"column_start":1,"column_end":77}},{"value":"/ `None` indicates that you’ve reached the end of the record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":558178,"byte_end":558243,"line_start":498,"line_end":498,"column_start":1,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":2479},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":560276,"byte_end":560283,"line_start":559,"line_end":559,"column_start":11,"column_end":18},"name":"OptData","qualname":"::base::opt::OptData","value":"OptData: Compose + Sized","parent":null,"children":[{"krate":0,"index":2480}],"decl_id":null,"docs":" A type representing an OPT option.","sig":null,"attributes":[{"value":"/ A type representing an OPT option.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":559939,"byte_end":559977,"line_start":551,"line_end":551,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":559978,"byte_end":559981,"line_start":552,"line_end":552,"column_start":1,"column_end":4}},{"value":"/ The type needs to be able to construct the encoded option data via the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":559982,"byte_end":560056,"line_start":553,"line_end":553,"column_start":1,"column_end":75}},{"value":"/ [`Compose`] trait. In addition, it needs to be able report the option","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":560057,"byte_end":560130,"line_start":554,"line_end":554,"column_start":1,"column_end":74}},{"value":"/ code to use for the encoding via the [`code`] method.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":560131,"byte_end":560188,"line_start":555,"line_end":555,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":560189,"byte_end":560192,"line_start":556,"line_end":556,"column_start":1,"column_end":4}},{"value":"/ [`code`]: #method.code","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":560193,"byte_end":560219,"line_start":557,"line_end":557,"column_start":1,"column_end":27}},{"value":"/ [`Compose`]: ../octets/trait.Compose.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":560220,"byte_end":560265,"line_start":558,"line_end":558,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2480},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":560371,"byte_end":560375,"line_start":561,"line_end":561,"column_start":8,"column_end":12},"name":"code","qualname":"::base::opt::OptData::code","value":"fn (&self) -> OptionCode","parent":{"krate":0,"index":2479},"children":[],"decl_id":null,"docs":" Returns the option code associated with this option.\n","sig":null,"attributes":[{"value":"/ Returns the option code associated with this option.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":560307,"byte_end":560363,"line_start":560,"line_end":560,"column_start":5,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":2481},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":560551,"byte_end":560563,"line_start":568,"line_end":568,"column_start":11,"column_end":23},"name":"ParseOptData","qualname":"::base::opt::ParseOptData","value":"ParseOptData<Octets>: OptData","parent":null,"children":[{"krate":0,"index":2483}],"decl_id":null,"docs":" An OPT option that can be parsed from the record data.\n","sig":null,"attributes":[{"value":"/ An OPT option that can be parsed from the record data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":560482,"byte_end":560540,"line_start":567,"line_end":567,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2483},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":561231,"byte_end":561243,"line_start":582,"line_end":582,"column_start":8,"column_end":20},"name":"parse_option","qualname":"::base::opt::ParseOptData::parse_option","value":"fn (code: OptionCode, parser: &mut Parser<Octets>) -> Result<Option<Self>, ParseError>","parent":{"krate":0,"index":2481},"children":[],"decl_id":null,"docs":" Parses the option code data.","sig":null,"attributes":[{"value":"/ Parses the option code data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":560587,"byte_end":560619,"line_start":569,"line_end":569,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":560624,"byte_end":560627,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ The data is for an option of `code`. The function may decide whether","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":560632,"byte_end":560704,"line_start":571,"line_end":571,"column_start":5,"column_end":77}},{"value":"/ it wants to parse data for that type. It should return `Ok(None)` if","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":560709,"byte_end":560781,"line_start":572,"line_end":572,"column_start":5,"column_end":77}},{"value":"/ it doesn’t.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":560786,"byte_end":560803,"line_start":573,"line_end":573,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":560808,"byte_end":560811,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ The `parser` is positioned at the beginning of the option data and is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":560816,"byte_end":560889,"line_start":575,"line_end":575,"column_start":5,"column_end":78}},{"value":"/ is limited to the length of the data. The method only needs to parse","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":560894,"byte_end":560966,"line_start":576,"line_end":576,"column_start":5,"column_end":77}},{"value":"/ as much data as it needs. The caller has to make sure to deal with","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":560971,"byte_end":561041,"line_start":577,"line_end":577,"column_start":5,"column_end":75}},{"value":"/ data remaining in the parser.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":561046,"byte_end":561079,"line_start":578,"line_end":578,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":561084,"byte_end":561087,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ If the function doesn’t want to process the data, it must not touch","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":561092,"byte_end":561165,"line_start":580,"line_end":580,"column_start":5,"column_end":76}},{"value":"/ the parser. In particual, it must not advance it.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":561170,"byte_end":561223,"line_start":581,"line_end":581,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":2484},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":561973,"byte_end":561984,"line_start":602,"line_end":602,"column_start":11,"column_end":22},"name":"CodeOptData","qualname":"::base::opt::CodeOptData","value":"CodeOptData","parent":null,"children":[{"krate":0,"index":2485}],"decl_id":null,"docs":" A type for an OPT option for a single specific option code.","sig":null,"attributes":[{"value":"/ A type for an OPT option for a single specific option code.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":561435,"byte_end":561498,"line_start":591,"line_end":591,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":561499,"byte_end":561502,"line_start":592,"line_end":592,"column_start":1,"column_end":4}},{"value":"/ If an option can only ever process a single option, it can simply","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":561503,"byte_end":561572,"line_start":593,"line_end":593,"column_start":1,"column_end":70}},{"value":"/ implement [`Parse`] for parsing the data, [`Compose`] for composing the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":561573,"byte_end":561648,"line_start":594,"line_end":594,"column_start":1,"column_end":76}},{"value":"/ data, and this trait to state the option code. [`OptData`] and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":561649,"byte_end":561715,"line_start":595,"line_end":595,"column_start":1,"column_end":67}},{"value":"/ [`ParseOptData`] will then be available via blanket implementations.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":561716,"byte_end":561788,"line_start":596,"line_end":596,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":561789,"byte_end":561792,"line_start":597,"line_end":597,"column_start":1,"column_end":4}},{"value":"/ [`Compose`]: ../octets/trait.Compose.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":561793,"byte_end":561838,"line_start":598,"line_end":598,"column_start":1,"column_end":46}},{"value":"/ [`Parse`]: ../octets/trait.Parse.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":561839,"byte_end":561880,"line_start":599,"line_end":599,"column_start":1,"column_end":42}},{"value":"/ [`OptData`]: trait.OptData.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":561881,"byte_end":561916,"line_start":600,"line_end":600,"column_start":1,"column_end":36}},{"value":"/ [`ParseOptData`]: trait.ParseOptData.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":561917,"byte_end":561962,"line_start":601,"line_end":601,"column_start":1,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":2485},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":562038,"byte_end":562042,"line_start":604,"line_end":604,"column_start":11,"column_end":15},"name":"CODE","qualname":"::base::opt::CodeOptData::CODE","value":"OptionCode","parent":{"krate":0,"index":2484},"children":[],"decl_id":null,"docs":" The option code for this option.\n","sig":null,"attributes":[{"value":"/ The option code for this option.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":561991,"byte_end":562027,"line_start":603,"line_end":603,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":7173},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":562763,"byte_end":562777,"line_start":635,"line_end":635,"column_start":12,"column_end":26},"name":"UnknownOptData","qualname":"::base::opt::UnknownOptData","value":"UnknownOptData {  }","parent":null,"children":[{"krate":0,"index":7175},{"krate":0,"index":7176}],"decl_id":null,"docs":" An OPT option in its raw form.","sig":null,"attributes":[{"value":"/ An OPT option in its raw form.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":562617,"byte_end":562651,"line_start":631,"line_end":631,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":562652,"byte_end":562655,"line_start":632,"line_end":632,"column_start":1,"column_end":4}},{"value":"/ This type accepts any option type via its option code and raw data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":562656,"byte_end":562727,"line_start":633,"line_end":633,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2495},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":563003,"byte_end":563014,"line_start":645,"line_end":645,"column_start":12,"column_end":23},"name":"from_octets","qualname":"<UnknownOptData<Octets>>::from_octets","value":"fn (code: OptionCode, data: Octets) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new option from the code and data.\n","sig":null,"attributes":[{"value":"/ Creates a new option from the code and data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":562943,"byte_end":562991,"line_start":644,"line_end":644,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2496},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":563160,"byte_end":563164,"line_start":650,"line_end":650,"column_start":12,"column_end":16},"name":"code","qualname":"<UnknownOptData<Octets>>::code","value":"fn (&self) -> OptionCode","parent":null,"children":[],"decl_id":null,"docs":" Returns the option code of the option.\n","sig":null,"attributes":[{"value":"/ Returns the option code of the option.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":563106,"byte_end":563148,"line_start":649,"line_end":649,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2497},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":563276,"byte_end":563280,"line_start":655,"line_end":655,"column_start":12,"column_end":16},"name":"data","qualname":"<UnknownOptData<Octets>>::data","value":"fn (&self) -> &Octets","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference for to the option data.\n","sig":null,"attributes":[{"value":"/ Returns a reference for to the option data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":563217,"byte_end":563264,"line_start":654,"line_end":654,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2498},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":563394,"byte_end":563402,"line_start":660,"line_end":660,"column_start":12,"column_end":20},"name":"data_mut","qualname":"<UnknownOptData<Octets>>::data_mut","value":"fn (&mut self) -> &mut Octets","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the option data.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the option data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":563331,"byte_end":563382,"line_start":659,"line_end":659,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2499},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":563516,"byte_end":563524,"line_start":665,"line_end":665,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<UnknownOptData<Octets>>::as_slice","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of the option data.\n","sig":null,"attributes":[{"value":"/ Returns a slice of the option data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":563465,"byte_end":563504,"line_start":664,"line_end":664,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2500},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":563670,"byte_end":563682,"line_start":671,"line_end":671,"column_start":12,"column_end":24},"name":"as_slice_mut","qualname":"<UnknownOptData<Octets>>::as_slice_mut","value":"fn (&mut self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable slice of the option data.\n","sig":null,"attributes":[{"value":"/ Returns a mutable slice of the option data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":563611,"byte_end":563658,"line_start":670,"line_end":670,"column_start":5,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":2532},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rdata","qualname":"::base::rdata","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","parent":null,"children":[{"krate":0,"index":2533},{"krate":0,"index":2534},{"krate":0,"index":2535},{"krate":0,"index":2536},{"krate":0,"index":2537},{"krate":0,"index":2545},{"krate":0,"index":2547},{"krate":0,"index":2550},{"krate":0,"index":2552},{"krate":0,"index":2555},{"krate":0,"index":7183},{"krate":0,"index":7187},{"krate":0,"index":2559},{"krate":0,"index":2564},{"krate":0,"index":2568},{"krate":0,"index":2570},{"krate":0,"index":2574},{"krate":0,"index":2578},{"krate":0,"index":2581},{"krate":0,"index":2585},{"krate":0,"index":2588},{"krate":0,"index":2593},{"krate":0,"index":2596}],"decl_id":null,"docs":" Resource record data.","sig":null,"attributes":[{"value":"! Resource record data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":569097,"byte_end":569122,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":569123,"byte_end":569126,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Each resource record type has it’s own definition of the content and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":569127,"byte_end":569201,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"! formatting of its data. This module provides the basics for implementing","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":569202,"byte_end":569278,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"! specific types for this record data. The concrete implementations for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":569279,"byte_end":569352,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"! well-known record types live in the top-level [domain::rdata] module.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":569353,"byte_end":569426,"line_start":6,"line_end":6,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":569427,"byte_end":569430,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! There are three traits herein: Any type that represents record data ","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":569431,"byte_end":569503,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"! implements [`RecordData`]. Such a type can be added to a message. If","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":569504,"byte_end":569576,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"! the data can also be parsed from an existing message, the type in addition","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":569577,"byte_end":569655,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"! implements [`ParseRecordData`]. Because most types are implementations","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":569656,"byte_end":569730,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"! for exactly one record type, the [`RtypeRecordData`] trait simplifies","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":569731,"byte_end":569804,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"! implementations for such types.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":569805,"byte_end":569840,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":569841,"byte_end":569844,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! The module also provides a type, [`UnknownRecordData`], that can be used","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":569845,"byte_end":569921,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"! to deal with record types whose specification is not known (or has not","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":569922,"byte_end":569996,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"! been implemented yet).","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":569997,"byte_end":570023,"line_start":17,"line_end":17,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":570024,"byte_end":570027,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! [`RecordData`]: trait.RecordData.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":570028,"byte_end":570069,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"! [`ParseRecordData`]: trait.ParseRecordData.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":570070,"byte_end":570121,"line_start":20,"line_end":20,"column_start":1,"column_end":52}},{"value":"! [`RtypeRecordData`]: trait.RtypeRecordData.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":570122,"byte_end":570173,"line_start":21,"line_end":21,"column_start":1,"column_end":52}},{"value":"! [`UnknownRecorddata`]: struct.UnknownRecordData.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":570174,"byte_end":570230,"line_start":22,"line_end":22,"column_start":1,"column_end":57}},{"value":"! [domain::rdata]: ../../rdata/index.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":570231,"byte_end":570274,"line_start":23,"line_end":23,"column_start":1,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":2545},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":571091,"byte_end":571101,"line_start":49,"line_end":49,"column_start":11,"column_end":21},"name":"RecordData","qualname":"::base::rdata::RecordData","value":"RecordData: Compose + Sized","parent":null,"children":[{"krate":0,"index":2546}],"decl_id":null,"docs":" A type that represents record data.","sig":null,"attributes":[{"value":"/ A type that represents record data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":570723,"byte_end":570762,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":570763,"byte_end":570766,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The type needs to be able to encode the record data into a DNS message","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":570767,"byte_end":570841,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ via the [`Compose`] trait. In addition, it needs to be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":570842,"byte_end":570900,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/ able to provide the record type of a record with a value’s data via the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":570901,"byte_end":570978,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ [`rtype`] method.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":570979,"byte_end":571000,"line_start":45,"line_end":45,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":571001,"byte_end":571004,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ [`Compose`]: ../compose/trait.Compose.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":571005,"byte_end":571051,"line_start":47,"line_end":47,"column_start":1,"column_end":47}},{"value":"/ [`rtype`]: #method.rtype","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":571052,"byte_end":571080,"line_start":48,"line_end":48,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2546},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":571339,"byte_end":571344,"line_start":54,"line_end":54,"column_start":8,"column_end":13},"name":"rtype","qualname":"::base::rdata::RecordData::rtype","value":"fn (&self) -> Rtype","parent":{"krate":0,"index":2545},"children":[],"decl_id":null,"docs":" Returns the record type associated with this record data instance.","sig":null,"attributes":[{"value":"/ Returns the record type associated with this record data instance.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":571125,"byte_end":571195,"line_start":50,"line_end":50,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":571200,"byte_end":571203,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ This is a method rather than an associated function to allow one","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":571208,"byte_end":571276,"line_start":52,"line_end":52,"column_start":5,"column_end":73}},{"value":"/ type to be used for several real record types.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":571281,"byte_end":571331,"line_start":53,"line_end":53,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":2547},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":571804,"byte_end":571819,"line_start":67,"line_end":67,"column_start":11,"column_end":26},"name":"ParseRecordData","qualname":"::base::rdata::ParseRecordData","value":"ParseRecordData<Ref>: RecordData","parent":null,"children":[{"krate":0,"index":2549}],"decl_id":null,"docs":" A record data type that can be parsed from a message.","sig":null,"attributes":[{"value":"/ A record data type that can be parsed from a message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":571446,"byte_end":571503,"line_start":60,"line_end":60,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":571504,"byte_end":571507,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ When record data types are generic – typically over a domain name type –,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":571508,"byte_end":571589,"line_start":62,"line_end":62,"column_start":1,"column_end":78}},{"value":"/ they may not in all cases be parseable. They may still represent record","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":571590,"byte_end":571665,"line_start":63,"line_end":63,"column_start":1,"column_end":76}},{"value":"/ data to be used when constructing the message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":571666,"byte_end":571716,"line_start":64,"line_end":64,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":571717,"byte_end":571720,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ To reflect this asymmetry, parsing of record data has its own trait.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":571721,"byte_end":571793,"line_start":66,"line_end":66,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2549},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":572494,"byte_end":572504,"line_start":81,"line_end":81,"column_start":8,"column_end":18},"name":"parse_data","qualname":"::base::rdata::ParseRecordData::parse_data","value":"fn (rtype: Rtype, parser: &mut Parser<Ref>) -> Result<Option<Self>, ParseError>","parent":{"krate":0,"index":2547},"children":[],"decl_id":null,"docs":" Parses the record data.","sig":null,"attributes":[{"value":"/ Parses the record data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":571843,"byte_end":571870,"line_start":68,"line_end":68,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":571875,"byte_end":571878,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The record data is for a record of type `rtype`. The function may","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":571883,"byte_end":571952,"line_start":70,"line_end":70,"column_start":5,"column_end":74}},{"value":"/ decide whether it wants to parse data for that type. It should return","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":571957,"byte_end":572030,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ `Ok(None)` if it doesn’t.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":572035,"byte_end":572066,"line_start":72,"line_end":72,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":572071,"byte_end":572074,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ The `parser` is positioned at the beginning of the record data and is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":572079,"byte_end":572152,"line_start":74,"line_end":74,"column_start":5,"column_end":78}},{"value":"/ is limited to the length of the data. The method only needs to parse","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":572157,"byte_end":572229,"line_start":75,"line_end":75,"column_start":5,"column_end":77}},{"value":"/ as much data as it needs. The caller has to make sure to deal with","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":572234,"byte_end":572304,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ data remaining in the parser.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":572309,"byte_end":572342,"line_start":77,"line_end":77,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":572347,"byte_end":572350,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ If the function doesn’t want to process the data, it must not touch","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":572355,"byte_end":572428,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ the parser. In particual, it must not advance it.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":572433,"byte_end":572486,"line_start":80,"line_end":80,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":2550},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":573463,"byte_end":573478,"line_start":105,"line_end":105,"column_start":11,"column_end":26},"name":"RtypeRecordData","qualname":"::base::rdata::RtypeRecordData","value":"RtypeRecordData","parent":null,"children":[{"krate":0,"index":2551}],"decl_id":null,"docs":" A type for record data for a single specific record type.","sig":null,"attributes":[{"value":"/ A type for record data for a single specific record type.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":572689,"byte_end":572750,"line_start":90,"line_end":90,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":572751,"byte_end":572754,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ If a record data type only ever processes one single record type, things","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":572755,"byte_end":572831,"line_start":92,"line_end":92,"column_start":1,"column_end":77}},{"value":"/ can be a lot simpler. The type can be given as an associated constant","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":572832,"byte_end":572905,"line_start":93,"line_end":93,"column_start":1,"column_end":74}},{"value":"/ which can be used to implement [`RecordData`]. In addition, parsing can","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":572906,"byte_end":572981,"line_start":94,"line_end":94,"column_start":1,"column_end":76}},{"value":"/ be done atop an implementation of the [`Parse`] trait.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":572982,"byte_end":573040,"line_start":95,"line_end":95,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":573041,"byte_end":573044,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ This trait provides such a simplification by providing [`RecordData`]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":573045,"byte_end":573118,"line_start":97,"line_end":97,"column_start":1,"column_end":74}},{"value":"/ for all types implementing it and the other requirements for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":573119,"byte_end":573183,"line_start":98,"line_end":98,"column_start":1,"column_end":65}},{"value":"/ [`RecordData`]. If the type additionally implements [`Parse`], it will","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":573184,"byte_end":573258,"line_start":99,"line_end":99,"column_start":1,"column_end":75}},{"value":"/ also receive a [`ParseRecordData`] implementation.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":573259,"byte_end":573313,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":573314,"byte_end":573317,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ [`RecordData`]: trait.RecordData.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":573318,"byte_end":573359,"line_start":102,"line_end":102,"column_start":1,"column_end":42}},{"value":"/ [`ParseRecordData`]: trait.ParseRecordData.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":573360,"byte_end":573411,"line_start":103,"line_end":103,"column_start":1,"column_end":52}},{"value":"/ [`Parse`]: ../parse/trait.Parse.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":573412,"byte_end":573452,"line_start":104,"line_end":104,"column_start":1,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":2551},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":573540,"byte_end":573545,"line_start":107,"line_end":107,"column_start":11,"column_end":16},"name":"RTYPE","qualname":"::base::rdata::RtypeRecordData::RTYPE","value":"Rtype","parent":{"krate":0,"index":2550},"children":[],"decl_id":null,"docs":" The record type of a value of this type.\n","sig":null,"attributes":[{"value":"/ The record type of a value of this type.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":573485,"byte_end":573529,"line_start":106,"line_end":106,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":7183},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":575310,"byte_end":575327,"line_start":156,"line_end":156,"column_start":12,"column_end":29},"name":"UnknownRecordData","qualname":"::base::rdata::UnknownRecordData","value":"UnknownRecordData {  }","parent":null,"children":[{"krate":0,"index":7185},{"krate":0,"index":7186}],"decl_id":null,"docs":" A type for parsing any type of record data.","sig":null,"attributes":[{"value":"/ A type for parsing any type of record data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":574118,"byte_end":574165,"line_start":132,"line_end":132,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":574166,"byte_end":574169,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ This type accepts any record type and stores the plain, unparsed record","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":574170,"byte_end":574245,"line_start":134,"line_end":134,"column_start":1,"column_end":76}},{"value":"/ data as an octets sequence.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":574246,"byte_end":574277,"line_start":135,"line_end":135,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":574278,"byte_end":574281,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ Because some record types allow compressed domain names in their record","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":574282,"byte_end":574357,"line_start":137,"line_end":137,"column_start":1,"column_end":76}},{"value":"/ data, this type cannot be used safely with these record types. For these","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":574358,"byte_end":574434,"line_start":138,"line_end":138,"column_start":1,"column_end":77}},{"value":"/ record types, the structure of the content needs to be known.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":574435,"byte_end":574500,"line_start":139,"line_end":139,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":574501,"byte_end":574504,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ [RFC 3597] limits the types for which compressed names are allowed in the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":574505,"byte_end":574582,"line_start":141,"line_end":141,"column_start":1,"column_end":78}},{"value":"/ record data to those defined in [RFC 1035] itself. Specific types for all","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":574583,"byte_end":574660,"line_start":142,"line_end":142,"column_start":1,"column_end":78}},{"value":"/ these record types exist in [`domain::rdata::rfc1035`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":574661,"byte_end":574720,"line_start":143,"line_end":143,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":574721,"byte_end":574724,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ Ultimately, you should only use this type for record types for which there","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":574725,"byte_end":574803,"line_start":145,"line_end":145,"column_start":1,"column_end":79}},{"value":"/ is no implementation available in this crate. The two types","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":574804,"byte_end":574867,"line_start":146,"line_end":146,"column_start":1,"column_end":64}},{"value":"/ [`AllRecordData`] and [`MasterRecordData`] provide a convenient way to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":574868,"byte_end":574942,"line_start":147,"line_end":147,"column_start":1,"column_end":75}},{"value":"/ always use the correct record data type.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":574943,"byte_end":574987,"line_start":148,"line_end":148,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":574988,"byte_end":574991,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ [`AllRecordData`]: ../../rdata/enum.AllRecordData.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":574992,"byte_end":575050,"line_start":150,"line_end":150,"column_start":1,"column_end":59}},{"value":"/ [`MasterRecordData`]: ../../rdata/enum.MasterRecordData.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":575051,"byte_end":575115,"line_start":151,"line_end":151,"column_start":1,"column_end":65}},{"value":"/ [RFC 1035]: https://tools.ietf.org/html/rfc1035","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":575116,"byte_end":575167,"line_start":152,"line_end":152,"column_start":1,"column_end":52}},{"value":"/ [RFC 3597]: https://tools.ietf.org/html/rfc3597","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":575168,"byte_end":575219,"line_start":153,"line_end":153,"column_start":1,"column_end":52}},{"value":"/ [`domain::rdata::rfc1035]: ../../rdata/rfc1035/index.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":575220,"byte_end":575281,"line_start":154,"line_end":154,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2561},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":575566,"byte_end":575577,"line_start":166,"line_end":166,"column_start":12,"column_end":23},"name":"from_octets","qualname":"<UnknownRecordData<Octets>>::from_octets","value":"fn (rtype: Rtype, data: Octets) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates generic record data from a bytes value contain the data.\n","sig":null,"attributes":[{"value":"/ Creates generic record data from a bytes value contain the data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":575486,"byte_end":575554,"line_start":165,"line_end":165,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2562},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":575726,"byte_end":575731,"line_start":171,"line_end":171,"column_start":12,"column_end":17},"name":"rtype","qualname":"<UnknownRecordData<Octets>>::rtype","value":"fn (&self) -> Rtype","parent":null,"children":[],"decl_id":null,"docs":" Returns the record type this data is for.\n","sig":null,"attributes":[{"value":"/ Returns the record type this data is for.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":575669,"byte_end":575714,"line_start":170,"line_end":170,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2563},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":575835,"byte_end":575839,"line_start":176,"line_end":176,"column_start":12,"column_end":16},"name":"data","qualname":"<UnknownRecordData<Octets>>::data","value":"fn (&self) -> &Octets","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the record data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the record data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":575780,"byte_end":575823,"line_start":175,"line_end":175,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":2599},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"record","qualname":"::base::record","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","parent":null,"children":[{"krate":0,"index":2600},{"krate":0,"index":2603},{"krate":0,"index":2604},{"krate":0,"index":2605},{"krate":0,"index":2608},{"krate":0,"index":2611},{"krate":0,"index":2619},{"krate":0,"index":7190},{"krate":0,"index":7197},{"krate":0,"index":2622},{"krate":0,"index":2638},{"krate":0,"index":2642},{"krate":0,"index":2646},{"krate":0,"index":2652},{"krate":0,"index":2655},{"krate":0,"index":2661},{"krate":0,"index":2665},{"krate":0,"index":2671},{"krate":0,"index":2676},{"krate":0,"index":2681},{"krate":0,"index":2692},{"krate":0,"index":2696},{"krate":0,"index":2700},{"krate":0,"index":2715},{"krate":0,"index":2724},{"krate":0,"index":2733},{"krate":0,"index":2742},{"krate":0,"index":7201},{"krate":0,"index":7208},{"krate":0,"index":2751},{"krate":0,"index":2754},{"krate":0,"index":2758},{"krate":0,"index":2761},{"krate":0,"index":2766},{"krate":0,"index":2775},{"krate":0,"index":2779},{"krate":0,"index":2781},{"krate":0,"index":2785},{"krate":0,"index":2788},{"krate":0,"index":2792},{"krate":0,"index":2796},{"krate":0,"index":2804},{"krate":0,"index":7211},{"krate":0,"index":7215},{"krate":0,"index":2807},{"krate":0,"index":2815},{"krate":0,"index":2821},{"krate":0,"index":2825},{"krate":0,"index":2827},{"krate":0,"index":7218},{"krate":0,"index":7251},{"krate":0,"index":7248},{"krate":0,"index":7244},{"krate":0,"index":7237},{"krate":0,"index":7240},{"krate":0,"index":7229},{"krate":0,"index":7232},{"krate":0,"index":2831},{"krate":0,"index":2835},{"krate":0,"index":2838}],"decl_id":null,"docs":" Resource Records.","sig":null,"attributes":[{"value":"! Resource Records.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":579910,"byte_end":579931,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":579932,"byte_end":579935,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module defines types and traits related to DNS resource records. The","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":579936,"byte_end":580013,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"! most complete type is [`Record`] which contains a complete record for a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":580014,"byte_end":580089,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"! certain record type. [`RecordHeader`] contains the data from a record’s","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":580090,"byte_end":580167,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"! header, the first couple of octets common to all records. Finally,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":580168,"byte_end":580238,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"! [`ParsedRecord`] is similar to [`Record`] but contains the record data","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":580239,"byte_end":580313,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"! in its raw, encoded form.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":580314,"byte_end":580343,"line_start":8,"line_end":8,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":580344,"byte_end":580347,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! The [`AsRecord`] trait is used by the message builder to consider","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":580348,"byte_end":580417,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"! different representations of records.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":580418,"byte_end":580459,"line_start":11,"line_end":11,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":580460,"byte_end":580463,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! [`AsRecord`]: trait.AsRecord.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":580464,"byte_end":580501,"line_start":13,"line_end":13,"column_start":1,"column_end":38}},{"value":"! [`Record`]: struct.Record.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":580502,"byte_end":580536,"line_start":14,"line_end":14,"column_start":1,"column_end":35}},{"value":"! [`RecordHeader`]: struct.RecordHeader.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":580537,"byte_end":580583,"line_start":15,"line_end":15,"column_start":1,"column_end":47}},{"value":"! [`ParsedRecord`]: struct.ParsedRecord.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":580584,"byte_end":580630,"line_start":16,"line_end":16,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":7190},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":583801,"byte_end":583807,"line_start":82,"line_end":82,"column_start":12,"column_end":18},"name":"Record","qualname":"::base::record::Record","value":"Record {  }","parent":null,"children":[{"krate":0,"index":7193},{"krate":0,"index":7194},{"krate":0,"index":7195},{"krate":0,"index":7196}],"decl_id":null,"docs":" A DNS resource record.","sig":null,"attributes":[{"value":"/ A DNS resource record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":581014,"byte_end":581040,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":581041,"byte_end":581044,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ All information available through the DNS is stored in resource records.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":581045,"byte_end":581121,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ They have a three part key of a domain name, resource record type, and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":581122,"byte_end":581196,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ class. Data is arranged in a tree which is navigated using the domain","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":581197,"byte_end":581270,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"/ name. Each node in the tree carries a label, starting with the root","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":581271,"byte_end":581342,"line_start":36,"line_end":36,"column_start":1,"column_end":72}},{"value":"/ label as the top-most node. The tree is traversed by stepping through the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":581343,"byte_end":581420,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ name from right to left, finding a child node carring the label of each","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":581421,"byte_end":581496,"line_start":38,"line_end":38,"column_start":1,"column_end":76}},{"value":"/ step. The domain name resulting from this traversal is part of the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":581497,"byte_end":581567,"line_start":39,"line_end":39,"column_start":1,"column_end":71}},{"value":"/ record itself. It is called the *owner* of the record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":581568,"byte_end":581626,"line_start":40,"line_end":40,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":581627,"byte_end":581630,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The record type describes the kind of data the record holds, such as IP","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":581631,"byte_end":581706,"line_start":42,"line_end":42,"column_start":1,"column_end":76}},{"value":"/ addresses. The class, finally, describes which sort of network the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":581707,"byte_end":581777,"line_start":43,"line_end":43,"column_start":1,"column_end":71}},{"value":"/ information is for. The DNS was originally intended to be used for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":581778,"byte_end":581848,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/ networks other than the Internet as well. In practice, the only relevant","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":581849,"byte_end":581925,"line_start":45,"line_end":45,"column_start":1,"column_end":77}},{"value":"/ class is IN, the Internet. Note that each class has its own tree of nodes.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":581926,"byte_end":582004,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":582005,"byte_end":582008,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The payload of a resource record is its data. Its purpose, meaning, and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":582009,"byte_end":582084,"line_start":48,"line_end":48,"column_start":1,"column_end":76}},{"value":"/ format is determined by the record type (technically, also its class).","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":582085,"byte_end":582159,"line_start":49,"line_end":49,"column_start":1,"column_end":75}},{"value":"/ For each unique three-part key there can be multiple resource records.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":582160,"byte_end":582234,"line_start":50,"line_end":50,"column_start":1,"column_end":75}},{"value":"/ All these records for the same key are called *resource record sets,*","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":582235,"byte_end":582308,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/ most often shortened to ‘RRset.’","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":582309,"byte_end":582349,"line_start":52,"line_end":52,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":582350,"byte_end":582353,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ There is one more piece of data: the TTL or time to live. This value","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":582354,"byte_end":582426,"line_start":54,"line_end":54,"column_start":1,"column_end":73}},{"value":"/ says how long a record remains valid before it should be refreshed from","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":582427,"byte_end":582502,"line_start":55,"line_end":55,"column_start":1,"column_end":76}},{"value":"/ its original source, given in seconds. The TTL is used to add caching","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":582503,"byte_end":582576,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/ facilities to the DNS.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":582577,"byte_end":582603,"line_start":57,"line_end":57,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":582604,"byte_end":582607,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Values of the `Record` type represent one single resource record. Since","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":582608,"byte_end":582683,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ there are currently more than eighty record types—see [`Rtype`] for a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":582684,"byte_end":582759,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/ complete list—, the type is generic over a trait for record data. This","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":582760,"byte_end":582836,"line_start":61,"line_end":61,"column_start":1,"column_end":75}},{"value":"/ trait holds both the record type value and the record data as they are","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":582837,"byte_end":582911,"line_start":62,"line_end":62,"column_start":1,"column_end":75}},{"value":"/ inseparably entwined.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":582912,"byte_end":582937,"line_start":63,"line_end":63,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":582938,"byte_end":582941,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Because a record’s owner is a domain name, the `Record` type is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":582942,"byte_end":583011,"line_start":65,"line_end":65,"column_start":1,"column_end":68}},{"value":"/ additionally generic over the domain name type is for it. ","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":583012,"byte_end":583074,"line_start":66,"line_end":66,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":583075,"byte_end":583078,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ There is three ways to create a record value. First, you can make one","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":583079,"byte_end":583152,"line_start":68,"line_end":68,"column_start":1,"column_end":74}},{"value":"/ yourself using the [`new`] function. It will neatly take care of all","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":583153,"byte_end":583225,"line_start":69,"line_end":69,"column_start":1,"column_end":73}},{"value":"/ the generics through type inference. Secondly, you can parse a record","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":583226,"byte_end":583299,"line_start":70,"line_end":70,"column_start":1,"column_end":74}},{"value":"/ from an existing message. [`Message`] and its friends provide a way to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":583300,"byte_end":583374,"line_start":71,"line_end":71,"column_start":1,"column_end":75}},{"value":"/ do that; see there for all the details. Finally, you can scan a record","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":583375,"byte_end":583449,"line_start":72,"line_end":72,"column_start":1,"column_end":75}},{"value":"/ from master data (aka zonefiles). See the [`domain::master`] module for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":583450,"byte_end":583525,"line_start":73,"line_end":73,"column_start":1,"column_end":76}},{"value":"/ that.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":583526,"byte_end":583535,"line_start":74,"line_end":74,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":583536,"byte_end":583539,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ [`new`]: #method.new","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":583540,"byte_end":583564,"line_start":76,"line_end":76,"column_start":1,"column_end":25}},{"value":"/ [`Message`]: ../message/struct.Message.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":583565,"byte_end":583612,"line_start":77,"line_end":77,"column_start":1,"column_end":48}},{"value":"/ [`MessageBuilder`]: ../message_builder/struct.MessageBuilder.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":583613,"byte_end":583682,"line_start":78,"line_end":78,"column_start":1,"column_end":70}},{"value":"/ [`Rtype`]: ../../iana/enum.Rtype.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":583683,"byte_end":583724,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/ [`domain::master`]: ../../master/index.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":583725,"byte_end":583772,"line_start":80,"line_end":80,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2625},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":584208,"byte_end":584211,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"new","qualname":"<Record<Name, Data>>::new","value":"fn (owner: Name, class: Class, ttl: u32, data: Data) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new record from its parts.\n","sig":null,"attributes":[{"value":"/ Creates a new record from its parts.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":584156,"byte_end":584196,"line_start":100,"line_end":100,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2626},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":584509,"byte_end":584520,"line_start":109,"line_end":109,"column_start":12,"column_end":23},"name":"from_record","qualname":"<Record<Name, Data>>::from_record","value":"fn <NN, DD> (record: Record<NN, DD>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new record from a compatible record.","sig":null,"attributes":[{"value":"/ Creates a new record from a compatible record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":584325,"byte_end":584375,"line_start":105,"line_end":105,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":584380,"byte_end":584383,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This function only exists because the equivalent `From` implementation","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":584388,"byte_end":584462,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ is currently not possible,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":584467,"byte_end":584497,"line_start":108,"line_end":108,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2629},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":584948,"byte_end":584953,"line_start":123,"line_end":123,"column_start":12,"column_end":17},"name":"owner","qualname":"<Record<Name, Data>>::owner","value":"fn (&self) -> &Name","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the owner domain name.","sig":null,"attributes":[{"value":"/ Returns a reference to the owner domain name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":584758,"byte_end":584807,"line_start":119,"line_end":119,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":584812,"byte_end":584815,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ The owner of a record is the domain name that specifies the node in","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":584820,"byte_end":584891,"line_start":121,"line_end":121,"column_start":5,"column_end":76}},{"value":"/ the DNS tree this record belongs to.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":584896,"byte_end":584936,"line_start":122,"line_end":122,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2630},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":585043,"byte_end":585048,"line_start":128,"line_end":128,"column_start":12,"column_end":17},"name":"rtype","qualname":"<Record<Name, Data>>::rtype","value":"fn (&self) -> Rtype","parent":null,"children":[],"decl_id":null,"docs":" Returns the record type.\n","sig":null,"attributes":[{"value":"/ Returns the record type.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":585003,"byte_end":585031,"line_start":127,"line_end":127,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2631},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":585172,"byte_end":585177,"line_start":134,"line_end":134,"column_start":12,"column_end":17},"name":"class","qualname":"<Record<Name, Data>>::class","value":"fn (&self) -> Class","parent":null,"children":[],"decl_id":null,"docs":" Returns the record class.\n","sig":null,"attributes":[{"value":"/ Returns the record class.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":585131,"byte_end":585160,"line_start":133,"line_end":133,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2632},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":585268,"byte_end":585277,"line_start":139,"line_end":139,"column_start":12,"column_end":21},"name":"set_class","qualname":"<Record<Name, Data>>::set_class","value":"fn (&mut self, class: Class) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the record’s class.\n","sig":null,"attributes":[{"value":"/ Sets the record’s class.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":585226,"byte_end":585256,"line_start":138,"line_end":138,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2633},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":585395,"byte_end":585398,"line_start":144,"line_end":144,"column_start":12,"column_end":15},"name":"ttl","qualname":"<Record<Name, Data>>::ttl","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the record’s time-to-live.\n","sig":null,"attributes":[{"value":"/ Returns the record’s time-to-live.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":585343,"byte_end":585383,"line_start":143,"line_end":143,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2634},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":585492,"byte_end":585499,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<Record<Name, Data>>::set_ttl","value":"fn (&mut self, ttl: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the record’s time-to-live.\n","sig":null,"attributes":[{"value":"/ Sets the record’s time-to-live.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":585443,"byte_end":585480,"line_start":148,"line_end":148,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2635},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":585611,"byte_end":585615,"line_start":154,"line_end":154,"column_start":12,"column_end":16},"name":"data","qualname":"<Record<Name, Data>>::data","value":"fn (&self) -> &Data","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the record data.\n","sig":null,"attributes":[{"value":"/ Return a reference to the record data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":585557,"byte_end":585599,"line_start":153,"line_end":153,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2636},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":585727,"byte_end":585735,"line_start":159,"line_end":159,"column_start":12,"column_end":20},"name":"data_mut","qualname":"<Record<Name, Data>>::data_mut","value":"fn (&mut self) -> &mut Data","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the record data.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the record data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":585664,"byte_end":585715,"line_start":158,"line_end":158,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2637},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":585850,"byte_end":585859,"line_start":164,"line_end":164,"column_start":12,"column_end":21},"name":"into_data","qualname":"<Record<Name, Data>>::into_data","value":"fn (self) -> Data","parent":null,"children":[],"decl_id":null,"docs":" Trades the record for its record data.\n","sig":null,"attributes":[{"value":"/ Trades the record for its record data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":585796,"byte_end":585838,"line_start":163,"line_end":163,"column_start":5,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":2700},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":591558,"byte_end":591566,"line_start":354,"line_end":354,"column_start":11,"column_end":19},"name":"AsRecord","qualname":"::base::record::AsRecord","value":"AsRecord","parent":null,"children":[{"krate":0,"index":2701},{"krate":0,"index":2702},{"krate":0,"index":2703},{"krate":0,"index":2704},{"krate":0,"index":2705},{"krate":0,"index":2706},{"krate":0,"index":2707},{"krate":0,"index":2711}],"decl_id":null,"docs":" A helper trait allowing construction of records on the fly.","sig":null,"attributes":[{"value":"/ A helper trait allowing construction of records on the fly.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":590882,"byte_end":590945,"line_start":340,"line_end":340,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":590946,"byte_end":590949,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ The trait’s primary users arer the three record section buider type of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":590950,"byte_end":591026,"line_start":342,"line_end":342,"column_start":1,"column_end":75}},{"value":"/ the [message builder] system. Their `push` methods accept anything that","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":591027,"byte_end":591102,"line_start":343,"line_end":343,"column_start":1,"column_end":76}},{"value":"/ implements this trait.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":591103,"byte_end":591129,"line_start":344,"line_end":344,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":591130,"byte_end":591133,"line_start":345,"line_end":345,"column_start":1,"column_end":4}},{"value":"/ Implementations are provided for [`Record`] values and references. In","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":591134,"byte_end":591207,"line_start":346,"line_end":346,"column_start":1,"column_end":74}},{"value":"/ addition, a tuple of a domain name, class, TTL, and record data can be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":591208,"byte_end":591282,"line_start":347,"line_end":347,"column_start":1,"column_end":75}},{"value":"/ used as this trait, saving the detour of constructing a record first.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":591283,"byte_end":591356,"line_start":348,"line_end":348,"column_start":1,"column_end":74}},{"value":"/ Since the class is pretty much always `Class::In`, it can be left out in","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":591357,"byte_end":591433,"line_start":349,"line_end":349,"column_start":1,"column_end":77}},{"value":"/ this case.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":591434,"byte_end":591448,"line_start":350,"line_end":350,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":591449,"byte_end":591452,"line_start":351,"line_end":351,"column_start":1,"column_end":4}},{"value":"/ [`Class::In`]: ../iana/class/enum.Class.html#variant.In","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":591453,"byte_end":591512,"line_start":352,"line_end":352,"column_start":1,"column_end":60}},{"value":"/ [`Record`]: struct.Record.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":591513,"byte_end":591547,"line_start":353,"line_end":353,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":2701},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":591632,"byte_end":591636,"line_start":356,"line_end":356,"column_start":10,"column_end":14},"name":"Name","qualname":"::base::record::AsRecord::Name","value":"type Name: ToDname;","parent":{"krate":0,"index":2700},"children":[],"decl_id":null,"docs":" The type of the record’s owner domain name.\n","sig":null,"attributes":[{"value":"/ The type of the record’s owner domain name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":591573,"byte_end":591622,"line_start":355,"line_end":355,"column_start":5,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":2702},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":591694,"byte_end":591698,"line_start":359,"line_end":359,"column_start":10,"column_end":14},"name":"Data","qualname":"::base::record::AsRecord::Data","value":"type Data: RecordData;","parent":{"krate":0,"index":2700},"children":[],"decl_id":null,"docs":" The type of the record data.\n","sig":null,"attributes":[{"value":"/ The type of the record data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":591652,"byte_end":591684,"line_start":358,"line_end":358,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2703},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":591774,"byte_end":591779,"line_start":362,"line_end":362,"column_start":8,"column_end":13},"name":"owner","qualname":"::base::record::AsRecord::owner","value":"fn (&self) -> &Self::Name","parent":{"krate":0,"index":2700},"children":[],"decl_id":null,"docs":" Returns a reference to the owner domain name.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the owner domain name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":591717,"byte_end":591766,"line_start":361,"line_end":361,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2704},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":591849,"byte_end":591854,"line_start":365,"line_end":365,"column_start":8,"column_end":13},"name":"class","qualname":"::base::record::AsRecord::class","value":"fn (&self) -> Class","parent":{"krate":0,"index":2700},"children":[],"decl_id":null,"docs":" Returns the record’s class.\n","sig":null,"attributes":[{"value":"/ Returns the record’s class.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":591808,"byte_end":591841,"line_start":364,"line_end":364,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2705},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":591916,"byte_end":591919,"line_start":368,"line_end":368,"column_start":8,"column_end":11},"name":"ttl","qualname":"::base::record::AsRecord::ttl","value":"fn (&self) -> u32","parent":{"krate":0,"index":2700},"children":[],"decl_id":null,"docs":" Returns the record’s TTL:\n","sig":null,"attributes":[{"value":"/ Returns the record’s TTL:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":591877,"byte_end":591908,"line_start":367,"line_end":367,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2706},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":591991,"byte_end":591995,"line_start":371,"line_end":371,"column_start":8,"column_end":12},"name":"data","qualname":"::base::record::AsRecord::data","value":"fn (&self) -> &Self::Data","parent":{"krate":0,"index":2700},"children":[],"decl_id":null,"docs":" Returns a reference to the record data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the record data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":591940,"byte_end":591983,"line_start":370,"line_end":370,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2707},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":592064,"byte_end":592078,"line_start":374,"line_end":374,"column_start":8,"column_end":22},"name":"compose_record","qualname":"::base::record::AsRecord::compose_record","value":"fn <T> (&self, target: &mut T) -> Result<(), ShortBuf>","parent":{"krate":0,"index":2700},"children":[],"decl_id":null,"docs":" Produces the encoded record.\n","sig":null,"attributes":[{"value":"/ Produces the encoded record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":592024,"byte_end":592056,"line_start":373,"line_end":373,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2711},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":592546,"byte_end":592570,"line_start":388,"line_end":388,"column_start":8,"column_end":32},"name":"compose_record_canonical","qualname":"::base::record::AsRecord::compose_record_canonical","value":"fn <T> (&self, target: &mut T) -> Result<(), ShortBuf>","parent":{"krate":0,"index":2700},"children":[],"decl_id":null,"docs":" Produces the canonically encoded record.\n","sig":null,"attributes":[{"value":"/ Produces the canonically encoded record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":592494,"byte_end":592538,"line_start":387,"line_end":387,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":7201},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":594702,"byte_end":594714,"line_start":456,"line_end":456,"column_start":12,"column_end":24},"name":"RecordHeader","qualname":"::base::record::RecordHeader","value":"RecordHeader {  }","parent":null,"children":[{"krate":0,"index":7203},{"krate":0,"index":7204},{"krate":0,"index":7205},{"krate":0,"index":7206},{"krate":0,"index":7207}],"decl_id":null,"docs":" The header of a resource record.","sig":null,"attributes":[{"value":"/ The header of a resource record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":594312,"byte_end":594348,"line_start":447,"line_end":447,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":594349,"byte_end":594352,"line_start":448,"line_end":448,"column_start":1,"column_end":4}},{"value":"/ This type encapsulates the common header of a resource record. It consists","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":594353,"byte_end":594431,"line_start":449,"line_end":449,"column_start":1,"column_end":79}},{"value":"/ of the owner, record type, class, TTL, and the length of the record data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":594432,"byte_end":594509,"line_start":450,"line_end":450,"column_start":1,"column_end":78}},{"value":"/ It is effectively a helper type for dealing with resource records encoded","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":594510,"byte_end":594587,"line_start":451,"line_end":451,"column_start":1,"column_end":78}},{"value":"/ in a DNS message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":594588,"byte_end":594609,"line_start":452,"line_end":452,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":594610,"byte_end":594613,"line_start":453,"line_end":453,"column_start":1,"column_end":4}},{"value":"/ See [`Record`] for more details about resource records.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":594614,"byte_end":594673,"line_start":454,"line_end":454,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2753},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":594909,"byte_end":594912,"line_start":466,"line_end":466,"column_start":12,"column_end":15},"name":"new","qualname":"<RecordHeader<Name>>::new","value":"fn (owner: Name, rtype: Rtype, class: Class, ttl: u32, rdlen: u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new record header from its components.\n","sig":null,"attributes":[{"value":"/ Creates a new record header from its components.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":594845,"byte_end":594897,"line_start":465,"line_end":465,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2756},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":595318,"byte_end":595332,"line_start":482,"line_end":482,"column_start":12,"column_end":26},"name":"parse_and_skip","qualname":"<RecordHeader<Name>>::parse_and_skip","value":"fn <Ref> (parser: &mut Parser<Ref>) -> Result<Self, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Parses a record header and then skips over the data.","sig":null,"attributes":[{"value":"/ Parses a record header and then skips over the data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":595134,"byte_end":595190,"line_start":478,"line_end":478,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":595195,"byte_end":595198,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ If the function succeeds, the parser will be positioned right behind","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":595203,"byte_end":595275,"line_start":480,"line_end":480,"column_start":5,"column_end":77}},{"value":"/ the end of the record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":595280,"byte_end":595306,"line_start":481,"line_end":481,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2763},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":596487,"byte_end":596504,"line_start":515,"line_end":515,"column_start":12,"column_end":29},"name":"parse_into_record","qualname":"<RecordHeader<ParsedDname<Ref>>>::parse_into_record","value":"fn <Data> (self, parser: &mut Parser<Ref>) -> Result<Option<Record<ParsedDname<Ref>, Data>>, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Parses the remainder of the record and returns it.","sig":null,"attributes":[{"value":"/ Parses the remainder of the record and returns it.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":596080,"byte_end":596134,"line_start":508,"line_end":508,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":596139,"byte_end":596142,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ The method assumes that the parsers is currently positioned right","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":596147,"byte_end":596216,"line_start":510,"line_end":510,"column_start":5,"column_end":74}},{"value":"/ after the end of the record header. If the record data type `D`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":596221,"byte_end":596288,"line_start":511,"line_end":511,"column_start":5,"column_end":72}},{"value":"/ feels capable of parsing a record with a header of `self`, the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":596293,"byte_end":596359,"line_start":512,"line_end":512,"column_start":5,"column_end":71}},{"value":"/ method will parse the data and return a full `Record<D>`. Otherwise,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":596364,"byte_end":596436,"line_start":513,"line_end":513,"column_start":5,"column_end":77}},{"value":"/ it skips over the record data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":596441,"byte_end":596475,"line_start":514,"line_end":514,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2768},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":597212,"byte_end":597217,"line_start":538,"line_end":538,"column_start":12,"column_end":17},"name":"owner","qualname":"<RecordHeader<Name>>::owner","value":"fn (&self) -> &Name","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the owner of the record.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the owner of the record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":597149,"byte_end":597200,"line_start":537,"line_end":537,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2769},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":597321,"byte_end":597326,"line_start":543,"line_end":543,"column_start":12,"column_end":17},"name":"rtype","qualname":"<RecordHeader<Name>>::rtype","value":"fn (&self) -> Rtype","parent":null,"children":[],"decl_id":null,"docs":" Returns the record type of the record.\n","sig":null,"attributes":[{"value":"/ Returns the record type of the record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":597267,"byte_end":597309,"line_start":542,"line_end":542,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2770},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":597423,"byte_end":597428,"line_start":548,"line_end":548,"column_start":12,"column_end":17},"name":"class","qualname":"<RecordHeader<Name>>::class","value":"fn (&self) -> Class","parent":null,"children":[],"decl_id":null,"docs":" Returns the class of the record.\n","sig":null,"attributes":[{"value":"/ Returns the class of the record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":597375,"byte_end":597411,"line_start":547,"line_end":547,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2771},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":597523,"byte_end":597526,"line_start":553,"line_end":553,"column_start":12,"column_end":15},"name":"ttl","qualname":"<RecordHeader<Name>>::ttl","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the TTL of the record.\n","sig":null,"attributes":[{"value":"/ Returns the TTL of the record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":597477,"byte_end":597511,"line_start":552,"line_end":552,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2772},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":597625,"byte_end":597630,"line_start":558,"line_end":558,"column_start":12,"column_end":17},"name":"rdlen","qualname":"<RecordHeader<Name>>::rdlen","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the data length of the record.\n","sig":null,"attributes":[{"value":"/ Returns the data length of the record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":597571,"byte_end":597613,"line_start":557,"line_end":557,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2773},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":597735,"byte_end":597746,"line_start":563,"line_end":563,"column_start":12,"column_end":23},"name":"into_record","qualname":"<RecordHeader<Name>>::into_record","value":"fn <Data> (self, data: Data) -> Record<Name, Data>","parent":null,"children":[],"decl_id":null,"docs":" Converts the header into an actual record.\n","sig":null,"attributes":[{"value":"/ Converts the header into an actual record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":597677,"byte_end":597723,"line_start":562,"line_end":562,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":7211},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":602637,"byte_end":602649,"line_start":733,"line_end":733,"column_start":12,"column_end":24},"name":"ParsedRecord","qualname":"::base::record::ParsedRecord","value":"ParsedRecord {  }","parent":null,"children":[{"krate":0,"index":7213},{"krate":0,"index":7214}],"decl_id":null,"docs":" A raw record parsed from a message.","sig":null,"attributes":[{"value":"/ A raw record parsed from a message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":601981,"byte_end":602020,"line_start":717,"line_end":717,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":602021,"byte_end":602024,"line_start":718,"line_end":718,"column_start":1,"column_end":4}},{"value":"/ A value of this type contains the record header and the raw record data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":602025,"byte_end":602101,"line_start":719,"line_end":719,"column_start":1,"column_end":77}},{"value":"/ It is mainly used as an intermediary type when turning raw message data","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":602102,"byte_end":602177,"line_start":720,"line_end":720,"column_start":1,"column_end":76}},{"value":"/ into [`Record`]s.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":602178,"byte_end":602199,"line_start":721,"line_end":721,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":602200,"byte_end":602203,"line_start":722,"line_end":722,"column_start":1,"column_end":4}},{"value":"/ It allows access to the header only but can be traded for a real record","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":602204,"byte_end":602279,"line_start":723,"line_end":723,"column_start":1,"column_end":76}},{"value":"/ of a specific type of [`ParseRecordData`] (i.e., some type that knowns","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":602280,"byte_end":602354,"line_start":724,"line_end":724,"column_start":1,"column_end":75}},{"value":"/ how to parse record data) via the [`to_record`] and [`into_record`]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":602355,"byte_end":602426,"line_start":725,"line_end":725,"column_start":1,"column_end":72}},{"value":"/ methods.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":602427,"byte_end":602439,"line_start":726,"line_end":726,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":602440,"byte_end":602443,"line_start":727,"line_end":727,"column_start":1,"column_end":4}},{"value":"/ [`Record`]: struct.Record.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":602444,"byte_end":602478,"line_start":728,"line_end":728,"column_start":1,"column_end":35}},{"value":"/ [`ParseRecordData`]: trait.ParseRecordData.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":602479,"byte_end":602530,"line_start":729,"line_end":729,"column_start":1,"column_end":52}},{"value":"/ [`to_record`]: #method.to_record","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":602531,"byte_end":602567,"line_start":730,"line_end":730,"column_start":1,"column_end":37}},{"value":"/ [`into_record`]: #method.into_record","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":602568,"byte_end":602608,"line_start":731,"line_end":731,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2809},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":603062,"byte_end":603065,"line_start":746,"line_end":746,"column_start":12,"column_end":15},"name":"new","qualname":"<ParsedRecord<Ref>>::new","value":"fn (header: RecordHeader<ParsedDname<Ref>>, data: Parser<Ref>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new parsed record from a header and the record data.","sig":null,"attributes":[{"value":"/ Creates a new parsed record from a header and the record data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":602862,"byte_end":602928,"line_start":742,"line_end":742,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":602933,"byte_end":602936,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ The record data is provided via a parser that is positioned at the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":602941,"byte_end":603011,"line_start":744,"line_end":744,"column_start":5,"column_end":75}},{"value":"/ first byte of the record data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":603016,"byte_end":603050,"line_start":745,"line_end":745,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2810},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":603269,"byte_end":603274,"line_start":754,"line_end":754,"column_start":12,"column_end":17},"name":"owner","qualname":"<ParsedRecord<Ref>>::owner","value":"fn (&self) -> &ParsedDname<Ref>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the owner of the record.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the owner of the record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":603206,"byte_end":603257,"line_start":753,"line_end":753,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2811},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":603398,"byte_end":603403,"line_start":759,"line_end":759,"column_start":12,"column_end":17},"name":"rtype","qualname":"<ParsedRecord<Ref>>::rtype","value":"fn (&self) -> Rtype","parent":null,"children":[],"decl_id":null,"docs":" Returns the record type of the record.\n","sig":null,"attributes":[{"value":"/ Returns the record type of the record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":603344,"byte_end":603386,"line_start":758,"line_end":758,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2812},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":603509,"byte_end":603514,"line_start":764,"line_end":764,"column_start":12,"column_end":17},"name":"class","qualname":"<ParsedRecord<Ref>>::class","value":"fn (&self) -> Class","parent":null,"children":[],"decl_id":null,"docs":" Returns the class of the record.\n","sig":null,"attributes":[{"value":"/ Returns the class of the record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":603461,"byte_end":603497,"line_start":763,"line_end":763,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2813},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":603618,"byte_end":603621,"line_start":769,"line_end":769,"column_start":12,"column_end":15},"name":"ttl","qualname":"<ParsedRecord<Ref>>::ttl","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the TTL of the record.\n","sig":null,"attributes":[{"value":"/ Returns the TTL of the record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":603572,"byte_end":603606,"line_start":768,"line_end":768,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2814},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":603729,"byte_end":603734,"line_start":774,"line_end":774,"column_start":12,"column_end":17},"name":"rdlen","qualname":"<ParsedRecord<Ref>>::rdlen","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the data length of the record.\n","sig":null,"attributes":[{"value":"/ Returns the data length of the record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":603675,"byte_end":603717,"line_start":773,"line_end":773,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2817},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":604475,"byte_end":604484,"line_start":791,"line_end":791,"column_start":12,"column_end":21},"name":"to_record","qualname":"<ParsedRecord<Ref>>::to_record","value":"fn <Data> (&self) -> Result<Option<Record<ParsedDname<Ref>, Data>>, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a real resource record from the parsed record.","sig":null,"attributes":[{"value":"/ Creates a real resource record from the parsed record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":603833,"byte_end":603891,"line_start":780,"line_end":780,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":603896,"byte_end":603899,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ The method is generic over a type that knows how to parse record","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":603904,"byte_end":603972,"line_start":782,"line_end":782,"column_start":5,"column_end":73}},{"value":"/ data via the [`ParseRecordData`] trait. The record data is given to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":603977,"byte_end":604048,"line_start":783,"line_end":783,"column_start":5,"column_end":76}},{"value":"/ this trait for parsing. If the trait feels capable of parsing this","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":604053,"byte_end":604123,"line_start":784,"line_end":784,"column_start":5,"column_end":75}},{"value":"/ type of record (as indicated by the record type) and parsing succeeds,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":604128,"byte_end":604202,"line_start":785,"line_end":785,"column_start":5,"column_end":79}},{"value":"/ the method returns `Ok(Some(_))`. It returns `Ok(None)` if the trait","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":604207,"byte_end":604279,"line_start":786,"line_end":786,"column_start":5,"column_end":77}},{"value":"/ doesn’t know how to parse this particular record type. It returns","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":604284,"byte_end":604355,"line_start":787,"line_end":787,"column_start":5,"column_end":74}},{"value":"/ an error if parsing fails.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":604360,"byte_end":604390,"line_start":788,"line_end":788,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":604395,"byte_end":604398,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ [`ParseRecordData`]: ../rdata/trait.ParseRecordData.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":604403,"byte_end":604463,"line_start":790,"line_end":790,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2819},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":605334,"byte_end":605345,"line_start":809,"line_end":809,"column_start":12,"column_end":23},"name":"into_record","qualname":"<ParsedRecord<Ref>>::into_record","value":"fn <Data> (mut self) -> Result<Option<Record<ParsedDname<Ref>, Data>>, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Trades the parsed record for a real resource record.","sig":null,"attributes":[{"value":"/ Trades the parsed record for a real resource record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":604694,"byte_end":604750,"line_start":798,"line_end":798,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":604755,"byte_end":604758,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ The method is generic over a type that knows how to parse record","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":604763,"byte_end":604831,"line_start":800,"line_end":800,"column_start":5,"column_end":73}},{"value":"/ data via the [`ParseRecordData`] trait. The record data is given to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":604836,"byte_end":604907,"line_start":801,"line_end":801,"column_start":5,"column_end":76}},{"value":"/ this trait for parsing. If the trait feels capable of parsing this","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":604912,"byte_end":604982,"line_start":802,"line_end":802,"column_start":5,"column_end":75}},{"value":"/ type of record (as indicated by the record type) and parsing succeeds,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":604987,"byte_end":605061,"line_start":803,"line_end":803,"column_start":5,"column_end":79}},{"value":"/ the method returns `Ok(Some(_))`. It returns `Ok(None)` if the trait","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":605066,"byte_end":605138,"line_start":804,"line_end":804,"column_start":5,"column_end":77}},{"value":"/ doesn’t know how to parse this particular record type. It returns","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":605143,"byte_end":605214,"line_start":805,"line_end":805,"column_start":5,"column_end":74}},{"value":"/ an error if parsing fails.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":605219,"byte_end":605249,"line_start":806,"line_end":806,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":605254,"byte_end":605257,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ [`ParseRecordData`]: ../rdata/trait.ParseRecordData.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":605262,"byte_end":605322,"line_start":808,"line_end":808,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7221},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":606712,"byte_end":606716,"line_start":858,"line_end":858,"column_start":5,"column_end":9},"name":"Name","qualname":"::base::record::RecordParseError::Name","value":"RecordParseError::Name(N)","parent":{"krate":0,"index":7218},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7224},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":606725,"byte_end":606729,"line_start":859,"line_end":859,"column_start":5,"column_end":9},"name":"Data","qualname":"::base::record::RecordParseError::Data","value":"RecordParseError::Data(D)","parent":{"krate":0,"index":7218},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7227},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":606738,"byte_end":606746,"line_start":860,"line_end":860,"column_start":5,"column_end":13},"name":"ShortBuf","qualname":"::base::record::RecordParseError::ShortBuf","value":"RecordParseError::ShortBuf","parent":{"krate":0,"index":7218},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7218},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":606683,"byte_end":606699,"line_start":857,"line_end":857,"column_start":10,"column_end":26},"name":"RecordParseError","qualname":"::base::record::RecordParseError","value":"RecordParseError::{Name, Data, ShortBuf}","parent":null,"children":[{"krate":0,"index":7221},{"krate":0,"index":7224},{"krate":0,"index":7227}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2842},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"question","qualname":"::base::question","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","parent":null,"children":[{"krate":0,"index":2843},{"krate":0,"index":2846},{"krate":0,"index":2847},{"krate":0,"index":2848},{"krate":0,"index":2851},{"krate":0,"index":2854},{"krate":0,"index":7255},{"krate":0,"index":7262},{"krate":0,"index":7260},{"krate":0,"index":2862},{"krate":0,"index":2867},{"krate":0,"index":2872},{"krate":0,"index":2875},{"krate":0,"index":2878},{"krate":0,"index":2882},{"krate":0,"index":2884},{"krate":0,"index":2888},{"krate":0,"index":2892},{"krate":0,"index":2895},{"krate":0,"index":2899},{"krate":0,"index":2903},{"krate":0,"index":2911},{"krate":0,"index":2914},{"krate":0,"index":2917},{"krate":0,"index":2928},{"krate":0,"index":2935},{"krate":0,"index":2941},{"krate":0,"index":2947}],"decl_id":null,"docs":" A single question in a DNS message.","sig":null,"attributes":[{"value":"! A single question in a DNS message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":607448,"byte_end":607487,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":607488,"byte_end":607491,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module defines the type `Question` which represents an entry in","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":607492,"byte_end":607564,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"! the question section of a DNS message and the `AsQuestion` trait for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":607565,"byte_end":607637,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"! producing questions on the fly.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":607638,"byte_end":607673,"line_start":5,"line_end":5,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7255},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":608562,"byte_end":608570,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"Question","qualname":"::base::question::Question","value":"Question {  }","parent":null,"children":[{"krate":0,"index":7257},{"krate":0,"index":7258},{"krate":0,"index":7259}],"decl_id":null,"docs":" A question in a DNS message.","sig":null,"attributes":[{"value":"/ A question in a DNS message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":608008,"byte_end":608040,"line_start":19,"line_end":19,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":608041,"byte_end":608044,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ In DNS, a question describes what is requested in a query. It consists","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":608045,"byte_end":608119,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ of three elements: a domain name, a record type, and a class. This type","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":608120,"byte_end":608195,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ represents such a question.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":608196,"byte_end":608227,"line_start":23,"line_end":23,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":608228,"byte_end":608231,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Questions are generic over the domain name type. When read from an","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":608232,"byte_end":608302,"line_start":25,"line_end":25,"column_start":1,"column_end":71}},{"value":"/ actual message, a [`ParsedDname`] has to be used because the name part","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":608303,"byte_end":608377,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ may be compressed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":608378,"byte_end":608400,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":608401,"byte_end":608404,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`ParsedDname`]: ../name/struct.ParsedDname.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":608405,"byte_end":608457,"line_start":29,"line_end":29,"column_start":1,"column_end":53}},{"value":"/ [`MessageBuilder`]: ../message_builder/struct.MessageBuilder.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":608458,"byte_end":608527,"line_start":30,"line_end":30,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2864},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":608882,"byte_end":608885,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<Question<N>>::new","value":"fn (qname: N, qtype: Rtype, qclass: Class) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new question from its three componets.\n","sig":null,"attributes":[{"value":"/ Creates a new question from its three componets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":608818,"byte_end":608870,"line_start":46,"line_end":46,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2865},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":609074,"byte_end":609080,"line_start":52,"line_end":52,"column_start":12,"column_end":18},"name":"new_in","qualname":"<Question<N>>::new_in","value":"fn (qname: N, qtype: Rtype) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new question from a name and record type, assuming class IN.\n","sig":null,"attributes":[{"value":"/ Creates a new question from a name and record type, assuming class IN.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":608988,"byte_end":609062,"line_start":51,"line_end":51,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2866},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":609232,"byte_end":609242,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"into_qname","qualname":"<Question<N>>::into_qname","value":"fn (self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Converts the question into the qname.\n","sig":null,"attributes":[{"value":"/ Converts the question into the qname.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":609179,"byte_end":609220,"line_start":56,"line_end":56,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2869},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":609414,"byte_end":609419,"line_start":67,"line_end":67,"column_start":12,"column_end":17},"name":"qname","qualname":"<Question<N>>::qname","value":"fn (&self) -> &N","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the domain nmae in the question,\n","sig":null,"attributes":[{"value":"/ Returns a reference to the domain nmae in the question,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":609343,"byte_end":609402,"line_start":66,"line_end":66,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2870},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":609522,"byte_end":609527,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"name":"qtype","qualname":"<Question<N>>::qtype","value":"fn (&self) -> Rtype","parent":null,"children":[],"decl_id":null,"docs":" Returns the record type of the question.\n","sig":null,"attributes":[{"value":"/ Returns the record type of the question.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":609466,"byte_end":609510,"line_start":71,"line_end":71,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2871},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":609626,"byte_end":609632,"line_start":77,"line_end":77,"column_start":12,"column_end":18},"name":"qclass","qualname":"<Question<N>>::qclass","value":"fn (&self) -> Class","parent":null,"children":[],"decl_id":null,"docs":" Returns the class of the question.\n","sig":null,"attributes":[{"value":"/ Returns the class of the question.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":609576,"byte_end":609614,"line_start":76,"line_end":76,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":2917},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":614573,"byte_end":614583,"line_start":251,"line_end":251,"column_start":11,"column_end":21},"name":"AsQuestion","qualname":"::base::question::AsQuestion","value":"AsQuestion","parent":null,"children":[{"krate":0,"index":2918},{"krate":0,"index":2919},{"krate":0,"index":2920},{"krate":0,"index":2921},{"krate":0,"index":2922},{"krate":0,"index":2925}],"decl_id":null,"docs":" A helper trait allowing construction of questions on the fly.","sig":null,"attributes":[{"value":"/ A helper trait allowing construction of questions on the fly.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":613707,"byte_end":613772,"line_start":235,"line_end":235,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":613773,"byte_end":613776,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ The trait’s primary user is the [`QuestionBuilder`] type of the message","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":613777,"byte_end":613854,"line_start":237,"line_end":237,"column_start":1,"column_end":76}},{"value":"/ builder system. It’s [`push`] method accepts anything that implements","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":613855,"byte_end":613930,"line_start":238,"line_end":238,"column_start":1,"column_end":74}},{"value":"/ this trait.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":613931,"byte_end":613946,"line_start":239,"line_end":239,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":613947,"byte_end":613950,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ Implementations are provided for [`Question`] values and references. In","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":613951,"byte_end":614026,"line_start":241,"line_end":241,"column_start":1,"column_end":76}},{"value":"/ addition, a tuple of a domain name, record type and class can be used as","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":614027,"byte_end":614103,"line_start":242,"line_end":242,"column_start":1,"column_end":77}},{"value":"/ this trait, saving the detour of constructing a question first. Since","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":614104,"byte_end":614177,"line_start":243,"line_end":243,"column_start":1,"column_end":74}},{"value":"/ the class is pretty much always `Class::In`, a tuple of just a domain","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":614178,"byte_end":614251,"line_start":244,"line_end":244,"column_start":1,"column_end":74}},{"value":"/ name and record type works as well by assuming that class.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":614252,"byte_end":614314,"line_start":245,"line_end":245,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":614315,"byte_end":614318,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`Class::In`]: ../iana/class/enum.Class.html#variant.In","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":614319,"byte_end":614378,"line_start":247,"line_end":247,"column_start":1,"column_end":60}},{"value":"/ [`Question`]: struct.Question.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":614379,"byte_end":614417,"line_start":248,"line_end":248,"column_start":1,"column_end":39}},{"value":"/ [`QuestionBuilder`]: ../message_builder/struct.QuestionBuilder.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":614418,"byte_end":614489,"line_start":249,"line_end":249,"column_start":1,"column_end":72}},{"value":"/ [`push`]: ../message_builder/struct.QuestionBuilder.html#method.push","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":614490,"byte_end":614562,"line_start":250,"line_end":250,"column_start":1,"column_end":73}}]},{"kind":"Type","id":{"krate":0,"index":2918},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":614638,"byte_end":614642,"line_start":253,"line_end":253,"column_start":10,"column_end":14},"name":"Name","qualname":"::base::question::AsQuestion::Name","value":"type Name: ToDname;","parent":{"krate":0,"index":2917},"children":[],"decl_id":null,"docs":" The domain name used by the qname.\n","sig":null,"attributes":[{"value":"/ The domain name used by the qname.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":614590,"byte_end":614628,"line_start":252,"line_end":252,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2919},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":614719,"byte_end":614724,"line_start":256,"line_end":256,"column_start":8,"column_end":13},"name":"qname","qualname":"::base::question::AsQuestion::qname","value":"fn (&self) -> &Self::Name","parent":{"krate":0,"index":2917},"children":[],"decl_id":null,"docs":" Returns a reference to the qname of the question.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the qname of the question.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":614658,"byte_end":614711,"line_start":255,"line_end":255,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2920},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":614805,"byte_end":614810,"line_start":259,"line_end":259,"column_start":8,"column_end":13},"name":"qtype","qualname":"::base::question::AsQuestion::qtype","value":"fn (&self) -> Rtype","parent":{"krate":0,"index":2917},"children":[],"decl_id":null,"docs":" Returns the record type of the question.\n","sig":null,"attributes":[{"value":"/ Returns the record type of the question.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":614753,"byte_end":614797,"line_start":258,"line_end":258,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2921},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":614879,"byte_end":614885,"line_start":262,"line_end":262,"column_start":8,"column_end":14},"name":"qclass","qualname":"::base::question::AsQuestion::qclass","value":"fn (&self) -> Class","parent":{"krate":0,"index":2917},"children":[],"decl_id":null,"docs":" Returns the class of the question.\n","sig":null,"attributes":[{"value":"/ Returns the class of the question.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":614833,"byte_end":614871,"line_start":261,"line_end":261,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2922},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":614958,"byte_end":614974,"line_start":265,"line_end":265,"column_start":8,"column_end":24},"name":"compose_question","qualname":"::base::question::AsQuestion::compose_question","value":"fn <T> (&self, target: &mut T) -> Result<(), ShortBuf>","parent":{"krate":0,"index":2917},"children":[],"decl_id":null,"docs":" Produces the encoding of the question.\n","sig":null,"attributes":[{"value":"/ Produces the encoding of the question.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":614908,"byte_end":614950,"line_start":264,"line_end":264,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2925},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":615357,"byte_end":615383,"line_start":278,"line_end":278,"column_start":8,"column_end":34},"name":"compose_question_canonical","qualname":"::base::question::AsQuestion::compose_question_canonical","value":"fn <T> (&self, target: &mut T) -> Result<(), ShortBuf>","parent":{"krate":0,"index":2917},"children":[],"decl_id":null,"docs":" Produces the canoncial encoding of the question.\n","sig":null,"attributes":[{"value":"/ Produces the canoncial encoding of the question.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":615297,"byte_end":615349,"line_start":277,"line_end":277,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":2953},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"serial","qualname":"::base::serial","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","parent":null,"children":[{"krate":0,"index":2954},{"krate":0,"index":2958},{"krate":0,"index":2959},{"krate":0,"index":2962},{"krate":0,"index":2963},{"krate":0,"index":7265},{"krate":0,"index":7281},{"krate":0,"index":7280},{"krate":0,"index":7278},{"krate":0,"index":7275},{"krate":0,"index":7276},{"krate":0,"index":7272},{"krate":0,"index":7268},{"krate":0,"index":7269},{"krate":0,"index":2970},{"krate":0,"index":2974},{"krate":0,"index":2976},{"krate":0,"index":2978},{"krate":0,"index":2981},{"krate":0,"index":2985},{"krate":0,"index":2988},{"krate":0,"index":2990},{"krate":0,"index":2992}],"decl_id":null,"docs":" Serial numbers.","sig":null,"attributes":[{"value":"! Serial numbers.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":616685,"byte_end":616704,"line_start":1,"line_end":1,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":616705,"byte_end":616708,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! DNS uses 32 bit serial numbers in various places that are conceptionally","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":616709,"byte_end":616785,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"! viewed as the 32 bit modulus of a larger number space. Because of that,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":616786,"byte_end":616861,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"! special rules apply when processing these values. This module provides","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":616862,"byte_end":616936,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"! the type [`Serial`] that implements these rules.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":616937,"byte_end":616989,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":616990,"byte_end":616993,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! [`Serial`]: struct.Serial.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":616994,"byte_end":617028,"line_start":8,"line_end":8,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":7265},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":618634,"byte_end":618640,"line_start":48,"line_end":48,"column_start":12,"column_end":18},"name":"Serial","qualname":"::base::serial::Serial","value":"","parent":null,"children":[],"decl_id":null,"docs":" A serial number.","sig":null,"attributes":[{"value":"/ A serial number.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":617524,"byte_end":617544,"line_start":25,"line_end":25,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":617545,"byte_end":617548,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Serial numbers are used in DNS to track changes to resources. For","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":617549,"byte_end":617618,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/ instance, the [`Soa`] record type provides a serial number that expresses","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":617619,"byte_end":617696,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ the version of the zone. Since these numbers are only 32 bits long, they","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":617697,"byte_end":617773,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ can wrap. [RFC 1982] defined the semantics for doing arithmetics in the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":617774,"byte_end":617849,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ face of these wrap-arounds. This type implements these semantics atop a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":617850,"byte_end":617925,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ native `u32`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":617926,"byte_end":617943,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":617944,"byte_end":617947,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ The RFC defines two operations: addition and comparison.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":617948,"byte_end":618008,"line_start":34,"line_end":34,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":618009,"byte_end":618012,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ For addition, the amount added can only be a positive number of up to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":618013,"byte_end":618086,"line_start":36,"line_end":36,"column_start":1,"column_end":74}},{"value":"/ `2^31 - 1`. Because of this, we decided to not implement the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":618087,"byte_end":618151,"line_start":37,"line_end":37,"column_start":1,"column_end":65}},{"value":"/ `Add` trait but rather have a dedicated method `add` so as to not cause","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":618152,"byte_end":618227,"line_start":38,"line_end":38,"column_start":1,"column_end":76}},{"value":"/ surprise panics.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":618228,"byte_end":618248,"line_start":39,"line_end":39,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":618249,"byte_end":618252,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Serial numbers only implement a partial ordering. That is, there are","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":618253,"byte_end":618325,"line_start":41,"line_end":41,"column_start":1,"column_end":73}},{"value":"/ pairs of values that are not equal but there still isn’t one value larger","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":618326,"byte_end":618405,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ than the other. Since this is neatly implemented by the `PartialOrd`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":618406,"byte_end":618478,"line_start":43,"line_end":43,"column_start":1,"column_end":73}},{"value":"/ trait, the type implements that.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":618479,"byte_end":618515,"line_start":44,"line_end":44,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":618516,"byte_end":618519,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [RFC 1982]: https://tools.ietf.org/html/rfc1982","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":618520,"byte_end":618571,"line_start":46,"line_end":46,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2971},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":618764,"byte_end":618767,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"now","qualname":"<Serial>::now","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a serial number for the current Unix time.\n","sig":null,"attributes":[{"value":"/ Returns a serial number for the current Unix time.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":618670,"byte_end":618724,"line_start":51,"line_end":51,"column_start":5,"column_end":59}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":618729,"byte_end":618752,"line_start":52,"line_end":52,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2972},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":619088,"byte_end":619096,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"into_int","qualname":"<Serial>::into_int","value":"fn (self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the serial number as a raw integer.\n","sig":null,"attributes":[{"value":"/ Returns the serial number as a raw integer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":619029,"byte_end":619076,"line_start":62,"line_end":62,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2973},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":619626,"byte_end":619629,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"add","qualname":"<Serial>::add","value":"fn (self, other: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add `other` to `self`.","sig":null,"attributes":[{"value":"/ Add `other` to `self`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":619138,"byte_end":619164,"line_start":67,"line_end":67,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":619169,"byte_end":619172,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Serial numbers only allow values of up to `2^31 - 1` to be added to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":619177,"byte_end":619248,"line_start":69,"line_end":69,"column_start":5,"column_end":76}},{"value":"/ them. Therefore, this method requires `other` to be a `u32` instead","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":619253,"byte_end":619324,"line_start":70,"line_end":70,"column_start":5,"column_end":76}},{"value":"/ of a `Serial` to indicate that you cannot simply add two serials","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":619329,"byte_end":619397,"line_start":71,"line_end":71,"column_start":5,"column_end":73}},{"value":"/ together. This is also why we don’t implement the `Add` trait.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":619402,"byte_end":619470,"line_start":72,"line_end":72,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":619475,"byte_end":619478,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":619483,"byte_end":619495,"line_start":74,"line_end":74,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":619500,"byte_end":619503,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ This method panics if `other` is greater than `2^31 - 1`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":619508,"byte_end":619569,"line_start":76,"line_end":76,"column_start":5,"column_end":66}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":619574,"byte_end":619614,"line_start":77,"line_end":77,"column_start":5,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":2994},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"str","qualname":"::base::str","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","parent":null,"children":[{"krate":0,"index":2995},{"krate":0,"index":2996},{"krate":0,"index":7283},{"krate":0,"index":7303},{"krate":0,"index":7302},{"krate":0,"index":7300},{"krate":0,"index":7297},{"krate":0,"index":7298},{"krate":0,"index":7293},{"krate":0,"index":7294},{"krate":0,"index":2997},{"krate":0,"index":3005},{"krate":0,"index":3007},{"krate":0,"index":7305},{"krate":0,"index":7319},{"krate":0,"index":7318},{"krate":0,"index":7316},{"krate":0,"index":7313},{"krate":0,"index":7314},{"krate":0,"index":7310},{"krate":0,"index":7311},{"krate":0,"index":3009},{"krate":0,"index":3011},{"krate":0,"index":7321},{"krate":0,"index":7334},{"krate":0,"index":7333},{"krate":0,"index":7331},{"krate":0,"index":7328},{"krate":0,"index":7329},{"krate":0,"index":7324},{"krate":0,"index":7325},{"krate":0,"index":3012},{"krate":0,"index":3014}],"decl_id":null,"docs":" Support for converting from and to strings.","sig":null,"attributes":[{"value":"! Support for converting from and to strings.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":627800,"byte_end":627847,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":627848,"byte_end":627851,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains helper types for converting from and to string","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":627852,"byte_end":627923,"line_start":3,"line_end":3,"column_start":1,"column_end":72}},{"value":"! representation of types.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":627924,"byte_end":627952,"line_start":4,"line_end":4,"column_start":1,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7284},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":628352,"byte_end":628356,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Char","qualname":"::base::str::Symbol::Char","value":"Symbol::Char(char)","parent":{"krate":0,"index":7283},"children":[],"decl_id":null,"docs":" An unescaped Unicode character.\n","sig":null,"attributes":[{"value":"/ An unescaped Unicode character.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":628312,"byte_end":628347,"line_start":18,"line_end":18,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7287},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":628424,"byte_end":628436,"line_start":22,"line_end":22,"column_start":5,"column_end":17},"name":"SimpleEscape","qualname":"::base::str::Symbol::SimpleEscape","value":"Symbol::SimpleEscape(char)","parent":{"krate":0,"index":7283},"children":[],"decl_id":null,"docs":" A character escaped via a preceding backslash.\n","sig":null,"attributes":[{"value":"/ A character escaped via a preceding backslash.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":628369,"byte_end":628419,"line_start":21,"line_end":21,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7290},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":628652,"byte_end":628665,"line_start":28,"line_end":28,"column_start":5,"column_end":18},"name":"DecimalEscape","qualname":"::base::str::Symbol::DecimalEscape","value":"Symbol::DecimalEscape(u8)","parent":{"krate":0,"index":7283},"children":[],"decl_id":null,"docs":" A raw octet escaped using the decimal escape sequence.","sig":null,"attributes":[{"value":"/ A raw octet escaped using the decimal escape sequence.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":628449,"byte_end":628507,"line_start":24,"line_end":24,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":628512,"byte_end":628515,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This escape sequence consists of a backslash followed by exactly three","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":628520,"byte_end":628594,"line_start":26,"line_end":26,"column_start":5,"column_end":79}},{"value":"/ decimal digits with the value of the octets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":628599,"byte_end":628647,"line_start":27,"line_end":27,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":7283},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":628299,"byte_end":628305,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"name":"Symbol","qualname":"::base::str::Symbol","value":"Symbol::{Char, SimpleEscape, DecimalEscape}","parent":null,"children":[{"krate":0,"index":7284},{"krate":0,"index":7287},{"krate":0,"index":7290}],"decl_id":null,"docs":" The master file representation of a single character.","sig":null,"attributes":[{"value":"/ The master file representation of a single character.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":628082,"byte_end":628139,"line_start":12,"line_end":12,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":628140,"byte_end":628143,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This is either a regular character or an escape sequence. See the variants","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":628144,"byte_end":628222,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ for more details.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":628223,"byte_end":628244,"line_start":15,"line_end":15,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2998},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":628901,"byte_end":628911,"line_start":36,"line_end":36,"column_start":12,"column_end":22},"name":"from_chars","qualname":"<Symbol>::from_chars","value":"fn <C> (chars: C) -> Result<Option<Self>, SymbolError>","parent":null,"children":[],"decl_id":null,"docs":" Reads a symbol from a character source.","sig":null,"attributes":[{"value":"/ Reads a symbol from a character source.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":628692,"byte_end":628735,"line_start":32,"line_end":32,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":628740,"byte_end":628743,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Returns the next symbol in the source, `Ok(None)` if the source has","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":628748,"byte_end":628819,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ been exhausted, or an error if there wasn’t a valid symbol.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":628824,"byte_end":628889,"line_start":35,"line_end":35,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3000},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":630727,"byte_end":630737,"line_start":80,"line_end":80,"column_start":12,"column_end":22},"name":"from_octet","qualname":"<Symbol>::from_octet","value":"fn (ch: u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Provides the best symbol for an octet.","sig":null,"attributes":[{"value":"/ Provides the best symbol for an octet.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":630372,"byte_end":630414,"line_start":74,"line_end":74,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":630419,"byte_end":630422,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ The function will use the simple escape sequence for octet values that","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":630427,"byte_end":630501,"line_start":76,"line_end":76,"column_start":5,"column_end":79}},{"value":"/ represent ASCII spaces, quotes, backslashes, and semicolons and the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":630506,"byte_end":630577,"line_start":77,"line_end":77,"column_start":5,"column_end":76}},{"value":"/ plain ASCII value for all other printable ASCII characters. Any other","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":630582,"byte_end":630655,"line_start":78,"line_end":78,"column_start":5,"column_end":78}},{"value":"/ value is escaped using the decimal escape sequence.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":630660,"byte_end":630715,"line_start":79,"line_end":79,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3001},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":631653,"byte_end":631663,"line_start":103,"line_end":103,"column_start":12,"column_end":22},"name":"into_octet","qualname":"<Symbol>::into_octet","value":"fn (self) -> Result<u8, BadSymbol>","parent":null,"children":[],"decl_id":null,"docs":" Converts the symbol into an octet if it represents one.","sig":null,"attributes":[{"value":"/ Converts the symbol into an octet if it represents one.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":631040,"byte_end":631099,"line_start":92,"line_end":92,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":631104,"byte_end":631107,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Both domain names and character strings operate on bytes instead of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":631112,"byte_end":631183,"line_start":94,"line_end":94,"column_start":5,"column_end":76}},{"value":"/ (Unicode) characters. These bytes can be represented by printable","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":631188,"byte_end":631257,"line_start":95,"line_end":95,"column_start":5,"column_end":74}},{"value":"/ ASCII characters (that is, U+0020 to U+007E), both plain or through","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":631262,"byte_end":631333,"line_start":96,"line_end":96,"column_start":5,"column_end":76}},{"value":"/ a simple escape, or by a decimal escape.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":631338,"byte_end":631382,"line_start":97,"line_end":97,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":631387,"byte_end":631390,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This method returns such an octet or an error if the symbol doesn’t","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":631395,"byte_end":631468,"line_start":99,"line_end":99,"column_start":5,"column_end":76}},{"value":"/ have value representing an octet. Note that it will succeed for an","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":631473,"byte_end":631543,"line_start":100,"line_end":100,"column_start":5,"column_end":75}},{"value":"/ ASCII space character U+0020 which may be used as a word separator","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":631548,"byte_end":631618,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ in some cases.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":631623,"byte_end":631641,"line_start":102,"line_end":102,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":3002},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":632234,"byte_end":632243,"line_start":121,"line_end":121,"column_start":12,"column_end":21},"name":"into_char","qualname":"<Symbol>::into_char","value":"fn (self) -> Result<char, BadSymbol>","parent":null,"children":[],"decl_id":null,"docs":" Converts the symbol into a `char`.","sig":null,"attributes":[{"value":"/ Converts the symbol into a `char`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":632067,"byte_end":632105,"line_start":117,"line_end":117,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":632110,"byte_end":632113,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This will fail for a decimal escape sequence which doesn’t actually","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":632118,"byte_end":632191,"line_start":119,"line_end":119,"column_start":5,"column_end":76}},{"value":"/ represent a character.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":632196,"byte_end":632222,"line_start":120,"line_end":120,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3003},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":632529,"byte_end":632539,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"into_digit","qualname":"<Symbol>::into_digit","value":"fn (self, base: u32) -> Result<u32, BadSymbol>","parent":null,"children":[],"decl_id":null,"docs":" Converts the symbol representing a digit into its integer value.\n","sig":null,"attributes":[{"value":"/ Converts the symbol representing a digit into its integer value.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":632449,"byte_end":632517,"line_start":128,"line_end":128,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3004},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":633065,"byte_end":633077,"line_start":145,"line_end":145,"column_start":12,"column_end":24},"name":"is_word_char","qualname":"<Symbol>::is_word_char","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the symbol can occur as part of a word.","sig":null,"attributes":[{"value":"/ Returns whether the symbol can occur as part of a word.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":632838,"byte_end":632897,"line_start":141,"line_end":141,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":632902,"byte_end":632905,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ This is true apart for unescaped ASCII space and horizontal tabs,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":632910,"byte_end":632979,"line_start":143,"line_end":143,"column_start":5,"column_end":74}},{"value":"/ opening and closing parantheses, the semicolon, and double quote.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":632984,"byte_end":633053,"line_start":144,"line_end":144,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7306},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":634082,"byte_end":634091,"line_start":187,"line_end":187,"column_start":5,"column_end":14},"name":"BadEscape","qualname":"::base::str::SymbolError::BadEscape","value":"SymbolError::BadEscape","parent":{"krate":0,"index":7305},"children":[],"decl_id":null,"docs":" An illegal escape sequence was encountered.\n","sig":null,"attributes":[{"value":"/ An illegal escape sequence was encountered.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":634030,"byte_end":634077,"line_start":186,"line_end":186,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7308},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":634198,"byte_end":634208,"line_start":192,"line_end":192,"column_start":5,"column_end":15},"name":"ShortInput","qualname":"::base::str::SymbolError::ShortInput","value":"SymbolError::ShortInput","parent":{"krate":0,"index":7305},"children":[],"decl_id":null,"docs":" Unexpected end of input.","sig":null,"attributes":[{"value":"/ Unexpected end of input.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":634098,"byte_end":634126,"line_start":189,"line_end":189,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":634131,"byte_end":634134,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ This can only happen in a decimal escape sequence.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":634139,"byte_end":634193,"line_start":191,"line_end":191,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":7305},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":634012,"byte_end":634023,"line_start":185,"line_end":185,"column_start":10,"column_end":21},"name":"SymbolError","qualname":"::base::str::SymbolError","value":"SymbolError::{BadEscape, ShortInput}","parent":null,"children":[{"krate":0,"index":7306},{"krate":0,"index":7308}],"decl_id":null,"docs":" An error happened when reading a symbol.\n","sig":null,"attributes":[{"value":"/ An error happened when reading a symbol.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":633913,"byte_end":633957,"line_start":183,"line_end":183,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":7321},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":634814,"byte_end":634823,"line_start":217,"line_end":217,"column_start":12,"column_end":21},"name":"BadSymbol","qualname":"::base::str::BadSymbol","value":"","parent":null,"children":[],"decl_id":null,"docs":" A symbol with an unexpected value was encountered. \n","sig":null,"attributes":[{"value":"/ A symbol with an unexpected value was encountered. ","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":634702,"byte_end":634757,"line_start":215,"line_end":215,"column_start":1,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":3015},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rdata","qualname":"::rdata","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","parent":null,"children":[{"krate":0,"index":3016},{"krate":0,"index":3019},{"krate":0,"index":3392},{"krate":0,"index":3453},{"krate":0,"index":3563},{"krate":0,"index":3612},{"krate":0,"index":3979},{"krate":0,"index":4000},{"krate":0,"index":4116},{"krate":0,"index":8199},{"krate":0,"index":8214},{"krate":0,"index":8216},{"krate":0,"index":8218},{"krate":0,"index":8220},{"krate":0,"index":8225},{"krate":0,"index":8227},{"krate":0,"index":8230},{"krate":0,"index":8233},{"krate":0,"index":8544},{"krate":0,"index":8622},{"krate":0,"index":8234},{"krate":0,"index":8238},{"krate":0,"index":8242},{"krate":0,"index":8246},{"krate":0,"index":8250},{"krate":0,"index":8254},{"krate":0,"index":8258},{"krate":0,"index":8262},{"krate":0,"index":8266},{"krate":0,"index":8270},{"krate":0,"index":8274},{"krate":0,"index":8278},{"krate":0,"index":8282},{"krate":0,"index":8286},{"krate":0,"index":8290},{"krate":0,"index":8294},{"krate":0,"index":8298},{"krate":0,"index":8302},{"krate":0,"index":8306},{"krate":0,"index":8310},{"krate":0,"index":8314},{"krate":0,"index":8318},{"krate":0,"index":8322},{"krate":0,"index":8326},{"krate":0,"index":8330},{"krate":0,"index":8334},{"krate":0,"index":8338},{"krate":0,"index":8344},{"krate":0,"index":8347},{"krate":0,"index":8353},{"krate":0,"index":8359},{"krate":0,"index":8364},{"krate":0,"index":8371},{"krate":0,"index":8375},{"krate":0,"index":8379},{"krate":0,"index":8383},{"krate":0,"index":8626},{"krate":0,"index":8713},{"krate":0,"index":8387},{"krate":0,"index":8391},{"krate":0,"index":8395},{"krate":0,"index":8399},{"krate":0,"index":8403},{"krate":0,"index":8407},{"krate":0,"index":8411},{"krate":0,"index":8415},{"krate":0,"index":8419},{"krate":0,"index":8423},{"krate":0,"index":8427},{"krate":0,"index":8431},{"krate":0,"index":8435},{"krate":0,"index":8439},{"krate":0,"index":8443},{"krate":0,"index":8447},{"krate":0,"index":8451},{"krate":0,"index":8455},{"krate":0,"index":8459},{"krate":0,"index":8463},{"krate":0,"index":8467},{"krate":0,"index":8471},{"krate":0,"index":8475},{"krate":0,"index":8479},{"krate":0,"index":8483},{"krate":0,"index":8487},{"krate":0,"index":8491},{"krate":0,"index":8495},{"krate":0,"index":8499},{"krate":0,"index":8503},{"krate":0,"index":8507},{"krate":0,"index":8513},{"krate":0,"index":8516},{"krate":0,"index":8521},{"krate":0,"index":8528},{"krate":0,"index":8532},{"krate":0,"index":8536},{"krate":0,"index":8540}],"decl_id":null,"docs":" Record Data of Well-defined Record Types","sig":null,"attributes":[{"value":"! Record Data of Well-defined Record Types","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":635280,"byte_end":635324,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":635325,"byte_end":635328,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module will eventually contain implementations for the record data","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":635329,"byte_end":635404,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"! of all defined resource record types.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":635405,"byte_end":635446,"line_start":4,"line_end":4,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":635447,"byte_end":635450,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! The types are named identically to the [`base::iana::Rtype`] variant they","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":635451,"byte_end":635528,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"! implement. They are grouped into submodules for the RFCs they are defined","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":635529,"byte_end":635606,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"! in. All types are also re-exported at the top level here. Ie., for the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":635607,"byte_end":635681,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"! AAAA record type, you can simple `use domain::rdata::Aaaa` instead of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":635682,"byte_end":635755,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"! `use domain::rdata::rfc3596::Aaaa` which nobody could possibly","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":635756,"byte_end":635822,"line_start":10,"line_end":10,"column_start":1,"column_end":67}},{"value":"! remember. There are, however, some helper data types defined here and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":635823,"byte_end":635896,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"! there which are not re-exported to keep things somewhat tidy.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":635897,"byte_end":635962,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":635963,"byte_end":635966,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! See the [`iana::Rtype`] enum for the complete set of record types and,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":635967,"byte_end":636041,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"! consequently, those types that are still missing.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":636042,"byte_end":636095,"line_start":15,"line_end":15,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":636096,"byte_end":636099,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! In additiona, the module provides two enums combining the known types.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":636100,"byte_end":636174,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"! [`AllRecordData`] indeed contains all record data types known plus","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":636175,"byte_end":636245,"line_start":18,"line_end":18,"column_start":1,"column_end":71}},{"value":"! [`UnknownRecordData`] for the rest, while [`MasterRecordData`] only","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":636246,"byte_end":636317,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"! contains those types that can appear in master files plus, again,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":636318,"byte_end":636387,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"! [`UnknownRecordData`] for everything else.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":636388,"byte_end":636434,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":636435,"byte_end":636438,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! [`AllRecordData`]: enum.AllRecordData.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":636439,"byte_end":636485,"line_start":23,"line_end":23,"column_start":1,"column_end":47}},{"value":"! [`MasterRecordData`]: enum.MasterRecordData.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":636486,"byte_end":636538,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"! [`base::iana::Rtype`]: ../base/iana/enum.Rtype.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":636539,"byte_end":636594,"line_start":25,"line_end":25,"column_start":1,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":3019},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rfc1035","qualname":"::rdata::rfc1035","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","parent":null,"children":[{"krate":0,"index":3020},{"krate":0,"index":3024},{"krate":0,"index":3025},{"krate":0,"index":3026},{"krate":0,"index":3027},{"krate":0,"index":3028},{"krate":0,"index":3029},{"krate":0,"index":3030},{"krate":0,"index":3031},{"krate":0,"index":3034},{"krate":0,"index":3035},{"krate":0,"index":3046},{"krate":0,"index":3047},{"krate":0,"index":7336},{"krate":0,"index":7358},{"krate":0,"index":7356},{"krate":0,"index":7353},{"krate":0,"index":7354},{"krate":0,"index":7350},{"krate":0,"index":7348},{"krate":0,"index":7344},{"krate":0,"index":7345},{"krate":0,"index":7338},{"krate":0,"index":3048},{"krate":0,"index":3053},{"krate":0,"index":3055},{"krate":0,"index":3057},{"krate":0,"index":3060},{"krate":0,"index":3062},{"krate":0,"index":3066},{"krate":0,"index":3069},{"krate":0,"index":3071},{"krate":0,"index":3073},{"krate":0,"index":3076},{"krate":0,"index":3078},{"krate":0,"index":3080},{"krate":0,"index":7412},{"krate":0,"index":7418},{"krate":0,"index":7415},{"krate":0,"index":7360},{"krate":0,"index":7364},{"krate":0,"index":7367},{"krate":0,"index":7371},{"krate":0,"index":7375},{"krate":0,"index":7377},{"krate":0,"index":7381},{"krate":0,"index":7384},{"krate":0,"index":7388},{"krate":0,"index":7392},{"krate":0,"index":7396},{"krate":0,"index":7402},{"krate":0,"index":7405},{"krate":0,"index":7408},{"krate":0,"index":7421},{"krate":0,"index":7425},{"krate":0,"index":3082},{"krate":0,"index":3087},{"krate":0,"index":3091},{"krate":0,"index":3093},{"krate":0,"index":3097},{"krate":0,"index":3101},{"krate":0,"index":3104},{"krate":0,"index":3108},{"krate":0,"index":3112},{"krate":0,"index":3117},{"krate":0,"index":3120},{"krate":0,"index":3123},{"krate":0,"index":7480},{"krate":0,"index":7486},{"krate":0,"index":7483},{"krate":0,"index":7428},{"krate":0,"index":7432},{"krate":0,"index":7435},{"krate":0,"index":7439},{"krate":0,"index":7443},{"krate":0,"index":7445},{"krate":0,"index":7449},{"krate":0,"index":7452},{"krate":0,"index":7456},{"krate":0,"index":7460},{"krate":0,"index":7464},{"krate":0,"index":7470},{"krate":0,"index":7473},{"krate":0,"index":7476},{"krate":0,"index":7541},{"krate":0,"index":7547},{"krate":0,"index":7544},{"krate":0,"index":7489},{"krate":0,"index":7493},{"krate":0,"index":7496},{"krate":0,"index":7500},{"krate":0,"index":7504},{"krate":0,"index":7506},{"krate":0,"index":7510},{"krate":0,"index":7513},{"krate":0,"index":7517},{"krate":0,"index":7521},{"krate":0,"index":7525},{"krate":0,"index":7531},{"krate":0,"index":7534},{"krate":0,"index":7537},{"krate":0,"index":7602},{"krate":0,"index":7608},{"krate":0,"index":7605},{"krate":0,"index":7550},{"krate":0,"index":7554},{"krate":0,"index":7557},{"krate":0,"index":7561},{"krate":0,"index":7565},{"krate":0,"index":7567},{"krate":0,"index":7571},{"krate":0,"index":7574},{"krate":0,"index":7578},{"krate":0,"index":7582},{"krate":0,"index":7586},{"krate":0,"index":7592},{"krate":0,"index":7595},{"krate":0,"index":7598},{"krate":0,"index":7663},{"krate":0,"index":7669},{"krate":0,"index":7666},{"krate":0,"index":7611},{"krate":0,"index":7615},{"krate":0,"index":7618},{"krate":0,"index":7622},{"krate":0,"index":7626},{"krate":0,"index":7628},{"krate":0,"index":7632},{"krate":0,"index":7635},{"krate":0,"index":7639},{"krate":0,"index":7643},{"krate":0,"index":7647},{"krate":0,"index":7653},{"krate":0,"index":7656},{"krate":0,"index":7659},{"krate":0,"index":7672},{"krate":0,"index":7683},{"krate":0,"index":7680},{"krate":0,"index":7676},{"krate":0,"index":3126},{"krate":0,"index":3131},{"krate":0,"index":3135},{"krate":0,"index":3137},{"krate":0,"index":3141},{"krate":0,"index":3144},{"krate":0,"index":3148},{"krate":0,"index":3152},{"krate":0,"index":3160},{"krate":0,"index":3163},{"krate":0,"index":7738},{"krate":0,"index":7744},{"krate":0,"index":7741},{"krate":0,"index":7686},{"krate":0,"index":7690},{"krate":0,"index":7693},{"krate":0,"index":7697},{"krate":0,"index":7701},{"krate":0,"index":7703},{"krate":0,"index":7707},{"krate":0,"index":7710},{"krate":0,"index":7714},{"krate":0,"index":7718},{"krate":0,"index":7722},{"krate":0,"index":7728},{"krate":0,"index":7731},{"krate":0,"index":7734},{"krate":0,"index":7747},{"krate":0,"index":7758},{"krate":0,"index":7755},{"krate":0,"index":7751},{"krate":0,"index":3166},{"krate":0,"index":3171},{"krate":0,"index":3175},{"krate":0,"index":3177},{"krate":0,"index":3181},{"krate":0,"index":3184},{"krate":0,"index":3188},{"krate":0,"index":3192},{"krate":0,"index":3200},{"krate":0,"index":3203},{"krate":0,"index":7813},{"krate":0,"index":7819},{"krate":0,"index":7816},{"krate":0,"index":7761},{"krate":0,"index":7765},{"krate":0,"index":7768},{"krate":0,"index":7772},{"krate":0,"index":7776},{"krate":0,"index":7778},{"krate":0,"index":7782},{"krate":0,"index":7785},{"krate":0,"index":7789},{"krate":0,"index":7793},{"krate":0,"index":7797},{"krate":0,"index":7803},{"krate":0,"index":7806},{"krate":0,"index":7809},{"krate":0,"index":7822},{"krate":0,"index":7825},{"krate":0,"index":3206},{"krate":0,"index":3210},{"krate":0,"index":3214},{"krate":0,"index":3217},{"krate":0,"index":3221},{"krate":0,"index":3223},{"krate":0,"index":3227},{"krate":0,"index":3231},{"krate":0,"index":3234},{"krate":0,"index":3238},{"krate":0,"index":3242},{"krate":0,"index":3246},{"krate":0,"index":3249},{"krate":0,"index":3253},{"krate":0,"index":3257},{"krate":0,"index":3260},{"krate":0,"index":7880},{"krate":0,"index":7886},{"krate":0,"index":7883},{"krate":0,"index":7828},{"krate":0,"index":7832},{"krate":0,"index":7835},{"krate":0,"index":7839},{"krate":0,"index":7843},{"krate":0,"index":7845},{"krate":0,"index":7849},{"krate":0,"index":7852},{"krate":0,"index":7856},{"krate":0,"index":7860},{"krate":0,"index":7864},{"krate":0,"index":7870},{"krate":0,"index":7873},{"krate":0,"index":7876},{"krate":0,"index":3263},{"krate":0,"index":7889},{"krate":0,"index":7905},{"krate":0,"index":7902},{"krate":0,"index":7898},{"krate":0,"index":3266},{"krate":0,"index":3276},{"krate":0,"index":3280},{"krate":0,"index":3282},{"krate":0,"index":3286},{"krate":0,"index":3289},{"krate":0,"index":3293},{"krate":0,"index":3297},{"krate":0,"index":3305},{"krate":0,"index":3308},{"krate":0,"index":7908},{"krate":0,"index":7912},{"krate":0,"index":3311},{"krate":0,"index":3314},{"krate":0,"index":3322},{"krate":0,"index":3328},{"krate":0,"index":3334},{"krate":0,"index":3336},{"krate":0,"index":3342},{"krate":0,"index":3348},{"krate":0,"index":3353},{"krate":0,"index":3359},{"krate":0,"index":3363},{"krate":0,"index":3367},{"krate":0,"index":3370},{"krate":0,"index":3373},{"krate":0,"index":7915},{"krate":0,"index":7919},{"krate":0,"index":3376},{"krate":0,"index":7922},{"krate":0,"index":7929},{"krate":0,"index":7926},{"krate":0,"index":3380},{"krate":0,"index":3383},{"krate":0,"index":3385},{"krate":0,"index":3389}],"decl_id":null,"docs":" Record data from [RFC 1035]: initial record types.","sig":null,"attributes":[{"value":"! Record data from [RFC 1035]: initial record types.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":667398,"byte_end":667452,"line_start":1,"line_end":1,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":667453,"byte_end":667456,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This RFC defines the initial set of record types.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":667457,"byte_end":667510,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":667511,"byte_end":667514,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! [RFC 1035]: https://tools.ietf.org/html/rfc1035","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":667515,"byte_end":667566,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":7336},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":668691,"byte_end":668692,"line_start":38,"line_end":38,"column_start":12,"column_end":13},"name":"A","qualname":"::rdata::rfc1035::A","value":"A {  }","parent":null,"children":[{"krate":0,"index":7337}],"decl_id":null,"docs":" A record data.","sig":null,"attributes":[{"value":"/ A record data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":668354,"byte_end":668372,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":668373,"byte_end":668376,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ A records convey the IPv4 address of a host. The wire format is the 32","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":668377,"byte_end":668451,"line_start":32,"line_end":32,"column_start":1,"column_end":75}},{"value":"/ bit IPv4 address in network byte order. The master file format is the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":668452,"byte_end":668525,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ usual dotted notation.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":668526,"byte_end":668552,"line_start":34,"line_end":34,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":668553,"byte_end":668556,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ The A record type is defined in RFC 1035, section 3.4.1.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":668557,"byte_end":668617,"line_start":36,"line_end":36,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3049},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":668796,"byte_end":668799,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<A>::new","value":"fn (addr: Ipv4Addr) -> A","parent":null,"children":[],"decl_id":null,"docs":" Creates a new A record data from an IPv4 address.\n","sig":null,"attributes":[{"value":"/ Creates a new A record data from an IPv4 address.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":668731,"byte_end":668784,"line_start":43,"line_end":43,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3050},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":668925,"byte_end":668936,"line_start":49,"line_end":49,"column_start":12,"column_end":23},"name":"from_octets","qualname":"<A>::from_octets","value":"fn (a: u8, b: u8, c: u8, d: u8) -> A","parent":null,"children":[],"decl_id":null,"docs":" Creates a new A record from the IPv4 address components.\n","sig":null,"attributes":[{"value":"/ Creates a new A record from the IPv4 address components.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":668853,"byte_end":668913,"line_start":48,"line_end":48,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3051},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":669032,"byte_end":669036,"line_start":53,"line_end":53,"column_start":12,"column_end":16},"name":"addr","qualname":"<A>::addr","value":"fn (&self) -> Ipv4Addr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3052},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":669081,"byte_end":669089,"line_start":54,"line_end":54,"column_start":12,"column_end":20},"name":"set_addr","qualname":"<A>::set_addr","value":"fn (&mut self, addr: Ipv4Addr) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7412},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":671408,"byte_end":671413,"line_start":178,"line_end":178,"column_start":6,"column_end":11},"name":"Cname","qualname":"::rdata::rfc1035::Cname","value":"Cname {  }","parent":null,"children":[{"krate":0,"index":7414}],"decl_id":null,"docs":" CNAME record data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7363},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":671422,"byte_end":671427,"line_start":178,"line_end":178,"column_start":20,"column_end":25},"name":"cname","qualname":"<Cname<N>>::cname","value":"fn (&self) -> &N","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7421},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":671758,"byte_end":671763,"line_start":191,"line_end":191,"column_start":12,"column_end":17},"name":"Hinfo","qualname":"::rdata::rfc1035::Hinfo","value":"Hinfo {  }","parent":null,"children":[{"krate":0,"index":7423},{"krate":0,"index":7424}],"decl_id":null,"docs":" Hinfo record data.","sig":null,"attributes":[{"value":"/ Hinfo record data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":671512,"byte_end":671534,"line_start":184,"line_end":184,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":671535,"byte_end":671538,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ Hinfo records are used to acquire general information about a host,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":671539,"byte_end":671610,"line_start":186,"line_end":186,"column_start":1,"column_end":72}},{"value":"/ specifically the CPU type and operating system type.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":671611,"byte_end":671667,"line_start":187,"line_end":187,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":671668,"byte_end":671671,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ The Hinfo type is defined in RFC 1035, section 3.3.2.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":671672,"byte_end":671729,"line_start":189,"line_end":189,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3084},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":671929,"byte_end":671932,"line_start":198,"line_end":198,"column_start":12,"column_end":15},"name":"new","qualname":"<Hinfo<Octets>>::new","value":"fn (cpu: CharStr<Octets>, os: CharStr<Octets>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Hinfo record data from the components.\n","sig":null,"attributes":[{"value":"/ Creates a new Hinfo record data from the components.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":671861,"byte_end":671917,"line_start":197,"line_end":197,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3085},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":672064,"byte_end":672067,"line_start":203,"line_end":203,"column_start":12,"column_end":15},"name":"cpu","qualname":"<Hinfo<Octets>>::cpu","value":"fn (&self) -> &CharStr<Octets>","parent":null,"children":[],"decl_id":null,"docs":" The CPU type of the host.\n","sig":null,"attributes":[{"value":"/ The CPU type of the host.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":672023,"byte_end":672052,"line_start":202,"line_end":202,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3086},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":672180,"byte_end":672182,"line_start":208,"line_end":208,"column_start":12,"column_end":14},"name":"os","qualname":"<Hinfo<Octets>>::os","value":"fn (&self) -> &CharStr<Octets>","parent":null,"children":[],"decl_id":null,"docs":" The operating system type of the host.\n","sig":null,"attributes":[{"value":"/ The operating system type of the host.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":672126,"byte_end":672168,"line_start":207,"line_end":207,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":7480},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":675526,"byte_end":675528,"line_start":342,"line_end":342,"column_start":6,"column_end":8},"name":"Mb","qualname":"::rdata::rfc1035::Mb","value":"Mb {  }","parent":null,"children":[{"krate":0,"index":7482}],"decl_id":null,"docs":" MB record data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7431},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":675534,"byte_end":675541,"line_start":342,"line_end":342,"column_start":14,"column_end":21},"name":"madname","qualname":"<Mb<N>>::madname","value":"fn (&self) -> &N","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7541},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":676039,"byte_end":676041,"line_start":358,"line_end":358,"column_start":6,"column_end":8},"name":"Md","qualname":"::rdata::rfc1035::Md","value":"Md {  }","parent":null,"children":[{"krate":0,"index":7543}],"decl_id":null,"docs":" MD record data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7492},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":676047,"byte_end":676054,"line_start":358,"line_end":358,"column_start":14,"column_end":21},"name":"madname","qualname":"<Md<N>>::madname","value":"fn (&self) -> &N","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7602},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":676556,"byte_end":676558,"line_start":374,"line_end":374,"column_start":6,"column_end":8},"name":"Mf","qualname":"::rdata::rfc1035::Mf","value":"Mf {  }","parent":null,"children":[{"krate":0,"index":7604}],"decl_id":null,"docs":" MF record data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7553},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":676564,"byte_end":676571,"line_start":374,"line_end":374,"column_start":14,"column_end":21},"name":"madname","qualname":"<Mf<N>>::madname","value":"fn (&self) -> &N","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7663},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":676946,"byte_end":676948,"line_start":389,"line_end":389,"column_start":6,"column_end":8},"name":"Mg","qualname":"::rdata::rfc1035::Mg","value":"Mg {  }","parent":null,"children":[{"krate":0,"index":7665}],"decl_id":null,"docs":" MG record data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7614},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":676954,"byte_end":676961,"line_start":389,"line_end":389,"column_start":14,"column_end":21},"name":"madname","qualname":"<Mg<N>>::madname","value":"fn (&self) -> &N","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7672},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":677398,"byte_end":677403,"line_start":405,"line_end":405,"column_start":12,"column_end":17},"name":"Minfo","qualname":"::rdata::rfc1035::Minfo","value":"Minfo {  }","parent":null,"children":[{"krate":0,"index":7674},{"krate":0,"index":7675}],"decl_id":null,"docs":" Minfo record data.","sig":null,"attributes":[{"value":"/ Minfo record data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":677046,"byte_end":677068,"line_start":395,"line_end":395,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":677069,"byte_end":677072,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ The Minfo record specifies a mailbox which is responsible for the mailing","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":677073,"byte_end":677150,"line_start":397,"line_end":397,"column_start":1,"column_end":78}},{"value":"/ list or mailbox and a mailbox that receives error messages related to the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":677151,"byte_end":677228,"line_start":398,"line_end":398,"column_start":1,"column_end":78}},{"value":"/ list or box.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":677229,"byte_end":677245,"line_start":399,"line_end":399,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":677246,"byte_end":677249,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ The Minfo record is experimental.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":677250,"byte_end":677287,"line_start":401,"line_end":401,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":677288,"byte_end":677291,"line_start":402,"line_end":402,"column_start":1,"column_end":4}},{"value":"/ The Minfo record type is defined in RFC 1035, section 3.3.7.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":677292,"byte_end":677356,"line_start":403,"line_end":403,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3128},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":677535,"byte_end":677538,"line_start":412,"line_end":412,"column_start":12,"column_end":15},"name":"new","qualname":"<Minfo<N>>::new","value":"fn (rmailbx: N, emailbx: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Minfo record data from the components.\n","sig":null,"attributes":[{"value":"/ Creates a new Minfo record data from the components.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":677467,"byte_end":677523,"line_start":411,"line_end":411,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3129},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":677874,"byte_end":677881,"line_start":421,"line_end":421,"column_start":12,"column_end":19},"name":"rmailbx","qualname":"<Minfo<N>>::rmailbx","value":"fn (&self) -> &N","parent":null,"children":[],"decl_id":null,"docs":" The responsible mail box.","sig":null,"attributes":[{"value":"/ The responsible mail box.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":677619,"byte_end":677648,"line_start":416,"line_end":416,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":677653,"byte_end":677656,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ The domain name specifies the mailbox which is responsible for the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":677661,"byte_end":677731,"line_start":418,"line_end":418,"column_start":5,"column_end":75}},{"value":"/ mailing list or mailbox. If this domain name is the root, the owner","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":677736,"byte_end":677807,"line_start":419,"line_end":419,"column_start":5,"column_end":76}},{"value":"/ of the Minfo record is responsible for itself.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":677812,"byte_end":677862,"line_start":420,"line_end":420,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3130},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":678242,"byte_end":678249,"line_start":431,"line_end":431,"column_start":12,"column_end":19},"name":"emailbx","qualname":"<Minfo<N>>::emailbx","value":"fn (&self) -> &N","parent":null,"children":[],"decl_id":null,"docs":" The error mail box.","sig":null,"attributes":[{"value":"/ The error mail box.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":677930,"byte_end":677953,"line_start":425,"line_end":425,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":677958,"byte_end":677961,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ The domain name specifies a mailbox which is to receive error","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":677966,"byte_end":678031,"line_start":427,"line_end":427,"column_start":5,"column_end":70}},{"value":"/ messages related to the mailing list or mailbox specified by the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":678036,"byte_end":678104,"line_start":428,"line_end":428,"column_start":5,"column_end":73}},{"value":"/ owner of the record. If this is the root domain name, errors should","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":678109,"byte_end":678180,"line_start":429,"line_end":429,"column_start":5,"column_end":76}},{"value":"/ be returned to the sender of the message.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":678185,"byte_end":678230,"line_start":430,"line_end":430,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":7738},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":681517,"byte_end":681519,"line_start":559,"line_end":559,"column_start":6,"column_end":8},"name":"Mr","qualname":"::rdata::rfc1035::Mr","value":"Mr {  }","parent":null,"children":[{"krate":0,"index":7740}],"decl_id":null,"docs":" MR record data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7689},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":681525,"byte_end":681532,"line_start":559,"line_end":559,"column_start":14,"column_end":21},"name":"newname","qualname":"<Mr<N>>::newname","value":"fn (&self) -> &N","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7747},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":681843,"byte_end":681845,"line_start":572,"line_end":572,"column_start":12,"column_end":14},"name":"Mx","qualname":"::rdata::rfc1035::Mx","value":"Mx {  }","parent":null,"children":[{"krate":0,"index":7749},{"krate":0,"index":7750}],"decl_id":null,"docs":" Mx record data.","sig":null,"attributes":[{"value":"/ Mx record data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":681617,"byte_end":681636,"line_start":565,"line_end":565,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":681637,"byte_end":681640,"line_start":566,"line_end":566,"column_start":1,"column_end":4}},{"value":"/ The Mx record specifies a host willing to serve as a mail exchange for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":681641,"byte_end":681715,"line_start":567,"line_end":567,"column_start":1,"column_end":75}},{"value":"/ the owner name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":681716,"byte_end":681735,"line_start":568,"line_end":568,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":681736,"byte_end":681739,"line_start":569,"line_end":569,"column_start":1,"column_end":4}},{"value":"/ The Mx record type is defined in RFC 1035, section 3.3.9.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":681740,"byte_end":681801,"line_start":570,"line_end":570,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3168},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":681977,"byte_end":681980,"line_start":579,"line_end":579,"column_start":12,"column_end":15},"name":"new","qualname":"<Mx<N>>::new","value":"fn (preference: u16, exchange: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Mx record data from the components.\n","sig":null,"attributes":[{"value":"/ Creates a new Mx record data from the components.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":681912,"byte_end":681965,"line_start":578,"line_end":578,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3169},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":682236,"byte_end":682246,"line_start":587,"line_end":587,"column_start":12,"column_end":22},"name":"preference","qualname":"<Mx<N>>::preference","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" The preference for this record.","sig":null,"attributes":[{"value":"/ The preference for this record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":682068,"byte_end":682103,"line_start":583,"line_end":583,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":682108,"byte_end":682111,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ Defines an order if there are several Mx records for the same owner.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":682116,"byte_end":682188,"line_start":585,"line_end":585,"column_start":5,"column_end":77}},{"value":"/ Lower values are preferred.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":682193,"byte_end":682224,"line_start":586,"line_end":586,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3170},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":682356,"byte_end":682364,"line_start":592,"line_end":592,"column_start":12,"column_end":20},"name":"exchange","qualname":"<Mx<N>>::exchange","value":"fn (&self) -> &N","parent":null,"children":[],"decl_id":null,"docs":" The name of the host that is the exchange.\n","sig":null,"attributes":[{"value":"/ The name of the host that is the exchange.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":682298,"byte_end":682344,"line_start":591,"line_end":591,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":7813},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":685438,"byte_end":685440,"line_start":713,"line_end":713,"column_start":6,"column_end":8},"name":"Ns","qualname":"::rdata::rfc1035::Ns","value":"Ns {  }","parent":null,"children":[{"krate":0,"index":7815}],"decl_id":null,"docs":" NS record data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7764},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":685446,"byte_end":685453,"line_start":713,"line_end":713,"column_start":14,"column_end":21},"name":"nsdname","qualname":"<Ns<N>>::nsdname","value":"fn (&self) -> &N","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7822},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":685764,"byte_end":685768,"line_start":726,"line_end":726,"column_start":12,"column_end":16},"name":"Null","qualname":"::rdata::rfc1035::Null","value":"Null {  }","parent":null,"children":[{"krate":0,"index":7824}],"decl_id":null,"docs":" Null record data.","sig":null,"attributes":[{"value":"/ Null record data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":685538,"byte_end":685559,"line_start":719,"line_end":719,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":685560,"byte_end":685563,"line_start":720,"line_end":720,"column_start":1,"column_end":4}},{"value":"/ Null records can contain whatever data. They are experimental and not","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":685564,"byte_end":685637,"line_start":721,"line_end":721,"column_start":1,"column_end":74}},{"value":"/ allowed in master files.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":685638,"byte_end":685666,"line_start":722,"line_end":722,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":685667,"byte_end":685670,"line_start":723,"line_end":723,"column_start":1,"column_end":4}},{"value":"/ The Null record type is defined in RFC 1035, section 3.3.10.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":685671,"byte_end":685735,"line_start":724,"line_end":724,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3208},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":685890,"byte_end":685893,"line_start":732,"line_end":732,"column_start":12,"column_end":15},"name":"new","qualname":"<Null<Octets>>::new","value":"fn (data: Octets) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates new, empty owned Null record data.\n","sig":null,"attributes":[{"value":"/ Creates new, empty owned Null record data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":685832,"byte_end":685878,"line_start":731,"line_end":731,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3209},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":685997,"byte_end":686001,"line_start":737,"line_end":737,"column_start":12,"column_end":16},"name":"data","qualname":"<Null<Octets>>::data","value":"fn (&self) -> &Octets","parent":null,"children":[],"decl_id":null,"docs":" The raw content of the record.\n","sig":null,"attributes":[{"value":"/ The raw content of the record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":685951,"byte_end":685985,"line_start":736,"line_end":736,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3212},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":686102,"byte_end":686105,"line_start":743,"line_end":743,"column_start":12,"column_end":15},"name":"len","qualname":"<Null<Octets>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3213},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":686175,"byte_end":686183,"line_start":747,"line_end":747,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Null<Octets>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7880},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":689365,"byte_end":689368,"line_start":887,"line_end":887,"column_start":6,"column_end":9},"name":"Ptr","qualname":"::rdata::rfc1035::Ptr","value":"Ptr {  }","parent":null,"children":[{"krate":0,"index":7882}],"decl_id":null,"docs":" PTR record data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7831},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":689375,"byte_end":689383,"line_start":887,"line_end":887,"column_start":16,"column_end":24},"name":"ptrdname","qualname":"<Ptr<N>>::ptrdname","value":"fn (&self) -> &N","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3265},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":689416,"byte_end":689429,"line_start":891,"line_end":891,"column_start":12,"column_end":25},"name":"into_ptrdname","qualname":"<Ptr<N>>::into_ptrdname","value":"fn (self) -> N","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7889},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":689804,"byte_end":689807,"line_start":906,"line_end":906,"column_start":12,"column_end":15},"name":"Soa","qualname":"::rdata::rfc1035::Soa","value":"Soa {  }","parent":null,"children":[{"krate":0,"index":7891},{"krate":0,"index":7892},{"krate":0,"index":7893},{"krate":0,"index":7894},{"krate":0,"index":7895},{"krate":0,"index":7896},{"krate":0,"index":7897}],"decl_id":null,"docs":" Soa record data.","sig":null,"attributes":[{"value":"/ Soa record data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":689554,"byte_end":689574,"line_start":899,"line_end":899,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":689575,"byte_end":689578,"line_start":900,"line_end":900,"column_start":1,"column_end":4}},{"value":"/ Soa records mark the top of a zone and contain information pertinent to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":689579,"byte_end":689654,"line_start":901,"line_end":901,"column_start":1,"column_end":76}},{"value":"/ name server maintenance operations.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":689655,"byte_end":689694,"line_start":902,"line_end":902,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":689695,"byte_end":689698,"line_start":903,"line_end":903,"column_start":1,"column_end":4}},{"value":"/ The Soa record type is defined in RFC 1035, section 3.3.13.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":689699,"byte_end":689762,"line_start":904,"line_end":904,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3268},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":690010,"byte_end":690013,"line_start":918,"line_end":918,"column_start":12,"column_end":15},"name":"new","qualname":"<Soa<N>>::new","value":"fn (mname: N, rname: N, serial: Serial, refresh: u32, retry: u32, expire: u32, minimum: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates new Soa record data from content.\n","sig":null,"attributes":[{"value":"/ Creates new Soa record data from content.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":689953,"byte_end":689998,"line_start":917,"line_end":917,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3269},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":690262,"byte_end":690267,"line_start":924,"line_end":924,"column_start":12,"column_end":17},"name":"mname","qualname":"<Soa<N>>::mname","value":"fn (&self) -> &N","parent":null,"children":[],"decl_id":null,"docs":" The primary name server for the zone.\n","sig":null,"attributes":[{"value":"/ The primary name server for the zone.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":690209,"byte_end":690250,"line_start":923,"line_end":923,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3270},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":690383,"byte_end":690388,"line_start":929,"line_end":929,"column_start":12,"column_end":17},"name":"rname","qualname":"<Soa<N>>::rname","value":"fn (&self) -> &N","parent":null,"children":[],"decl_id":null,"docs":" The mailbox for the person responsible for this zone.\n","sig":null,"attributes":[{"value":"/ The mailbox for the person responsible for this zone.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":690314,"byte_end":690371,"line_start":928,"line_end":928,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3271},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":690502,"byte_end":690508,"line_start":934,"line_end":934,"column_start":12,"column_end":18},"name":"serial","qualname":"<Soa<N>>::serial","value":"fn (&self) -> Serial","parent":null,"children":[],"decl_id":null,"docs":" The serial number of the original copy of the zone.\n","sig":null,"attributes":[{"value":"/ The serial number of the original copy of the zone.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":690435,"byte_end":690490,"line_start":933,"line_end":933,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3272},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":690640,"byte_end":690647,"line_start":939,"line_end":939,"column_start":12,"column_end":19},"name":"refresh","qualname":"<Soa<N>>::refresh","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The time interval in seconds before the zone should be refreshed.\n","sig":null,"attributes":[{"value":"/ The time interval in seconds before the zone should be refreshed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":690559,"byte_end":690628,"line_start":938,"line_end":938,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3273},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":690767,"byte_end":690772,"line_start":944,"line_end":944,"column_start":12,"column_end":17},"name":"retry","qualname":"<Soa<N>>::retry","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The time in seconds before a failed refresh is retried.\n","sig":null,"attributes":[{"value":"/ The time in seconds before a failed refresh is retried.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":690696,"byte_end":690755,"line_start":943,"line_end":943,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3274},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":690896,"byte_end":690902,"line_start":949,"line_end":949,"column_start":12,"column_end":18},"name":"expire","qualname":"<Soa<N>>::expire","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The upper limit of time in seconds the zone is authoritative.\n","sig":null,"attributes":[{"value":"/ The upper limit of time in seconds the zone is authoritative.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":690819,"byte_end":690884,"line_start":948,"line_end":948,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3275},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":691024,"byte_end":691031,"line_start":954,"line_end":954,"column_start":12,"column_end":19},"name":"minimum","qualname":"<Soa<N>>::minimum","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The minimum TTL to be exported with any RR from this zone.\n","sig":null,"attributes":[{"value":"/ The minimum TTL to be exported with any RR from this zone.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":690950,"byte_end":691012,"line_start":953,"line_end":953,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":7908},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":697265,"byte_end":697268,"line_start":1167,"line_end":1167,"column_start":12,"column_end":15},"name":"Txt","qualname":"::rdata::rfc1035::Txt","value":"","parent":null,"children":[],"decl_id":null,"docs":" Txt record data.","sig":null,"attributes":[{"value":"/ Txt record data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":697105,"byte_end":697125,"line_start":1161,"line_end":1161,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":697126,"byte_end":697129,"line_start":1162,"line_end":1162,"column_start":1,"column_end":4}},{"value":"/ Txt records hold descriptive text.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":697130,"byte_end":697168,"line_start":1163,"line_end":1163,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":697169,"byte_end":697172,"line_start":1164,"line_end":1164,"column_start":1,"column_end":4}},{"value":"/ The Txt record type is defined in RFC 1035, section 3.3.14.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":697173,"byte_end":697236,"line_start":1165,"line_end":1165,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3313},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":697403,"byte_end":697413,"line_start":1171,"line_end":1171,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<Txt<Octets>>::from_slice","value":"fn (text: &[u8]) -> Result<Self, ShortBuf>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Txt record from a single character string.\n","sig":null,"attributes":[{"value":"/ Creates a new Txt record from a single character string.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":697331,"byte_end":697391,"line_start":1170,"line_end":1170,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3316},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":697893,"byte_end":697897,"line_start":1184,"line_end":1184,"column_start":12,"column_end":16},"name":"iter","qualname":"<Txt<Octets>>::iter","value":"fn (&self) -> TxtIter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the text items.","sig":null,"attributes":[{"value":"/ Returns an iterator over the text items.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":697695,"byte_end":697739,"line_start":1180,"line_end":1180,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":697744,"byte_end":697747,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ The Txt format contains one or more length-delimited byte strings.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":697752,"byte_end":697822,"line_start":1182,"line_end":1182,"column_start":5,"column_end":75}},{"value":"/ This method returns an iterator over each of them.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":697827,"byte_end":697881,"line_start":1183,"line_end":1183,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3317},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":697987,"byte_end":698000,"line_start":1188,"line_end":1188,"column_start":12,"column_end":25},"name":"as_flat_slice","qualname":"<Txt<Octets>>::as_flat_slice","value":"fn (&self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3318},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":698211,"byte_end":698214,"line_start":1197,"line_end":1197,"column_start":12,"column_end":15},"name":"len","qualname":"<Txt<Octets>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3319},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":698281,"byte_end":698289,"line_start":1201,"line_end":1201,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Txt<Octets>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3320},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":698723,"byte_end":698727,"line_start":1213,"line_end":1213,"column_start":12,"column_end":16},"name":"text","qualname":"<Txt<Octets>>::text","value":"fn <T> (&self) -> Result<T, ShortBuf>","parent":null,"children":[],"decl_id":null,"docs":" Returns the text content.","sig":null,"attributes":[{"value":"/ Returns the text content.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":698332,"byte_end":698361,"line_start":1205,"line_end":1205,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":698366,"byte_end":698369,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ If the data is only one single character string, returns a simple","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":698374,"byte_end":698443,"line_start":1207,"line_end":1207,"column_start":5,"column_end":74}},{"value":"/ clone of the slice with the data. If there are several character","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":698448,"byte_end":698516,"line_start":1208,"line_end":1208,"column_start":5,"column_end":73}},{"value":"/ strings, their content will be copied together into one single,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":698521,"byte_end":698588,"line_start":1209,"line_end":1209,"column_start":5,"column_end":72}},{"value":"/ newly allocated bytes value.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":698593,"byte_end":698625,"line_start":1210,"line_end":1210,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":698630,"byte_end":698633,"line_start":1211,"line_end":1211,"column_start":5,"column_end":8}},{"value":"/ Access to the individual character strings is possible via iteration.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":698638,"byte_end":698711,"line_start":1212,"line_end":1212,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":7915},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":702825,"byte_end":702832,"line_start":1372,"line_end":1372,"column_start":12,"column_end":19},"name":"TxtIter","qualname":"::rdata::rfc1035::TxtIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the character strings of a Txt record.\n","sig":null,"attributes":[{"value":"/ An iterator over the character strings of a Txt record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":702737,"byte_end":702796,"line_start":1370,"line_end":1370,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":7922},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":703249,"byte_end":703259,"line_start":1391,"line_end":1391,"column_start":12,"column_end":22},"name":"TxtBuilder","qualname":"::rdata::rfc1035::TxtBuilder","value":"TxtBuilder {  }","parent":null,"children":[{"krate":0,"index":7924},{"krate":0,"index":7925}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3382},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":703545,"byte_end":703548,"line_start":1401,"line_end":1401,"column_start":12,"column_end":15},"name":"new","qualname":"<TxtBuilder<Builder>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3384},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":703728,"byte_end":703737,"line_start":1411,"line_end":1411,"column_start":12,"column_end":21},"name":"new_bytes","qualname":"<TxtBuilder<BytesMut>>::new_bytes","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3387},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":703841,"byte_end":703853,"line_start":1417,"line_end":1417,"column_start":12,"column_end":24},"name":"append_slice","qualname":"<TxtBuilder<Builder>>::append_slice","value":"fn (&mut self, mut slice: &[u8]) -> Result<(), ShortBuf>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3388},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":704846,"byte_end":704852,"line_start":1445,"line_end":1445,"column_start":12,"column_end":18},"name":"finish","qualname":"<TxtBuilder<Builder>>::finish","value":"fn (mut self) -> Txt<Builder::Octets>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3392},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2782.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rfc2782","qualname":"::rdata::rfc2782","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2782.rs","parent":null,"children":[{"krate":0,"index":3393},{"krate":0,"index":3394},{"krate":0,"index":3395},{"krate":0,"index":3396},{"krate":0,"index":3397},{"krate":0,"index":3400},{"krate":0,"index":3408},{"krate":0,"index":7932},{"krate":0,"index":7945},{"krate":0,"index":7942},{"krate":0,"index":7938},{"krate":0,"index":3409},{"krate":0,"index":3418},{"krate":0,"index":3422},{"krate":0,"index":3424},{"krate":0,"index":3428},{"krate":0,"index":3431},{"krate":0,"index":3435},{"krate":0,"index":3439},{"krate":0,"index":3447},{"krate":0,"index":3450}],"decl_id":null,"docs":" Record data from [RFC 2782]: SRV records.","sig":null,"attributes":[{"value":"! Record data from [RFC 2782]: SRV records.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2782.rs","byte_start":707036,"byte_end":707081,"line_start":1,"line_end":1,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2782.rs","byte_start":707082,"byte_end":707085,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This RFC defines the Srv record type.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2782.rs","byte_start":707086,"byte_end":707127,"line_start":3,"line_end":3,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2782.rs","byte_start":707128,"byte_end":707131,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! [RFC 2782]: https://tools.ietf.org/html/rfc2782","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2782.rs","byte_start":707132,"byte_end":707183,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":7932},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2782.rs","byte_start":707705,"byte_end":707708,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"Srv","qualname":"::rdata::rfc2782::Srv","value":"Srv {  }","parent":null,"children":[{"krate":0,"index":7934},{"krate":0,"index":7935},{"krate":0,"index":7936},{"krate":0,"index":7937}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3411},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2782.rs","byte_start":707813,"byte_end":707818,"line_start":33,"line_end":33,"column_start":15,"column_end":20},"name":"RTYPE","qualname":"::rdata::rfc2782::Srv::<N>::RTYPE","value":"Rtype","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3412},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2782.rs","byte_start":707852,"byte_end":707855,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<Srv<N>>::new","value":"fn (priority: u16, weight: u16, port: u16, target: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3413},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2782.rs","byte_start":707981,"byte_end":707992,"line_start":39,"line_end":39,"column_start":12,"column_end":23},"name":"into_target","qualname":"<Srv<N>>::into_target","value":"fn (self) -> N","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3414},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2782.rs","byte_start":708044,"byte_end":708052,"line_start":43,"line_end":43,"column_start":12,"column_end":20},"name":"priority","qualname":"<Srv<N>>::priority","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3415},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2782.rs","byte_start":708109,"byte_end":708115,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"weight","qualname":"<Srv<N>>::weight","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3416},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2782.rs","byte_start":708170,"byte_end":708174,"line_start":51,"line_end":51,"column_start":12,"column_end":16},"name":"port","qualname":"<Srv<N>>::port","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3417},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2782.rs","byte_start":708227,"byte_end":708233,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"name":"target","qualname":"<Srv<N>>::target","value":"fn (&self) -> &N","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3453},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rfc2845","qualname":"::rdata::rfc2845","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","parent":null,"children":[{"krate":0,"index":3454},{"krate":0,"index":3457},{"krate":0,"index":3458},{"krate":0,"index":3459},{"krate":0,"index":3460},{"krate":0,"index":3463},{"krate":0,"index":3466},{"krate":0,"index":3474},{"krate":0,"index":3475},{"krate":0,"index":7948},{"krate":0,"index":7958},{"krate":0,"index":3476},{"krate":0,"index":3491},{"krate":0,"index":3497},{"krate":0,"index":3500},{"krate":0,"index":3506},{"krate":0,"index":3510},{"krate":0,"index":3516},{"krate":0,"index":3521},{"krate":0,"index":3525},{"krate":0,"index":3531},{"krate":0,"index":3535},{"krate":0,"index":3539},{"krate":0,"index":7962},{"krate":0,"index":7986},{"krate":0,"index":7985},{"krate":0,"index":7983},{"krate":0,"index":7980},{"krate":0,"index":7981},{"krate":0,"index":7977},{"krate":0,"index":7975},{"krate":0,"index":7971},{"krate":0,"index":7972},{"krate":0,"index":7965},{"krate":0,"index":3543},{"krate":0,"index":3551},{"krate":0,"index":3553},{"krate":0,"index":3558},{"krate":0,"index":3561}],"decl_id":null,"docs":" Record data from [RFC 2845]: TSIG records.","sig":null,"attributes":[{"value":"! Record data from [RFC 2845]: TSIG records.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":712239,"byte_end":712285,"line_start":1,"line_end":1,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":712286,"byte_end":712289,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This RFC defines the TSIG record type used for signing DNS messages.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":712290,"byte_end":712362,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":712363,"byte_end":712366,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! [RFC 2845]: https://tools.ietf.org/html/rfc2845","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":712367,"byte_end":712418,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":7948},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":712931,"byte_end":712935,"line_start":24,"line_end":24,"column_start":12,"column_end":16},"name":"Tsig","qualname":"::rdata::rfc2845::Tsig","value":"Tsig {  }","parent":null,"children":[{"krate":0,"index":7951},{"krate":0,"index":7952},{"krate":0,"index":7953},{"krate":0,"index":7954},{"krate":0,"index":7955},{"krate":0,"index":7956},{"krate":0,"index":7957}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3479},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":714057,"byte_end":714060,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Tsig<O, N>>::new","value":"fn (algorithm: N, time_signed: Time48, fudge: u16, mac: O, original_id: u16, error: TsigRcode, other: O) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TSIG record from its components.","sig":null,"attributes":[{"value":"/ Creates a new TSIG record from its components.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":713757,"byte_end":713807,"line_start":57,"line_end":57,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":713812,"byte_end":713815,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ See the access methods for an explanation of these components.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":713820,"byte_end":713886,"line_start":59,"line_end":59,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":713891,"byte_end":713894,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":713899,"byte_end":713911,"line_start":61,"line_end":61,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":713916,"byte_end":713919,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Since `time_signed` is actually a 48 bit integer, the function will","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":713924,"byte_end":713995,"line_start":63,"line_end":63,"column_start":5,"column_end":76}},{"value":"/ panic of the upper 16 bits are not all 0.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":714000,"byte_end":714045,"line_start":64,"line_end":64,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3480},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":714576,"byte_end":714585,"line_start":84,"line_end":84,"column_start":12,"column_end":21},"name":"algorithm","qualname":"<Tsig<O, N>>::algorithm","value":"fn (&self) -> &N","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the algorithm name.","sig":null,"attributes":[{"value":"/ Returns a reference to the algorithm name.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":714344,"byte_end":714390,"line_start":79,"line_end":79,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":714395,"byte_end":714398,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ TSIG encodes the algorithm used for keys and signatures as a domain","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":714403,"byte_end":714474,"line_start":81,"line_end":81,"column_start":5,"column_end":76}},{"value":"/ name. It does, however, only use the format. No structure is used at","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":714479,"byte_end":714551,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ all.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":714556,"byte_end":714564,"line_start":83,"line_end":83,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":3481},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":714817,"byte_end":714828,"line_start":92,"line_end":92,"column_start":12,"column_end":23},"name":"time_signed","qualname":"<Tsig<O, N>>::time_signed","value":"fn (&self) -> Time48","parent":null,"children":[],"decl_id":null,"docs":" Returns the Unix time when the signature is created.","sig":null,"attributes":[{"value":"/ Returns the Unix time when the signature is created.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":714636,"byte_end":714692,"line_start":88,"line_end":88,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":714697,"byte_end":714700,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Despite its type, this is actually a 48 bit number. The upper 16 bits","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":714705,"byte_end":714778,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ will never be set.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":714783,"byte_end":714805,"line_start":91,"line_end":91,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3482},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":715114,"byte_end":715119,"line_start":100,"line_end":100,"column_start":12,"column_end":17},"name":"fudge","qualname":"<Tsig<O, N>>::fudge","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Return the number of seconds of offset from signing time permitted.","sig":null,"attributes":[{"value":"/ Return the number of seconds of offset from signing time permitted.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":714884,"byte_end":714955,"line_start":96,"line_end":96,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":714960,"byte_end":714963,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ When a signature is checked, the local system time needs to be within","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":714968,"byte_end":715041,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ this many seconds from `time_signed` to be accepted.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":715046,"byte_end":715102,"line_start":99,"line_end":99,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3483},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":715240,"byte_end":715243,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"mac","qualname":"<Tsig<O, N>>::mac","value":"fn (&self) -> &O","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the bytes value containing the MAC.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the bytes value containing the MAC.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":715166,"byte_end":715228,"line_start":104,"line_end":104,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3484},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":715346,"byte_end":715355,"line_start":110,"line_end":110,"column_start":12,"column_end":21},"name":"mac_slice","qualname":"<Tsig<O, N>>::mac_slice","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns an octet slice containing the MAC.\n","sig":null,"attributes":[{"value":"/ Returns an octet slice containing the MAC.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":715288,"byte_end":715334,"line_start":109,"line_end":109,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3485},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":715490,"byte_end":715498,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"into_mac","qualname":"<Tsig<O, N>>::into_mac","value":"fn (self) -> O","parent":null,"children":[],"decl_id":null,"docs":" Converts the record data into the MAC.\n","sig":null,"attributes":[{"value":"/ Converts the record data into the MAC.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":715436,"byte_end":715478,"line_start":115,"line_end":115,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3486},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":715748,"byte_end":715759,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"original_id","qualname":"<Tsig<O, N>>::original_id","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the original message ID.","sig":null,"attributes":[{"value":"/ Returns the original message ID.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":715540,"byte_end":715576,"line_start":120,"line_end":120,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":715581,"byte_end":715584,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Since the message ID is part of the signature generation but may be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":715589,"byte_end":715660,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/ changed for a forwarded message, it is included in the TSIG record.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":715665,"byte_end":715736,"line_start":123,"line_end":123,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3487},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":715851,"byte_end":715856,"line_start":129,"line_end":129,"column_start":12,"column_end":17},"name":"error","qualname":"<Tsig<O, N>>::error","value":"fn (&self) -> TsigRcode","parent":null,"children":[],"decl_id":null,"docs":" Returns the TSIG error.\n","sig":null,"attributes":[{"value":"/ Returns the TSIG error.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":715812,"byte_end":715839,"line_start":128,"line_end":128,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3488},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":716081,"byte_end":716086,"line_start":137,"line_end":137,"column_start":12,"column_end":17},"name":"other","qualname":"<Tsig<O, N>>::other","value":"fn (&self) -> &O","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the other bytes.","sig":null,"attributes":[{"value":"/ Returns a reference to the other bytes.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":715909,"byte_end":715952,"line_start":133,"line_end":133,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":715957,"byte_end":715960,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ This field is only used for BADTIME errors to return the server time.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":715965,"byte_end":716038,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ Otherwise it is empty.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":716043,"byte_end":716069,"line_start":136,"line_end":136,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3489},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":716344,"byte_end":716354,"line_start":145,"line_end":145,"column_start":12,"column_end":22},"name":"other_time","qualname":"<Tsig<O, N>>::other_time","value":"fn (&self) -> Option<Time48>","parent":null,"children":[],"decl_id":null,"docs":" Returns the other bytes as the server time.","sig":null,"attributes":[{"value":"/ Returns the other bytes as the server time.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":716133,"byte_end":716180,"line_start":141,"line_end":141,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":716185,"byte_end":716188,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ If the other bytes field is exactly 6 bytes long, this methods","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":716193,"byte_end":716259,"line_start":143,"line_end":143,"column_start":5,"column_end":71}},{"value":"/ returns it as a `u64` representation of the Unix time contained.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":716264,"byte_end":716332,"line_start":144,"line_end":144,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3490},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":716874,"byte_end":716886,"line_start":163,"line_end":163,"column_start":12,"column_end":24},"name":"is_valid_now","qualname":"<Tsig<O, N>>::is_valid_now","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the record is valid right now.","sig":null,"attributes":[{"value":"/ Returns whether the record is valid right now.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":716572,"byte_end":716622,"line_start":155,"line_end":155,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":716627,"byte_end":716630,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ The method checks whether the current system time is within [`fudge`]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":716635,"byte_end":716708,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/ seconds of the [`time_signed`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":716713,"byte_end":716748,"line_start":158,"line_end":158,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":716753,"byte_end":716756,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ [`fudge`]: #method.fudge","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":716761,"byte_end":716789,"line_start":160,"line_end":160,"column_start":5,"column_end":33}},{"value":"/ [`time_signed`]: #method.time_signed","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":716794,"byte_end":716834,"line_start":161,"line_end":161,"column_start":5,"column_end":45}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":716839,"byte_end":716862,"line_start":162,"line_end":162,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":7962},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":724506,"byte_end":724512,"line_start":393,"line_end":393,"column_start":12,"column_end":18},"name":"Time48","qualname":"::rdata::rfc2845::Time48","value":"","parent":null,"children":[],"decl_id":null,"docs":" A 48-bit Unix timestamp.\n","sig":null,"attributes":[{"value":"/ A 48-bit Unix timestamp.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":724398,"byte_end":724426,"line_start":391,"line_end":391,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3544},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":724857,"byte_end":724860,"line_start":402,"line_end":402,"column_start":12,"column_end":15},"name":"now","qualname":"<Time48>::now","value":"fn () -> Time48","parent":null,"children":[],"decl_id":null,"docs":" Returns the timestamp of the current moment.","sig":null,"attributes":[{"value":"/ Returns the timestamp of the current moment.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":724538,"byte_end":724586,"line_start":396,"line_end":396,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":724591,"byte_end":724594,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ The funtion will panic if for whatever reason the current moment is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":724599,"byte_end":724670,"line_start":398,"line_end":398,"column_start":5,"column_end":76}},{"value":"/ too far in the future to fit into this type. For a correctly set","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":724675,"byte_end":724743,"line_start":399,"line_end":399,"column_start":5,"column_end":73}},{"value":"/ clock, this will happen in December 8,921,556, so should be fine.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":724748,"byte_end":724817,"line_start":400,"line_end":400,"column_start":5,"column_end":74}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":724822,"byte_end":724845,"line_start":401,"line_end":401,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3545},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":725273,"byte_end":725281,"line_start":414,"line_end":414,"column_start":12,"column_end":20},"name":"from_u64","qualname":"<Time48>::from_u64","value":"fn (value: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a value from a 64 bit integer.","sig":null,"attributes":[{"value":"/ Creates a value from a 64 bit integer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":725073,"byte_end":725115,"line_start":410,"line_end":410,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":725120,"byte_end":725123,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ The upper 16 bits of the arument must be zero or else this function","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":725128,"byte_end":725199,"line_start":412,"line_end":412,"column_start":5,"column_end":76}},{"value":"/ panics. This is also why we don’t implement `From`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":725204,"byte_end":725261,"line_start":413,"line_end":413,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3547},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":726083,"byte_end":726094,"line_start":441,"line_end":441,"column_start":12,"column_end":23},"name":"into_octets","qualname":"<Time48>::into_octets","value":"fn (self) -> [u8; 6]","parent":null,"children":[],"decl_id":null,"docs":" Converts a value into its wire format.","sig":null,"attributes":[{"value":"/ Converts a value into its wire format.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":725950,"byte_end":725992,"line_start":438,"line_end":438,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":725997,"byte_end":726000,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ Returns the octets of the encoded value in network byte order.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":726005,"byte_end":726071,"line_start":440,"line_end":440,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3550},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":726575,"byte_end":726584,"line_start":456,"line_end":456,"column_start":12,"column_end":21},"name":"eq_fudged","qualname":"<Time48>::eq_fudged","value":"fn (self, other: Self, fudge: u64) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the time is within a given period.","sig":null,"attributes":[{"value":"/ Returns whether the time is within a given period.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":726394,"byte_end":726448,"line_start":452,"line_end":452,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":726453,"byte_end":726456,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ Returns `true` iff `other` is at most `fudge` seconds before or after","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":726461,"byte_end":726534,"line_start":454,"line_end":454,"column_start":5,"column_end":78}},{"value":"/ this value’s time.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":726539,"byte_end":726563,"line_start":455,"line_end":455,"column_start":5,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":3563},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rfc3596","qualname":"::rdata::rfc3596","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","parent":null,"children":[{"krate":0,"index":3564},{"krate":0,"index":3567},{"krate":0,"index":3568},{"krate":0,"index":3569},{"krate":0,"index":3570},{"krate":0,"index":3571},{"krate":0,"index":3578},{"krate":0,"index":7988},{"krate":0,"index":8010},{"krate":0,"index":8008},{"krate":0,"index":8005},{"krate":0,"index":8006},{"krate":0,"index":8002},{"krate":0,"index":8000},{"krate":0,"index":7996},{"krate":0,"index":7997},{"krate":0,"index":7990},{"krate":0,"index":3579},{"krate":0,"index":3583},{"krate":0,"index":3585},{"krate":0,"index":3587},{"krate":0,"index":3590},{"krate":0,"index":3592},{"krate":0,"index":3596},{"krate":0,"index":3599},{"krate":0,"index":3601},{"krate":0,"index":3603},{"krate":0,"index":3606},{"krate":0,"index":3608},{"krate":0,"index":3610}],"decl_id":null,"docs":" Record data from [RFC 3596]: AAAA records.","sig":null,"attributes":[{"value":"! Record data from [RFC 3596]: AAAA records.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":727518,"byte_end":727564,"line_start":1,"line_end":1,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":727565,"byte_end":727568,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This RFC defines the Aaaa record type.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":727569,"byte_end":727611,"line_start":3,"line_end":3,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":727612,"byte_end":727615,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! [RFC 3596]: https://tools.ietf.org/html/rfc3596","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":727616,"byte_end":727667,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":7988},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":728199,"byte_end":728203,"line_start":24,"line_end":24,"column_start":12,"column_end":16},"name":"Aaaa","qualname":"::rdata::rfc3596::Aaaa","value":"Aaaa {  }","parent":null,"children":[{"krate":0,"index":7989}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3580},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":728251,"byte_end":728254,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<Aaaa>::new","value":"fn (addr: Ipv6Addr) -> Aaaa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3581},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":728321,"byte_end":728325,"line_start":33,"line_end":33,"column_start":12,"column_end":16},"name":"addr","qualname":"<Aaaa>::addr","value":"fn (&self) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3582},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":728370,"byte_end":728378,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"set_addr","qualname":"<Aaaa>::set_addr","value":"fn (&mut self, addr: Ipv6Addr) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3612},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rfc4034","qualname":"::rdata::rfc4034","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","parent":null,"children":[{"krate":0,"index":3613},{"krate":0,"index":3617},{"krate":0,"index":3618},{"krate":0,"index":3619},{"krate":0,"index":3620},{"krate":0,"index":3621},{"krate":0,"index":3625},{"krate":0,"index":3628},{"krate":0,"index":3640},{"krate":0,"index":3642},{"krate":0,"index":3643},{"krate":0,"index":8012},{"krate":0,"index":8018},{"krate":0,"index":3644},{"krate":0,"index":3658},{"krate":0,"index":3662},{"krate":0,"index":3664},{"krate":0,"index":3668},{"krate":0,"index":3672},{"krate":0,"index":3675},{"krate":0,"index":3679},{"krate":0,"index":3683},{"krate":0,"index":3688},{"krate":0,"index":3691},{"krate":0,"index":3694},{"krate":0,"index":8021},{"krate":0,"index":8031},{"krate":0,"index":3697},{"krate":0,"index":3702},{"krate":0,"index":8034},{"krate":0,"index":8046},{"krate":0,"index":3710},{"krate":0,"index":3724},{"krate":0,"index":3730},{"krate":0,"index":3733},{"krate":0,"index":3739},{"krate":0,"index":3745},{"krate":0,"index":3749},{"krate":0,"index":3754},{"krate":0,"index":3758},{"krate":0,"index":3767},{"krate":0,"index":3771},{"krate":0,"index":3775},{"krate":0,"index":8050},{"krate":0,"index":8055},{"krate":0,"index":3779},{"krate":0,"index":3786},{"krate":0,"index":3792},{"krate":0,"index":3795},{"krate":0,"index":3801},{"krate":0,"index":3807},{"krate":0,"index":3811},{"krate":0,"index":3816},{"krate":0,"index":3820},{"krate":0,"index":3826},{"krate":0,"index":3830},{"krate":0,"index":3834},{"krate":0,"index":8059},{"krate":0,"index":8065},{"krate":0,"index":3838},{"krate":0,"index":3846},{"krate":0,"index":3850},{"krate":0,"index":3852},{"krate":0,"index":3856},{"krate":0,"index":3860},{"krate":0,"index":3863},{"krate":0,"index":3867},{"krate":0,"index":3871},{"krate":0,"index":3876},{"krate":0,"index":3879},{"krate":0,"index":3882},{"krate":0,"index":8068},{"krate":0,"index":8072},{"krate":0,"index":3885},{"krate":0,"index":3890},{"krate":0,"index":3895},{"krate":0,"index":3899},{"krate":0,"index":3903},{"krate":0,"index":3905},{"krate":0,"index":3909},{"krate":0,"index":3913},{"krate":0,"index":3916},{"krate":0,"index":3920},{"krate":0,"index":3926},{"krate":0,"index":3930},{"krate":0,"index":3934},{"krate":0,"index":3937},{"krate":0,"index":8075},{"krate":0,"index":8081},{"krate":0,"index":8078},{"krate":0,"index":3940},{"krate":0,"index":3943},{"krate":0,"index":3945},{"krate":0,"index":3952},{"krate":0,"index":3955},{"krate":0,"index":3962},{"krate":0,"index":3966},{"krate":0,"index":8084},{"krate":0,"index":8098},{"krate":0,"index":8097},{"krate":0,"index":8095},{"krate":0,"index":8092},{"krate":0,"index":8093},{"krate":0,"index":8089},{"krate":0,"index":8090},{"krate":0,"index":3970},{"krate":0,"index":3972},{"krate":0,"index":3974},{"krate":0,"index":3975},{"krate":0,"index":3976}],"decl_id":null,"docs":" Record data from [RFC 4034]: DS, DNSKEY, RRSIG, and NSEC records.","sig":null,"attributes":[{"value":"! Record data from [RFC 4034]: DS, DNSKEY, RRSIG, and NSEC records.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":730508,"byte_end":730577,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":730578,"byte_end":730581,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This RFC defines the record types for DNSSEC.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":730582,"byte_end":730631,"line_start":3,"line_end":3,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":730632,"byte_end":730635,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! [RFC 4034]: https://tools.ietf.org/html/rfc4034","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":730636,"byte_end":730687,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":8012},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":731525,"byte_end":731531,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"Dnskey","qualname":"::rdata::rfc4034::Dnskey","value":"Dnskey {  }","parent":null,"children":[{"krate":0,"index":8014},{"krate":0,"index":8015},{"krate":0,"index":8016},{"krate":0,"index":8017}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3646},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":731667,"byte_end":731670,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Dnskey<Octets>>::new","value":"fn (flags: u16, protocol: u8, algorithm: SecAlg, public_key: Octets) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3647},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":731916,"byte_end":731921,"line_start":53,"line_end":53,"column_start":12,"column_end":17},"name":"flags","qualname":"<Dnskey<Octets>>::flags","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3648},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":731975,"byte_end":731983,"line_start":57,"line_end":57,"column_start":12,"column_end":20},"name":"protocol","qualname":"<Dnskey<Octets>>::protocol","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3649},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":732039,"byte_end":732048,"line_start":61,"line_end":61,"column_start":12,"column_end":21},"name":"algorithm","qualname":"<Dnskey<Octets>>::algorithm","value":"fn (&self) -> SecAlg","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3650},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":732109,"byte_end":732119,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"public_key","qualname":"<Dnskey<Octets>>::public_key","value":"fn (&self) -> &Octets","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3651},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":732183,"byte_end":732198,"line_start":69,"line_end":69,"column_start":12,"column_end":27},"name":"into_public_key","qualname":"<Dnskey<Octets>>::into_public_key","value":"fn (self) -> Octets","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3652},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":732259,"byte_end":732266,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"convert","qualname":"<Dnskey<Octets>>::convert","value":"fn <Other> (self) -> Dnskey<Other>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3654},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":732702,"byte_end":732712,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"is_revoked","qualname":"<Dnskey<Octets>>::is_revoked","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the Revoke flag is set.","sig":null,"attributes":[{"value":"/ Returns whether the Revoke flag is set.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":732519,"byte_end":732562,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":732567,"byte_end":732570,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ See [RFC 5011, Section 3].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":732575,"byte_end":732605,"line_start":86,"line_end":86,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":732610,"byte_end":732613,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ [RFC 5011, Section 3]: https://tools.ietf.org/html/rfc5011#section-3","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":732618,"byte_end":732690,"line_start":88,"line_end":88,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3655},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":733306,"byte_end":733327,"line_start":103,"line_end":103,"column_start":12,"column_end":33},"name":"is_secure_entry_point","qualname":"<Dnskey<Octets>>::is_secure_entry_point","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the the Secure Entry Point (SEP) flag is set.","sig":null,"attributes":[{"value":"/ Returns whether the the Secure Entry Point (SEP) flag is set.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":732791,"byte_end":732856,"line_start":93,"line_end":93,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":732861,"byte_end":732864,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ See [RFC 4034, Section 2.1.1]:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":732869,"byte_end":732903,"line_start":95,"line_end":95,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":732908,"byte_end":732911,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ > This flag is only intended to be a hint to zone signing or","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":732916,"byte_end":732980,"line_start":97,"line_end":97,"column_start":5,"column_end":69}},{"value":"/ > debugging software as to the intended use of this DNSKEY record;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":732985,"byte_end":733055,"line_start":98,"line_end":98,"column_start":5,"column_end":75}},{"value":"/ > validators MUST NOT alter their behavior during the signature","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":733060,"byte_end":733127,"line_start":99,"line_end":99,"column_start":5,"column_end":72}},{"value":"/ > validation process in any way based on the setting of this bit.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":733132,"byte_end":733201,"line_start":100,"line_end":100,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":733206,"byte_end":733209,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [RFC 4034, Section 2.1.1]: https://tools.ietf.org/html/rfc4034#section-2.1.1","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":733214,"byte_end":733294,"line_start":102,"line_end":102,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3656},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":733697,"byte_end":733703,"line_start":113,"line_end":113,"column_start":12,"column_end":18},"name":"is_zsk","qualname":"<Dnskey<Octets>>::is_zsk","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the Zone Key flag is set. ","sig":null,"attributes":[{"value":"/ Returns whether the Zone Key flag is set. ","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":733406,"byte_end":733452,"line_start":107,"line_end":107,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":733457,"byte_end":733460,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ If the flag is not set, the key MUST NOT be used to verify RRSIGs that","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":733465,"byte_end":733539,"line_start":109,"line_end":109,"column_start":5,"column_end":79}},{"value":"/ cover RRSETs. See [RFC 4034, Section 2.1.1].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":733544,"byte_end":733592,"line_start":110,"line_end":110,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":733597,"byte_end":733600,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ [RFC 4034, Section 2.1.1]: https://tools.ietf.org/html/rfc4034#section-2.1.1","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":733605,"byte_end":733685,"line_start":112,"line_end":112,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3657},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":733839,"byte_end":733846,"line_start":118,"line_end":118,"column_start":12,"column_end":19},"name":"key_tag","qualname":"<Dnskey<Octets>>::key_tag","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the key tag for this DNSKEY data.\n","sig":null,"attributes":[{"value":"/ Returns the key tag for this DNSKEY data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":733782,"byte_end":733827,"line_start":117,"line_end":117,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":8021},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":739426,"byte_end":739436,"line_start":311,"line_end":311,"column_start":12,"column_end":22},"name":"ProtoRrsig","qualname":"::rdata::rfc4034::ProtoRrsig","value":"ProtoRrsig {  }","parent":null,"children":[{"krate":0,"index":8023},{"krate":0,"index":8024},{"krate":0,"index":8025},{"krate":0,"index":8026},{"krate":0,"index":8027},{"krate":0,"index":8028},{"krate":0,"index":8029},{"krate":0,"index":8030}],"decl_id":null,"docs":" The RRSIG RDATA to be included when creating the signature.\n","sig":null,"attributes":[{"value":"/ The RRSIG RDATA to be included when creating the signature.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":739334,"byte_end":739397,"line_start":309,"line_end":309,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3699},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":739731,"byte_end":739734,"line_start":324,"line_end":324,"column_start":12,"column_end":15},"name":"new","qualname":"<ProtoRrsig<Name>>::new","value":"fn (type_covered: Rtype, algorithm: SecAlg, labels: u8, original_ttl: u32, expiration: Serial, inception: Serial, key_tag: u16, signer_name: Name) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: too_many_arguments)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":739657,"byte_end":739693,"line_start":323,"line_end":323,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3700},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":740196,"byte_end":740206,"line_start":346,"line_end":346,"column_start":12,"column_end":22},"name":"into_rrsig","qualname":"<ProtoRrsig<Name>>::into_rrsig","value":"fn <Octets> (self, signature: Octets) -> Rrsig<Octets, Name>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8034},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":741690,"byte_end":741695,"line_start":399,"line_end":399,"column_start":12,"column_end":17},"name":"Rrsig","qualname":"::rdata::rfc4034::Rrsig","value":"Rrsig {  }","parent":null,"children":[{"krate":0,"index":8037},{"krate":0,"index":8038},{"krate":0,"index":8039},{"krate":0,"index":8040},{"krate":0,"index":8041},{"krate":0,"index":8042},{"krate":0,"index":8043},{"krate":0,"index":8044},{"krate":0,"index":8045}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3713},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":742032,"byte_end":742035,"line_start":413,"line_end":413,"column_start":12,"column_end":15},"name":"new","qualname":"<Rrsig<Octets, Name>>::new","value":"fn (type_covered: Rtype, algorithm: SecAlg, labels: u8, original_ttl: u32, expiration: Serial, inception: Serial, key_tag: u16, signer_name: Name, signature: Octets) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: too_many_arguments)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":741958,"byte_end":741994,"line_start":412,"line_end":412,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3714},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":742540,"byte_end":742552,"line_start":437,"line_end":437,"column_start":12,"column_end":24},"name":"type_covered","qualname":"<Rrsig<Octets, Name>>::type_covered","value":"fn (&self) -> Rtype","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3715},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":742615,"byte_end":742624,"line_start":441,"line_end":441,"column_start":12,"column_end":21},"name":"algorithm","qualname":"<Rrsig<Octets, Name>>::algorithm","value":"fn (&self) -> SecAlg","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3716},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":742685,"byte_end":742691,"line_start":445,"line_end":445,"column_start":12,"column_end":18},"name":"labels","qualname":"<Rrsig<Octets, Name>>::labels","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3717},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":742745,"byte_end":742757,"line_start":449,"line_end":449,"column_start":12,"column_end":24},"name":"original_ttl","qualname":"<Rrsig<Octets, Name>>::original_ttl","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3718},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":742818,"byte_end":742828,"line_start":453,"line_end":453,"column_start":12,"column_end":22},"name":"expiration","qualname":"<Rrsig<Octets, Name>>::expiration","value":"fn (&self) -> Serial","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3719},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":742890,"byte_end":742899,"line_start":457,"line_end":457,"column_start":12,"column_end":21},"name":"inception","qualname":"<Rrsig<Octets, Name>>::inception","value":"fn (&self) -> Serial","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3720},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":742960,"byte_end":742967,"line_start":461,"line_end":461,"column_start":12,"column_end":19},"name":"key_tag","qualname":"<Rrsig<Octets, Name>>::key_tag","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3721},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":743023,"byte_end":743034,"line_start":465,"line_end":465,"column_start":12,"column_end":23},"name":"signer_name","qualname":"<Rrsig<Octets, Name>>::signer_name","value":"fn (&self) -> &Name","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3722},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":743097,"byte_end":743106,"line_start":469,"line_end":469,"column_start":12,"column_end":21},"name":"signature","qualname":"<Rrsig<Octets, Name>>::signature","value":"fn (&self) -> &Octets","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3723},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":743169,"byte_end":743182,"line_start":473,"line_end":473,"column_start":12,"column_end":25},"name":"set_signature","qualname":"<Rrsig<Octets, Name>>::set_signature","value":"fn (&mut self, signature: Octets) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8050},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":751844,"byte_end":751848,"line_start":738,"line_end":738,"column_start":12,"column_end":16},"name":"Nsec","qualname":"::rdata::rfc4034::Nsec","value":"Nsec {  }","parent":null,"children":[{"krate":0,"index":8053},{"krate":0,"index":8054}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3782},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":751972,"byte_end":751975,"line_start":744,"line_end":744,"column_start":12,"column_end":15},"name":"new","qualname":"<Nsec<Octets, Name>>::new","value":"fn (next_name: Name, types: RtypeBitmap<Octets>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3783},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":752083,"byte_end":752092,"line_start":748,"line_end":748,"column_start":12,"column_end":21},"name":"next_name","qualname":"<Nsec<Octets, Name>>::next_name","value":"fn (&self) -> &Name","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3784},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":752153,"byte_end":752166,"line_start":752,"line_end":752,"column_start":12,"column_end":25},"name":"set_next_name","qualname":"<Nsec<Octets, Name>>::set_next_name","value":"fn (&mut self, next_name: Name) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3785},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":752250,"byte_end":752255,"line_start":756,"line_end":756,"column_start":12,"column_end":17},"name":"types","qualname":"<Nsec<Octets, Name>>::types","value":"fn (&self) -> &RtypeBitmap<Octets>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8059},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":756001,"byte_end":756003,"line_start":907,"line_end":907,"column_start":12,"column_end":14},"name":"Ds","qualname":"::rdata::rfc4034::Ds","value":"Ds {  }","parent":null,"children":[{"krate":0,"index":8061},{"krate":0,"index":8062},{"krate":0,"index":8063},{"krate":0,"index":8064}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3840},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":756143,"byte_end":756146,"line_start":915,"line_end":915,"column_start":12,"column_end":15},"name":"new","qualname":"<Ds<Octets>>::new","value":"fn (key_tag: u16, algorithm: SecAlg, digest_type: DigestAlg, digest: Octets) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3841},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":756341,"byte_end":756348,"line_start":924,"line_end":924,"column_start":12,"column_end":19},"name":"key_tag","qualname":"<Ds<Octets>>::key_tag","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3842},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":756404,"byte_end":756413,"line_start":928,"line_end":928,"column_start":12,"column_end":21},"name":"algorithm","qualname":"<Ds<Octets>>::algorithm","value":"fn (&self) -> SecAlg","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3843},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":756474,"byte_end":756485,"line_start":932,"line_end":932,"column_start":12,"column_end":23},"name":"digest_type","qualname":"<Ds<Octets>>::digest_type","value":"fn (&self) -> DigestAlg","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3844},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":756551,"byte_end":756557,"line_start":936,"line_end":936,"column_start":12,"column_end":18},"name":"digest","qualname":"<Ds<Octets>>::digest","value":"fn (&self) -> &Octets","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3845},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":756617,"byte_end":756628,"line_start":940,"line_end":940,"column_start":12,"column_end":23},"name":"into_digest","qualname":"<Ds<Octets>>::into_digest","value":"fn (self) -> Octets","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8068},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":761251,"byte_end":761262,"line_start":1112,"line_end":1112,"column_start":12,"column_end":23},"name":"RtypeBitmap","qualname":"::rdata::rfc4034::RtypeBitmap","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3887},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":761327,"byte_end":761338,"line_start":1115,"line_end":1115,"column_start":12,"column_end":23},"name":"from_octets","qualname":"<RtypeBitmap<Octets>>::from_octets","value":"fn (octets: Octets) -> Result<Self, RtypeBitmapError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3888},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":762344,"byte_end":762351,"line_start":1143,"line_end":1143,"column_start":12,"column_end":19},"name":"builder","qualname":"<RtypeBitmap<Octets>>::builder","value":"fn () -> RtypeBitmapBuilder<Octets::Builder>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3889},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":762545,"byte_end":762554,"line_start":1151,"line_end":1151,"column_start":12,"column_end":21},"name":"as_octets","qualname":"<RtypeBitmap<Octets>>::as_octets","value":"fn (&self) -> &Octets","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3892},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":762659,"byte_end":762667,"line_start":1157,"line_end":1157,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<RtypeBitmap<Octets>>::as_slice","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3893},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":762758,"byte_end":762762,"line_start":1162,"line_end":1162,"column_start":12,"column_end":16},"name":"iter","qualname":"<RtypeBitmap<Octets>>::iter","value":"fn (&self) -> RtypeBitmapIter","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3894},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":762855,"byte_end":762863,"line_start":1166,"line_end":1166,"column_start":12,"column_end":20},"name":"contains","qualname":"<RtypeBitmap<Octets>>::contains","value":"fn (&self, rtype: Rtype) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8075},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":766990,"byte_end":767008,"line_start":1322,"line_end":1322,"column_start":12,"column_end":30},"name":"RtypeBitmapBuilder","qualname":"::rdata::rfc4034::RtypeBitmapBuilder","value":"RtypeBitmapBuilder {  }","parent":null,"children":[{"krate":0,"index":8077}],"decl_id":null,"docs":" A builder for a record type bitmap.\n","sig":null,"attributes":[{"value":"/ A builder for a record type bitmap.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":766457,"byte_end":766496,"line_start":1312,"line_end":1312,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3942},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":767111,"byte_end":767114,"line_start":1327,"line_end":1327,"column_start":12,"column_end":15},"name":"new","qualname":"<RtypeBitmapBuilder<Builder>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3944},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":767379,"byte_end":767386,"line_start":1338,"line_end":1338,"column_start":12,"column_end":19},"name":"new_vec","qualname":"<RtypeBitmapBuilder<Vec<u8>>>::new_vec","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3947},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":767498,"byte_end":767501,"line_start":1344,"line_end":1344,"column_start":12,"column_end":15},"name":"add","qualname":"<RtypeBitmapBuilder<Builder>>::add","value":"fn (&mut self, rtype: Rtype) -> Result<(), ShortBuf>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3951},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":769141,"byte_end":769149,"line_start":1391,"line_end":1391,"column_start":12,"column_end":20},"name":"finalize","qualname":"<RtypeBitmapBuilder<Builder>>::finalize","value":"fn (mut self) -> RtypeBitmap<Builder::Octets>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3955},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":770144,"byte_end":770159,"line_start":1428,"line_end":1428,"column_start":12,"column_end":27},"name":"RtypeBitmapIter","qualname":"::rdata::rfc4034::RtypeBitmapIter","value":"RtypeBitmapIter {  }","parent":null,"children":[{"krate":0,"index":3957},{"krate":0,"index":3958},{"krate":0,"index":3959},{"krate":0,"index":3960},{"krate":0,"index":3961}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8085},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":772465,"byte_end":772475,"line_start":1515,"line_end":1515,"column_start":5,"column_end":15},"name":"ShortInput","qualname":"::rdata::rfc4034::RtypeBitmapError::ShortInput","value":"RtypeBitmapError::ShortInput","parent":{"krate":0,"index":8084},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8087},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":772481,"byte_end":772495,"line_start":1516,"line_end":1516,"column_start":5,"column_end":19},"name":"BadRtypeBitmap","qualname":"::rdata::rfc4034::RtypeBitmapError::BadRtypeBitmap","value":"RtypeBitmapError::BadRtypeBitmap","parent":{"krate":0,"index":8084},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8084},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":772442,"byte_end":772458,"line_start":1514,"line_end":1514,"column_start":10,"column_end":26},"name":"RtypeBitmapError","qualname":"::rdata::rfc4034::RtypeBitmapError","value":"RtypeBitmapError::{ShortInput, BadRtypeBitmap}","parent":null,"children":[{"krate":0,"index":8085},{"krate":0,"index":8087}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3979},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc6672.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rfc6672","qualname":"::rdata::rfc6672","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc6672.rs","parent":null,"children":[{"krate":0,"index":3980},{"krate":0,"index":3981},{"krate":0,"index":3982},{"krate":0,"index":3985},{"krate":0,"index":3993},{"krate":0,"index":3994},{"krate":0,"index":3995},{"krate":0,"index":3996},{"krate":0,"index":8152},{"krate":0,"index":8158},{"krate":0,"index":8155},{"krate":0,"index":8100},{"krate":0,"index":8104},{"krate":0,"index":8107},{"krate":0,"index":8111},{"krate":0,"index":8115},{"krate":0,"index":8117},{"krate":0,"index":8121},{"krate":0,"index":8124},{"krate":0,"index":8128},{"krate":0,"index":8132},{"krate":0,"index":8136},{"krate":0,"index":8142},{"krate":0,"index":8145},{"krate":0,"index":8148}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8152},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc6672.rs","byte_start":779777,"byte_end":779782,"line_start":21,"line_end":21,"column_start":6,"column_end":11},"name":"Dname","qualname":"::rdata::rfc6672::Dname","value":"Dname {  }","parent":null,"children":[{"krate":0,"index":8154}],"decl_id":null,"docs":" DNAME record data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8103},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc6672.rs","byte_start":779791,"byte_end":779796,"line_start":21,"line_end":21,"column_start":20,"column_end":25},"name":"dname","qualname":"<Dname<N>>::dname","value":"fn (&self) -> &N","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4000},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rfc5155","qualname":"::rdata::rfc5155","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","parent":null,"children":[{"krate":0,"index":4001},{"krate":0,"index":4004},{"krate":0,"index":4005},{"krate":0,"index":4006},{"krate":0,"index":4007},{"krate":0,"index":4010},{"krate":0,"index":4018},{"krate":0,"index":4019},{"krate":0,"index":4020},{"krate":0,"index":8161},{"krate":0,"index":8169},{"krate":0,"index":4021},{"krate":0,"index":4031},{"krate":0,"index":4035},{"krate":0,"index":4037},{"krate":0,"index":4041},{"krate":0,"index":4045},{"krate":0,"index":4048},{"krate":0,"index":4052},{"krate":0,"index":4056},{"krate":0,"index":4061},{"krate":0,"index":4064},{"krate":0,"index":4067},{"krate":0,"index":8172},{"krate":0,"index":8178},{"krate":0,"index":4070},{"krate":0,"index":4077},{"krate":0,"index":4081},{"krate":0,"index":4083},{"krate":0,"index":4087},{"krate":0,"index":4091},{"krate":0,"index":4094},{"krate":0,"index":4098},{"krate":0,"index":4102},{"krate":0,"index":4107},{"krate":0,"index":4110},{"krate":0,"index":4113}],"decl_id":null,"docs":" Record data from [RFC 5155]: NSEC3 and NSEC3PARAM records.","sig":null,"attributes":[{"value":"! Record data from [RFC 5155]: NSEC3 and NSEC3PARAM records.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":780159,"byte_end":780221,"line_start":1,"line_end":1,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":780222,"byte_end":780225,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This RFC defines the NSEC3 and NSEC3PARAM resource records.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":780226,"byte_end":780289,"line_start":3,"line_end":3,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":780290,"byte_end":780293,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! [RFC 5155]: https://tools.ietf.org/html/rfc5155","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":780294,"byte_end":780345,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":8161},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":780979,"byte_end":780984,"line_start":27,"line_end":27,"column_start":12,"column_end":17},"name":"Nsec3","qualname":"::rdata::rfc5155::Nsec3","value":"Nsec3 {  }","parent":null,"children":[{"krate":0,"index":8163},{"krate":0,"index":8164},{"krate":0,"index":8165},{"krate":0,"index":8166},{"krate":0,"index":8167},{"krate":0,"index":8168}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4023},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":781200,"byte_end":781203,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<Nsec3<Octets>>::new","value":"fn (hash_algorithm: Nsec3HashAlg, flags: u8, iterations: u16, salt: CharStr<Octets>, next_owner: CharStr<Octets>, types: RtypeBitmap<Octets>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4024},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":781501,"byte_end":781515,"line_start":48,"line_end":48,"column_start":12,"column_end":26},"name":"hash_algorithm","qualname":"<Nsec3<Octets>>::hash_algorithm","value":"fn (&self) -> Nsec3HashAlg","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4025},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":781587,"byte_end":781592,"line_start":52,"line_end":52,"column_start":12,"column_end":17},"name":"flags","qualname":"<Nsec3<Octets>>::flags","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4026},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":781646,"byte_end":781653,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"opt_out","qualname":"<Nsec3<Octets>>::opt_out","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4027},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":781720,"byte_end":781730,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"iterations","qualname":"<Nsec3<Octets>>::iterations","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4028},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":781789,"byte_end":781793,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"salt","qualname":"<Nsec3<Octets>>::salt","value":"fn (&self) -> &CharStr<Octets>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4029},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":781860,"byte_end":781870,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"next_owner","qualname":"<Nsec3<Octets>>::next_owner","value":"fn (&self) -> &CharStr<Octets>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4030},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":781943,"byte_end":781948,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"name":"types","qualname":"<Nsec3<Octets>>::types","value":"fn (&self) -> &RtypeBitmap<Octets>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8172},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":788145,"byte_end":788155,"line_start":289,"line_end":289,"column_start":12,"column_end":22},"name":"Nsec3param","qualname":"::rdata::rfc5155::Nsec3param","value":"Nsec3param {  }","parent":null,"children":[{"krate":0,"index":8174},{"krate":0,"index":8175},{"krate":0,"index":8176},{"krate":0,"index":8177}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4072},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":788311,"byte_end":788314,"line_start":297,"line_end":297,"column_start":12,"column_end":15},"name":"new","qualname":"<Nsec3param<Octets>>::new","value":"fn (hash_algorithm: Nsec3HashAlg, flags: u8, iterations: u16, salt: CharStr<Octets>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4073},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":788526,"byte_end":788540,"line_start":306,"line_end":306,"column_start":12,"column_end":26},"name":"hash_algorithm","qualname":"<Nsec3param<Octets>>::hash_algorithm","value":"fn (&self) -> Nsec3HashAlg","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4074},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":788612,"byte_end":788617,"line_start":310,"line_end":310,"column_start":12,"column_end":17},"name":"flags","qualname":"<Nsec3param<Octets>>::flags","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4075},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":788670,"byte_end":788680,"line_start":314,"line_end":314,"column_start":12,"column_end":22},"name":"iterations","qualname":"<Nsec3param<Octets>>::iterations","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4076},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":788739,"byte_end":788743,"line_start":318,"line_end":318,"column_start":12,"column_end":16},"name":"salt","qualname":"<Nsec3param<Octets>>::salt","value":"fn (&self) -> &CharStr<Octets>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4116},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rfc7344","qualname":"::rdata::rfc7344","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","parent":null,"children":[{"krate":0,"index":4117},{"krate":0,"index":4120},{"krate":0,"index":4121},{"krate":0,"index":4122},{"krate":0,"index":4126},{"krate":0,"index":4134},{"krate":0,"index":4135},{"krate":0,"index":8181},{"krate":0,"index":8187},{"krate":0,"index":4136},{"krate":0,"index":4143},{"krate":0,"index":4147},{"krate":0,"index":4149},{"krate":0,"index":4153},{"krate":0,"index":4157},{"krate":0,"index":4160},{"krate":0,"index":4164},{"krate":0,"index":4168},{"krate":0,"index":4173},{"krate":0,"index":4176},{"krate":0,"index":4179},{"krate":0,"index":8190},{"krate":0,"index":8196},{"krate":0,"index":4182},{"krate":0,"index":4190},{"krate":0,"index":4194},{"krate":0,"index":4196},{"krate":0,"index":4200},{"krate":0,"index":4204},{"krate":0,"index":4207},{"krate":0,"index":4211},{"krate":0,"index":4215},{"krate":0,"index":4220},{"krate":0,"index":4223},{"krate":0,"index":4226},{"krate":0,"index":4229}],"decl_id":null,"docs":" Record data from [RFC 7344]: CDS and CDNSKEY records.","sig":null,"attributes":[{"value":"! Record data from [RFC 7344]: CDS and CDNSKEY records.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":793438,"byte_end":793495,"line_start":1,"line_end":1,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":793496,"byte_end":793499,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! [RFC 7344]: https://tools.ietf.org/html/rfc7344","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":793500,"byte_end":793551,"line_start":3,"line_end":3,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":8181},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":794109,"byte_end":794116,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"name":"Cdnskey","qualname":"::rdata::rfc7344::Cdnskey","value":"Cdnskey {  }","parent":null,"children":[{"krate":0,"index":8183},{"krate":0,"index":8184},{"krate":0,"index":8185},{"krate":0,"index":8186}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4138},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":794253,"byte_end":794256,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<Cdnskey<Octets>>::new","value":"fn (flags: u16, protocol: u8, algorithm: SecAlg, public_key: Octets) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4139},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":794504,"byte_end":794509,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"flags","qualname":"<Cdnskey<Octets>>::flags","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4140},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":794563,"byte_end":794571,"line_start":48,"line_end":48,"column_start":12,"column_end":20},"name":"protocol","qualname":"<Cdnskey<Octets>>::protocol","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4141},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":794627,"byte_end":794636,"line_start":52,"line_end":52,"column_start":12,"column_end":21},"name":"algorithm","qualname":"<Cdnskey<Octets>>::algorithm","value":"fn (&self) -> SecAlg","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4142},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":794697,"byte_end":794707,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"public_key","qualname":"<Cdnskey<Octets>>::public_key","value":"fn (&self) -> &Octets","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8190},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":798878,"byte_end":798881,"line_start":212,"line_end":212,"column_start":12,"column_end":15},"name":"Cds","qualname":"::rdata::rfc7344::Cds","value":"Cds {  }","parent":null,"children":[{"krate":0,"index":8192},{"krate":0,"index":8193},{"krate":0,"index":8194},{"krate":0,"index":8195}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4184},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":799022,"byte_end":799025,"line_start":220,"line_end":220,"column_start":12,"column_end":15},"name":"new","qualname":"<Cds<Octets>>::new","value":"fn (key_tag: u16, algorithm: SecAlg, digest_type: DigestAlg, digest: Octets) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4185},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":799221,"byte_end":799228,"line_start":229,"line_end":229,"column_start":12,"column_end":19},"name":"key_tag","qualname":"<Cds<Octets>>::key_tag","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4186},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":799284,"byte_end":799293,"line_start":233,"line_end":233,"column_start":12,"column_end":21},"name":"algorithm","qualname":"<Cds<Octets>>::algorithm","value":"fn (&self) -> SecAlg","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4187},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":799354,"byte_end":799365,"line_start":237,"line_end":237,"column_start":12,"column_end":23},"name":"digest_type","qualname":"<Cds<Octets>>::digest_type","value":"fn (&self) -> DigestAlg","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4188},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":799431,"byte_end":799437,"line_start":241,"line_end":241,"column_start":12,"column_end":18},"name":"digest","qualname":"<Cds<Octets>>::digest","value":"fn (&self) -> &Octets","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4189},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":799497,"byte_end":799508,"line_start":245,"line_end":245,"column_start":12,"column_end":23},"name":"into_digest","qualname":"<Cds<Octets>>::into_digest","value":"fn (self) -> Octets","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4229},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":804130,"byte_end":804136,"line_start":415,"line_end":415,"column_start":9,"column_end":15},"name":"parsed","qualname":"::rdata::rfc7344::parsed","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","parent":null,"children":[{"krate":0,"index":4230}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4233},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"utils","qualname":"::utils","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/mod.rs","parent":null,"children":[{"krate":0,"index":4234},{"krate":0,"index":4269}],"decl_id":null,"docs":" Various utility modules.","sig":null,"attributes":[{"value":"! Various utility modules.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/mod.rs","byte_start":890075,"byte_end":890103,"line_start":1,"line_end":1,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/mod.rs","byte_start":890104,"byte_end":890107,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This should probably be separate crates …","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/mod.rs","byte_start":890108,"byte_end":890155,"line_start":3,"line_end":3,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":4234},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"base32","qualname":"::utils::base32","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","parent":null,"children":[{"krate":0,"index":4235},{"krate":0,"index":4236},{"krate":0,"index":4240},{"krate":0,"index":4241},{"krate":0,"index":4242},{"krate":0,"index":4246},{"krate":0,"index":4253},{"krate":0,"index":4265},{"krate":0,"index":4267}],"decl_id":null,"docs":" Decoding and encoding of base 32.","sig":null,"attributes":[{"value":"! Decoding and encoding of base 32.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":890191,"byte_end":890228,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":890229,"byte_end":890232,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The base 32 encoding is defined in [RFC 4648]. It is essentially a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":890233,"byte_end":890303,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"! case-insensitive version of [base64] which is necessary when encoding","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":890304,"byte_end":890377,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"! binary data in domain names. The RFC defines two separate encodings,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":890378,"byte_end":890450,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"! called *base32* and *base32hex*. The DNS uses the latter version,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":890451,"byte_end":890520,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"! particularly in [NSEC3], for encoding binary data in domain names, as it","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":890521,"byte_end":890597,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"! has the property that the encoding maintains the order of the original","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":890598,"byte_end":890672,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"! data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":890673,"byte_end":890682,"line_start":9,"line_end":9,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":890683,"byte_end":890686,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! This module currently only implements *base32hex* but is prepared for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":890687,"byte_end":890760,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"! adding the other option by using the prefix `_hex` wherever distinction","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":890761,"byte_end":890836,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"! is necessary.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":890837,"byte_end":890854,"line_start":13,"line_end":13,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":890855,"byte_end":890858,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! The module defines the type [`Decoder`] which keeps the state necessary","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":890859,"byte_end":890934,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"! for decoding. The convenince functions `decode_hex` and `display_hex`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":890935,"byte_end":891008,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"! decode and encode octets using the *base32hex* encoding, respectively.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":891009,"byte_end":891083,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":891084,"byte_end":891087,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! Decoding currently requires the `bytes` feature as it is intended for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":891088,"byte_end":891161,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"! use by the master file parser. This will change when the parser will be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":891162,"byte_end":891237,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"! converted to work with any octets builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":891238,"byte_end":891284,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":891285,"byte_end":891288,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! [RFC 4648]: https://tools.ietf.org/html/rfc4648","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":891289,"byte_end":891340,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"! [NSEC3]: ../../rdata/rfc5155/index.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":891341,"byte_end":891384,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"! [`Decoder`]: struct.Decoder.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":891385,"byte_end":891421,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"! [`decode_hex`]: fn.decode_hex.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":891422,"byte_end":891460,"line_start":26,"line_end":26,"column_start":1,"column_end":39}},{"value":"! [`display_hex`]: fn.display_hex.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":891461,"byte_end":891501,"line_start":27,"line_end":27,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4241},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":891906,"byte_end":891916,"line_start":41,"line_end":41,"column_start":8,"column_end":18},"name":"decode_hex","qualname":"::utils::base32::decode_hex","value":"fn (s: &str) -> Result<Bytes, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":" Decodes a string with *base32hex* encoded data.","sig":null,"attributes":[{"value":"/ Decodes a string with *base32hex* encoded data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":891718,"byte_end":891769,"line_start":36,"line_end":36,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":891770,"byte_end":891773,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ The function attempts to decode the entire string and returns the result","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":891774,"byte_end":891850,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ as a `Bytes` value.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":891851,"byte_end":891874,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"cfg(feature = \"bytes\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":891875,"byte_end":891898,"line_start":40,"line_end":40,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":4242},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":892530,"byte_end":892541,"line_start":67,"line_end":67,"column_start":8,"column_end":19},"name":"display_hex","qualname":"::utils::base32::display_hex","value":"fn <B, W> (bytes: &B, f: &mut W) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Encodes binary data in *base32hex* and writes it into a format stream.","sig":null,"attributes":[{"value":"/ Encodes binary data in *base32hex* and writes it into a format stream.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":892086,"byte_end":892160,"line_start":50,"line_end":50,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":892161,"byte_end":892164,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ This function is intended to be used in implementations of formatting","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":892165,"byte_end":892238,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/ traits:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":892239,"byte_end":892250,"line_start":53,"line_end":53,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":892251,"byte_end":892254,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":892255,"byte_end":892262,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use core::fmt;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":892263,"byte_end":892281,"line_start":56,"line_end":56,"column_start":1,"column_end":19}},{"value":"/ use domain::utils::base32;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":892282,"byte_end":892312,"line_start":57,"line_end":57,"column_start":1,"column_end":31}},{"value":"/ ","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":892313,"byte_end":892317,"line_start":58,"line_end":58,"column_start":1,"column_end":5}},{"value":"/ struct Foo<'a>(&'a [u8]);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":892318,"byte_end":892347,"line_start":59,"line_end":59,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":892348,"byte_end":892351,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ impl<'a> fmt::Display for Foo<'a> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":892352,"byte_end":892391,"line_start":61,"line_end":61,"column_start":1,"column_end":40}},{"value":"/     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":892392,"byte_end":892454,"line_start":62,"line_end":62,"column_start":1,"column_end":63}},{"value":"/         base32::display_hex(&self.0, f)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":892455,"byte_end":892498,"line_start":63,"line_end":63,"column_start":1,"column_end":44}},{"value":"/     }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":892499,"byte_end":892508,"line_start":64,"line_end":64,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":892509,"byte_end":892514,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":892515,"byte_end":892522,"line_start":66,"line_end":66,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4246},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":894149,"byte_end":894156,"line_start":115,"line_end":115,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::utils::base32::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":4247},{"krate":0,"index":4249},{"krate":0,"index":4251},{"krate":0,"index":4252}],"decl_id":null,"docs":" A base 32 decoder.","sig":null,"attributes":[{"value":"/ A base 32 decoder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":893823,"byte_end":893845,"line_start":105,"line_end":105,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":893846,"byte_end":893849,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ This type keeps all the state for decoding a sequence of characters","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":893850,"byte_end":893921,"line_start":107,"line_end":107,"column_start":1,"column_end":72}},{"value":"/ representing data encoded in base 32. Upon success, the decoder returns","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":893922,"byte_end":893997,"line_start":108,"line_end":108,"column_start":1,"column_end":76}},{"value":"/ the decoded data in a `bytes::Bytes` value.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":893998,"byte_end":894045,"line_start":109,"line_end":109,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":894046,"byte_end":894049,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ # Limitations","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":894050,"byte_end":894067,"line_start":111,"line_end":111,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":894068,"byte_end":894071,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ The decoder does not support padding.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":894072,"byte_end":894113,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"cfg(feature = \"bytes\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":894114,"byte_end":894137,"line_start":114,"line_end":114,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4254},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":894690,"byte_end":894697,"line_start":135,"line_end":135,"column_start":12,"column_end":19},"name":"new_hex","qualname":"<Decoder>::new_hex","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty decoder using the *base32hex* variant.\n","sig":null,"attributes":[{"value":"/ Creates a new, empty decoder using the *base32hex* variant.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":894615,"byte_end":894678,"line_start":134,"line_end":134,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":4256},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":894943,"byte_end":894951,"line_start":145,"line_end":145,"column_start":12,"column_end":20},"name":"finalize","qualname":"<Decoder>::finalize","value":"fn (mut self) -> Result<Bytes, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":" Finalizes decoding and returns the decoded data.\n","sig":null,"attributes":[{"value":"/ Finalizes decoding and returns the decoded data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":894879,"byte_end":894931,"line_start":144,"line_end":144,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4257},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":896113,"byte_end":896117,"line_start":185,"line_end":185,"column_start":12,"column_end":16},"name":"push","qualname":"<Decoder>::push","value":"fn (&mut self, ch: char) -> Result<(), DecodeError>","parent":null,"children":[],"decl_id":null,"docs":" Decodes one more character of data.","sig":null,"attributes":[{"value":"/ Decodes one more character of data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":895861,"byte_end":895900,"line_start":180,"line_end":180,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":895905,"byte_end":895908,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Returns an error as soon as the encoded data is determined to be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":895913,"byte_end":895981,"line_start":182,"line_end":182,"column_start":5,"column_end":73}},{"value":"/ illegal. It is okay to push more data after the first error. The","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":895986,"byte_end":896054,"line_start":183,"line_end":183,"column_start":5,"column_end":73}},{"value":"/ method will just keep returned errors.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":896059,"byte_end":896101,"line_start":184,"line_end":184,"column_start":5,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":4269},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"base64","qualname":"::utils::base64","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","parent":null,"children":[{"krate":0,"index":4270},{"krate":0,"index":4271},{"krate":0,"index":4272},{"krate":0,"index":4276},{"krate":0,"index":4277},{"krate":0,"index":4281},{"krate":0,"index":4283},{"krate":0,"index":4288},{"krate":0,"index":4294},{"krate":0,"index":8717},{"krate":0,"index":8732},{"krate":0,"index":8729},{"krate":0,"index":8730},{"krate":0,"index":8725},{"krate":0,"index":8726},{"krate":0,"index":4296},{"krate":0,"index":4298},{"krate":0,"index":4299},{"krate":0,"index":4301},{"krate":0,"index":4303}],"decl_id":null,"docs":" Decoding and encoding of base 64.","sig":null,"attributes":[{"value":"! Decoding and encoding of base 64.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":901479,"byte_end":901516,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":901517,"byte_end":901520,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The base 64 encoding is defined in [RFC 4648]. There are two variants","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":901521,"byte_end":901594,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"! defined in the RFC, dubbed *base64* and *base64url* which are","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":901595,"byte_end":901660,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"! differenciated by the last two characters in the alphabet. The DNS uses","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":901661,"byte_end":901736,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"! only the original *base64* variant, so this is what is implemented by the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":901737,"byte_end":901814,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"! module for now.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":901815,"byte_end":901834,"line_start":7,"line_end":7,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":901835,"byte_end":901838,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! The module defines the type [`Decoder`] which keeps the state necessary","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":901839,"byte_end":901914,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"! for decoding. The convenince functions `decode` and `display`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":901915,"byte_end":901980,"line_start":10,"line_end":10,"column_start":1,"column_end":66}},{"value":"! decode and encode octets, respectively.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":901981,"byte_end":902024,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":902025,"byte_end":902028,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! Decoding currently requires the `bytes` feature as it is intended for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":902029,"byte_end":902102,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"! use by the master file parser. This will change when the parser will be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":902103,"byte_end":902178,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"! converted to work with any octets builder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":902179,"byte_end":902225,"line_start":15,"line_end":15,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":902226,"byte_end":902229,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! [RFC 4648]: https://tools.ietf.org/html/rfc4648","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":902230,"byte_end":902281,"line_start":17,"line_end":17,"column_start":1,"column_end":52}},{"value":"! [`Decoder`]: struct.Decoder.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":902282,"byte_end":902318,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"! [`decode`]: fn.decode.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":902319,"byte_end":902349,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"! [`display`]: fn.display.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":902350,"byte_end":902382,"line_start":20,"line_end":20,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":4276},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":902779,"byte_end":902785,"line_start":34,"line_end":34,"column_start":8,"column_end":14},"name":"decode","qualname":"::utils::base64::decode","value":"fn (s: &str) -> Result<Bytes, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":" Decodes a string with *base64* encoded data.","sig":null,"attributes":[{"value":"/ Decodes a string with *base64* encoded data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":902594,"byte_end":902642,"line_start":29,"line_end":29,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":902643,"byte_end":902646,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The function attempts to decode the entire string and returns the result","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":902647,"byte_end":902723,"line_start":31,"line_end":31,"column_start":1,"column_end":77}},{"value":"/ as a `Bytes` value.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":902724,"byte_end":902747,"line_start":32,"line_end":32,"column_start":1,"column_end":24}},{"value":"cfg(feature = \"bytes\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":902748,"byte_end":902771,"line_start":33,"line_end":33,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":4277},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":903388,"byte_end":903395,"line_start":60,"line_end":60,"column_start":8,"column_end":15},"name":"display","qualname":"::utils::base64::display","value":"fn <B, W> (bytes: &B, f: &mut W) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Encodes binary data in *base64* and writes it into a format stream.","sig":null,"attributes":[{"value":"/ Encodes binary data in *base64* and writes it into a format stream.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":902951,"byte_end":903022,"line_start":43,"line_end":43,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":903023,"byte_end":903026,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ This function is intended to be used in implementations of formatting","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":903027,"byte_end":903100,"line_start":45,"line_end":45,"column_start":1,"column_end":74}},{"value":"/ traits:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":903101,"byte_end":903112,"line_start":46,"line_end":46,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":903113,"byte_end":903116,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":903117,"byte_end":903124,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use core::fmt;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":903125,"byte_end":903143,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ use domain::utils::base64;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":903144,"byte_end":903174,"line_start":50,"line_end":50,"column_start":1,"column_end":31}},{"value":"/ ","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":903175,"byte_end":903179,"line_start":51,"line_end":51,"column_start":1,"column_end":5}},{"value":"/ struct Foo<'a>(&'a [u8]);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":903180,"byte_end":903209,"line_start":52,"line_end":52,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":903210,"byte_end":903213,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ impl<'a> fmt::Display for Foo<'a> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":903214,"byte_end":903253,"line_start":54,"line_end":54,"column_start":1,"column_end":40}},{"value":"/     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":903254,"byte_end":903316,"line_start":55,"line_end":55,"column_start":1,"column_end":63}},{"value":"/         base64::display(&self.0, f)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":903317,"byte_end":903356,"line_start":56,"line_end":56,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":903357,"byte_end":903366,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":903367,"byte_end":903372,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":903373,"byte_end":903380,"line_start":59,"line_end":59,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4281},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":904552,"byte_end":904565,"line_start":94,"line_end":94,"column_start":8,"column_end":21},"name":"encode_string","qualname":"::utils::base64::encode_string","value":"fn <B> (bytes: &B) -> String","parent":null,"children":[],"decl_id":null,"docs":" Encodes binary data in *base64* and returns the encoded data as a string.\n","sig":null,"attributes":[{"value":"/ Encodes binary data in *base64* and returns the encoded data as a string.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":904443,"byte_end":904520,"line_start":92,"line_end":92,"column_start":1,"column_end":78}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":904521,"byte_end":904544,"line_start":93,"line_end":93,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":4283},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":905086,"byte_end":905093,"line_start":111,"line_end":111,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::utils::base64::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":4284},{"krate":0,"index":4286},{"krate":0,"index":4287}],"decl_id":null,"docs":" A base 64 decoder.","sig":null,"attributes":[{"value":"/ A base 64 decoder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":904828,"byte_end":904850,"line_start":105,"line_end":105,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":904851,"byte_end":904854,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ This type keeps all the state for decoding a sequence of characters","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":904855,"byte_end":904926,"line_start":107,"line_end":107,"column_start":1,"column_end":72}},{"value":"/ representing data encoded in base 32. Upon success, the decoder returns","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":904927,"byte_end":905002,"line_start":108,"line_end":108,"column_start":1,"column_end":76}},{"value":"/ the decoded data in a `bytes::Bytes` value.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":905003,"byte_end":905050,"line_start":109,"line_end":109,"column_start":1,"column_end":48}},{"value":"cfg(feature = \"bytes\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":905051,"byte_end":905074,"line_start":110,"line_end":110,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4289},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":905656,"byte_end":905659,"line_start":131,"line_end":131,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty decoder.\n","sig":null,"attributes":[{"value":"/ Creates a new empty decoder.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":905612,"byte_end":905644,"line_start":130,"line_end":130,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4291},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":905862,"byte_end":905870,"line_start":140,"line_end":140,"column_start":12,"column_end":20},"name":"finalize","qualname":"<Decoder>::finalize","value":"fn (self) -> Result<Bytes, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":" Finalizes decoding and returns the decoded data.\n","sig":null,"attributes":[{"value":"/ Finalizes decoding and returns the decoded data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":905798,"byte_end":905850,"line_start":139,"line_end":139,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4293},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":906496,"byte_end":906500,"line_start":158,"line_end":158,"column_start":12,"column_end":16},"name":"push","qualname":"<Decoder>::push","value":"fn (&mut self, ch: char) -> Result<(), DecodeError>","parent":null,"children":[],"decl_id":null,"docs":" Decodes one more character of data.","sig":null,"attributes":[{"value":"/ Decodes one more character of data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":906244,"byte_end":906283,"line_start":153,"line_end":153,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":906288,"byte_end":906291,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ Returns an error as soon as the encoded data is determined to be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":906296,"byte_end":906364,"line_start":155,"line_end":155,"column_start":5,"column_end":73}},{"value":"/ illegal. It is okay to push more data after the first error. The","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":906369,"byte_end":906437,"line_start":156,"line_end":156,"column_start":5,"column_end":73}},{"value":"/ method will just keep returned errors.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":906442,"byte_end":906484,"line_start":157,"line_end":157,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8718},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":908485,"byte_end":908496,"line_start":226,"line_end":226,"column_start":5,"column_end":16},"name":"IllegalChar","qualname":"::utils::base64::DecodeError::IllegalChar","value":"DecodeError::IllegalChar(char)","parent":{"krate":0,"index":8717},"children":[],"decl_id":null,"docs":" A character was pushed that isn’t allowed in the encoding.\n","sig":null,"attributes":[{"value":"/ A character was pushed that isn’t allowed in the encoding.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":908416,"byte_end":908480,"line_start":225,"line_end":225,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8721},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":908567,"byte_end":908580,"line_start":229,"line_end":229,"column_start":5,"column_end":18},"name":"TrailingInput","qualname":"::utils::base64::DecodeError::TrailingInput","value":"DecodeError::TrailingInput","parent":{"krate":0,"index":8717},"children":[],"decl_id":null,"docs":" There was trailing data after a padding sequence.\n","sig":null,"attributes":[{"value":"/ There was trailing data after a padding sequence.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":908509,"byte_end":908562,"line_start":228,"line_end":228,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8723},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":908640,"byte_end":908650,"line_start":232,"line_end":232,"column_start":5,"column_end":15},"name":"ShortInput","qualname":"::utils::base64::DecodeError::ShortInput","value":"DecodeError::ShortInput","parent":{"krate":0,"index":8717},"children":[],"decl_id":null,"docs":" The input ended with an incomplete sequence.\n","sig":null,"attributes":[{"value":"/ The input ended with an incomplete sequence.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":908587,"byte_end":908635,"line_start":231,"line_end":231,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":8717},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":908398,"byte_end":908409,"line_start":224,"line_end":224,"column_start":10,"column_end":21},"name":"DecodeError","qualname":"::utils::base64::DecodeError","value":"DecodeError::{IllegalChar, TrailingInput, ShortInput}","parent":null,"children":[{"krate":0,"index":8718},{"krate":0,"index":8721},{"krate":0,"index":8723}],"decl_id":null,"docs":" An error happened while decoding a base 64 or base 32 encoded string.\n","sig":null,"attributes":[{"value":"/ An error happened while decoding a base 64 or base 32 encoded string.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":908283,"byte_end":908356,"line_start":222,"line_end":222,"column_start":1,"column_end":74}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":12008,"byte_end":12015,"line_start":56,"line_end":56,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":14432,"byte_end":14439,"line_start":129,"line_end":129,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":15167,"byte_end":15174,"line_start":150,"line_end":150,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":15651,"byte_end":15658,"line_start":168,"line_end":168,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":16473,"byte_end":16480,"line_start":195,"line_end":195,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":16621,"byte_end":16628,"line_start":203,"line_end":203,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":16775,"byte_end":16782,"line_start":209,"line_end":209,"column_start":57,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":16911,"byte_end":16918,"line_start":215,"line_end":215,"column_start":57,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":17052,"byte_end":17059,"line_start":224,"line_end":224,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":17265,"byte_end":17272,"line_start":231,"line_end":231,"column_start":38,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":17352,"byte_end":17359,"line_start":236,"line_end":236,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":17697,"byte_end":17704,"line_start":247,"line_end":247,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":17939,"byte_end":17946,"line_start":254,"line_end":254,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":18338,"byte_end":18345,"line_start":268,"line_end":268,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":18578,"byte_end":18585,"line_start":279,"line_end":279,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":19036,"byte_end":19043,"line_start":293,"line_end":293,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":19821,"byte_end":19828,"line_start":323,"line_end":323,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":20072,"byte_end":20079,"line_start":332,"line_end":332,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":20300,"byte_end":20307,"line_start":341,"line_end":341,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":20539,"byte_end":20546,"line_start":353,"line_end":353,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":20958,"byte_end":20965,"line_start":374,"line_end":374,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":21499,"byte_end":21513,"line_start":391,"line_end":391,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":21867,"byte_end":21881,"line_start":403,"line_end":403,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":22625,"byte_end":22639,"line_start":427,"line_end":427,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":22993,"byte_end":23007,"line_start":440,"line_end":440,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":23346,"byte_end":23360,"line_start":452,"line_end":452,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":23789,"byte_end":23803,"line_start":468,"line_end":468,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":23940,"byte_end":23954,"line_start":477,"line_end":477,"column_start":48,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":24316,"byte_end":24330,"line_start":493,"line_end":493,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":24463,"byte_end":24477,"line_start":501,"line_end":501,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":24675,"byte_end":24689,"line_start":511,"line_end":511,"column_start":46,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":24809,"byte_end":24823,"line_start":517,"line_end":517,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":25157,"byte_end":25165,"line_start":533,"line_end":533,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":25365,"byte_end":25373,"line_start":543,"line_end":543,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":25862,"byte_end":25866,"line_start":566,"line_end":566,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":25978,"byte_end":25982,"line_start":572,"line_end":572,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":26561,"byte_end":26573,"line_start":593,"line_end":593,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":26743,"byte_end":26755,"line_start":600,"line_end":600,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":27750,"byte_end":27762,"line_start":636,"line_end":636,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":28005,"byte_end":28017,"line_start":645,"line_end":645,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":28138,"byte_end":28150,"line_start":651,"line_end":651,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":28284,"byte_end":28296,"line_start":660,"line_end":660,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":28934,"byte_end":28946,"line_start":678,"line_end":678,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":41729,"byte_end":41735,"line_start":77,"line_end":77,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":43019,"byte_end":43025,"line_start":119,"line_end":119,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":51141,"byte_end":51153,"line_start":323,"line_end":323,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":53029,"byte_end":53041,"line_start":380,"line_end":380,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":60338,"byte_end":60351,"line_start":631,"line_end":631,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":61486,"byte_end":61499,"line_start":671,"line_end":671,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":62186,"byte_end":62199,"line_start":696,"line_end":696,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":62290,"byte_end":62303,"line_start":702,"line_end":702,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":62412,"byte_end":62425,"line_start":708,"line_end":708,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":62528,"byte_end":62541,"line_start":714,"line_end":714,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":62691,"byte_end":62704,"line_start":723,"line_end":723,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":63000,"byte_end":63013,"line_start":735,"line_end":735,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":104145,"byte_end":104150,"line_start":169,"line_end":169,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":377},{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":105211,"byte_end":105216,"line_start":216,"line_end":216,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":105399,"byte_end":105404,"line_start":227,"line_end":227,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":106227,"byte_end":106232,"line_start":256,"line_end":256,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":106354,"byte_end":106359,"line_start":262,"line_end":262,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":106578,"byte_end":106583,"line_start":274,"line_end":274,"column_start":18,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":106641,"byte_end":106646,"line_start":279,"line_end":279,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":106805,"byte_end":106810,"line_start":285,"line_end":285,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":107102,"byte_end":107107,"line_start":297,"line_end":297,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":107247,"byte_end":107252,"line_start":306,"line_end":306,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":112792,"byte_end":112800,"line_start":487,"line_end":487,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":409},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":114646,"byte_end":114654,"line_start":561,"line_end":561,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":114835,"byte_end":114843,"line_start":569,"line_end":569,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":114960,"byte_end":114968,"line_start":576,"line_end":576,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":122444,"byte_end":122453,"line_start":824,"line_end":824,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":122585,"byte_end":122594,"line_start":830,"line_end":830,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":142177,"byte_end":142184,"line_start":161,"line_end":161,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":144107,"byte_end":144114,"line_start":221,"line_end":221,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":145157,"byte_end":145164,"line_start":256,"line_end":256,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":148582,"byte_end":148589,"line_start":353,"line_end":353,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":503},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":511},{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":156564,"byte_end":156571,"line_start":587,"line_end":587,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":156688,"byte_end":156695,"line_start":593,"line_end":593,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":158209,"byte_end":158224,"line_start":640,"line_end":640,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":159487,"byte_end":159502,"line_start":681,"line_end":681,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":160190,"byte_end":160205,"line_start":706,"line_end":706,"column_start":56,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":161108,"byte_end":161115,"line_start":741,"line_end":741,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":163725,"byte_end":163738,"line_start":808,"line_end":808,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":556},{"krate":0,"index":558},{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":166777,"byte_end":166790,"line_start":897,"line_end":897,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":167630,"byte_end":167641,"line_start":927,"line_end":927,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":569},{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":169525,"byte_end":169535,"line_start":979,"line_end":979,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":170357,"byte_end":170367,"line_start":1007,"line_end":1007,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":171511,"byte_end":171527,"line_start":1048,"line_end":1048,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":171639,"byte_end":171655,"line_start":1054,"line_end":1054,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":171785,"byte_end":171801,"line_start":1063,"line_end":1063,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":172073,"byte_end":172089,"line_start":1073,"line_end":1073,"column_start":28,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":183464,"byte_end":183478,"line_start":167,"line_end":167,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":184145,"byte_end":184159,"line_start":186,"line_end":186,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":184343,"byte_end":184357,"line_start":194,"line_end":194,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":184629,"byte_end":184643,"line_start":204,"line_end":204,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":184838,"byte_end":184852,"line_start":212,"line_end":212,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":185128,"byte_end":185142,"line_start":221,"line_end":221,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":637},{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":186858,"byte_end":186872,"line_start":271,"line_end":271,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":187653,"byte_end":187667,"line_start":295,"line_end":295,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":189282,"byte_end":189296,"line_start":346,"line_end":346,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":190278,"byte_end":190292,"line_start":379,"line_end":379,"column_start":48,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":190459,"byte_end":190473,"line_start":386,"line_end":386,"column_start":46,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":190641,"byte_end":190655,"line_start":393,"line_end":393,"column_start":49,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":190827,"byte_end":190841,"line_start":400,"line_end":400,"column_start":50,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":191052,"byte_end":191066,"line_start":412,"line_end":412,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":191187,"byte_end":191201,"line_start":418,"line_end":418,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":192431,"byte_end":192446,"line_start":453,"line_end":453,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":683},{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":194075,"byte_end":194090,"line_start":497,"line_end":497,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":196017,"byte_end":196032,"line_start":557,"line_end":557,"column_start":14,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":699},{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":196428,"byte_end":196443,"line_start":572,"line_end":572,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":196610,"byte_end":196625,"line_start":579,"line_end":579,"column_start":46,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":196794,"byte_end":196809,"line_start":586,"line_end":586,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":196982,"byte_end":196997,"line_start":593,"line_end":593,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":197187,"byte_end":197202,"line_start":603,"line_end":603,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":715},{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":197352,"byte_end":197367,"line_start":611,"line_end":611,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":197511,"byte_end":197526,"line_start":617,"line_end":617,"column_start":48,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":197669,"byte_end":197684,"line_start":623,"line_end":623,"column_start":48,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":197823,"byte_end":197838,"line_start":629,"line_end":629,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":197959,"byte_end":197974,"line_start":635,"line_end":635,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":199350,"byte_end":199363,"line_start":674,"line_end":674,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":734},{"krate":0,"index":735}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":201163,"byte_end":201176,"line_start":726,"line_end":726,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":203108,"byte_end":203121,"line_start":788,"line_end":788,"column_start":14,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":750},{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":203517,"byte_end":203530,"line_start":803,"line_end":803,"column_start":47,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":203697,"byte_end":203710,"line_start":810,"line_end":810,"column_start":48,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":203879,"byte_end":203892,"line_start":817,"line_end":817,"column_start":49,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":204063,"byte_end":204076,"line_start":824,"line_end":824,"column_start":50,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":204264,"byte_end":204277,"line_start":834,"line_end":834,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":766},{"krate":0,"index":767}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":204427,"byte_end":204440,"line_start":842,"line_end":842,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":204584,"byte_end":204597,"line_start":848,"line_end":848,"column_start":48,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":204740,"byte_end":204753,"line_start":854,"line_end":854,"column_start":48,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":204892,"byte_end":204905,"line_start":860,"line_end":860,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":205026,"byte_end":205039,"line_start":866,"line_end":866,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":206434,"byte_end":206450,"line_start":905,"line_end":905,"column_start":29,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":785},{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":208267,"byte_end":208283,"line_start":957,"line_end":957,"column_start":29,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":210335,"byte_end":210351,"line_start":1020,"line_end":1020,"column_start":14,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":801},{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":210769,"byte_end":210785,"line_start":1035,"line_end":1035,"column_start":47,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":210955,"byte_end":210971,"line_start":1042,"line_end":1042,"column_start":48,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":211140,"byte_end":211156,"line_start":1049,"line_end":1049,"column_start":46,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":211327,"byte_end":211343,"line_start":1056,"line_end":1056,"column_start":50,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":211534,"byte_end":211550,"line_start":1066,"line_end":1066,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":211706,"byte_end":211722,"line_start":1074,"line_end":1074,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":211872,"byte_end":211888,"line_start":1080,"line_end":1080,"column_start":48,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":212031,"byte_end":212047,"line_start":1086,"line_end":1086,"column_start":48,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":212186,"byte_end":212202,"line_start":1092,"line_end":1092,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":212323,"byte_end":212339,"line_start":1098,"line_end":1098,"column_start":43,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":214005,"byte_end":214022,"line_start":1142,"line_end":1142,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":216484,"byte_end":216501,"line_start":1209,"line_end":1209,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":218611,"byte_end":218628,"line_start":1273,"line_end":1273,"column_start":14,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":855},{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":219052,"byte_end":219069,"line_start":1288,"line_end":1288,"column_start":47,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":859}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":219240,"byte_end":219257,"line_start":1295,"line_end":1295,"column_start":48,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":219427,"byte_end":219444,"line_start":1302,"line_end":1302,"column_start":46,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":219615,"byte_end":219632,"line_start":1309,"line_end":1309,"column_start":49,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":219823,"byte_end":219840,"line_start":1319,"line_end":1319,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":871},{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":219994,"byte_end":220011,"line_start":1327,"line_end":1327,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":220159,"byte_end":220176,"line_start":1333,"line_end":1333,"column_start":48,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":220319,"byte_end":220336,"line_start":1339,"line_end":1339,"column_start":48,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":881}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":220475,"byte_end":220492,"line_start":1345,"line_end":1345,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":220613,"byte_end":220630,"line_start":1351,"line_end":1351,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":221625,"byte_end":221638,"line_start":1378,"line_end":1378,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":221844,"byte_end":221860,"line_start":1385,"line_end":1385,"column_start":54,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":222023,"byte_end":222040,"line_start":1391,"line_end":1391,"column_start":39,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":222960,"byte_end":222970,"line_start":1420,"line_end":1420,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":906},{"krate":0,"index":908},{"krate":0,"index":911},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":228827,"byte_end":228839,"line_start":1586,"line_end":1586,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":229325,"byte_end":229337,"line_start":1600,"line_end":1600,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":931}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":229513,"byte_end":229525,"line_start":1607,"line_end":1607,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":230862,"byte_end":230874,"line_start":1648,"line_end":1648,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":231003,"byte_end":231015,"line_start":1654,"line_end":1654,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":231182,"byte_end":231194,"line_start":1663,"line_end":1663,"column_start":47,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":947},{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":232720,"byte_end":232736,"line_start":1710,"line_end":1710,"column_start":14,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":960}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":234479,"byte_end":234495,"line_start":1776,"line_end":1776,"column_start":43,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":234613,"byte_end":234629,"line_start":1782,"line_end":1782,"column_start":43,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":234785,"byte_end":234801,"line_start":1791,"line_end":1791,"column_start":47,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":237992,"byte_end":237996,"line_start":1887,"line_end":1887,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":238286,"byte_end":238300,"line_start":1898,"line_end":1898,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":240098,"byte_end":240112,"line_start":1970,"line_end":1970,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":240254,"byte_end":240268,"line_start":1977,"line_end":1977,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":240426,"byte_end":240440,"line_start":1984,"line_end":1984,"column_start":47,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":249998,"byte_end":250010,"line_start":33,"line_end":33,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":251346,"byte_end":251358,"line_start":71,"line_end":71,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1062},{"krate":0,"index":1063}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":251812,"byte_end":251824,"line_start":87,"line_end":87,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1065},{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":252286,"byte_end":252298,"line_start":102,"line_end":102,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1076},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":259745,"byte_end":259757,"line_start":324,"line_end":324,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1084}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":259893,"byte_end":259905,"line_start":333,"line_end":333,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":260057,"byte_end":260069,"line_start":341,"line_end":341,"column_start":46,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1091}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":262015,"byte_end":262024,"line_start":404,"line_end":404,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1097}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":262152,"byte_end":262161,"line_start":413,"line_end":413,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":262545,"byte_end":262554,"line_start":427,"line_end":427,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":262962,"byte_end":262975,"line_start":444,"line_end":444,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":263102,"byte_end":263115,"line_start":453,"line_end":453,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":263428,"byte_end":263441,"line_start":465,"line_end":465,"column_start":28,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":264537,"byte_end":264549,"line_start":509,"line_end":509,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":264845,"byte_end":264857,"line_start":519,"line_end":519,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1109}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":265123,"byte_end":265135,"line_start":531,"line_end":531,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":266061,"byte_end":266073,"line_start":555,"line_end":555,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":270955,"byte_end":270960,"line_start":42,"line_end":42,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1132}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":271304,"byte_end":271309,"line_start":54,"line_end":54,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1136}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":271885,"byte_end":271890,"line_start":71,"line_end":71,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":272651,"byte_end":272656,"line_start":93,"line_end":93,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1145}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":272876,"byte_end":272881,"line_start":103,"line_end":103,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1149},{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":273435,"byte_end":273440,"line_start":125,"line_end":125,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1158},{"krate":0,"index":1161}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":274584,"byte_end":274589,"line_start":164,"line_end":164,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1168},{"krate":0,"index":1169}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":274815,"byte_end":274820,"line_start":172,"line_end":172,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1174},{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":275483,"byte_end":275488,"line_start":191,"line_end":191,"column_start":66,"column_end":71},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":275549,"byte_end":275554,"line_start":194,"line_end":194,"column_start":50,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":275594,"byte_end":275599,"line_start":197,"line_end":197,"column_start":29,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":275742,"byte_end":275747,"line_start":204,"line_end":204,"column_start":57,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":276160,"byte_end":276169,"line_start":219,"line_end":219,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":276328,"byte_end":276337,"line_start":226,"line_end":226,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1198},{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":276548,"byte_end":276557,"line_start":235,"line_end":235,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1204}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":277060,"byte_end":277078,"line_start":251,"line_end":251,"column_start":31,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1219}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":277401,"byte_end":277419,"line_start":263,"line_end":263,"column_start":34,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1225},{"krate":0,"index":1226}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":277788,"byte_end":277806,"line_start":276,"line_end":276,"column_start":45,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1231}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":278455,"byte_end":278469,"line_start":299,"line_end":299,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1233}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":278631,"byte_end":278645,"line_start":306,"line_end":306,"column_start":28,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":286856,"byte_end":286861,"line_start":48,"line_end":48,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1277}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":289719,"byte_end":289724,"line_start":116,"line_end":116,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":291128,"byte_end":291133,"line_start":160,"line_end":160,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1284}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":291320,"byte_end":291325,"line_start":168,"line_end":168,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1286},{"krate":0,"index":1287}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":291681,"byte_end":291686,"line_start":181,"line_end":181,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1289},{"krate":0,"index":1290}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":292057,"byte_end":292062,"line_start":196,"line_end":196,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1298}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":293419,"byte_end":293424,"line_start":239,"line_end":239,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1301}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":293855,"byte_end":293860,"line_start":252,"line_end":252,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":1312},{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":1322},{"krate":0,"index":1324}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":302313,"byte_end":302318,"line_start":480,"line_end":480,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1328},{"krate":0,"index":1330},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1335},{"krate":0,"index":1337}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":305539,"byte_end":305544,"line_start":576,"line_end":576,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1341},{"krate":0,"index":1342}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":305696,"byte_end":305701,"line_start":584,"line_end":584,"column_start":57,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1346}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":305815,"byte_end":305820,"line_start":593,"line_end":593,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1349},{"krate":0,"index":1350}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":306457,"byte_end":306462,"line_start":615,"line_end":615,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1354}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":306654,"byte_end":306659,"line_start":625,"line_end":625,"column_start":43,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":306749,"byte_end":306754,"line_start":630,"line_end":630,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1360}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":307274,"byte_end":307279,"line_start":646,"line_end":646,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1363}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":307709,"byte_end":307714,"line_start":658,"line_end":658,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1367}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":307948,"byte_end":307953,"line_start":671,"line_end":671,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1370}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":308168,"byte_end":308173,"line_start":682,"line_end":682,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1377}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":308448,"byte_end":308453,"line_start":695,"line_end":695,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1380}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":308857,"byte_end":308862,"line_start":717,"line_end":717,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1389},{"krate":0,"index":1390}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":309872,"byte_end":309877,"line_start":756,"line_end":756,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1395},{"krate":0,"index":1397}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":311105,"byte_end":311110,"line_start":798,"line_end":798,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1402}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":311627,"byte_end":311632,"line_start":818,"line_end":818,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1405}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":311998,"byte_end":312008,"line_start":834,"line_end":834,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1408}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":312190,"byte_end":312200,"line_start":841,"line_end":841,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1411},{"krate":0,"index":1412}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":313442,"byte_end":313452,"line_start":891,"line_end":891,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":313578,"byte_end":313588,"line_start":897,"line_end":897,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1416}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":313912,"byte_end":313921,"line_start":907,"line_end":907,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1418}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":314481,"byte_end":314491,"line_start":922,"line_end":922,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":314740,"byte_end":314750,"line_start":934,"line_end":934,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1422}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":315415,"byte_end":315425,"line_start":954,"line_end":954,"column_start":28,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":342473,"byte_end":342478,"line_start":42,"line_end":42,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1441},{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1450},{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1453},{"krate":0,"index":1454},{"krate":0,"index":1457}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":348297,"byte_end":348302,"line_start":224,"line_end":224,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1463}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":348860,"byte_end":348865,"line_start":247,"line_end":247,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1465},{"krate":0,"index":1468}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":349538,"byte_end":349543,"line_start":275,"line_end":275,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1472},{"krate":0,"index":1473}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":349658,"byte_end":349663,"line_start":283,"line_end":283,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1475}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":349767,"byte_end":349772,"line_start":289,"line_end":289,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1477}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":349861,"byte_end":349866,"line_start":295,"line_end":295,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1479}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":350016,"byte_end":350021,"line_start":305,"line_end":305,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1481},{"krate":0,"index":1482}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":350171,"byte_end":350176,"line_start":316,"line_end":316,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1484}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":350282,"byte_end":350287,"line_start":322,"line_end":322,"column_start":13,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":350340,"byte_end":350345,"line_start":327,"line_end":327,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1487}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":350902,"byte_end":350907,"line_start":344,"line_end":344,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1489}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":351119,"byte_end":351124,"line_start":355,"line_end":355,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1491}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":351690,"byte_end":351695,"line_start":381,"line_end":381,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1499}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":352147,"byte_end":352152,"line_start":398,"line_end":398,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1501}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":352696,"byte_end":352706,"line_start":418,"line_end":418,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1507},{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1512}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":353914,"byte_end":353924,"line_start":462,"line_end":462,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1515}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":354089,"byte_end":354099,"line_start":471,"line_end":471,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1517},{"krate":0,"index":1518}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":354216,"byte_end":354226,"line_start":479,"line_end":479,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1520}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":354332,"byte_end":354342,"line_start":485,"line_end":485,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1522}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":354432,"byte_end":354442,"line_start":491,"line_end":491,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1524}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":354543,"byte_end":354553,"line_start":497,"line_end":497,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1526}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":354655,"byte_end":354665,"line_start":503,"line_end":503,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1528}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":354791,"byte_end":354801,"line_start":509,"line_end":509,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1530}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":354904,"byte_end":354914,"line_start":515,"line_end":515,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1532}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":355063,"byte_end":355073,"line_start":524,"line_end":524,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1535}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":355178,"byte_end":355188,"line_start":530,"line_end":530,"column_start":13,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":355261,"byte_end":355271,"line_start":535,"line_end":535,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1539}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":355412,"byte_end":355422,"line_start":541,"line_end":541,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1541}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":355562,"byte_end":355572,"line_start":550,"line_end":550,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1543}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":356293,"byte_end":356308,"line_start":576,"line_end":576,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1551},{"krate":0,"index":1552}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":358118,"byte_end":358132,"line_start":635,"line_end":635,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1554}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":358495,"byte_end":358509,"line_start":647,"line_end":647,"column_start":28,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":358768,"byte_end":358782,"line_start":659,"line_end":659,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1557}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":358938,"byte_end":358952,"line_start":666,"line_end":666,"column_start":28,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":359454,"byte_end":359469,"line_start":686,"line_end":686,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":359604,"byte_end":359614,"line_start":692,"line_end":692,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1562}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":360084,"byte_end":360099,"line_start":709,"line_end":709,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1564}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":360517,"byte_end":360532,"line_start":723,"line_end":723,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":367004,"byte_end":367015,"line_start":71,"line_end":71,"column_start":11,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1591},{"krate":0,"index":1592}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":367321,"byte_end":367332,"line_start":85,"line_end":85,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1595},{"krate":0,"index":1596},{"krate":0,"index":1597},{"krate":0,"index":1598},{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1603},{"krate":0,"index":1606},{"krate":0,"index":1607}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":370803,"byte_end":370814,"line_start":190,"line_end":190,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1610}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":371121,"byte_end":371132,"line_start":204,"line_end":204,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1614}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":371297,"byte_end":371308,"line_start":214,"line_end":214,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":371392,"byte_end":371403,"line_start":219,"line_end":219,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1620}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":371602,"byte_end":371613,"line_start":229,"line_end":229,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1623}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":371743,"byte_end":371754,"line_start":235,"line_end":235,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1627}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":371961,"byte_end":371972,"line_start":248,"line_end":248,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1630}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":372194,"byte_end":372205,"line_start":259,"line_end":259,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1635},{"krate":0,"index":1636},{"krate":0,"index":1637}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":372423,"byte_end":372434,"line_start":271,"line_end":271,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1640}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":372913,"byte_end":372924,"line_start":297,"line_end":297,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1649},{"krate":0,"index":1650}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":377394,"byte_end":377405,"line_start":408,"line_end":408,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1653},{"krate":0,"index":1656}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":378210,"byte_end":378221,"line_start":442,"line_end":442,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1661}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":378703,"byte_end":378714,"line_start":459,"line_end":459,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1664}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":379087,"byte_end":379102,"line_start":476,"line_end":476,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1667},{"krate":0,"index":1669}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":380413,"byte_end":380428,"line_start":513,"line_end":513,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1672},{"krate":0,"index":1673}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":380643,"byte_end":380658,"line_start":524,"line_end":524,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1676}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":381280,"byte_end":381296,"line_start":550,"line_end":550,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1679}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":381495,"byte_end":381511,"line_start":557,"line_end":557,"column_start":45,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1682},{"krate":0,"index":1683}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":382181,"byte_end":382190,"line_start":586,"line_end":586,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1685},{"krate":0,"index":1687}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":383840,"byte_end":383856,"line_start":636,"line_end":636,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1690}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":384016,"byte_end":384032,"line_start":643,"line_end":643,"column_start":28,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":384068,"byte_end":384084,"line_start":645,"line_end":645,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1693}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":384211,"byte_end":384220,"line_start":651,"line_end":651,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1695}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":384670,"byte_end":384680,"line_start":665,"line_end":665,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1697}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":402112,"byte_end":402125,"line_start":42,"line_end":42,"column_start":14,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1733},{"krate":0,"index":1734},{"krate":0,"index":1735},{"krate":0,"index":1736}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":403823,"byte_end":403836,"line_start":87,"line_end":87,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1738},{"krate":0,"index":1739},{"krate":0,"index":1740},{"krate":0,"index":1741},{"krate":0,"index":1742}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":405187,"byte_end":405200,"line_start":130,"line_end":130,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1744},{"krate":0,"index":1745}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":405507,"byte_end":405520,"line_start":143,"line_end":143,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1747},{"krate":0,"index":1748}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":405810,"byte_end":405823,"line_start":156,"line_end":156,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1750},{"krate":0,"index":1751}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":406133,"byte_end":406146,"line_start":171,"line_end":171,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1754},{"krate":0,"index":1755},{"krate":0,"index":1756},{"krate":0,"index":1757},{"krate":0,"index":1758}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":407027,"byte_end":407040,"line_start":201,"line_end":201,"column_start":14,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1761},{"krate":0,"index":1762},{"krate":0,"index":1763},{"krate":0,"index":1765}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":409030,"byte_end":409043,"line_start":260,"line_end":260,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1768},{"krate":0,"index":1769},{"krate":0,"index":1770},{"krate":0,"index":1771},{"krate":0,"index":1772},{"krate":0,"index":1773},{"krate":0,"index":1776},{"krate":0,"index":1779},{"krate":0,"index":1780},{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":1784},{"krate":0,"index":1786},{"krate":0,"index":1788}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":416416,"byte_end":416429,"line_start":459,"line_end":459,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1792},{"krate":0,"index":1794},{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1799},{"krate":0,"index":1801}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":419684,"byte_end":419697,"line_start":558,"line_end":558,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1806},{"krate":0,"index":1807}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":419849,"byte_end":419862,"line_start":566,"line_end":566,"column_start":57,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1811}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":420012,"byte_end":420025,"line_start":575,"line_end":575,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1815},{"krate":0,"index":1816},{"krate":0,"index":1817}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":420308,"byte_end":420321,"line_start":588,"line_end":588,"column_start":56,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":1820},{"krate":0,"index":1821}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":420556,"byte_end":420569,"line_start":601,"line_end":601,"column_start":48,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1824},{"krate":0,"index":1826}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":421347,"byte_end":421360,"line_start":638,"line_end":638,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1838}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":421560,"byte_end":421573,"line_start":648,"line_end":648,"column_start":43,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":421648,"byte_end":421661,"line_start":653,"line_end":653,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1844}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":421895,"byte_end":421908,"line_start":663,"line_end":663,"column_start":44,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1847}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":422071,"byte_end":422084,"line_start":672,"line_end":672,"column_start":51,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1850}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":422308,"byte_end":422321,"line_start":683,"line_end":683,"column_start":53,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1854}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":422711,"byte_end":422724,"line_start":698,"line_end":698,"column_start":51,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1857}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":423070,"byte_end":423079,"line_start":713,"line_end":713,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1860}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":423194,"byte_end":423203,"line_start":719,"line_end":719,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1863},{"krate":0,"index":1864}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":423514,"byte_end":423523,"line_start":732,"line_end":732,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1867}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":424709,"byte_end":424727,"line_start":779,"line_end":779,"column_start":31,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1869}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":424855,"byte_end":424873,"line_start":785,"line_end":785,"column_start":32,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1871}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":425237,"byte_end":425255,"line_start":798,"line_end":798,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1873}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":425878,"byte_end":425896,"line_start":816,"line_end":816,"column_start":28,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":426181,"byte_end":426197,"line_start":828,"line_end":828,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1876}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":426359,"byte_end":426375,"line_start":835,"line_end":835,"column_start":28,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":466585,"byte_end":466586,"line_start":453,"line_end":453,"column_start":62,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":467813,"byte_end":467827,"line_start":37,"line_end":37,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1987},{"krate":0,"index":1988},{"krate":0,"index":1989},{"krate":0,"index":1990},{"krate":0,"index":1991}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":469787,"byte_end":469801,"line_start":93,"line_end":93,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1994},{"krate":0,"index":1995}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":470115,"byte_end":470129,"line_start":106,"line_end":106,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1997},{"krate":0,"index":1998}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":470423,"byte_end":470437,"line_start":119,"line_end":119,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2000},{"krate":0,"index":2001}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":470720,"byte_end":470734,"line_start":131,"line_end":131,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2004},{"krate":0,"index":2005},{"krate":0,"index":2006},{"krate":0,"index":2007},{"krate":0,"index":2008},{"krate":0,"index":2009},{"krate":0,"index":2010},{"krate":0,"index":2011},{"krate":0,"index":2012},{"krate":0,"index":2013}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":474170,"byte_end":474184,"line_start":243,"line_end":243,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2017}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":474329,"byte_end":474343,"line_start":249,"line_end":249,"column_start":46,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2020}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":474497,"byte_end":474511,"line_start":258,"line_end":258,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2023},{"krate":0,"index":2024}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":474787,"byte_end":474801,"line_start":273,"line_end":273,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2028}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":475095,"byte_end":475109,"line_start":286,"line_end":286,"column_start":5,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2032}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":475483,"byte_end":475497,"line_start":299,"line_end":299,"column_start":34,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":475565,"byte_end":475579,"line_start":304,"line_end":304,"column_start":42,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2038}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":475802,"byte_end":475816,"line_start":315,"line_end":315,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2043},{"krate":0,"index":2044}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":476389,"byte_end":476403,"line_start":341,"line_end":341,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2053},{"krate":0,"index":2055}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":479002,"byte_end":479016,"line_start":423,"line_end":423,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2059}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":479294,"byte_end":479308,"line_start":432,"line_end":432,"column_start":42,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2062}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":496774,"byte_end":496777,"line_start":181,"line_end":181,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2095}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":497071,"byte_end":497074,"line_start":193,"line_end":193,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2097}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":497203,"byte_end":497208,"line_start":200,"line_end":200,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2099}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":497357,"byte_end":497365,"line_start":207,"line_end":207,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2102}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":505705,"byte_end":505708,"line_start":449,"line_end":449,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2155},{"krate":0,"index":2156}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":505977,"byte_end":505985,"line_start":461,"line_end":461,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2158},{"krate":0,"index":2159}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":506282,"byte_end":506290,"line_start":474,"line_end":474,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2162},{"krate":0,"index":2163}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":507279,"byte_end":507282,"line_start":504,"line_end":504,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2168},{"krate":0,"index":2169}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":507480,"byte_end":507488,"line_start":515,"line_end":515,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2171},{"krate":0,"index":2172}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":507718,"byte_end":507726,"line_start":526,"line_end":526,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2175},{"krate":0,"index":2176}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":508460,"byte_end":508463,"line_start":554,"line_end":554,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2181},{"krate":0,"index":2182}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":508604,"byte_end":508612,"line_start":563,"line_end":563,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2184},{"krate":0,"index":2185}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":508785,"byte_end":508793,"line_start":572,"line_end":572,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2188},{"krate":0,"index":2189}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":509494,"byte_end":509497,"line_start":598,"line_end":598,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2194},{"krate":0,"index":2195}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":509809,"byte_end":509812,"line_start":616,"line_end":616,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2202},{"krate":0,"index":2203}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":509979,"byte_end":509984,"line_start":625,"line_end":625,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2205},{"krate":0,"index":2206}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":510379,"byte_end":510387,"line_start":637,"line_end":637,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2209},{"krate":0,"index":2210}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":511202,"byte_end":511205,"line_start":664,"line_end":664,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2215},{"krate":0,"index":2216}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":511353,"byte_end":511358,"line_start":673,"line_end":673,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2218},{"krate":0,"index":2219}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":511550,"byte_end":511558,"line_start":682,"line_end":682,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2222},{"krate":0,"index":2223}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":512595,"byte_end":512601,"line_start":718,"line_end":718,"column_start":11,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2226},{"krate":0,"index":2227},{"krate":0,"index":2228},{"krate":0,"index":2229},{"krate":0,"index":2230}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":513600,"byte_end":513606,"line_start":754,"line_end":754,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2232}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":513854,"byte_end":513860,"line_start":763,"line_end":763,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2235},{"krate":0,"index":2236},{"krate":0,"index":2237},{"krate":0,"index":2238},{"krate":0,"index":2239},{"krate":0,"index":2240},{"krate":0,"index":2241},{"krate":0,"index":2242},{"krate":0,"index":2243}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":516266,"byte_end":516272,"line_start":846,"line_end":846,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2246},{"krate":0,"index":2247},{"krate":0,"index":2248},{"krate":0,"index":2249},{"krate":0,"index":2250},{"krate":0,"index":2252},{"krate":0,"index":2254},{"krate":0,"index":2256},{"krate":0,"index":2258}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":525163,"byte_end":525171,"line_start":1092,"line_end":1092,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2291},{"krate":0,"index":2292}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":525561,"byte_end":525569,"line_start":1107,"line_end":1107,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2295},{"krate":0,"index":2297}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529192,"byte_end":529200,"line_start":1234,"line_end":1234,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2329}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529377,"byte_end":529385,"line_start":1243,"line_end":1243,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2332}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":535784,"byte_end":535792,"line_start":1475,"line_end":1475,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2338}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":535958,"byte_end":535966,"line_start":1482,"line_end":1482,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":536308,"byte_end":536318,"line_start":1497,"line_end":1497,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2341}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":536528,"byte_end":536538,"line_start":1507,"line_end":1507,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2343}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":536666,"byte_end":536676,"line_start":1516,"line_end":1516,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2345}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":536992,"byte_end":537002,"line_start":1528,"line_end":1528,"column_start":28,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":537397,"byte_end":537406,"line_start":1541,"line_end":1541,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2348}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":537607,"byte_end":537616,"line_start":1551,"line_end":1551,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2350}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":537766,"byte_end":537775,"line_start":1558,"line_end":1558,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc5001.rs","byte_start":9143006,"byte_end":9143010,"line_start":22,"line_end":22,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6358}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc5001.rs","byte_start":9143108,"byte_end":9143112,"line_start":28,"line_end":28,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":6360}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc5001.rs","byte_start":9143517,"byte_end":9143521,"line_start":41,"line_end":41,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6366},{"krate":0,"index":6367}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc5001.rs","byte_start":9143858,"byte_end":9143862,"line_start":53,"line_end":53,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6370}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc5001.rs","byte_start":9143962,"byte_end":9143966,"line_start":58,"line_end":58,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6373}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc5001.rs","byte_start":9144254,"byte_end":9144258,"line_start":68,"line_end":68,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6377}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc6975.rs","byte_start":9147497,"byte_end":9147508,"line_start":102,"line_end":102,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6400}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc6975.rs","byte_start":9147618,"byte_end":9147629,"line_start":108,"line_end":108,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6403},{"krate":0,"index":6404}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7314.rs","byte_start":9148191,"byte_end":9148197,"line_start":16,"line_end":16,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6418},{"krate":0,"index":6419},{"krate":0,"index":6421}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7314.rs","byte_start":9148595,"byte_end":9148601,"line_start":36,"line_end":36,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6424},{"krate":0,"index":6426}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7314.rs","byte_start":9149064,"byte_end":9149070,"line_start":56,"line_end":56,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6428}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7314.rs","byte_start":9149322,"byte_end":9149328,"line_start":71,"line_end":71,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6431}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7828.rs","byte_start":9149804,"byte_end":9149816,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6444},{"krate":0,"index":6445},{"krate":0,"index":6447}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7828.rs","byte_start":9150201,"byte_end":9150213,"line_start":36,"line_end":36,"column_start":39,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6450},{"krate":0,"index":6451}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7828.rs","byte_start":9150452,"byte_end":9150464,"line_start":46,"line_end":46,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6453}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7828.rs","byte_start":9150652,"byte_end":9150664,"line_start":58,"line_end":58,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6456}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7830.rs","byte_start":9151356,"byte_end":9151363,"line_start":29,"line_end":29,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6470},{"krate":0,"index":6471},{"krate":0,"index":6473},{"krate":0,"index":6474},{"krate":0,"index":6475}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7830.rs","byte_start":9151919,"byte_end":9151926,"line_start":58,"line_end":58,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6478},{"krate":0,"index":6479}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7830.rs","byte_start":9152326,"byte_end":9152333,"line_start":72,"line_end":72,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6481}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7830.rs","byte_start":9152928,"byte_end":9152935,"line_start":95,"line_end":95,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6485}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7871.rs","byte_start":9153523,"byte_end":9153535,"line_start":21,"line_end":21,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6500},{"krate":0,"index":6501},{"krate":0,"index":6503},{"krate":0,"index":6504},{"krate":0,"index":6505}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7871.rs","byte_start":9154263,"byte_end":9154275,"line_start":47,"line_end":47,"column_start":39,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6508},{"krate":0,"index":6511}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7871.rs","byte_start":9156318,"byte_end":9156330,"line_start":104,"line_end":104,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6513}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7871.rs","byte_start":9157299,"byte_end":9157311,"line_start":136,"line_end":136,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6518}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7873.rs","byte_start":9157791,"byte_end":9157797,"line_start":16,"line_end":16,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6531},{"krate":0,"index":6533},{"krate":0,"index":6536}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7873.rs","byte_start":9158186,"byte_end":9158192,"line_start":36,"line_end":36,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6540},{"krate":0,"index":6542}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7873.rs","byte_start":9158490,"byte_end":9158496,"line_start":49,"line_end":49,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6544}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7873.rs","byte_start":9158690,"byte_end":9158696,"line_start":61,"line_end":61,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6547}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7901.rs","byte_start":9159316,"byte_end":9159321,"line_start":21,"line_end":21,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6565},{"krate":0,"index":6566},{"krate":0,"index":6571}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7901.rs","byte_start":9159963,"byte_end":9159968,"line_start":48,"line_end":48,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6574},{"krate":0,"index":6575}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7901.rs","byte_start":9160244,"byte_end":9160249,"line_start":58,"line_end":58,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6578}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7901.rs","byte_start":9160457,"byte_end":9160462,"line_start":70,"line_end":70,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6582}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc8145.rs","byte_start":9161004,"byte_end":9161010,"line_start":20,"line_end":20,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6599},{"krate":0,"index":6600},{"krate":0,"index":6604}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc8145.rs","byte_start":9161751,"byte_end":9161757,"line_start":50,"line_end":50,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6607},{"krate":0,"index":6608}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc8145.rs","byte_start":9162373,"byte_end":9162379,"line_start":72,"line_end":72,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6611}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc8145.rs","byte_start":9162602,"byte_end":9162608,"line_start":84,"line_end":84,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6615}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc8145.rs","byte_start":9163061,"byte_end":9163071,"line_start":106,"line_end":106,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6624},{"krate":0,"index":6625}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":545628,"byte_end":545631,"line_start":78,"line_end":78,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2381},{"krate":0,"index":2382}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":546646,"byte_end":546649,"line_start":109,"line_end":109,"column_start":47,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2389}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":546850,"byte_end":546853,"line_start":116,"line_end":116,"column_start":34,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":546941,"byte_end":546944,"line_start":121,"line_end":121,"column_start":48,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2395}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":547176,"byte_end":547179,"line_start":128,"line_end":128,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2398}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":547355,"byte_end":547358,"line_start":137,"line_end":137,"column_start":42,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2401}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":547534,"byte_end":547537,"line_start":146,"line_end":146,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2405},{"krate":0,"index":2406}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":547880,"byte_end":547883,"line_start":158,"line_end":158,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2409}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":548114,"byte_end":548117,"line_start":170,"line_end":170,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2413}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":548227,"byte_end":548230,"line_start":177,"line_end":177,"column_start":44,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2416}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":548422,"byte_end":548425,"line_start":184,"line_end":184,"column_start":42,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2419}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":549792,"byte_end":549801,"line_start":219,"line_end":219,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2421},{"krate":0,"index":2422},{"krate":0,"index":2423},{"krate":0,"index":2424},{"krate":0,"index":2425},{"krate":0,"index":2426},{"krate":0,"index":2427},{"krate":0,"index":2428},{"krate":0,"index":2429},{"krate":0,"index":2430}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":552631,"byte_end":552640,"line_start":299,"line_end":299,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2432}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":552754,"byte_end":552763,"line_start":305,"line_end":305,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2434}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":553812,"byte_end":553821,"line_start":347,"line_end":347,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2438},{"krate":0,"index":2440},{"krate":0,"index":2441},{"krate":0,"index":2442},{"krate":0,"index":2443},{"krate":0,"index":2444}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":555856,"byte_end":555865,"line_start":406,"line_end":406,"column_start":59,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":2448}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":556025,"byte_end":556034,"line_start":415,"line_end":415,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2451},{"krate":0,"index":2452}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":556179,"byte_end":556188,"line_start":423,"line_end":423,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2455}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":556773,"byte_end":556785,"line_start":447,"line_end":447,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2457},{"krate":0,"index":2458},{"krate":0,"index":2459}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":557196,"byte_end":557208,"line_start":467,"line_end":467,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2462},{"krate":0,"index":2463}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":557483,"byte_end":557495,"line_start":477,"line_end":477,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2465}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":558526,"byte_end":558533,"line_start":508,"line_end":508,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2471},{"krate":0,"index":2472}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":559273,"byte_end":559280,"line_start":528,"line_end":528,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2477},{"krate":0,"index":2478}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":562102,"byte_end":562103,"line_start":607,"line_end":607,"column_start":44,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2488}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":562210,"byte_end":562211,"line_start":613,"line_end":613,"column_start":42,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2492}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":562914,"byte_end":562928,"line_start":643,"line_end":643,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2495},{"krate":0,"index":2496},{"krate":0,"index":2497},{"krate":0,"index":2498},{"krate":0,"index":2499},{"krate":0,"index":2500}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":563830,"byte_end":563844,"line_start":680,"line_end":680,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2503},{"krate":0,"index":2504}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":563981,"byte_end":563995,"line_start":688,"line_end":688,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2507}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":564145,"byte_end":564159,"line_start":697,"line_end":697,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2510}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":564264,"byte_end":564278,"line_start":703,"line_end":703,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2513}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":564406,"byte_end":564420,"line_start":709,"line_end":709,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2516}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":564538,"byte_end":564552,"line_start":715,"line_end":715,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2519}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":564694,"byte_end":564708,"line_start":724,"line_end":724,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2522}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":564934,"byte_end":564948,"line_start":736,"line_end":736,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2526}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":565061,"byte_end":565075,"line_start":742,"line_end":742,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2530}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":573615,"byte_end":573616,"line_start":110,"line_end":110,"column_start":59,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2554}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":573711,"byte_end":573712,"line_start":114,"line_end":114,"column_start":45,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2558}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":575454,"byte_end":575471,"line_start":164,"line_end":164,"column_start":14,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2561},{"krate":0,"index":2562},{"krate":0,"index":2563}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":577457,"byte_end":577474,"line_start":226,"line_end":226,"column_start":5,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2567}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":577685,"byte_end":577702,"line_start":233,"line_end":233,"column_start":34,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":577819,"byte_end":577836,"line_start":239,"line_end":239,"column_start":5,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2573}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":578129,"byte_end":578146,"line_start":250,"line_end":250,"column_start":5,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2577}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":578374,"byte_end":578391,"line_start":257,"line_end":257,"column_start":35,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2580}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":578577,"byte_end":578594,"line_start":266,"line_end":266,"column_start":39,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2583}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":578846,"byte_end":578863,"line_start":278,"line_end":278,"column_start":42,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2587}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":578976,"byte_end":578993,"line_start":284,"line_end":284,"column_start":44,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2591}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":579397,"byte_end":579414,"line_start":300,"line_end":300,"column_start":44,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2595}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":579707,"byte_end":579724,"line_start":313,"line_end":313,"column_start":42,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2598}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":584131,"byte_end":584137,"line_start":99,"line_end":99,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2625},{"krate":0,"index":2626},{"krate":0,"index":2629},{"krate":0,"index":2630},{"krate":0,"index":2631},{"krate":0,"index":2632},{"krate":0,"index":2633},{"krate":0,"index":2634},{"krate":0,"index":2635},{"krate":0,"index":2636},{"krate":0,"index":2637}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":585956,"byte_end":585962,"line_start":172,"line_end":172,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2641}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":586125,"byte_end":586131,"line_start":178,"line_end":178,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2645}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":586325,"byte_end":586331,"line_start":187,"line_end":187,"column_start":50,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2651}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":586615,"byte_end":586621,"line_start":196,"line_end":196,"column_start":40,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":586725,"byte_end":586731,"line_start":201,"line_end":201,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2660}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":587223,"byte_end":587229,"line_start":216,"line_end":216,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2664}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":587654,"byte_end":587660,"line_start":231,"line_end":231,"column_start":53,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2670}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":588460,"byte_end":588466,"line_start":256,"line_end":256,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2674}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":588774,"byte_end":588780,"line_start":269,"line_end":269,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2679},{"krate":0,"index":2680}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":589186,"byte_end":589192,"line_start":281,"line_end":281,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2684},{"krate":0,"index":2688}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":590142,"byte_end":590148,"line_start":314,"line_end":314,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2695}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":590466,"byte_end":590472,"line_start":325,"line_end":325,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2699}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":593368,"byte_end":593374,"line_start":414,"line_end":414,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2727},{"krate":0,"index":2728},{"krate":0,"index":2729},{"krate":0,"index":2730},{"krate":0,"index":2731},{"krate":0,"index":2732}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":594820,"byte_end":594832,"line_start":464,"line_end":464,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2753}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":595109,"byte_end":595121,"line_start":477,"line_end":477,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2756}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":595659,"byte_end":595671,"line_start":494,"line_end":494,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2759}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":596043,"byte_end":596055,"line_start":507,"line_end":507,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2763}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":597124,"byte_end":597136,"line_start":536,"line_end":536,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2768},{"krate":0,"index":2769},{"krate":0,"index":2770},{"krate":0,"index":2771},{"krate":0,"index":2772},{"krate":0,"index":2773}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":597942,"byte_end":597954,"line_start":571,"line_end":571,"column_start":54,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":2778}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":598276,"byte_end":598288,"line_start":582,"line_end":582,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":598445,"byte_end":598457,"line_start":589,"line_end":589,"column_start":55,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":2784}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":599206,"byte_end":599218,"line_start":612,"line_end":612,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2787}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":599867,"byte_end":599879,"line_start":637,"line_end":637,"column_start":39,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2790}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":600170,"byte_end":600182,"line_start":650,"line_end":650,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2794},{"krate":0,"index":2795}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":600770,"byte_end":600782,"line_start":671,"line_end":671,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2798},{"krate":0,"index":2801}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":601549,"byte_end":601561,"line_start":702,"line_end":702,"column_start":39,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2806}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":602838,"byte_end":602850,"line_start":741,"line_end":741,"column_start":11,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2809},{"krate":0,"index":2810},{"krate":0,"index":2811},{"krate":0,"index":2812},{"krate":0,"index":2813},{"krate":0,"index":2814}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":603809,"byte_end":603821,"line_start":779,"line_end":779,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2817},{"krate":0,"index":2819}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":605623,"byte_end":605635,"line_start":820,"line_end":820,"column_start":59,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":2824}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":605947,"byte_end":605959,"line_start":830,"line_end":830,"column_start":29,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":606100,"byte_end":606112,"line_start":838,"line_end":838,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2829},{"krate":0,"index":2830}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":606779,"byte_end":606795,"line_start":863,"line_end":863,"column_start":29,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2834}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":607236,"byte_end":607252,"line_start":877,"line_end":877,"column_start":34,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":607343,"byte_end":607359,"line_start":880,"line_end":880,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2841}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":608800,"byte_end":608808,"line_start":45,"line_end":45,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2864},{"krate":0,"index":2865},{"krate":0,"index":2866}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":609325,"byte_end":609333,"line_start":65,"line_end":65,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2869},{"krate":0,"index":2870},{"krate":0,"index":2871}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":609738,"byte_end":609746,"line_start":85,"line_end":85,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2874}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":609904,"byte_end":609912,"line_start":91,"line_end":91,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2877}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":610087,"byte_end":610095,"line_start":100,"line_end":100,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2881}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":610330,"byte_end":610338,"line_start":109,"line_end":109,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":610430,"byte_end":610438,"line_start":114,"line_end":114,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2887}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":610916,"byte_end":610924,"line_start":129,"line_end":129,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2891}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":611364,"byte_end":611372,"line_start":144,"line_end":144,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2894}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":611773,"byte_end":611781,"line_start":161,"line_end":161,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2897}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":612008,"byte_end":612016,"line_start":172,"line_end":172,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2901},{"krate":0,"index":2902}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":612475,"byte_end":612483,"line_start":189,"line_end":189,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2905},{"krate":0,"index":2908}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":613175,"byte_end":613183,"line_start":216,"line_end":216,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2913}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":613362,"byte_end":613370,"line_start":222,"line_end":222,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2916}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":616022,"byte_end":616030,"line_start":307,"line_end":307,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2937},{"krate":0,"index":2938},{"krate":0,"index":2939},{"krate":0,"index":2940}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":618657,"byte_end":618663,"line_start":50,"line_end":50,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2971},{"krate":0,"index":2972},{"krate":0,"index":2973}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":623284,"byte_end":623290,"line_start":172,"line_end":172,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2975}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":623639,"byte_end":623645,"line_start":191,"line_end":191,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2979},{"krate":0,"index":2980}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":623874,"byte_end":623880,"line_start":202,"line_end":202,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2983},{"krate":0,"index":2984}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":624116,"byte_end":624122,"line_start":212,"line_end":212,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2986}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":624525,"byte_end":624531,"line_start":232,"line_end":232,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2989}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":624678,"byte_end":624684,"line_start":241,"line_end":241,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2991}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":625539,"byte_end":625545,"line_start":265,"line_end":265,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2993}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":628679,"byte_end":628685,"line_start":31,"line_end":31,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2998},{"krate":0,"index":3000},{"krate":0,"index":3001},{"krate":0,"index":3002},{"krate":0,"index":3003},{"krate":0,"index":3004}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":633345,"byte_end":633351,"line_start":159,"line_end":159,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3006}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":633460,"byte_end":633466,"line_start":168,"line_end":168,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3008}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":634260,"byte_end":634271,"line_start":198,"line_end":198,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3010}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":634604,"byte_end":634615,"line_start":210,"line_end":210,"column_start":28,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":634886,"byte_end":634895,"line_start":222,"line_end":222,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3013}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":635069,"byte_end":635078,"line_start":229,"line_end":229,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":668723,"byte_end":668724,"line_start":42,"line_end":42,"column_start":6,"column_end":7},"value":"","parent":null,"children":[{"krate":0,"index":3049},{"krate":0,"index":3050},{"krate":0,"index":3051},{"krate":0,"index":3052}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":669190,"byte_end":669191,"line_start":60,"line_end":60,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3054}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":669282,"byte_end":669290,"line_start":66,"line_end":66,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3056}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":669386,"byte_end":669387,"line_start":73,"line_end":73,"column_start":18,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3058},{"krate":0,"index":3059}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":669582,"byte_end":669583,"line_start":84,"line_end":84,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3061}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":669745,"byte_end":669746,"line_start":93,"line_end":93,"column_start":45,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3064},{"krate":0,"index":3065}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":670001,"byte_end":670002,"line_start":103,"line_end":103,"column_start":18,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3067}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":670441,"byte_end":670442,"line_start":123,"line_end":123,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3070}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":670587,"byte_end":670588,"line_start":132,"line_end":132,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3072}],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":670676,"byte_end":670677,"line_start":139,"line_end":139,"column_start":21,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3074},{"krate":0,"index":3075}],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":670799,"byte_end":670800,"line_start":147,"line_end":147,"column_start":24,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3077}],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":670935,"byte_end":670936,"line_start":156,"line_end":156,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3079}],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":671028,"byte_end":671029,"line_start":162,"line_end":162,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3081}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":671841,"byte_end":671846,"line_start":196,"line_end":196,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3084},{"krate":0,"index":3085},{"krate":0,"index":3086}],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":672311,"byte_end":672316,"line_start":216,"line_end":216,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3090}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":672521,"byte_end":672526,"line_start":223,"line_end":223,"column_start":34,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":672631,"byte_end":672636,"line_start":228,"line_end":228,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3096}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":672996,"byte_end":673001,"line_start":239,"line_end":239,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3100}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":673336,"byte_end":673341,"line_start":250,"line_end":250,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3103}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":673612,"byte_end":673617,"line_start":263,"line_end":263,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3106}],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":673811,"byte_end":673816,"line_start":273,"line_end":273,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3110},{"krate":0,"index":3111}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":674171,"byte_end":674176,"line_start":285,"line_end":285,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3114}],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":674736,"byte_end":674741,"line_start":308,"line_end":308,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3119}],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":674921,"byte_end":674926,"line_start":317,"line_end":317,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3122}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":675188,"byte_end":675193,"line_start":329,"line_end":329,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3125}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":677452,"byte_end":677457,"line_start":410,"line_end":410,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3128},{"krate":0,"index":3129},{"krate":0,"index":3130}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":678358,"byte_end":678363,"line_start":439,"line_end":439,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3134}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":678571,"byte_end":678576,"line_start":447,"line_end":447,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":678665,"byte_end":678670,"line_start":452,"line_end":452,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3140}],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":678998,"byte_end":679003,"line_start":463,"line_end":463,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3143}],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":679301,"byte_end":679306,"line_start":473,"line_end":473,"column_start":59,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":3147}],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":679651,"byte_end":679656,"line_start":486,"line_end":486,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3150},{"krate":0,"index":3151}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":680058,"byte_end":680063,"line_start":501,"line_end":501,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3154},{"krate":0,"index":3157}],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":680924,"byte_end":680929,"line_start":534,"line_end":534,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3162}],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":681107,"byte_end":681112,"line_start":543,"line_end":543,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3165}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":681900,"byte_end":681902,"line_start":577,"line_end":577,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3168},{"krate":0,"index":3169},{"krate":0,"index":3170}],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":682471,"byte_end":682473,"line_start":600,"line_end":600,"column_start":35,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3174}],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":682679,"byte_end":682681,"line_start":608,"line_end":608,"column_start":25,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":682767,"byte_end":682769,"line_start":613,"line_end":613,"column_start":36,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3180}],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":683105,"byte_end":683107,"line_start":624,"line_end":624,"column_start":26,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3183}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":683405,"byte_end":683407,"line_start":634,"line_end":634,"column_start":56,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3187}],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":683738,"byte_end":683740,"line_start":647,"line_end":647,"column_start":37,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3190},{"krate":0,"index":3191}],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":684075,"byte_end":684077,"line_start":658,"line_end":658,"column_start":30,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3194},{"krate":0,"index":3197}],"docs":"","sig":null,"attributes":[]},{"id":636,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":684917,"byte_end":684919,"line_start":691,"line_end":691,"column_start":40,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3202}],"docs":"","sig":null,"attributes":[]},{"id":637,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":685105,"byte_end":685107,"line_start":700,"line_end":700,"column_start":29,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3205}],"docs":"","sig":null,"attributes":[]},{"id":638,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":685813,"byte_end":685817,"line_start":730,"line_end":730,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3208},{"krate":0,"index":3209}],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":686076,"byte_end":686080,"line_start":742,"line_end":742,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3212},{"krate":0,"index":3213}],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":686291,"byte_end":686295,"line_start":755,"line_end":755,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3216}],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":686447,"byte_end":686451,"line_start":764,"line_end":764,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3220}],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":686649,"byte_end":686653,"line_start":771,"line_end":771,"column_start":34,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":686757,"byte_end":686761,"line_start":776,"line_end":776,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3226}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":687006,"byte_end":687010,"line_start":783,"line_end":783,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3230}],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":687225,"byte_end":687229,"line_start":790,"line_end":790,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3233}],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":687401,"byte_end":687405,"line_start":799,"line_end":799,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3236}],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":687582,"byte_end":687586,"line_start":808,"line_end":808,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3240},{"krate":0,"index":3241}],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":687924,"byte_end":687928,"line_start":820,"line_end":820,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3244}],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":688157,"byte_end":688161,"line_start":832,"line_end":832,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3248}],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":688255,"byte_end":688259,"line_start":839,"line_end":839,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3251},{"krate":0,"index":3252}],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":688429,"byte_end":688433,"line_start":850,"line_end":850,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3256}],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":688582,"byte_end":688586,"line_start":859,"line_end":859,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3259}],"docs":"","sig":null,"attributes":[]},{"id":653,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":688872,"byte_end":688876,"line_start":869,"line_end":869,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3262}],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":689396,"byte_end":689399,"line_start":890,"line_end":890,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3265}],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":689940,"byte_end":689943,"line_start":916,"line_end":916,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3268},{"krate":0,"index":3269},{"krate":0,"index":3270},{"krate":0,"index":3271},{"krate":0,"index":3272},{"krate":0,"index":3273},{"krate":0,"index":3274},{"krate":0,"index":3275}],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":691138,"byte_end":691141,"line_start":962,"line_end":962,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3279}],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":691520,"byte_end":691523,"line_start":973,"line_end":973,"column_start":25,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":691610,"byte_end":691613,"line_start":978,"line_end":978,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3285}],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":692649,"byte_end":692652,"line_start":1009,"line_end":1009,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3288}],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":693594,"byte_end":693597,"line_start":1039,"line_end":1039,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3292}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":694574,"byte_end":694577,"line_start":1072,"line_end":1072,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3295},{"krate":0,"index":3296}],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":695290,"byte_end":695293,"line_start":1097,"line_end":1097,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3299},{"krate":0,"index":3302}],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":696688,"byte_end":696691,"line_start":1143,"line_end":1143,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3307}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":696976,"byte_end":696979,"line_start":1154,"line_end":1154,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3310}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":697313,"byte_end":697316,"line_start":1169,"line_end":1169,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3313}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":697677,"byte_end":697680,"line_start":1179,"line_end":1179,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3316},{"krate":0,"index":3317},{"krate":0,"index":3318},{"krate":0,"index":3319},{"krate":0,"index":3320}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":699394,"byte_end":699397,"line_start":1239,"line_end":1239,"column_start":47,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3331}],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":699666,"byte_end":699669,"line_start":1248,"line_end":1248,"column_start":34,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":669,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":699772,"byte_end":699775,"line_start":1253,"line_end":1253,"column_start":48,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3339}],"docs":"","sig":null,"attributes":[]},{"id":670,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":700090,"byte_end":700093,"line_start":1262,"line_end":1262,"column_start":50,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3345}],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":700379,"byte_end":700382,"line_start":1271,"line_end":1271,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3350}],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":700626,"byte_end":700629,"line_start":1282,"line_end":1282,"column_start":42,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3355}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":700860,"byte_end":700863,"line_start":1292,"line_end":1292,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3361},{"krate":0,"index":3362}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":701363,"byte_end":701366,"line_start":1309,"line_end":1309,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3365}],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":702059,"byte_end":702062,"line_start":1338,"line_end":1338,"column_start":44,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3369}],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":702371,"byte_end":702374,"line_start":1352,"line_end":1352,"column_start":42,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3372}],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":702602,"byte_end":702605,"line_start":1363,"line_end":1363,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3375}],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":702879,"byte_end":702886,"line_start":1374,"line_end":1374,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3378},{"krate":0,"index":3379}],"docs":"","sig":null,"attributes":[]},{"id":679,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":703512,"byte_end":703522,"line_start":1400,"line_end":1400,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3382}],"docs":"","sig":null,"attributes":[]},{"id":680,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":703694,"byte_end":703704,"line_start":1410,"line_end":1410,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3384}],"docs":"","sig":null,"attributes":[]},{"id":681,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":703808,"byte_end":703818,"line_start":1416,"line_end":1416,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3387},{"krate":0,"index":3388}],"docs":"","sig":null,"attributes":[]},{"id":682,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":705221,"byte_end":705231,"line_start":1457,"line_end":1457,"column_start":57,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":3391}],"docs":"","sig":null,"attributes":[]},{"id":683,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2782.rs","byte_start":707790,"byte_end":707793,"line_start":32,"line_end":32,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3411},{"krate":0,"index":3412},{"krate":0,"index":3413},{"krate":0,"index":3414},{"krate":0,"index":3415},{"krate":0,"index":3416},{"krate":0,"index":3417}],"docs":"","sig":null,"attributes":[]},{"id":684,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2782.rs","byte_start":708339,"byte_end":708342,"line_start":63,"line_end":63,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3421}],"docs":"","sig":null,"attributes":[]},{"id":685,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2782.rs","byte_start":708615,"byte_end":708618,"line_start":73,"line_end":73,"column_start":25,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":686,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2782.rs","byte_start":708705,"byte_end":708708,"line_start":78,"line_end":78,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3427}],"docs":"","sig":null,"attributes":[]},{"id":687,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2782.rs","byte_start":709313,"byte_end":709316,"line_start":97,"line_end":97,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3430}],"docs":"","sig":null,"attributes":[]},{"id":688,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2782.rs","byte_start":709855,"byte_end":709858,"line_start":115,"line_end":115,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3434}],"docs":"","sig":null,"attributes":[]},{"id":689,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2782.rs","byte_start":710450,"byte_end":710453,"line_start":136,"line_end":136,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3437},{"krate":0,"index":3438}],"docs":"","sig":null,"attributes":[]},{"id":690,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2782.rs","byte_start":710944,"byte_end":710947,"line_start":154,"line_end":154,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3441},{"krate":0,"index":3444}],"docs":"","sig":null,"attributes":[]},{"id":691,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2782.rs","byte_start":711647,"byte_end":711650,"line_start":183,"line_end":183,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3449}],"docs":"","sig":null,"attributes":[]},{"id":692,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2782.rs","byte_start":712061,"byte_end":712064,"line_start":199,"line_end":199,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3452}],"docs":"","sig":null,"attributes":[]},{"id":693,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":713740,"byte_end":713744,"line_start":56,"line_end":56,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3479},{"krate":0,"index":3480},{"krate":0,"index":3481},{"krate":0,"index":3482},{"krate":0,"index":3483},{"krate":0,"index":3484},{"krate":0,"index":3485},{"krate":0,"index":3486},{"krate":0,"index":3487},{"krate":0,"index":3488},{"krate":0,"index":3489},{"krate":0,"index":3490}],"docs":"","sig":null,"attributes":[]},{"id":694,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":717053,"byte_end":717057,"line_start":170,"line_end":170,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3496}],"docs":"","sig":null,"attributes":[]},{"id":695,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":717556,"byte_end":717560,"line_start":183,"line_end":183,"column_start":41,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":696,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":717662,"byte_end":717666,"line_start":188,"line_end":188,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3505}],"docs":"","sig":null,"attributes":[]},{"id":697,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":718790,"byte_end":718794,"line_start":219,"line_end":219,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3509}],"docs":"","sig":null,"attributes":[]},{"id":698,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":719756,"byte_end":719760,"line_start":249,"line_end":249,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3515}],"docs":"","sig":null,"attributes":[]},{"id":699,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":721125,"byte_end":721129,"line_start":291,"line_end":291,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3519}],"docs":"","sig":null,"attributes":[]},{"id":700,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":721539,"byte_end":721543,"line_start":306,"line_end":306,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3523},{"krate":0,"index":3524}],"docs":"","sig":null,"attributes":[]},{"id":701,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":722681,"byte_end":722685,"line_start":336,"line_end":336,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3528}],"docs":"","sig":null,"attributes":[]},{"id":702,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":723361,"byte_end":723365,"line_start":358,"line_end":358,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3534}],"docs":"","sig":null,"attributes":[]},{"id":703,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":723742,"byte_end":723746,"line_start":368,"line_end":368,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3538}],"docs":"","sig":null,"attributes":[]},{"id":704,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":724263,"byte_end":724267,"line_start":384,"line_end":384,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3542}],"docs":"","sig":null,"attributes":[]},{"id":705,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":724525,"byte_end":724531,"line_start":395,"line_end":395,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3544},{"krate":0,"index":3545},{"krate":0,"index":3546},{"krate":0,"index":3547},{"krate":0,"index":3550}],"docs":"","sig":null,"attributes":[]},{"id":707,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":726900,"byte_end":726906,"line_start":474,"line_end":474,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3555},{"krate":0,"index":3557}],"docs":"","sig":null,"attributes":[]},{"id":708,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":727209,"byte_end":727215,"line_start":486,"line_end":486,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3559}],"docs":"","sig":null,"attributes":[]},{"id":709,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":727418,"byte_end":727424,"line_start":498,"line_end":498,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3562}],"docs":"","sig":null,"attributes":[]},{"id":710,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":728233,"byte_end":728237,"line_start":28,"line_end":28,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3580},{"krate":0,"index":3581},{"krate":0,"index":3582}],"docs":"","sig":null,"attributes":[]},{"id":711,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":728479,"byte_end":728483,"line_start":40,"line_end":40,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3584}],"docs":"","sig":null,"attributes":[]},{"id":712,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":728577,"byte_end":728585,"line_start":46,"line_end":46,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3586}],"docs":"","sig":null,"attributes":[]},{"id":713,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":728701,"byte_end":728705,"line_start":53,"line_end":53,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3588},{"krate":0,"index":3589}],"docs":"","sig":null,"attributes":[]},{"id":714,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":728914,"byte_end":728918,"line_start":64,"line_end":64,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3591}],"docs":"","sig":null,"attributes":[]},{"id":715,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":729085,"byte_end":729089,"line_start":73,"line_end":73,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3594},{"krate":0,"index":3595}],"docs":"","sig":null,"attributes":[]},{"id":716,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":729338,"byte_end":729342,"line_start":83,"line_end":83,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3597}],"docs":"","sig":null,"attributes":[]},{"id":717,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":729824,"byte_end":729828,"line_start":105,"line_end":105,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3600}],"docs":"","sig":null,"attributes":[]},{"id":718,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":729968,"byte_end":729972,"line_start":114,"line_end":114,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3602}],"docs":"","sig":null,"attributes":[]},{"id":719,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":730063,"byte_end":730067,"line_start":121,"line_end":121,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3604},{"krate":0,"index":3605}],"docs":"","sig":null,"attributes":[]},{"id":720,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":730189,"byte_end":730193,"line_start":129,"line_end":129,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3607}],"docs":"","sig":null,"attributes":[]},{"id":721,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":730328,"byte_end":730332,"line_start":138,"line_end":138,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3609}],"docs":"","sig":null,"attributes":[]},{"id":722,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":730424,"byte_end":730428,"line_start":144,"line_end":144,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3611}],"docs":"","sig":null,"attributes":[]},{"id":723,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":731639,"byte_end":731645,"line_start":38,"line_end":38,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3646},{"krate":0,"index":3647},{"krate":0,"index":3648},{"krate":0,"index":3649},{"krate":0,"index":3650},{"krate":0,"index":3651},{"krate":0,"index":3652},{"krate":0,"index":3654},{"krate":0,"index":3655},{"krate":0,"index":3656},{"krate":0,"index":3657}],"docs":"","sig":null,"attributes":[]},{"id":724,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":735338,"byte_end":735344,"line_start":162,"line_end":162,"column_start":50,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3661}],"docs":"","sig":null,"attributes":[]},{"id":725,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":735681,"byte_end":735687,"line_start":172,"line_end":172,"column_start":34,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":726,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":735793,"byte_end":735799,"line_start":177,"line_end":177,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3667}],"docs":"","sig":null,"attributes":[]},{"id":727,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":736029,"byte_end":736035,"line_start":184,"line_end":184,"column_start":53,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3671}],"docs":"","sig":null,"attributes":[]},{"id":728,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":736651,"byte_end":736657,"line_start":203,"line_end":203,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3674}],"docs":"","sig":null,"attributes":[]},{"id":729,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":736811,"byte_end":736817,"line_start":212,"line_end":212,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3677}],"docs":"","sig":null,"attributes":[]},{"id":730,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":737101,"byte_end":737107,"line_start":224,"line_end":224,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3681},{"krate":0,"index":3682}],"docs":"","sig":null,"attributes":[]},{"id":731,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":737780,"byte_end":737786,"line_start":247,"line_end":247,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3685}],"docs":"","sig":null,"attributes":[]},{"id":732,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":738538,"byte_end":738544,"line_start":278,"line_end":278,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3690}],"docs":"","sig":null,"attributes":[]},{"id":733,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":738799,"byte_end":738805,"line_start":288,"line_end":288,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3693}],"docs":"","sig":null,"attributes":[]},{"id":734,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":739193,"byte_end":739199,"line_start":302,"line_end":302,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3696}],"docs":"","sig":null,"attributes":[]},{"id":735,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":739634,"byte_end":739644,"line_start":322,"line_end":322,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3699},{"krate":0,"index":3700}],"docs":"","sig":null,"attributes":[]},{"id":736,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":740551,"byte_end":740561,"line_start":360,"line_end":360,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3704},{"krate":0,"index":3707}],"docs":"","sig":null,"attributes":[]},{"id":737,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":741932,"byte_end":741937,"line_start":411,"line_end":411,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3713},{"krate":0,"index":3714},{"krate":0,"index":3715},{"krate":0,"index":3716},{"krate":0,"index":3717},{"krate":0,"index":3718},{"krate":0,"index":3719},{"krate":0,"index":3720},{"krate":0,"index":3721},{"krate":0,"index":3722},{"krate":0,"index":3723}],"docs":"","sig":null,"attributes":[]},{"id":738,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":743332,"byte_end":743337,"line_start":481,"line_end":481,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3729}],"docs":"","sig":null,"attributes":[]},{"id":739,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":743973,"byte_end":743978,"line_start":496,"line_end":496,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":740,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":744130,"byte_end":744135,"line_start":502,"line_end":502,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3738}],"docs":"","sig":null,"attributes":[]},{"id":741,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":745581,"byte_end":745586,"line_start":541,"line_end":541,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3744}],"docs":"","sig":null,"attributes":[]},{"id":742,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":746938,"byte_end":746943,"line_start":580,"line_end":580,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3748}],"docs":"","sig":null,"attributes":[]},{"id":743,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":747105,"byte_end":747110,"line_start":589,"line_end":589,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3752}],"docs":"","sig":null,"attributes":[]},{"id":744,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":747602,"byte_end":747607,"line_start":606,"line_end":606,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3756},{"krate":0,"index":3757}],"docs":"","sig":null,"attributes":[]},{"id":745,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":748764,"byte_end":748769,"line_start":638,"line_end":638,"column_start":54,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3761},{"krate":0,"index":3764}],"docs":"","sig":null,"attributes":[]},{"id":746,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":750508,"byte_end":750513,"line_start":696,"line_end":696,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3770}],"docs":"","sig":null,"attributes":[]},{"id":747,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":750962,"byte_end":750967,"line_start":710,"line_end":710,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3774}],"docs":"","sig":null,"attributes":[]},{"id":748,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":751671,"byte_end":751676,"line_start":730,"line_end":730,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3778}],"docs":"","sig":null,"attributes":[]},{"id":749,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":751940,"byte_end":751944,"line_start":743,"line_end":743,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3782},{"krate":0,"index":3783},{"krate":0,"index":3784},{"krate":0,"index":3785}],"docs":"","sig":null,"attributes":[]},{"id":750,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":752390,"byte_end":752394,"line_start":764,"line_end":764,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3791}],"docs":"","sig":null,"attributes":[]},{"id":751,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":752659,"byte_end":752663,"line_start":775,"line_end":775,"column_start":41,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":752,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":752765,"byte_end":752769,"line_start":780,"line_end":780,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3800}],"docs":"","sig":null,"attributes":[]},{"id":753,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":753166,"byte_end":753170,"line_start":794,"line_end":794,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3806}],"docs":"","sig":null,"attributes":[]},{"id":754,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":753598,"byte_end":753602,"line_start":809,"line_end":809,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3810}],"docs":"","sig":null,"attributes":[]},{"id":755,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":753944,"byte_end":753948,"line_start":823,"line_end":823,"column_start":60,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":3814}],"docs":"","sig":null,"attributes":[]},{"id":756,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":754160,"byte_end":754164,"line_start":833,"line_end":833,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3818},{"krate":0,"index":3819}],"docs":"","sig":null,"attributes":[]},{"id":757,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":754585,"byte_end":754589,"line_start":847,"line_end":847,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3823}],"docs":"","sig":null,"attributes":[]},{"id":758,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":755253,"byte_end":755257,"line_start":876,"line_end":876,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3829}],"docs":"","sig":null,"attributes":[]},{"id":759,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":755492,"byte_end":755496,"line_start":886,"line_end":886,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3833}],"docs":"","sig":null,"attributes":[]},{"id":760,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":755831,"byte_end":755835,"line_start":899,"line_end":899,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3837}],"docs":"","sig":null,"attributes":[]},{"id":761,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":756119,"byte_end":756121,"line_start":914,"line_end":914,"column_start":14,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3840},{"krate":0,"index":3841},{"krate":0,"index":3842},{"krate":0,"index":3843},{"krate":0,"index":3844},{"krate":0,"index":3845}],"docs":"","sig":null,"attributes":[]},{"id":762,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":756746,"byte_end":756748,"line_start":948,"line_end":948,"column_start":46,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3849}],"docs":"","sig":null,"attributes":[]},{"id":763,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":757083,"byte_end":757085,"line_start":958,"line_end":958,"column_start":34,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":764,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":757187,"byte_end":757189,"line_start":963,"line_end":963,"column_start":47,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3855}],"docs":"","sig":null,"attributes":[]},{"id":765,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":757872,"byte_end":757874,"line_start":982,"line_end":982,"column_start":49,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3859}],"docs":"","sig":null,"attributes":[]},{"id":766,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":758487,"byte_end":758489,"line_start":1001,"line_end":1001,"column_start":35,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3862}],"docs":"","sig":null,"attributes":[]},{"id":767,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":758643,"byte_end":758645,"line_start":1010,"line_end":1010,"column_start":42,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3865}],"docs":"","sig":null,"attributes":[]},{"id":768,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":758930,"byte_end":758932,"line_start":1022,"line_end":1022,"column_start":37,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3869},{"krate":0,"index":3870}],"docs":"","sig":null,"attributes":[]},{"id":769,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":759613,"byte_end":759615,"line_start":1045,"line_end":1045,"column_start":39,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3873}],"docs":"","sig":null,"attributes":[]},{"id":770,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":760367,"byte_end":760369,"line_start":1076,"line_end":1076,"column_start":44,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3878}],"docs":"","sig":null,"attributes":[]},{"id":771,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":760702,"byte_end":760704,"line_start":1090,"line_end":1090,"column_start":42,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3881}],"docs":"","sig":null,"attributes":[]},{"id":772,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":761090,"byte_end":761092,"line_start":1104,"line_end":1104,"column_start":34,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3884}],"docs":"","sig":null,"attributes":[]},{"id":773,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":761294,"byte_end":761305,"line_start":1114,"line_end":1114,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3887},{"krate":0,"index":3888},{"krate":0,"index":3889}],"docs":"","sig":null,"attributes":[]},{"id":774,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":762626,"byte_end":762637,"line_start":1156,"line_end":1156,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3892},{"krate":0,"index":3893},{"krate":0,"index":3894}],"docs":"","sig":null,"attributes":[]},{"id":775,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":763378,"byte_end":763389,"line_start":1184,"line_end":1184,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3898}],"docs":"","sig":null,"attributes":[]},{"id":776,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":763530,"byte_end":763541,"line_start":1193,"line_end":1193,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3902}],"docs":"","sig":null,"attributes":[]},{"id":777,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":763719,"byte_end":763730,"line_start":1200,"line_end":1200,"column_start":29,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":778,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":763825,"byte_end":763836,"line_start":1205,"line_end":1205,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3908}],"docs":"","sig":null,"attributes":[]},{"id":779,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":764062,"byte_end":764073,"line_start":1212,"line_end":1212,"column_start":47,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3912}],"docs":"","sig":null,"attributes":[]},{"id":780,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":764268,"byte_end":764279,"line_start":1219,"line_end":1219,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3915}],"docs":"","sig":null,"attributes":[]},{"id":781,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":764435,"byte_end":764446,"line_start":1228,"line_end":1228,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3918}],"docs":"","sig":null,"attributes":[]},{"id":782,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":764843,"byte_end":764854,"line_start":1249,"line_end":1249,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3928},{"krate":0,"index":3929}],"docs":"","sig":null,"attributes":[]},{"id":783,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":765224,"byte_end":765235,"line_start":1261,"line_end":1261,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3932}],"docs":"","sig":null,"attributes":[]},{"id":784,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":765836,"byte_end":765847,"line_start":1286,"line_end":1286,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3936}],"docs":"","sig":null,"attributes":[]},{"id":785,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":766186,"byte_end":766197,"line_start":1301,"line_end":1301,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3939}],"docs":"","sig":null,"attributes":[]},{"id":786,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":767070,"byte_end":767088,"line_start":1326,"line_end":1326,"column_start":30,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3942}],"docs":"","sig":null,"attributes":[]},{"id":787,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":767338,"byte_end":767356,"line_start":1337,"line_end":1337,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3944}],"docs":"","sig":null,"attributes":[]},{"id":788,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":767457,"byte_end":767475,"line_start":1343,"line_end":1343,"column_start":30,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3947},{"krate":0,"index":3948},{"krate":0,"index":3951}],"docs":"","sig":null,"attributes":[]},{"id":789,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":769922,"byte_end":769940,"line_start":1418,"line_end":1418,"column_start":27,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3954}],"docs":"","sig":null,"attributes":[]},{"id":790,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":770662,"byte_end":770677,"line_start":1448,"line_end":1448,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3964},{"krate":0,"index":3965}],"docs":"","sig":null,"attributes":[]},{"id":791,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":771988,"byte_end":772003,"line_start":1495,"line_end":1495,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3968},{"krate":0,"index":3969}],"docs":"","sig":null,"attributes":[]},{"id":792,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":772545,"byte_end":772555,"line_start":1522,"line_end":1522,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3971}],"docs":"","sig":null,"attributes":[]},{"id":793,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":772889,"byte_end":772905,"line_start":1536,"line_end":1536,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3973}],"docs":"","sig":null,"attributes":[]},{"id":794,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":773256,"byte_end":773272,"line_start":1548,"line_end":1548,"column_start":28,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":795,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":781173,"byte_end":781178,"line_start":36,"line_end":36,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4023},{"krate":0,"index":4024},{"krate":0,"index":4025},{"krate":0,"index":4026},{"krate":0,"index":4027},{"krate":0,"index":4028},{"krate":0,"index":4029},{"krate":0,"index":4030}],"docs":"","sig":null,"attributes":[]},{"id":796,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":782084,"byte_end":782089,"line_start":80,"line_end":80,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4034}],"docs":"","sig":null,"attributes":[]},{"id":797,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":782492,"byte_end":782497,"line_start":92,"line_end":92,"column_start":34,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":798,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":782602,"byte_end":782607,"line_start":97,"line_end":97,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4040}],"docs":"","sig":null,"attributes":[]},{"id":799,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":783565,"byte_end":783570,"line_start":124,"line_end":124,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4044}],"docs":"","sig":null,"attributes":[]},{"id":800,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":784457,"byte_end":784462,"line_start":151,"line_end":151,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4047}],"docs":"","sig":null,"attributes":[]},{"id":801,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":784616,"byte_end":784621,"line_start":160,"line_end":160,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4050}],"docs":"","sig":null,"attributes":[]},{"id":802,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":784969,"byte_end":784974,"line_start":174,"line_end":174,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4054},{"krate":0,"index":4055}],"docs":"","sig":null,"attributes":[]},{"id":803,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":785746,"byte_end":785751,"line_start":197,"line_end":197,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4058}],"docs":"","sig":null,"attributes":[]},{"id":804,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":787154,"byte_end":787159,"line_start":253,"line_end":253,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4063}],"docs":"","sig":null,"attributes":[]},{"id":805,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":787500,"byte_end":787505,"line_start":264,"line_end":264,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4066}],"docs":"","sig":null,"attributes":[]},{"id":806,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":787977,"byte_end":787982,"line_start":280,"line_end":280,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4069}],"docs":"","sig":null,"attributes":[]},{"id":807,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":788279,"byte_end":788289,"line_start":296,"line_end":296,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4072},{"krate":0,"index":4073},{"krate":0,"index":4074},{"krate":0,"index":4075},{"krate":0,"index":4076}],"docs":"","sig":null,"attributes":[]},{"id":808,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":788879,"byte_end":788889,"line_start":326,"line_end":326,"column_start":54,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":4080}],"docs":"","sig":null,"attributes":[]},{"id":809,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":789213,"byte_end":789223,"line_start":336,"line_end":336,"column_start":34,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":810,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":789333,"byte_end":789343,"line_start":341,"line_end":341,"column_start":55,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":4086}],"docs":"","sig":null,"attributes":[]},{"id":811,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":790025,"byte_end":790035,"line_start":360,"line_end":360,"column_start":57,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":4090}],"docs":"","sig":null,"attributes":[]},{"id":812,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":790649,"byte_end":790659,"line_start":379,"line_end":379,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4093}],"docs":"","sig":null,"attributes":[]},{"id":813,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":791214,"byte_end":791224,"line_start":400,"line_end":400,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4096}],"docs":"","sig":null,"attributes":[]},{"id":814,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":791511,"byte_end":791521,"line_start":412,"line_end":412,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4100},{"krate":0,"index":4101}],"docs":"","sig":null,"attributes":[]},{"id":815,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":791960,"byte_end":791970,"line_start":428,"line_end":428,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4104}],"docs":"","sig":null,"attributes":[]},{"id":816,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":792714,"byte_end":792724,"line_start":459,"line_end":459,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4109}],"docs":"","sig":null,"attributes":[]},{"id":817,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":792974,"byte_end":792984,"line_start":468,"line_end":468,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4112}],"docs":"","sig":null,"attributes":[]},{"id":818,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":793369,"byte_end":793379,"line_start":482,"line_end":482,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4115}],"docs":"","sig":null,"attributes":[]},{"id":819,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":794224,"byte_end":794231,"line_start":29,"line_end":29,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4138},{"krate":0,"index":4139},{"krate":0,"index":4140},{"krate":0,"index":4141},{"krate":0,"index":4142}],"docs":"","sig":null,"attributes":[]},{"id":820,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":794837,"byte_end":794844,"line_start":64,"line_end":64,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4146}],"docs":"","sig":null,"attributes":[]},{"id":821,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":795182,"byte_end":795189,"line_start":74,"line_end":74,"column_start":34,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":822,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":795296,"byte_end":795303,"line_start":79,"line_end":79,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":4152}],"docs":"","sig":null,"attributes":[]},{"id":823,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":795535,"byte_end":795542,"line_start":86,"line_end":86,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4156}],"docs":"","sig":null,"attributes":[]},{"id":824,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":796159,"byte_end":796166,"line_start":105,"line_end":105,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4159}],"docs":"","sig":null,"attributes":[]},{"id":825,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":796320,"byte_end":796327,"line_start":114,"line_end":114,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4162}],"docs":"","sig":null,"attributes":[]},{"id":826,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":796614,"byte_end":796621,"line_start":126,"line_end":126,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4166},{"krate":0,"index":4167}],"docs":"","sig":null,"attributes":[]},{"id":827,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":797294,"byte_end":797301,"line_start":149,"line_end":149,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4170}],"docs":"","sig":null,"attributes":[]},{"id":828,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":798054,"byte_end":798061,"line_start":180,"line_end":180,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4175}],"docs":"","sig":null,"attributes":[]},{"id":829,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":798316,"byte_end":798323,"line_start":190,"line_end":190,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4178}],"docs":"","sig":null,"attributes":[]},{"id":830,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":798707,"byte_end":798714,"line_start":204,"line_end":204,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4181}],"docs":"","sig":null,"attributes":[]},{"id":831,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":798997,"byte_end":799000,"line_start":219,"line_end":219,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4184},{"krate":0,"index":4185},{"krate":0,"index":4186},{"krate":0,"index":4187},{"krate":0,"index":4188},{"krate":0,"index":4189}],"docs":"","sig":null,"attributes":[]},{"id":832,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":799627,"byte_end":799630,"line_start":253,"line_end":253,"column_start":47,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4193}],"docs":"","sig":null,"attributes":[]},{"id":833,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":799966,"byte_end":799969,"line_start":263,"line_end":263,"column_start":34,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":834,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":800072,"byte_end":800075,"line_start":268,"line_end":268,"column_start":48,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4199}],"docs":"","sig":null,"attributes":[]},{"id":835,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":800760,"byte_end":800763,"line_start":287,"line_end":287,"column_start":50,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4203}],"docs":"","sig":null,"attributes":[]},{"id":836,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":801377,"byte_end":801380,"line_start":306,"line_end":306,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4206}],"docs":"","sig":null,"attributes":[]},{"id":837,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":801534,"byte_end":801537,"line_start":315,"line_end":315,"column_start":42,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4209}],"docs":"","sig":null,"attributes":[]},{"id":838,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":801822,"byte_end":801825,"line_start":327,"line_end":327,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4213},{"krate":0,"index":4214}],"docs":"","sig":null,"attributes":[]},{"id":839,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":802506,"byte_end":802509,"line_start":350,"line_end":350,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4217}],"docs":"","sig":null,"attributes":[]},{"id":840,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":803262,"byte_end":803265,"line_start":381,"line_end":381,"column_start":44,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4222}],"docs":"","sig":null,"attributes":[]},{"id":841,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":803598,"byte_end":803601,"line_start":395,"line_end":395,"column_start":42,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4225}],"docs":"","sig":null,"attributes":[]},{"id":842,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":803988,"byte_end":803991,"line_start":409,"line_end":409,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4228}],"docs":"","sig":null,"attributes":[]},{"id":843,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":894601,"byte_end":894608,"line_start":133,"line_end":133,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4254},{"krate":0,"index":4256},{"krate":0,"index":4257},{"krate":0,"index":4258},{"krate":0,"index":4259},{"krate":0,"index":4260},{"krate":0,"index":4261},{"krate":0,"index":4262},{"krate":0,"index":4263},{"krate":0,"index":4264}],"docs":"","sig":null,"attributes":[]},{"id":844,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":905598,"byte_end":905605,"line_start":129,"line_end":129,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4289},{"krate":0,"index":4291},{"krate":0,"index":4293}],"docs":"","sig":null,"attributes":[]},{"id":845,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":908056,"byte_end":908063,"line_start":211,"line_end":211,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4295}],"docs":"","sig":null,"attributes":[]},{"id":846,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":908703,"byte_end":908714,"line_start":238,"line_end":238,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4297}],"docs":"","sig":null,"attributes":[]},{"id":847,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":909146,"byte_end":909157,"line_start":252,"line_end":252,"column_start":28,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":3992,"byte_end":3996,"line_start":87,"line_end":87,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":6}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":9334,"byte_end":9341,"line_start":116,"line_end":116,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":46}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":9351,"byte_end":9354,"line_start":117,"line_end":117,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":236}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":9364,"byte_end":9370,"line_start":118,"line_end":118,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":245}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":9380,"byte_end":9384,"line_start":119,"line_end":119,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":348}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":69340,"byte_end":69345,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":366}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":69355,"byte_end":69364,"line_start":41,"line_end":41,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":367}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":69374,"byte_end":69379,"line_start":42,"line_end":42,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":368}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":69389,"byte_end":69395,"line_start":43,"line_end":43,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":369}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":69405,"byte_end":69408,"line_start":44,"line_end":44,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":370}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":69418,"byte_end":69423,"line_start":45,"line_end":45,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":371}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":69433,"byte_end":69438,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":428}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/mod.rs","byte_start":69448,"byte_end":69454,"line_start":47,"line_end":47,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":429}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":9394,"byte_end":9401,"line_start":120,"line_end":120,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":430}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":9411,"byte_end":9426,"line_start":121,"line_end":121,"column_start":9,"column_end":24},"ref_id":{"krate":0,"index":590}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":9436,"byte_end":9440,"line_start":122,"line_end":122,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1001}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":9450,"byte_end":9453,"line_start":123,"line_end":123,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2063}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":9463,"byte_end":9469,"line_start":124,"line_end":124,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2069}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":9479,"byte_end":9482,"line_start":125,"line_end":125,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2352}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":544021,"byte_end":544028,"line_start":28,"line_end":28,"column_start":5,"column_end":12},"ref_id":{"krate":0,"index":6343}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":544050,"byte_end":544057,"line_start":29,"line_end":29,"column_start":5,"column_end":12},"ref_id":{"krate":0,"index":6378}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":544104,"byte_end":544111,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"ref_id":{"krate":0,"index":6406}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":544127,"byte_end":544134,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"ref_id":{"krate":0,"index":6432}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":544156,"byte_end":544163,"line_start":32,"line_end":32,"column_start":5,"column_end":12},"ref_id":{"krate":0,"index":6457}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":544180,"byte_end":544187,"line_start":33,"line_end":33,"column_start":5,"column_end":12},"ref_id":{"krate":0,"index":6486}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":544209,"byte_end":544216,"line_start":34,"line_end":34,"column_start":5,"column_end":12},"ref_id":{"krate":0,"index":6519}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":544232,"byte_end":544239,"line_start":35,"line_end":35,"column_start":5,"column_end":12},"ref_id":{"krate":0,"index":6548}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":544262,"byte_end":544269,"line_start":36,"line_end":36,"column_start":5,"column_end":12},"ref_id":{"krate":0,"index":6583}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":9492,"byte_end":9497,"line_start":126,"line_end":126,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2532}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":9507,"byte_end":9513,"line_start":127,"line_end":127,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2599}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":9523,"byte_end":9531,"line_start":128,"line_end":128,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":2842}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":9541,"byte_end":9547,"line_start":129,"line_end":129,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2953}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/mod.rs","byte_start":9557,"byte_end":9560,"line_start":130,"line_end":130,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2994}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":4022,"byte_end":4027,"line_start":89,"line_end":89,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3015}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":636630,"byte_end":636637,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3019}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":636647,"byte_end":636654,"line_start":31,"line_end":31,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3392}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":636664,"byte_end":636671,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3453}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":636681,"byte_end":636688,"line_start":33,"line_end":33,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3563}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":636698,"byte_end":636705,"line_start":34,"line_end":34,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3612}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":636715,"byte_end":636722,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3979}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":636732,"byte_end":636739,"line_start":36,"line_end":36,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":4000}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/mod.rs","byte_start":636749,"byte_end":636756,"line_start":37,"line_end":37,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":4116}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/lib.rs","byte_start":4097,"byte_end":4102,"line_start":94,"line_end":94,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":4233}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/mod.rs","byte_start":890165,"byte_end":890171,"line_start":5,"line_end":5,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":4234}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/mod.rs","byte_start":890181,"byte_end":890187,"line_start":6,"line_end":6,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":4269}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":12008,"byte_end":12015,"line_start":56,"line_end":56,"column_start":22,"column_end":29},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":4304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":14432,"byte_end":14439,"line_start":129,"line_end":129,"column_start":6,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":4304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":15167,"byte_end":15174,"line_start":150,"line_end":150,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":4304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":15651,"byte_end":15658,"line_start":168,"line_end":168,"column_start":31,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":4304},"to":{"krate":1,"index":7699}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":16473,"byte_end":16480,"line_start":195,"line_end":195,"column_start":37,"column_end":44},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":4304},"to":{"krate":1,"index":2074}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":16621,"byte_end":16628,"line_start":203,"line_end":203,"column_start":40,"column_end":47},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":4304},"to":{"krate":1,"index":2087}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":16775,"byte_end":16782,"line_start":209,"line_end":209,"column_start":57,"column_end":64},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":4304},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":16911,"byte_end":16918,"line_start":215,"line_end":215,"column_start":57,"column_end":64},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":4304},"to":{"krate":1,"index":1817}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":17052,"byte_end":17059,"line_start":224,"line_end":224,"column_start":29,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":4304},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":17265,"byte_end":17272,"line_start":231,"line_end":231,"column_start":38,"column_end":45},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":4304},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":17352,"byte_end":17359,"line_start":236,"line_end":236,"column_start":30,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":4304},"to":{"krate":1,"index":1669}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":17697,"byte_end":17704,"line_start":247,"line_end":247,"column_start":39,"column_end":46},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":4304},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":17939,"byte_end":17946,"line_start":254,"line_end":254,"column_start":41,"column_end":48},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":4304},"to":{"krate":0,"index":238}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":18338,"byte_end":18345,"line_start":268,"line_end":268,"column_start":46,"column_end":53},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":4304},"to":{"krate":1,"index":6364}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":18578,"byte_end":18585,"line_start":279,"line_end":279,"column_start":37,"column_end":44},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":4304},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":19036,"byte_end":19043,"line_start":293,"line_end":293,"column_start":48,"column_end":55},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":4304},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":19821,"byte_end":19828,"line_start":323,"line_end":323,"column_start":48,"column_end":55},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":4304},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":20072,"byte_end":20079,"line_start":332,"line_end":332,"column_start":49,"column_end":56},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":4304},"to":{"krate":1,"index":6187}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":20300,"byte_end":20307,"line_start":341,"line_end":341,"column_start":49,"column_end":56},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":4304},"to":{"krate":1,"index":6189}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":20539,"byte_end":20546,"line_start":353,"line_end":353,"column_start":39,"column_end":46},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":4304},"to":{"krate":1,"index":4875}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":20958,"byte_end":20965,"line_start":374,"line_end":374,"column_start":46,"column_end":53},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":4304},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":21499,"byte_end":21513,"line_start":391,"line_end":391,"column_start":29,"column_end":43},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":4311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":21867,"byte_end":21881,"line_start":403,"line_end":403,"column_start":30,"column_end":44},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":4311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":22625,"byte_end":22639,"line_start":427,"line_end":427,"column_start":6,"column_end":20},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":4311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":22993,"byte_end":23007,"line_start":440,"line_end":440,"column_start":6,"column_end":20},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":4311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":23346,"byte_end":23360,"line_start":452,"line_end":452,"column_start":30,"column_end":44},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":4311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":23789,"byte_end":23803,"line_start":468,"line_end":468,"column_start":41,"column_end":55},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":4311},"to":{"krate":1,"index":1893}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":23940,"byte_end":23954,"line_start":477,"line_end":477,"column_start":48,"column_end":62},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":4311},"to":{"krate":0,"index":2136}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":24316,"byte_end":24330,"line_start":493,"line_end":493,"column_start":43,"column_end":57},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":4311},"to":{"krate":1,"index":2074}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":24463,"byte_end":24477,"line_start":501,"line_end":501,"column_start":33,"column_end":47},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":4311},"to":{"krate":1,"index":2087}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":24675,"byte_end":24689,"line_start":511,"line_end":511,"column_start":46,"column_end":60},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":4311},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":24809,"byte_end":24823,"line_start":517,"line_end":517,"column_start":44,"column_end":58},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":4311},"to":{"krate":1,"index":1817}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":25157,"byte_end":25165,"line_start":533,"line_end":533,"column_start":22,"column_end":30},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":25365,"byte_end":25373,"line_start":543,"line_end":543,"column_start":35,"column_end":43},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":202},"to":{"krate":1,"index":4965}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":25862,"byte_end":25866,"line_start":566,"line_end":566,"column_start":10,"column_end":14},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":214},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":25978,"byte_end":25982,"line_start":572,"line_end":572,"column_start":23,"column_end":27},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":214},"to":{"krate":1,"index":4965}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":26561,"byte_end":26573,"line_start":593,"line_end":593,"column_start":23,"column_end":35},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":4318},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":26743,"byte_end":26755,"line_start":600,"line_end":600,"column_start":28,"column_end":40},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":4318},"to":{"krate":4,"index":1642}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":27750,"byte_end":27762,"line_start":636,"line_end":636,"column_start":28,"column_end":40},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":4331},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":28005,"byte_end":28017,"line_start":645,"line_end":645,"column_start":26,"column_end":38},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":4331},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":28138,"byte_end":28150,"line_start":651,"line_end":651,"column_start":25,"column_end":37},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":4331},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":28284,"byte_end":28296,"line_start":660,"line_end":660,"column_start":23,"column_end":35},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":4331},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/charstr.rs","byte_start":28934,"byte_end":28946,"line_start":678,"line_end":678,"column_start":28,"column_end":40},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":4331},"to":{"krate":4,"index":1642}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":41729,"byte_end":41735,"line_start":77,"line_end":77,"column_start":6,"column_end":12},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":4355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":43019,"byte_end":43025,"line_start":119,"line_end":119,"column_start":6,"column_end":12},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":4355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":51141,"byte_end":51153,"line_start":323,"line_end":323,"column_start":6,"column_end":18},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":4374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":53029,"byte_end":53041,"line_start":380,"line_end":380,"column_start":6,"column_end":18},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":4374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":60338,"byte_end":60351,"line_start":631,"line_end":631,"column_start":6,"column_end":19},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":4393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":61486,"byte_end":61499,"line_start":671,"line_end":671,"column_start":6,"column_end":19},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":4393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":62186,"byte_end":62199,"line_start":696,"line_end":696,"column_start":24,"column_end":37},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":4393},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":62290,"byte_end":62303,"line_start":702,"line_end":702,"column_start":24,"column_end":37},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":4393},"to":{"krate":1,"index":1817}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":62412,"byte_end":62425,"line_start":708,"line_end":708,"column_start":30,"column_end":43},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":4393},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":62528,"byte_end":62541,"line_start":714,"line_end":714,"column_start":30,"column_end":43},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":4393},"to":{"krate":1,"index":1817}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":62691,"byte_end":62704,"line_start":723,"line_end":723,"column_start":39,"column_end":52},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":4393},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/header.rs","byte_start":63000,"byte_end":63013,"line_start":735,"line_end":735,"column_start":18,"column_end":31},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":4393},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":104145,"byte_end":104150,"line_start":169,"line_end":169,"column_start":6,"column_end":11},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":4781},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":105211,"byte_end":105216,"line_start":216,"line_end":216,"column_start":19,"column_end":24},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":4781},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":105399,"byte_end":105404,"line_start":227,"line_end":227,"column_start":23,"column_end":28},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":4781},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":106227,"byte_end":106232,"line_start":256,"line_end":256,"column_start":25,"column_end":30},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":4781},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":106354,"byte_end":106359,"line_start":262,"line_end":262,"column_start":29,"column_end":34},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":4781},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":106578,"byte_end":106583,"line_start":274,"line_end":274,"column_start":18,"column_end":23},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":4781},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":106641,"byte_end":106646,"line_start":279,"line_end":279,"column_start":26,"column_end":31},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":4781},"to":{"krate":1,"index":1669}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":106805,"byte_end":106810,"line_start":285,"line_end":285,"column_start":30,"column_end":35},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":4781},"to":{"krate":1,"index":1669}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":107102,"byte_end":107107,"line_start":297,"line_end":297,"column_start":19,"column_end":24},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":4781},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":107247,"byte_end":107252,"line_start":306,"line_end":306,"column_start":21,"column_end":26},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":4781},"to":{"krate":1,"index":6364}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":112792,"byte_end":112800,"line_start":487,"line_end":487,"column_start":6,"column_end":14},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":4812},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":114646,"byte_end":114654,"line_start":561,"line_end":561,"column_start":20,"column_end":28},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":4812},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":114835,"byte_end":114843,"line_start":569,"line_end":569,"column_start":22,"column_end":30},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":4812},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":114960,"byte_end":114968,"line_start":576,"line_end":576,"column_start":23,"column_end":31},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":4812},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":122444,"byte_end":122453,"line_start":824,"line_end":824,"column_start":22,"column_end":31},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":4884},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/iana/rcode.rs","byte_start":122585,"byte_end":122594,"line_start":830,"line_end":830,"column_start":25,"column_end":34},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":4884},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":142177,"byte_end":142184,"line_start":161,"line_end":161,"column_start":14,"column_end":21},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":5288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":144107,"byte_end":144114,"line_start":221,"line_end":221,"column_start":27,"column_end":34},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":5288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":145157,"byte_end":145164,"line_start":256,"line_end":256,"column_start":14,"column_end":21},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":5288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":148582,"byte_end":148589,"line_start":353,"line_end":353,"column_start":14,"column_end":21},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":5288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":156564,"byte_end":156571,"line_start":587,"line_end":587,"column_start":32,"column_end":39},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":5288},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":156688,"byte_end":156695,"line_start":593,"line_end":593,"column_start":43,"column_end":50},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":5288},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":158209,"byte_end":158224,"line_start":640,"line_end":640,"column_start":22,"column_end":37},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":5296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":159487,"byte_end":159502,"line_start":681,"line_end":681,"column_start":35,"column_end":50},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":5296},"to":{"krate":1,"index":4965}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":160190,"byte_end":160205,"line_start":706,"line_end":706,"column_start":56,"column_end":71},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":5296},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":161108,"byte_end":161115,"line_start":741,"line_end":741,"column_start":6,"column_end":13},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":5308},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":163725,"byte_end":163738,"line_start":808,"line_end":808,"column_start":22,"column_end":35},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":5328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":166777,"byte_end":166790,"line_start":897,"line_end":897,"column_start":35,"column_end":48},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":5328},"to":{"krate":1,"index":4965}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":167630,"byte_end":167641,"line_start":927,"line_end":927,"column_start":35,"column_end":46},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":564},"to":{"krate":1,"index":4965}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":169525,"byte_end":169535,"line_start":979,"line_end":979,"column_start":50,"column_end":60},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":5341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":170357,"byte_end":170367,"line_start":1007,"line_end":1007,"column_start":30,"column_end":40},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":5341},"to":{"krate":1,"index":4965}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":171511,"byte_end":171527,"line_start":1048,"line_end":1048,"column_start":27,"column_end":43},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":5358},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":171639,"byte_end":171655,"line_start":1054,"line_end":1054,"column_start":25,"column_end":41},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":5358},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":171785,"byte_end":171801,"line_start":1063,"line_end":1063,"column_start":23,"column_end":39},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":5358},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message.rs","byte_start":172073,"byte_end":172089,"line_start":1073,"line_end":1073,"column_start":28,"column_end":44},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":5358},"to":{"krate":4,"index":1642}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":183464,"byte_end":183478,"line_start":167,"line_end":167,"column_start":29,"column_end":43},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":5369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":184145,"byte_end":184159,"line_start":186,"line_end":186,"column_start":6,"column_end":20},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":5369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":184343,"byte_end":184357,"line_start":194,"line_end":194,"column_start":6,"column_end":20},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":5369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":184629,"byte_end":184643,"line_start":204,"line_end":204,"column_start":6,"column_end":20},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":5369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":184838,"byte_end":184852,"line_start":212,"line_end":212,"column_start":6,"column_end":20},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":5369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":185128,"byte_end":185142,"line_start":221,"line_end":221,"column_start":29,"column_end":43},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":5369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":186858,"byte_end":186872,"line_start":271,"line_end":271,"column_start":29,"column_end":43},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":5369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":187653,"byte_end":187667,"line_start":295,"line_end":295,"column_start":29,"column_end":43},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":5369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":189282,"byte_end":189296,"line_start":346,"line_end":346,"column_start":14,"column_end":28},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":5369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":190278,"byte_end":190292,"line_start":379,"line_end":379,"column_start":48,"column_end":62},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":5369},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":190459,"byte_end":190473,"line_start":386,"line_end":386,"column_start":46,"column_end":60},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":5369},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":190641,"byte_end":190655,"line_start":393,"line_end":393,"column_start":49,"column_end":63},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":5369},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":190827,"byte_end":190841,"line_start":400,"line_end":400,"column_start":50,"column_end":64},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":5369},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":191052,"byte_end":191066,"line_start":412,"line_end":412,"column_start":32,"column_end":46},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":5369},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":191187,"byte_end":191201,"line_start":418,"line_end":418,"column_start":43,"column_end":57},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":5369},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":192431,"byte_end":192446,"line_start":453,"line_end":453,"column_start":29,"column_end":44},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":5378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":194075,"byte_end":194090,"line_start":497,"line_end":497,"column_start":29,"column_end":44},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":5378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":196017,"byte_end":196032,"line_start":557,"line_end":557,"column_start":14,"column_end":29},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":5378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":196428,"byte_end":196443,"line_start":572,"line_end":572,"column_start":47,"column_end":62},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":5378},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":196610,"byte_end":196625,"line_start":579,"line_end":579,"column_start":46,"column_end":61},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":5378},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":196794,"byte_end":196809,"line_start":586,"line_end":586,"column_start":49,"column_end":64},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":5378},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":196982,"byte_end":196997,"line_start":593,"line_end":593,"column_start":50,"column_end":65},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":5378},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":197187,"byte_end":197202,"line_start":603,"line_end":603,"column_start":24,"column_end":39},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":5378},"to":{"krate":1,"index":2074}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":197352,"byte_end":197367,"line_start":611,"line_end":611,"column_start":27,"column_end":42},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":5378},"to":{"krate":1,"index":2087}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":197511,"byte_end":197526,"line_start":617,"line_end":617,"column_start":48,"column_end":63},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":5378},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":197669,"byte_end":197684,"line_start":623,"line_end":623,"column_start":48,"column_end":63},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":5378},"to":{"krate":1,"index":1817}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":197823,"byte_end":197838,"line_start":629,"line_end":629,"column_start":32,"column_end":47},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":5378},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":197959,"byte_end":197974,"line_start":635,"line_end":635,"column_start":43,"column_end":58},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":5378},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":199350,"byte_end":199363,"line_start":674,"line_end":674,"column_start":29,"column_end":42},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":5387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":201163,"byte_end":201176,"line_start":726,"line_end":726,"column_start":29,"column_end":42},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":5387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":203108,"byte_end":203121,"line_start":788,"line_end":788,"column_start":14,"column_end":27},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":5387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":203517,"byte_end":203530,"line_start":803,"line_end":803,"column_start":47,"column_end":60},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":5387},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":203697,"byte_end":203710,"line_start":810,"line_end":810,"column_start":48,"column_end":61},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":5387},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":203879,"byte_end":203892,"line_start":817,"line_end":817,"column_start":49,"column_end":62},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":5387},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":204063,"byte_end":204076,"line_start":824,"line_end":824,"column_start":50,"column_end":63},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":5387},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":204264,"byte_end":204277,"line_start":834,"line_end":834,"column_start":24,"column_end":37},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":5387},"to":{"krate":1,"index":2074}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":204427,"byte_end":204440,"line_start":842,"line_end":842,"column_start":27,"column_end":40},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":5387},"to":{"krate":1,"index":2087}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":204584,"byte_end":204597,"line_start":848,"line_end":848,"column_start":48,"column_end":61},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":5387},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":204740,"byte_end":204753,"line_start":854,"line_end":854,"column_start":48,"column_end":61},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":5387},"to":{"krate":1,"index":1817}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":204892,"byte_end":204905,"line_start":860,"line_end":860,"column_start":32,"column_end":45},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":5387},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":205026,"byte_end":205039,"line_start":866,"line_end":866,"column_start":43,"column_end":56},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":5387},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":206434,"byte_end":206450,"line_start":905,"line_end":905,"column_start":29,"column_end":45},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":5397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":208267,"byte_end":208283,"line_start":957,"line_end":957,"column_start":29,"column_end":45},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":5397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":210335,"byte_end":210351,"line_start":1020,"line_end":1020,"column_start":14,"column_end":30},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":5397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":210769,"byte_end":210785,"line_start":1035,"line_end":1035,"column_start":47,"column_end":63},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":5397},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":210955,"byte_end":210971,"line_start":1042,"line_end":1042,"column_start":48,"column_end":64},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":5397},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":211140,"byte_end":211156,"line_start":1049,"line_end":1049,"column_start":46,"column_end":62},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":5397},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":211327,"byte_end":211343,"line_start":1056,"line_end":1056,"column_start":50,"column_end":66},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":5397},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":211534,"byte_end":211550,"line_start":1066,"line_end":1066,"column_start":24,"column_end":40},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":5397},"to":{"krate":1,"index":2074}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":211706,"byte_end":211722,"line_start":1074,"line_end":1074,"column_start":27,"column_end":43},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":5397},"to":{"krate":1,"index":2087}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":211872,"byte_end":211888,"line_start":1080,"line_end":1080,"column_start":48,"column_end":64},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":5397},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":212031,"byte_end":212047,"line_start":1086,"line_end":1086,"column_start":48,"column_end":64},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":5397},"to":{"krate":1,"index":1817}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":212186,"byte_end":212202,"line_start":1092,"line_end":1092,"column_start":32,"column_end":48},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":5397},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":212323,"byte_end":212339,"line_start":1098,"line_end":1098,"column_start":43,"column_end":59},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":5397},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":214005,"byte_end":214022,"line_start":1142,"line_end":1142,"column_start":29,"column_end":46},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":5407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":216484,"byte_end":216501,"line_start":1209,"line_end":1209,"column_start":29,"column_end":46},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":5407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":218611,"byte_end":218628,"line_start":1273,"line_end":1273,"column_start":14,"column_end":31},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":5407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":219052,"byte_end":219069,"line_start":1288,"line_end":1288,"column_start":47,"column_end":64},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":5407},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":219240,"byte_end":219257,"line_start":1295,"line_end":1295,"column_start":48,"column_end":65},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":5407},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":219427,"byte_end":219444,"line_start":1302,"line_end":1302,"column_start":46,"column_end":63},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":5407},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":219615,"byte_end":219632,"line_start":1309,"line_end":1309,"column_start":49,"column_end":66},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":5407},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":219823,"byte_end":219840,"line_start":1319,"line_end":1319,"column_start":24,"column_end":41},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":5407},"to":{"krate":1,"index":2074}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":219994,"byte_end":220011,"line_start":1327,"line_end":1327,"column_start":27,"column_end":44},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":5407},"to":{"krate":1,"index":2087}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":220159,"byte_end":220176,"line_start":1333,"line_end":1333,"column_start":48,"column_end":65},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":5407},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":220319,"byte_end":220336,"line_start":1339,"line_end":1339,"column_start":48,"column_end":65},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":5407},"to":{"krate":1,"index":1817}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":220475,"byte_end":220492,"line_start":1345,"line_end":1345,"column_start":32,"column_end":49},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":5407},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":220613,"byte_end":220630,"line_start":1351,"line_end":1351,"column_start":43,"column_end":60},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":5407},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":221625,"byte_end":221638,"line_start":1378,"line_end":1378,"column_start":39,"column_end":52},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":5387},"to":{"krate":0,"index":888}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":221844,"byte_end":221860,"line_start":1385,"line_end":1385,"column_start":54,"column_end":70},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":5397},"to":{"krate":0,"index":888}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":222023,"byte_end":222040,"line_start":1391,"line_end":1391,"column_start":39,"column_end":56},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":5407},"to":{"krate":0,"index":888}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":222960,"byte_end":222970,"line_start":1420,"line_end":1420,"column_start":33,"column_end":43},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":5417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":228827,"byte_end":228839,"line_start":1586,"line_end":1586,"column_start":29,"column_end":41},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":5427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":229325,"byte_end":229337,"line_start":1600,"line_end":1600,"column_start":6,"column_end":18},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":5427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":229513,"byte_end":229525,"line_start":1607,"line_end":1607,"column_start":29,"column_end":41},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":5427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":230862,"byte_end":230874,"line_start":1648,"line_end":1648,"column_start":43,"column_end":55},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":5427},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":231003,"byte_end":231015,"line_start":1654,"line_end":1654,"column_start":43,"column_end":55},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":5427},"to":{"krate":1,"index":1817}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":231182,"byte_end":231194,"line_start":1663,"line_end":1663,"column_start":47,"column_end":59},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":5427},"to":{"krate":0,"index":2136}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":232720,"byte_end":232736,"line_start":1710,"line_end":1710,"column_start":14,"column_end":30},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":5436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":234479,"byte_end":234495,"line_start":1776,"line_end":1776,"column_start":43,"column_end":59},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":5436},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":234613,"byte_end":234629,"line_start":1782,"line_end":1782,"column_start":43,"column_end":59},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":5436},"to":{"krate":1,"index":1817}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":234785,"byte_end":234801,"line_start":1791,"line_end":1791,"column_start":47,"column_end":63},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":5436},"to":{"krate":0,"index":2136}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":237992,"byte_end":237996,"line_start":1887,"line_end":1887,"column_start":6,"column_end":10},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":5458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":238286,"byte_end":238300,"line_start":1898,"line_end":1898,"column_start":14,"column_end":28},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":5448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":240098,"byte_end":240112,"line_start":1970,"line_end":1970,"column_start":43,"column_end":57},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":5448},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":240254,"byte_end":240268,"line_start":1977,"line_end":1977,"column_start":43,"column_end":57},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":5448},"to":{"krate":1,"index":1817}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/message_builder.rs","byte_start":240426,"byte_end":240440,"line_start":1984,"line_end":1984,"column_start":47,"column_end":61},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":5448},"to":{"krate":0,"index":2136}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":249998,"byte_end":250010,"line_start":33,"line_end":33,"column_start":15,"column_end":27},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":5467},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":251346,"byte_end":251358,"line_start":71,"line_end":71,"column_start":6,"column_end":18},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":5467},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":251812,"byte_end":251824,"line_start":87,"line_end":87,"column_start":6,"column_end":18},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":5467},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":252286,"byte_end":252298,"line_start":102,"line_end":102,"column_start":30,"column_end":42},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":5467},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":259745,"byte_end":259757,"line_start":324,"line_end":324,"column_start":41,"column_end":53},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":5467},"to":{"krate":1,"index":1893}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":259893,"byte_end":259905,"line_start":333,"line_end":333,"column_start":45,"column_end":57},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":5467},"to":{"krate":1,"index":2074}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":260057,"byte_end":260069,"line_start":341,"line_end":341,"column_start":46,"column_end":58},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":5467},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":262015,"byte_end":262024,"line_start":404,"line_end":404,"column_start":25,"column_end":34},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":5474},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":262152,"byte_end":262161,"line_start":413,"line_end":413,"column_start":23,"column_end":32},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":5474},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":262545,"byte_end":262554,"line_start":427,"line_end":427,"column_start":28,"column_end":37},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":5474},"to":{"krate":4,"index":1642}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":262962,"byte_end":262975,"line_start":444,"line_end":444,"column_start":25,"column_end":38},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":5492},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":263102,"byte_end":263115,"line_start":453,"line_end":453,"column_start":23,"column_end":36},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":5492},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":263428,"byte_end":263441,"line_start":465,"line_end":465,"column_start":28,"column_end":41},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":5492},"to":{"krate":4,"index":1642}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":264537,"byte_end":264549,"line_start":509,"line_end":509,"column_start":26,"column_end":38},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":5508},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":264845,"byte_end":264857,"line_start":519,"line_end":519,"column_start":30,"column_end":42},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":5508},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":265123,"byte_end":265135,"line_start":531,"line_end":531,"column_start":23,"column_end":35},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":5508},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/builder.rs","byte_start":266061,"byte_end":266073,"line_start":555,"line_end":555,"column_start":28,"column_end":40},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":5508},"to":{"krate":4,"index":1642}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":270955,"byte_end":270960,"line_start":42,"line_end":42,"column_start":42,"column_end":47},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":5538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":271304,"byte_end":271309,"line_start":54,"line_end":54,"column_start":45,"column_end":50},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":5538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":271885,"byte_end":271890,"line_start":71,"line_end":71,"column_start":44,"column_end":49},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":5538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":272651,"byte_end":272656,"line_start":93,"line_end":93,"column_start":12,"column_end":17},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":5538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":272876,"byte_end":272881,"line_start":103,"line_end":103,"column_start":56,"column_end":61},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":5538},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":273435,"byte_end":273440,"line_start":125,"line_end":125,"column_start":38,"column_end":43},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":5538},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":274584,"byte_end":274589,"line_start":164,"line_end":164,"column_start":17,"column_end":22},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":5538},"to":{"krate":0,"index":1894}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":274815,"byte_end":274820,"line_start":172,"line_end":172,"column_start":41,"column_end":46},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":5538},"to":{"krate":0,"index":1894}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":275483,"byte_end":275488,"line_start":191,"line_end":191,"column_start":66,"column_end":71},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":5538},"to":{"krate":0,"index":1930}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":275549,"byte_end":275554,"line_start":194,"line_end":194,"column_start":50,"column_end":55},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":5538},"to":{"krate":0,"index":1909}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":275594,"byte_end":275599,"line_start":197,"line_end":197,"column_start":29,"column_end":34},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":5538},"to":{"krate":0,"index":1909}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":275742,"byte_end":275747,"line_start":204,"line_end":204,"column_start":57,"column_end":62},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":5538},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":276160,"byte_end":276169,"line_start":219,"line_end":219,"column_start":26,"column_end":35},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":5551},"to":{"krate":1,"index":1604}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":276328,"byte_end":276337,"line_start":226,"line_end":226,"column_start":29,"column_end":38},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":5551},"to":{"krate":1,"index":4965}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":276548,"byte_end":276557,"line_start":235,"line_end":235,"column_start":40,"column_end":49},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":5551},"to":{"krate":1,"index":4897}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":277060,"byte_end":277078,"line_start":251,"line_end":251,"column_start":31,"column_end":49},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":1205},"to":{"krate":1,"index":1604}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":277401,"byte_end":277419,"line_start":263,"line_end":263,"column_start":34,"column_end":52},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":1205},"to":{"krate":1,"index":4965}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":277788,"byte_end":277806,"line_start":276,"line_end":276,"column_start":45,"column_end":63},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":1205},"to":{"krate":1,"index":4897}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":278455,"byte_end":278469,"line_start":299,"line_end":299,"column_start":23,"column_end":37},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":5562},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/chain.rs","byte_start":278631,"byte_end":278645,"line_start":306,"line_end":306,"column_start":28,"column_end":42},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":5562},"to":{"krate":4,"index":1642}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":286856,"byte_end":286861,"line_start":48,"line_end":48,"column_start":14,"column_end":19},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":5575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":289719,"byte_end":289724,"line_start":116,"line_end":116,"column_start":6,"column_end":11},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":5575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":291128,"byte_end":291133,"line_start":160,"line_end":160,"column_start":6,"column_end":11},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":5575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":291320,"byte_end":291325,"line_start":168,"line_end":168,"column_start":6,"column_end":11},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":5575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":291681,"byte_end":291686,"line_start":181,"line_end":181,"column_start":6,"column_end":11},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":5575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":292057,"byte_end":292062,"line_start":196,"line_end":196,"column_start":22,"column_end":27},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":5575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":293419,"byte_end":293424,"line_start":239,"line_end":239,"column_start":36,"column_end":41},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":5575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":293855,"byte_end":293860,"line_start":252,"line_end":252,"column_start":36,"column_end":41},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":5575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":302313,"byte_end":302318,"line_start":480,"line_end":480,"column_start":27,"column_end":32},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":5575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":305539,"byte_end":305544,"line_start":576,"line_end":576,"column_start":37,"column_end":42},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":5575},"to":{"krate":1,"index":2074}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":305696,"byte_end":305701,"line_start":584,"line_end":584,"column_start":57,"column_end":62},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":5575},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":305815,"byte_end":305820,"line_start":593,"line_end":593,"column_start":26,"column_end":31},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":5575},"to":{"krate":1,"index":7699}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":306457,"byte_end":306462,"line_start":615,"line_end":615,"column_start":34,"column_end":39},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":5575},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":306654,"byte_end":306659,"line_start":625,"line_end":625,"column_start":43,"column_end":48},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":5575},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":306749,"byte_end":306754,"line_start":630,"line_end":630,"column_start":35,"column_end":40},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":5575},"to":{"krate":1,"index":1669}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":307274,"byte_end":307279,"line_start":646,"line_end":646,"column_start":44,"column_end":49},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":5575},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":307709,"byte_end":307714,"line_start":658,"line_end":658,"column_start":37,"column_end":42},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":5575},"to":{"krate":0,"index":238}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":307948,"byte_end":307953,"line_start":671,"line_end":671,"column_start":51,"column_end":56},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":5575},"to":{"krate":1,"index":6364}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":308168,"byte_end":308173,"line_start":682,"line_end":682,"column_start":38,"column_end":43},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":5575},"to":{"krate":0,"index":1894}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":308448,"byte_end":308453,"line_start":695,"line_end":695,"column_start":48,"column_end":53},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":5575},"to":{"krate":0,"index":1909}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":308857,"byte_end":308862,"line_start":717,"line_end":717,"column_start":37,"column_end":42},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":5575},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":309872,"byte_end":309877,"line_start":756,"line_end":756,"column_start":48,"column_end":53},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":5575},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":311105,"byte_end":311110,"line_start":798,"line_end":798,"column_start":53,"column_end":58},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":5575},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":311627,"byte_end":311632,"line_start":818,"line_end":818,"column_start":51,"column_end":56},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":5575},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":311998,"byte_end":312008,"line_start":834,"line_end":834,"column_start":11,"column_end":21},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":5582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":312190,"byte_end":312200,"line_start":841,"line_end":841,"column_start":35,"column_end":45},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":5582},"to":{"krate":1,"index":4965}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":313442,"byte_end":313452,"line_start":891,"line_end":891,"column_start":31,"column_end":41},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":5589},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":313578,"byte_end":313588,"line_start":897,"line_end":897,"column_start":32,"column_end":42},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":5589},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":313912,"byte_end":313921,"line_start":907,"line_end":907,"column_start":27,"column_end":36},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":6317},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":314481,"byte_end":314491,"line_start":922,"line_end":922,"column_start":27,"column_end":37},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":6299},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":314740,"byte_end":314750,"line_start":934,"line_end":934,"column_start":23,"column_end":33},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":5589},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/dname.rs","byte_start":315415,"byte_end":315425,"line_start":954,"line_end":954,"column_start":28,"column_end":38},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":5589},"to":{"krate":4,"index":1642}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":342473,"byte_end":342478,"line_start":42,"line_end":42,"column_start":6,"column_end":11},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":1437},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":348297,"byte_end":348302,"line_start":224,"line_end":224,"column_start":6,"column_end":11},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":1437},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":348860,"byte_end":348865,"line_start":247,"line_end":247,"column_start":18,"column_end":23},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":1437},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":349538,"byte_end":349543,"line_start":275,"line_end":275,"column_start":21,"column_end":26},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":1437},"to":{"krate":1,"index":2074}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":349658,"byte_end":349663,"line_start":283,"line_end":283,"column_start":24,"column_end":29},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":1437},"to":{"krate":1,"index":2087}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":349767,"byte_end":349772,"line_start":289,"line_end":289,"column_start":22,"column_end":27},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":1437},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":349861,"byte_end":349866,"line_start":295,"line_end":295,"column_start":22,"column_end":27},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":1437},"to":{"krate":1,"index":1817}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":350016,"byte_end":350021,"line_start":305,"line_end":305,"column_start":31,"column_end":36},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":1437},"to":{"krate":5,"index":330}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":350171,"byte_end":350176,"line_start":316,"line_end":316,"column_start":20,"column_end":25},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":1437},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":350282,"byte_end":350287,"line_start":322,"line_end":322,"column_start":13,"column_end":18},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":1437},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":350340,"byte_end":350345,"line_start":327,"line_end":327,"column_start":21,"column_end":26},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":1437},"to":{"krate":1,"index":1669}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":350902,"byte_end":350907,"line_start":344,"line_end":344,"column_start":14,"column_end":19},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":1437},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":351119,"byte_end":351124,"line_start":355,"line_end":355,"column_start":21,"column_end":26},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":1437},"to":{"krate":1,"index":6364}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":351690,"byte_end":351695,"line_start":381,"line_end":381,"column_start":23,"column_end":28},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":1437},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":352147,"byte_end":352152,"line_start":398,"line_end":398,"column_start":21,"column_end":26},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":1437},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":352696,"byte_end":352706,"line_start":418,"line_end":418,"column_start":6,"column_end":16},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":1502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":353914,"byte_end":353924,"line_start":462,"line_end":462,"column_start":30,"column_end":40},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":1502},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":354089,"byte_end":354099,"line_start":471,"line_end":471,"column_start":21,"column_end":31},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":1502},"to":{"krate":1,"index":2074}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":354216,"byte_end":354226,"line_start":479,"line_end":479,"column_start":24,"column_end":34},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":1502},"to":{"krate":1,"index":2087}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":354332,"byte_end":354342,"line_start":485,"line_end":485,"column_start":23,"column_end":33},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":1502},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":354432,"byte_end":354442,"line_start":491,"line_end":491,"column_start":22,"column_end":32},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":1502},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":354543,"byte_end":354553,"line_start":497,"line_end":497,"column_start":23,"column_end":33},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":1502},"to":{"krate":1,"index":1817}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":354655,"byte_end":354665,"line_start":503,"line_end":503,"column_start":22,"column_end":32},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":1502},"to":{"krate":1,"index":1817}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":354791,"byte_end":354801,"line_start":509,"line_end":509,"column_start":32,"column_end":42},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":1502},"to":{"krate":1,"index":1582}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":354904,"byte_end":354914,"line_start":515,"line_end":515,"column_start":35,"column_end":45},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":1502},"to":{"krate":1,"index":1585}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":355063,"byte_end":355073,"line_start":524,"line_end":524,"column_start":40,"column_end":50},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":1502},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":355178,"byte_end":355188,"line_start":530,"line_end":530,"column_start":13,"column_end":23},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":1502},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":355261,"byte_end":355271,"line_start":535,"line_end":535,"column_start":41,"column_end":51},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":1502},"to":{"krate":1,"index":1669}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":355412,"byte_end":355422,"line_start":541,"line_end":541,"column_start":14,"column_end":24},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":1502},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":355562,"byte_end":355572,"line_start":550,"line_end":550,"column_start":21,"column_end":31},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":1502},"to":{"krate":1,"index":6364}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":356293,"byte_end":356308,"line_start":576,"line_end":576,"column_start":23,"column_end":38},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":1545},"to":{"krate":1,"index":4965}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":358118,"byte_end":358132,"line_start":635,"line_end":635,"column_start":23,"column_end":37},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":5615},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":358495,"byte_end":358509,"line_start":647,"line_end":647,"column_start":28,"column_end":42},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":5615},"to":{"krate":4,"index":1642}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":358768,"byte_end":358782,"line_start":659,"line_end":659,"column_start":23,"column_end":37},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":5633},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":358938,"byte_end":358952,"line_start":666,"line_end":666,"column_start":28,"column_end":42},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":5633},"to":{"krate":4,"index":1642}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":359454,"byte_end":359469,"line_start":686,"line_end":686,"column_start":31,"column_end":46},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":5646},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":359604,"byte_end":359614,"line_start":692,"line_end":692,"column_start":32,"column_end":42},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":6299},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":360084,"byte_end":360099,"line_start":709,"line_end":709,"column_start":23,"column_end":38},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":5646},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/label.rs","byte_start":360517,"byte_end":360532,"line_start":723,"line_end":723,"column_start":28,"column_end":43},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":5646},"to":{"krate":4,"index":1642}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":367004,"byte_end":367015,"line_start":71,"line_end":71,"column_start":11,"column_end":22},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":5667},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":367321,"byte_end":367332,"line_start":85,"line_end":85,"column_start":24,"column_end":35},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":5667},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":370803,"byte_end":370814,"line_start":190,"line_end":190,"column_start":45,"column_end":56},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":5667},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":371121,"byte_end":371132,"line_start":204,"line_end":204,"column_start":31,"column_end":42},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":5667},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":371297,"byte_end":371308,"line_start":214,"line_end":214,"column_start":31,"column_end":42},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":5667},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":371392,"byte_end":371403,"line_start":219,"line_end":219,"column_start":32,"column_end":43},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":5667},"to":{"krate":1,"index":1669}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":371602,"byte_end":371613,"line_start":229,"line_end":229,"column_start":32,"column_end":43},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":5667},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":371743,"byte_end":371754,"line_start":235,"line_end":235,"column_start":34,"column_end":45},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":5667},"to":{"krate":0,"index":238}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":371961,"byte_end":371972,"line_start":248,"line_end":248,"column_start":39,"column_end":50},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":5667},"to":{"krate":1,"index":6364}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":372194,"byte_end":372205,"line_start":259,"line_end":259,"column_start":48,"column_end":59},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":5667},"to":{"krate":0,"index":1894}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":372423,"byte_end":372434,"line_start":271,"line_end":271,"column_start":36,"column_end":47},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":5667},"to":{"krate":0,"index":1909}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":372913,"byte_end":372924,"line_start":297,"line_end":297,"column_start":26,"column_end":37},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":5667},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":377394,"byte_end":377405,"line_start":408,"line_end":408,"column_start":36,"column_end":47},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":5667},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":378210,"byte_end":378221,"line_start":442,"line_end":442,"column_start":41,"column_end":52},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":5667},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":378703,"byte_end":378714,"line_start":459,"line_end":459,"column_start":39,"column_end":50},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":5667},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":379087,"byte_end":379102,"line_start":476,"line_end":476,"column_start":10,"column_end":25},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":5677},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":380413,"byte_end":380428,"line_start":513,"line_end":513,"column_start":23,"column_end":38},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":5677},"to":{"krate":1,"index":4965}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":380643,"byte_end":380658,"line_start":524,"line_end":524,"column_start":34,"column_end":49},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":5677},"to":{"krate":1,"index":4897}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":381280,"byte_end":381296,"line_start":550,"line_end":550,"column_start":11,"column_end":27},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":5685},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":381495,"byte_end":381511,"line_start":557,"line_end":557,"column_start":45,"column_end":61},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":5685},"to":{"krate":1,"index":4965}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":382181,"byte_end":382190,"line_start":586,"line_end":586,"column_start":6,"column_end":15},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":5691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":383840,"byte_end":383856,"line_start":636,"line_end":636,"column_start":23,"column_end":39},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":5710},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":384016,"byte_end":384032,"line_start":643,"line_end":643,"column_start":28,"column_end":44},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":5710},"to":{"krate":4,"index":1642}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":384068,"byte_end":384084,"line_start":645,"line_end":645,"column_start":31,"column_end":47},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":5710},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":384211,"byte_end":384220,"line_start":651,"line_end":651,"column_start":33,"column_end":42},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":6317},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/parsed.rs","byte_start":384670,"byte_end":384680,"line_start":665,"line_end":665,"column_start":33,"column_end":43},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":6299},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":402112,"byte_end":402125,"line_start":42,"line_end":42,"column_start":14,"column_end":27},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":5730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":403823,"byte_end":403836,"line_start":87,"line_end":87,"column_start":6,"column_end":19},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":5730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":405187,"byte_end":405200,"line_start":130,"line_end":130,"column_start":6,"column_end":19},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":5730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":405507,"byte_end":405520,"line_start":143,"line_end":143,"column_start":6,"column_end":19},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":5730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":405810,"byte_end":405823,"line_start":156,"line_end":156,"column_start":6,"column_end":19},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":5730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":406133,"byte_end":406146,"line_start":171,"line_end":171,"column_start":22,"column_end":35},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":5730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":407027,"byte_end":407040,"line_start":201,"line_end":201,"column_start":14,"column_end":27},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":5730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":409030,"byte_end":409043,"line_start":260,"line_end":260,"column_start":36,"column_end":49},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":5730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":416416,"byte_end":416429,"line_start":459,"line_end":459,"column_start":27,"column_end":40},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":5730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":419684,"byte_end":419697,"line_start":558,"line_end":558,"column_start":37,"column_end":50},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":5730},"to":{"krate":1,"index":2074}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":419849,"byte_end":419862,"line_start":566,"line_end":566,"column_start":57,"column_end":70},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":5730},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":420012,"byte_end":420025,"line_start":575,"line_end":575,"column_start":38,"column_end":51},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":5730},"to":{"krate":0,"index":1894}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":420308,"byte_end":420321,"line_start":588,"line_end":588,"column_start":56,"column_end":69},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":5730},"to":{"krate":0,"index":1930}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":420556,"byte_end":420569,"line_start":601,"line_end":601,"column_start":48,"column_end":61},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":5730},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":421347,"byte_end":421360,"line_start":638,"line_end":638,"column_start":34,"column_end":47},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":5730},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":421560,"byte_end":421573,"line_start":648,"line_end":648,"column_start":43,"column_end":56},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":5730},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":421648,"byte_end":421661,"line_start":653,"line_end":653,"column_start":35,"column_end":48},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":5730},"to":{"krate":1,"index":1669}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":421895,"byte_end":421908,"line_start":663,"line_end":663,"column_start":44,"column_end":57},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":5730},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":422071,"byte_end":422084,"line_start":672,"line_end":672,"column_start":51,"column_end":64},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":5730},"to":{"krate":1,"index":6364}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":422308,"byte_end":422321,"line_start":683,"line_end":683,"column_start":53,"column_end":66},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":5730},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":422711,"byte_end":422724,"line_start":698,"line_end":698,"column_start":51,"column_end":64},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":5730},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":423070,"byte_end":423079,"line_start":713,"line_end":713,"column_start":10,"column_end":19},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":5737},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":423194,"byte_end":423203,"line_start":719,"line_end":719,"column_start":23,"column_end":32},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":5737},"to":{"krate":1,"index":4965}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":423514,"byte_end":423523,"line_start":732,"line_end":732,"column_start":34,"column_end":43},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":5737},"to":{"krate":1,"index":4897}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":424709,"byte_end":424727,"line_start":779,"line_end":779,"column_start":31,"column_end":49},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":5746},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":424855,"byte_end":424873,"line_start":785,"line_end":785,"column_start":32,"column_end":50},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":5746},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":425237,"byte_end":425255,"line_start":798,"line_end":798,"column_start":23,"column_end":41},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":5746},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":425878,"byte_end":425896,"line_start":816,"line_end":816,"column_start":28,"column_end":46},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":5746},"to":{"krate":4,"index":1642}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":426181,"byte_end":426197,"line_start":828,"line_end":828,"column_start":23,"column_end":39},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":5770},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/relative.rs","byte_start":426359,"byte_end":426375,"line_start":835,"line_end":835,"column_start":28,"column_end":44},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":5770},"to":{"krate":4,"index":1642}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":453204,"byte_end":453211,"line_start":104,"line_end":104,"column_start":20,"column_end":27},"kind":"SuperTrait","from":{"krate":0,"index":2298},"to":{"krate":0,"index":1909}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":453222,"byte_end":453233,"line_start":104,"line_end":104,"column_start":38,"column_end":49},"kind":"SuperTrait","from":{"krate":0,"index":1894},"to":{"krate":0,"index":1909}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":461049,"byte_end":461056,"line_start":302,"line_end":302,"column_start":28,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":2298},"to":{"krate":0,"index":1930}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":461067,"byte_end":461078,"line_start":302,"line_end":302,"column_start":46,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":1894},"to":{"krate":0,"index":1930}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":466485,"byte_end":466492,"line_start":451,"line_end":451,"column_start":26,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":2298},"to":{"krate":0,"index":1950}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":466503,"byte_end":466514,"line_start":451,"line_end":451,"column_start":44,"column_end":55},"kind":"SuperTrait","from":{"krate":0,"index":1894},"to":{"krate":0,"index":1950}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/traits.rs","byte_start":466585,"byte_end":466586,"line_start":453,"line_end":453,"column_start":62,"column_end":63},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":1953},"to":{"krate":0,"index":1950}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":467813,"byte_end":467827,"line_start":37,"line_end":37,"column_start":14,"column_end":28},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":5783},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":469787,"byte_end":469801,"line_start":93,"line_end":93,"column_start":6,"column_end":20},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":5783},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":470115,"byte_end":470129,"line_start":106,"line_end":106,"column_start":6,"column_end":20},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":5783},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":470423,"byte_end":470437,"line_start":119,"line_end":119,"column_start":6,"column_end":20},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":5783},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":470720,"byte_end":470734,"line_start":131,"line_end":131,"column_start":14,"column_end":28},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":5783},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":474170,"byte_end":474184,"line_start":243,"line_end":243,"column_start":38,"column_end":52},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":5783},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":474329,"byte_end":474343,"line_start":249,"line_end":249,"column_start":46,"column_end":60},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":5783},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":474497,"byte_end":474511,"line_start":258,"line_end":258,"column_start":31,"column_end":45},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":5783},"to":{"krate":1,"index":7699}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":474787,"byte_end":474801,"line_start":273,"line_end":273,"column_start":40,"column_end":54},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":5783},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":475095,"byte_end":475109,"line_start":286,"line_end":286,"column_start":5,"column_end":19},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":5783},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":475483,"byte_end":475497,"line_start":299,"line_end":299,"column_start":34,"column_end":48},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":5783},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":475565,"byte_end":475579,"line_start":304,"line_end":304,"column_start":42,"column_end":56},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":5783},"to":{"krate":1,"index":6364}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":475802,"byte_end":475816,"line_start":315,"line_end":315,"column_start":51,"column_end":65},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":5783},"to":{"krate":0,"index":1894}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":476389,"byte_end":476403,"line_start":341,"line_end":341,"column_start":39,"column_end":53},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":5783},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":479002,"byte_end":479016,"line_start":423,"line_end":423,"column_start":44,"column_end":58},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":5783},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/name/uncertain.rs","byte_start":479294,"byte_end":479308,"line_start":432,"line_end":432,"column_start":42,"column_end":56},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":5783},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":496381,"byte_end":496386,"line_start":165,"line_end":165,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":1814},"to":{"krate":0,"index":2088}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":496774,"byte_end":496777,"line_start":181,"line_end":181,"column_start":24,"column_end":27},"kind":{"Impl":{"id":393}},"from":{"krate":5,"index":339},"to":{"krate":0,"index":2088}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":497071,"byte_end":497074,"line_start":193,"line_end":193,"column_start":20,"column_end":23},"kind":{"Impl":{"id":394}},"from":{"krate":5,"index":4209},"to":{"krate":0,"index":2088}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":497203,"byte_end":497208,"line_start":200,"line_end":200,"column_start":20,"column_end":25},"kind":{"Impl":{"id":395}},"from":{"krate":15,"index":341},"to":{"krate":0,"index":2088}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":497357,"byte_end":497365,"line_start":207,"line_end":207,"column_start":41,"column_end":49},"kind":{"Impl":{"id":396}},"from":{"krate":16,"index":116},"to":{"krate":0,"index":2088}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":498910,"byte_end":498915,"line_start":240,"line_end":240,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":1814},"to":{"krate":0,"index":2103}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":498924,"byte_end":498928,"line_start":240,"line_end":240,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":1,"index":1913},"to":{"krate":0,"index":2103}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":498931,"byte_end":498936,"line_start":240,"line_end":240,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":1,"index":1908},"to":{"krate":0,"index":2103}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":501289,"byte_end":501294,"line_start":327,"line_end":327,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":1814},"to":{"krate":0,"index":2136}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":501303,"byte_end":501308,"line_start":327,"line_end":327,"column_start":40,"column_end":45},"kind":"SuperTrait","from":{"krate":1,"index":1817},"to":{"krate":0,"index":2136}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":501317,"byte_end":501322,"line_start":327,"line_end":327,"column_start":54,"column_end":59},"kind":"SuperTrait","from":{"krate":1,"index":1908},"to":{"krate":0,"index":2136}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":505705,"byte_end":505708,"line_start":449,"line_end":449,"column_start":24,"column_end":27},"kind":{"Impl":{"id":397}},"from":{"krate":5,"index":4209},"to":{"krate":0,"index":2136}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":505977,"byte_end":505985,"line_start":461,"line_end":461,"column_start":24,"column_end":32},"kind":{"Impl":{"id":398}},"from":{"krate":15,"index":535},"to":{"krate":0,"index":2136}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":506282,"byte_end":506290,"line_start":474,"line_end":474,"column_start":45,"column_end":53},"kind":{"Impl":{"id":399}},"from":{"krate":16,"index":116},"to":{"krate":0,"index":2136}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":507279,"byte_end":507282,"line_start":504,"line_end":504,"column_start":23,"column_end":26},"kind":{"Impl":{"id":400}},"from":{"krate":5,"index":4209},"to":{"krate":0,"index":2164}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":507480,"byte_end":507488,"line_start":515,"line_end":515,"column_start":23,"column_end":31},"kind":{"Impl":{"id":401}},"from":{"krate":15,"index":535},"to":{"krate":0,"index":2164}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":507718,"byte_end":507726,"line_start":526,"line_end":526,"column_start":44,"column_end":52},"kind":{"Impl":{"id":402}},"from":{"krate":16,"index":116},"to":{"krate":0,"index":2164}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":508460,"byte_end":508463,"line_start":554,"line_end":554,"column_start":21,"column_end":24},"kind":{"Impl":{"id":403}},"from":{"krate":5,"index":4209},"to":{"krate":0,"index":2177}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":508604,"byte_end":508612,"line_start":563,"line_end":563,"column_start":21,"column_end":29},"kind":{"Impl":{"id":404}},"from":{"krate":15,"index":535},"to":{"krate":0,"index":2177}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":508785,"byte_end":508793,"line_start":572,"line_end":572,"column_start":42,"column_end":50},"kind":{"Impl":{"id":405}},"from":{"krate":16,"index":116},"to":{"krate":0,"index":2177}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":509494,"byte_end":509497,"line_start":598,"line_end":598,"column_start":22,"column_end":25},"kind":{"Impl":{"id":406}},"from":{"krate":5,"index":4209},"to":{"krate":0,"index":2190}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":509809,"byte_end":509812,"line_start":616,"line_end":616,"column_start":26,"column_end":29},"kind":{"Impl":{"id":407}},"from":{"krate":5,"index":339},"to":{"krate":0,"index":2190}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":509979,"byte_end":509984,"line_start":625,"line_end":625,"column_start":22,"column_end":27},"kind":{"Impl":{"id":408}},"from":{"krate":15,"index":341},"to":{"krate":0,"index":2190}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":510379,"byte_end":510387,"line_start":637,"line_end":637,"column_start":43,"column_end":51},"kind":{"Impl":{"id":409}},"from":{"krate":16,"index":116},"to":{"krate":0,"index":2190}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":510895,"byte_end":510900,"line_start":655,"line_end":655,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":1814},"to":{"krate":0,"index":2211}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":510909,"byte_end":510914,"line_start":655,"line_end":655,"column_start":38,"column_end":43},"kind":"SuperTrait","from":{"krate":1,"index":1908},"to":{"krate":0,"index":2211}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":511202,"byte_end":511205,"line_start":664,"line_end":664,"column_start":22,"column_end":25},"kind":{"Impl":{"id":410}},"from":{"krate":5,"index":4209},"to":{"krate":0,"index":2211}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":511353,"byte_end":511358,"line_start":673,"line_end":673,"column_start":22,"column_end":27},"kind":{"Impl":{"id":411}},"from":{"krate":15,"index":341},"to":{"krate":0,"index":2211}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":511550,"byte_end":511558,"line_start":682,"line_end":682,"column_start":43,"column_end":51},"kind":{"Impl":{"id":412}},"from":{"krate":16,"index":116},"to":{"krate":0,"index":2211}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":512595,"byte_end":512601,"line_start":718,"line_end":718,"column_start":11,"column_end":17},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":5794},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":513600,"byte_end":513606,"line_start":754,"line_end":754,"column_start":6,"column_end":12},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":5794},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":513854,"byte_end":513860,"line_start":763,"line_end":763,"column_start":24,"column_end":30},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":5794},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":516266,"byte_end":516272,"line_start":846,"line_end":846,"column_start":24,"column_end":30},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":5794},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":522673,"byte_end":522678,"line_start":1015,"line_end":1015,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":1908},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":525163,"byte_end":525171,"line_start":1092,"line_end":1092,"column_start":35,"column_end":43},"kind":{"Impl":{"id":423}},"from":{"krate":4,"index":6810},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":525561,"byte_end":525569,"line_start":1107,"line_end":1107,"column_start":35,"column_end":43},"kind":{"Impl":{"id":424}},"from":{"krate":4,"index":6813},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529192,"byte_end":529200,"line_start":1234,"line_end":1234,"column_start":18,"column_end":26},"kind":{"Impl":{"id":431}},"from":{"krate":4,"index":6810},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":529377,"byte_end":529385,"line_start":1243,"line_end":1243,"column_start":18,"column_end":26},"kind":{"Impl":{"id":432}},"from":{"krate":4,"index":6813},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":535784,"byte_end":535792,"line_start":1475,"line_end":1475,"column_start":23,"column_end":31},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":6287},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":535958,"byte_end":535966,"line_start":1482,"line_end":1482,"column_start":28,"column_end":36},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":6287},"to":{"krate":4,"index":1642}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":536308,"byte_end":536318,"line_start":1497,"line_end":1497,"column_start":6,"column_end":16},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":6299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":536528,"byte_end":536538,"line_start":1507,"line_end":1507,"column_start":26,"column_end":36},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":6299},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":536666,"byte_end":536676,"line_start":1516,"line_end":1516,"column_start":23,"column_end":33},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":6299},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":536992,"byte_end":537002,"line_start":1528,"line_end":1528,"column_start":28,"column_end":38},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":6299},"to":{"krate":4,"index":1642}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":537397,"byte_end":537406,"line_start":1541,"line_end":1541,"column_start":6,"column_end":15},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":6317},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":537607,"byte_end":537616,"line_start":1551,"line_end":1551,"column_start":23,"column_end":32},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":6317},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/octets.rs","byte_start":537766,"byte_end":537775,"line_start":1558,"line_end":1558,"column_start":28,"column_end":37},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":6317},"to":{"krate":4,"index":1642}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc5001.rs","byte_start":9143006,"byte_end":9143010,"line_start":22,"line_end":22,"column_start":14,"column_end":18},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":6669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc5001.rs","byte_start":9143108,"byte_end":9143112,"line_start":28,"line_end":28,"column_start":6,"column_end":10},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":6669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc5001.rs","byte_start":9143517,"byte_end":9143521,"line_start":41,"line_end":41,"column_start":37,"column_end":41},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":6669},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc5001.rs","byte_start":9143858,"byte_end":9143862,"line_start":53,"line_end":53,"column_start":30,"column_end":34},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":6669},"to":{"krate":0,"index":2484}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc5001.rs","byte_start":9143962,"byte_end":9143966,"line_start":58,"line_end":58,"column_start":39,"column_end":43},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":6669},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc5001.rs","byte_start":9144254,"byte_end":9144258,"line_start":68,"line_end":68,"column_start":44,"column_end":48},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":6669},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc6975.rs","byte_start":9147497,"byte_end":9147508,"line_start":102,"line_end":102,"column_start":10,"column_end":21},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":6394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc6975.rs","byte_start":9147618,"byte_end":9147629,"line_start":108,"line_end":108,"column_start":23,"column_end":34},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":6394},"to":{"krate":1,"index":4965}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7314.rs","byte_start":9148191,"byte_end":9148197,"line_start":16,"line_end":16,"column_start":6,"column_end":12},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":6883},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7314.rs","byte_start":9148595,"byte_end":9148601,"line_start":36,"line_end":36,"column_start":39,"column_end":45},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":6883},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7314.rs","byte_start":9149064,"byte_end":9149070,"line_start":56,"line_end":56,"column_start":18,"column_end":24},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":6883},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7314.rs","byte_start":9149322,"byte_end":9149328,"line_start":71,"line_end":71,"column_start":22,"column_end":28},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":6883},"to":{"krate":0,"index":2484}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7828.rs","byte_start":9149804,"byte_end":9149816,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":6909},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7828.rs","byte_start":9150201,"byte_end":9150213,"line_start":36,"line_end":36,"column_start":39,"column_end":51},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":6909},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7828.rs","byte_start":9150452,"byte_end":9150464,"line_start":46,"line_end":46,"column_start":18,"column_end":30},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":6909},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7828.rs","byte_start":9150652,"byte_end":9150664,"line_start":58,"line_end":58,"column_start":22,"column_end":34},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":6909},"to":{"krate":0,"index":2484}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7830.rs","byte_start":9151356,"byte_end":9151363,"line_start":29,"line_end":29,"column_start":6,"column_end":13},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":6954},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7830.rs","byte_start":9151919,"byte_end":9151926,"line_start":58,"line_end":58,"column_start":39,"column_end":46},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":6954},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7830.rs","byte_start":9152326,"byte_end":9152333,"line_start":72,"line_end":72,"column_start":18,"column_end":25},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":6954},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7830.rs","byte_start":9152928,"byte_end":9152935,"line_start":95,"line_end":95,"column_start":22,"column_end":29},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":6954},"to":{"krate":0,"index":2484}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7871.rs","byte_start":9153523,"byte_end":9153535,"line_start":21,"line_end":21,"column_start":6,"column_end":18},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":6972},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7871.rs","byte_start":9154263,"byte_end":9154275,"line_start":47,"line_end":47,"column_start":39,"column_end":51},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":6972},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7871.rs","byte_start":9156318,"byte_end":9156330,"line_start":104,"line_end":104,"column_start":18,"column_end":30},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":6972},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7871.rs","byte_start":9157299,"byte_end":9157311,"line_start":136,"line_end":136,"column_start":22,"column_end":34},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":6972},"to":{"krate":0,"index":2484}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7873.rs","byte_start":9157791,"byte_end":9157797,"line_start":16,"line_end":16,"column_start":6,"column_end":12},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":7007},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7873.rs","byte_start":9158186,"byte_end":9158192,"line_start":36,"line_end":36,"column_start":39,"column_end":45},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":7007},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7873.rs","byte_start":9158490,"byte_end":9158496,"line_start":49,"line_end":49,"column_start":18,"column_end":24},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":7007},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7873.rs","byte_start":9158690,"byte_end":9158696,"line_start":61,"line_end":61,"column_start":22,"column_end":28},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":7007},"to":{"krate":0,"index":2484}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7901.rs","byte_start":9159316,"byte_end":9159321,"line_start":21,"line_end":21,"column_start":14,"column_end":19},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":7036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7901.rs","byte_start":9159963,"byte_end":9159968,"line_start":48,"line_end":48,"column_start":37,"column_end":42},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":7036},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7901.rs","byte_start":9160244,"byte_end":9160249,"line_start":58,"line_end":58,"column_start":39,"column_end":44},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":7036},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc7901.rs","byte_start":9160457,"byte_end":9160462,"line_start":70,"line_end":70,"column_start":30,"column_end":35},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":7036},"to":{"krate":0,"index":2484}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc8145.rs","byte_start":9161004,"byte_end":9161010,"line_start":20,"line_end":20,"column_start":14,"column_end":20},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":7042},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc8145.rs","byte_start":9161751,"byte_end":9161757,"line_start":50,"line_end":50,"column_start":37,"column_end":43},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":7042},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc8145.rs","byte_start":9162373,"byte_end":9162379,"line_start":72,"line_end":72,"column_start":39,"column_end":45},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":7042},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc8145.rs","byte_start":9162602,"byte_end":9162608,"line_start":84,"line_end":84,"column_start":30,"column_end":36},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":7042},"to":{"krate":0,"index":2484}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/rfc8145.rs","byte_start":9163061,"byte_end":9163071,"line_start":106,"line_end":106,"column_start":23,"column_end":33},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":7066},"to":{"krate":1,"index":4965}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":545628,"byte_end":545631,"line_start":78,"line_end":78,"column_start":27,"column_end":30},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":7119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":546646,"byte_end":546649,"line_start":109,"line_end":109,"column_start":47,"column_end":50},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":7119},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":546850,"byte_end":546853,"line_start":116,"line_end":116,"column_start":34,"column_end":37},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":7119},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":546941,"byte_end":546944,"line_start":121,"line_end":121,"column_start":48,"column_end":51},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":7119},"to":{"krate":1,"index":1669}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":547176,"byte_end":547179,"line_start":128,"line_end":128,"column_start":35,"column_end":38},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":7119},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":547355,"byte_end":547358,"line_start":137,"line_end":137,"column_start":42,"column_end":45},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":7119},"to":{"krate":1,"index":6364}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":547534,"byte_end":547537,"line_start":146,"line_end":146,"column_start":37,"column_end":40},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":7119},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":547880,"byte_end":547883,"line_start":158,"line_end":158,"column_start":39,"column_end":42},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":7119},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":548114,"byte_end":548117,"line_start":170,"line_end":170,"column_start":34,"column_end":37},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":7119},"to":{"krate":0,"index":2550}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":548227,"byte_end":548230,"line_start":177,"line_end":177,"column_start":44,"column_end":47},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":7119},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":548422,"byte_end":548425,"line_start":184,"line_end":184,"column_start":42,"column_end":45},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":7119},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":549792,"byte_end":549801,"line_start":219,"line_end":219,"column_start":6,"column_end":15},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":7125},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":552631,"byte_end":552640,"line_start":299,"line_end":299,"column_start":18,"column_end":27},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":7125},"to":{"krate":1,"index":1893}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":552754,"byte_end":552763,"line_start":305,"line_end":305,"column_start":18,"column_end":27},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":7125},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":553812,"byte_end":553821,"line_start":347,"line_end":347,"column_start":14,"column_end":23},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":7142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":555856,"byte_end":555865,"line_start":406,"line_end":406,"column_start":59,"column_end":68},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":7142},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":556025,"byte_end":556034,"line_start":415,"line_end":415,"column_start":29,"column_end":38},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":7142},"to":{"krate":1,"index":2074}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":556179,"byte_end":556188,"line_start":423,"line_end":423,"column_start":37,"column_end":46},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":7142},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":556773,"byte_end":556785,"line_start":447,"line_end":447,"column_start":6,"column_end":18},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":7152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":557196,"byte_end":557208,"line_start":467,"line_end":467,"column_start":45,"column_end":57},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":7152},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":557483,"byte_end":557495,"line_start":477,"line_end":477,"column_start":18,"column_end":30},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":7152},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":558526,"byte_end":558533,"line_start":508,"line_end":508,"column_start":44,"column_end":51},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":7160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":559273,"byte_end":559280,"line_start":528,"line_end":528,"column_start":30,"column_end":37},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":7160},"to":{"krate":1,"index":4965}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":560285,"byte_end":560292,"line_start":559,"line_end":559,"column_start":20,"column_end":27},"kind":"SuperTrait","from":{"krate":0,"index":2298},"to":{"krate":0,"index":2479}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":560295,"byte_end":560300,"line_start":559,"line_end":559,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":1908},"to":{"krate":0,"index":2479}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":560573,"byte_end":560580,"line_start":568,"line_end":568,"column_start":33,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":2479},"to":{"krate":0,"index":2481}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":562102,"byte_end":562103,"line_start":607,"line_end":607,"column_start":44,"column_end":45},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":2487},"to":{"krate":0,"index":2479}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":562210,"byte_end":562211,"line_start":613,"line_end":613,"column_start":42,"column_end":43},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":2491},"to":{"krate":0,"index":2481}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":562914,"byte_end":562928,"line_start":643,"line_end":643,"column_start":14,"column_end":28},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":7173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":563830,"byte_end":563844,"line_start":680,"line_end":680,"column_start":29,"column_end":43},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":7173},"to":{"krate":1,"index":2074}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":563981,"byte_end":563995,"line_start":688,"line_end":688,"column_start":32,"column_end":46},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":7173},"to":{"krate":1,"index":2087}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":564145,"byte_end":564159,"line_start":697,"line_end":697,"column_start":32,"column_end":46},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":7173},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":564264,"byte_end":564278,"line_start":703,"line_end":703,"column_start":32,"column_end":46},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":7173},"to":{"krate":1,"index":1817}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":564406,"byte_end":564420,"line_start":709,"line_end":709,"column_start":43,"column_end":57},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":7173},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":564538,"byte_end":564552,"line_start":715,"line_end":715,"column_start":43,"column_end":57},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":7173},"to":{"krate":1,"index":1817}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":564694,"byte_end":564708,"line_start":724,"line_end":724,"column_start":39,"column_end":53},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":7173},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":564934,"byte_end":564948,"line_start":736,"line_end":736,"column_start":39,"column_end":53},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":7173},"to":{"krate":0,"index":2479}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/opt/mod.rs","byte_start":565061,"byte_end":565075,"line_start":742,"line_end":742,"column_start":41,"column_end":55},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":7173},"to":{"krate":0,"index":2481}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":571103,"byte_end":571110,"line_start":49,"line_end":49,"column_start":23,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":2298},"to":{"krate":0,"index":2545}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":571113,"byte_end":571118,"line_start":49,"line_end":49,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":1,"index":1908},"to":{"krate":0,"index":2545}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":571826,"byte_end":571836,"line_start":67,"line_end":67,"column_start":33,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":2545},"to":{"krate":0,"index":2547}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":573615,"byte_end":573616,"line_start":110,"line_end":110,"column_start":59,"column_end":60},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":2553},"to":{"krate":0,"index":2545}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":573711,"byte_end":573712,"line_start":114,"line_end":114,"column_start":45,"column_end":46},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":2557},"to":{"krate":0,"index":2547}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":575454,"byte_end":575471,"line_start":164,"line_end":164,"column_start":14,"column_end":31},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":7183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":577457,"byte_end":577474,"line_start":226,"line_end":226,"column_start":5,"column_end":22},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":7183},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":577685,"byte_end":577702,"line_start":233,"line_end":233,"column_start":34,"column_end":51},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":7183},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":577819,"byte_end":577836,"line_start":239,"line_end":239,"column_start":5,"column_end":22},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":7183},"to":{"krate":1,"index":1669}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":578129,"byte_end":578146,"line_start":250,"line_end":250,"column_start":5,"column_end":22},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":7183},"to":{"krate":0,"index":238}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":578374,"byte_end":578391,"line_start":257,"line_end":257,"column_start":35,"column_end":52},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":7183},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":578577,"byte_end":578594,"line_start":266,"line_end":266,"column_start":39,"column_end":56},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":7183},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":578846,"byte_end":578863,"line_start":278,"line_end":278,"column_start":42,"column_end":59},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":7183},"to":{"krate":0,"index":2545}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":578976,"byte_end":578993,"line_start":284,"line_end":284,"column_start":44,"column_end":61},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":7183},"to":{"krate":0,"index":2547}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":579397,"byte_end":579414,"line_start":300,"line_end":300,"column_start":44,"column_end":61},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":7183},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/rdata.rs","byte_start":579707,"byte_end":579724,"line_start":313,"line_end":313,"column_start":42,"column_end":59},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":7183},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":584131,"byte_end":584137,"line_start":99,"line_end":99,"column_start":18,"column_end":24},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":7190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":585956,"byte_end":585962,"line_start":172,"line_end":172,"column_start":41,"column_end":47},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":7190},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":586125,"byte_end":586131,"line_start":178,"line_end":178,"column_start":34,"column_end":40},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":7190},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":586325,"byte_end":586331,"line_start":187,"line_end":187,"column_start":50,"column_end":56},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":7190},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":586615,"byte_end":586621,"line_start":196,"line_end":196,"column_start":40,"column_end":46},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":7190},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":586725,"byte_end":586731,"line_start":201,"line_end":201,"column_start":51,"column_end":57},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":7190},"to":{"krate":1,"index":1669}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":587223,"byte_end":587229,"line_start":216,"line_end":216,"column_start":20,"column_end":26},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":7190},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":587654,"byte_end":587660,"line_start":231,"line_end":231,"column_start":53,"column_end":59},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":7190},"to":{"krate":0,"index":238}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":588460,"byte_end":588466,"line_start":256,"line_end":256,"column_start":33,"column_end":39},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":7190},"to":{"krate":1,"index":6364}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":588774,"byte_end":588780,"line_start":269,"line_end":269,"column_start":32,"column_end":38},"kind":{"Impl":{"id":536}},"from":{"krate":1,"index":29905},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":589186,"byte_end":589192,"line_start":281,"line_end":281,"column_start":45,"column_end":51},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":7190},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":590142,"byte_end":590148,"line_start":314,"line_end":314,"column_start":35,"column_end":41},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":7190},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":590466,"byte_end":590472,"line_start":325,"line_end":325,"column_start":33,"column_end":39},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":7190},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":593368,"byte_end":593374,"line_start":414,"line_end":414,"column_start":52,"column_end":58},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":7190},"to":{"krate":0,"index":2700}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":594820,"byte_end":594832,"line_start":464,"line_end":464,"column_start":12,"column_end":24},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":7201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":595109,"byte_end":595121,"line_start":477,"line_end":477,"column_start":12,"column_end":24},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":7201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":595659,"byte_end":595671,"line_start":494,"line_end":494,"column_start":6,"column_end":18},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":7201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":596043,"byte_end":596055,"line_start":507,"line_end":507,"column_start":22,"column_end":34},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":7201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":597124,"byte_end":597136,"line_start":536,"line_end":536,"column_start":12,"column_end":24},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":7201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":597942,"byte_end":597954,"line_start":571,"line_end":571,"column_start":54,"column_end":66},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":7201},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":598276,"byte_end":598288,"line_start":582,"line_end":582,"column_start":28,"column_end":40},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":7201},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":598445,"byte_end":598457,"line_start":589,"line_end":589,"column_start":55,"column_end":67},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":7201},"to":{"krate":1,"index":1669}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":599206,"byte_end":599218,"line_start":612,"line_end":612,"column_start":29,"column_end":41},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":7201},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":599867,"byte_end":599879,"line_start":637,"line_end":637,"column_start":39,"column_end":51},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":7201},"to":{"krate":1,"index":6364}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":600170,"byte_end":600182,"line_start":650,"line_end":650,"column_start":37,"column_end":49},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":7201},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":600770,"byte_end":600782,"line_start":671,"line_end":671,"column_start":33,"column_end":45},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":7201},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":601549,"byte_end":601561,"line_start":702,"line_end":702,"column_start":39,"column_end":51},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":7201},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":602838,"byte_end":602850,"line_start":741,"line_end":741,"column_start":11,"column_end":23},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":7211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":603809,"byte_end":603821,"line_start":779,"line_end":779,"column_start":22,"column_end":34},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":7211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":605623,"byte_end":605635,"line_start":820,"line_end":820,"column_start":59,"column_end":71},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":7211},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":605947,"byte_end":605959,"line_start":830,"line_end":830,"column_start":29,"column_end":41},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":7211},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":606100,"byte_end":606112,"line_start":838,"line_end":838,"column_start":37,"column_end":49},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":7211},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":606779,"byte_end":606795,"line_start":863,"line_end":863,"column_start":29,"column_end":45},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":7218},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":607236,"byte_end":607252,"line_start":877,"line_end":877,"column_start":34,"column_end":50},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":7218},"to":{"krate":4,"index":1642}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/record.rs","byte_start":607343,"byte_end":607359,"line_start":880,"line_end":880,"column_start":31,"column_end":47},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":7218},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":608800,"byte_end":608808,"line_start":45,"line_end":45,"column_start":18,"column_end":26},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":7255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":609325,"byte_end":609333,"line_start":65,"line_end":65,"column_start":18,"column_end":26},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":7255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":609738,"byte_end":609746,"line_start":85,"line_end":85,"column_start":46,"column_end":54},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":7255},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":609904,"byte_end":609912,"line_start":91,"line_end":91,"column_start":39,"column_end":47},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":7255},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":610087,"byte_end":610095,"line_start":100,"line_end":100,"column_start":41,"column_end":49},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":7255},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":610330,"byte_end":610338,"line_start":109,"line_end":109,"column_start":25,"column_end":33},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":7255},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":610430,"byte_end":610438,"line_start":114,"line_end":114,"column_start":42,"column_end":50},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":7255},"to":{"krate":1,"index":1669}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":610916,"byte_end":610924,"line_start":129,"line_end":129,"column_start":44,"column_end":52},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":7255},"to":{"krate":0,"index":238}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":611364,"byte_end":611372,"line_start":144,"line_end":144,"column_start":26,"column_end":34},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":7255},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":611773,"byte_end":611781,"line_start":161,"line_end":161,"column_start":36,"column_end":44},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":7255},"to":{"krate":1,"index":6364}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":612008,"byte_end":612016,"line_start":172,"line_end":172,"column_start":37,"column_end":45},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":7255},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":612475,"byte_end":612483,"line_start":189,"line_end":189,"column_start":30,"column_end":38},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":7255},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":613175,"byte_end":613183,"line_start":216,"line_end":216,"column_start":40,"column_end":48},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":7255},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":613362,"byte_end":613370,"line_start":222,"line_end":222,"column_start":36,"column_end":44},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":7255},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/question.rs","byte_start":616022,"byte_end":616030,"line_start":307,"line_end":307,"column_start":36,"column_end":44},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":7255},"to":{"krate":0,"index":2917}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":618657,"byte_end":618663,"line_start":50,"line_end":50,"column_start":6,"column_end":12},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":7265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":623284,"byte_end":623290,"line_start":172,"line_end":172,"column_start":20,"column_end":26},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":7265},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":623639,"byte_end":623645,"line_start":191,"line_end":191,"column_start":23,"column_end":29},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":7265},"to":{"krate":1,"index":7699}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":623874,"byte_end":623880,"line_start":202,"line_end":202,"column_start":35,"column_end":41},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":7265},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":624116,"byte_end":624122,"line_start":212,"line_end":212,"column_start":18,"column_end":24},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":7265},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":624525,"byte_end":624531,"line_start":232,"line_end":232,"column_start":23,"column_end":29},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":7265},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":624678,"byte_end":624684,"line_start":241,"line_end":241,"column_start":26,"column_end":32},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":7265},"to":{"krate":1,"index":1669}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/serial.rs","byte_start":625539,"byte_end":625545,"line_start":265,"line_end":265,"column_start":23,"column_end":29},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":7265},"to":{"krate":0,"index":238}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":628679,"byte_end":628685,"line_start":31,"line_end":31,"column_start":6,"column_end":12},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":7283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":633345,"byte_end":633351,"line_start":159,"line_end":159,"column_start":21,"column_end":27},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":7283},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":633460,"byte_end":633466,"line_start":168,"line_end":168,"column_start":23,"column_end":29},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":7283},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":634260,"byte_end":634271,"line_start":198,"line_end":198,"column_start":23,"column_end":34},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":7305},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":634604,"byte_end":634615,"line_start":210,"line_end":210,"column_start":28,"column_end":39},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":7305},"to":{"krate":4,"index":1642}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":634886,"byte_end":634895,"line_start":222,"line_end":222,"column_start":23,"column_end":32},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":7321},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/base/str.rs","byte_start":635069,"byte_end":635078,"line_start":229,"line_end":229,"column_start":28,"column_end":37},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":7321},"to":{"krate":4,"index":1642}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":668723,"byte_end":668724,"line_start":42,"line_end":42,"column_start":6,"column_end":7},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":7336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":669190,"byte_end":669191,"line_start":60,"line_end":60,"column_start":25,"column_end":26},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":7336},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":669282,"byte_end":669290,"line_start":66,"line_end":66,"column_start":18,"column_end":26},"kind":{"Impl":{"id":595}},"from":{"krate":4,"index":6810},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":669386,"byte_end":669387,"line_start":73,"line_end":73,"column_start":18,"column_end":19},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":7336},"to":{"krate":1,"index":7699}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":669582,"byte_end":669583,"line_start":84,"line_end":84,"column_start":23,"column_end":24},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":7336},"to":{"krate":0,"index":238}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":669745,"byte_end":669746,"line_start":93,"line_end":93,"column_start":45,"column_end":46},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":7336},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":670001,"byte_end":670002,"line_start":103,"line_end":103,"column_start":18,"column_end":19},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":7336},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":670441,"byte_end":670442,"line_start":123,"line_end":123,"column_start":23,"column_end":24},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":7336},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":670587,"byte_end":670588,"line_start":132,"line_end":132,"column_start":26,"column_end":27},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":7336},"to":{"krate":0,"index":2550}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":670676,"byte_end":670677,"line_start":139,"line_end":139,"column_start":21,"column_end":22},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":7336},"to":{"krate":1,"index":2074}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":670799,"byte_end":670800,"line_start":147,"line_end":147,"column_start":24,"column_end":25},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":7336},"to":{"krate":1,"index":2087}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":670935,"byte_end":670936,"line_start":156,"line_end":156,"column_start":26,"column_end":27},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":7336},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":671028,"byte_end":671029,"line_start":162,"line_end":162,"column_start":26,"column_end":27},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":7336},"to":{"krate":1,"index":1817}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":671841,"byte_end":671846,"line_start":196,"line_end":196,"column_start":14,"column_end":19},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":7421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":672311,"byte_end":672316,"line_start":216,"line_end":216,"column_start":49,"column_end":54},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":7421},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":672521,"byte_end":672526,"line_start":223,"line_end":223,"column_start":34,"column_end":39},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":7421},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":672631,"byte_end":672636,"line_start":228,"line_end":228,"column_start":50,"column_end":55},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":7421},"to":{"krate":1,"index":1669}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":672996,"byte_end":673001,"line_start":239,"line_end":239,"column_start":52,"column_end":57},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":7421},"to":{"krate":0,"index":238}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":673336,"byte_end":673341,"line_start":250,"line_end":250,"column_start":35,"column_end":40},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":7421},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":673612,"byte_end":673617,"line_start":263,"line_end":263,"column_start":42,"column_end":47},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":7421},"to":{"krate":1,"index":6364}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":673811,"byte_end":673816,"line_start":273,"line_end":273,"column_start":37,"column_end":42},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":7421},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":674171,"byte_end":674176,"line_start":285,"line_end":285,"column_start":39,"column_end":44},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":7421},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":674736,"byte_end":674741,"line_start":308,"line_end":308,"column_start":44,"column_end":49},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":7421},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":674921,"byte_end":674926,"line_start":317,"line_end":317,"column_start":42,"column_end":47},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":7421},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":675188,"byte_end":675193,"line_start":329,"line_end":329,"column_start":34,"column_end":39},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":7421},"to":{"krate":0,"index":2550}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":677452,"byte_end":677457,"line_start":410,"line_end":410,"column_start":9,"column_end":14},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":7672},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":678358,"byte_end":678363,"line_start":439,"line_end":439,"column_start":38,"column_end":43},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":7672},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":678571,"byte_end":678576,"line_start":447,"line_end":447,"column_start":25,"column_end":30},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":7672},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":678665,"byte_end":678670,"line_start":452,"line_end":452,"column_start":39,"column_end":44},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":7672},"to":{"krate":1,"index":1669}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":678998,"byte_end":679003,"line_start":463,"line_end":463,"column_start":26,"column_end":31},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":7672},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":679301,"byte_end":679306,"line_start":473,"line_end":473,"column_start":59,"column_end":64},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":7672},"to":{"krate":0,"index":238}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":679651,"byte_end":679656,"line_start":486,"line_end":486,"column_start":37,"column_end":42},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":7672},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":680058,"byte_end":680063,"line_start":501,"line_end":501,"column_start":30,"column_end":35},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":7672},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":680924,"byte_end":680929,"line_start":534,"line_end":534,"column_start":40,"column_end":45},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":7672},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":681107,"byte_end":681112,"line_start":543,"line_end":543,"column_start":29,"column_end":34},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":7672},"to":{"krate":0,"index":2550}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":681900,"byte_end":681902,"line_start":577,"line_end":577,"column_start":9,"column_end":11},"kind":{"Impl":{"id":628}},"from":{"krate":0,"index":7747},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":682471,"byte_end":682473,"line_start":600,"line_end":600,"column_start":35,"column_end":37},"kind":{"Impl":{"id":629}},"from":{"krate":0,"index":7747},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":682679,"byte_end":682681,"line_start":608,"line_end":608,"column_start":25,"column_end":27},"kind":{"Impl":{"id":630}},"from":{"krate":0,"index":7747},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":682767,"byte_end":682769,"line_start":613,"line_end":613,"column_start":36,"column_end":38},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":7747},"to":{"krate":1,"index":1669}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":683105,"byte_end":683107,"line_start":624,"line_end":624,"column_start":26,"column_end":28},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":7747},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":683405,"byte_end":683407,"line_start":634,"line_end":634,"column_start":56,"column_end":58},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":7747},"to":{"krate":0,"index":238}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":683738,"byte_end":683740,"line_start":647,"line_end":647,"column_start":37,"column_end":39},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":7747},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":684075,"byte_end":684077,"line_start":658,"line_end":658,"column_start":30,"column_end":32},"kind":{"Impl":{"id":635}},"from":{"krate":0,"index":7747},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":684917,"byte_end":684919,"line_start":691,"line_end":691,"column_start":40,"column_end":42},"kind":{"Impl":{"id":636}},"from":{"krate":0,"index":7747},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":685105,"byte_end":685107,"line_start":700,"line_end":700,"column_start":29,"column_end":31},"kind":{"Impl":{"id":637}},"from":{"krate":0,"index":7747},"to":{"krate":0,"index":2550}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":685813,"byte_end":685817,"line_start":730,"line_end":730,"column_start":14,"column_end":18},"kind":{"Impl":{"id":638}},"from":{"krate":0,"index":7822},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":686076,"byte_end":686080,"line_start":742,"line_end":742,"column_start":27,"column_end":31},"kind":{"Impl":{"id":639}},"from":{"krate":0,"index":7822},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":686291,"byte_end":686295,"line_start":755,"line_end":755,"column_start":31,"column_end":35},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":7822},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":686447,"byte_end":686451,"line_start":764,"line_end":764,"column_start":48,"column_end":52},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":7822},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":686649,"byte_end":686653,"line_start":771,"line_end":771,"column_start":34,"column_end":38},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":7822},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":686757,"byte_end":686761,"line_start":776,"line_end":776,"column_start":49,"column_end":53},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":7822},"to":{"krate":1,"index":1669}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":687006,"byte_end":687010,"line_start":783,"line_end":783,"column_start":51,"column_end":55},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":7822},"to":{"krate":0,"index":238}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":687225,"byte_end":687229,"line_start":790,"line_end":790,"column_start":35,"column_end":39},"kind":{"Impl":{"id":645}},"from":{"krate":0,"index":7822},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":687401,"byte_end":687405,"line_start":799,"line_end":799,"column_start":42,"column_end":46},"kind":{"Impl":{"id":646}},"from":{"krate":0,"index":7822},"to":{"krate":1,"index":6364}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":687582,"byte_end":687586,"line_start":808,"line_end":808,"column_start":37,"column_end":41},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":7822},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":687924,"byte_end":687928,"line_start":820,"line_end":820,"column_start":39,"column_end":43},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":7822},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":688157,"byte_end":688161,"line_start":832,"line_end":832,"column_start":34,"column_end":38},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":7822},"to":{"krate":0,"index":2550}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":688255,"byte_end":688259,"line_start":839,"line_end":839,"column_start":29,"column_end":33},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":7822},"to":{"krate":1,"index":2074}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":688429,"byte_end":688433,"line_start":850,"line_end":850,"column_start":52,"column_end":56},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":7822},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":688582,"byte_end":688586,"line_start":859,"line_end":859,"column_start":44,"column_end":48},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":7822},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":688872,"byte_end":688876,"line_start":869,"line_end":869,"column_start":42,"column_end":46},"kind":{"Impl":{"id":653}},"from":{"krate":0,"index":7822},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":689396,"byte_end":689399,"line_start":890,"line_end":890,"column_start":9,"column_end":12},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":7880},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":689940,"byte_end":689943,"line_start":916,"line_end":916,"column_start":9,"column_end":12},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":7889},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":691138,"byte_end":691141,"line_start":962,"line_end":962,"column_start":36,"column_end":39},"kind":{"Impl":{"id":656}},"from":{"krate":0,"index":7889},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":691520,"byte_end":691523,"line_start":973,"line_end":973,"column_start":25,"column_end":28},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":7889},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":691610,"byte_end":691613,"line_start":978,"line_end":978,"column_start":37,"column_end":40},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":7889},"to":{"krate":1,"index":1669}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":692649,"byte_end":692652,"line_start":1009,"line_end":1009,"column_start":26,"column_end":29},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":7889},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":693594,"byte_end":693597,"line_start":1039,"line_end":1039,"column_start":57,"column_end":60},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":7889},"to":{"krate":0,"index":238}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":694574,"byte_end":694577,"line_start":1072,"line_end":1072,"column_start":37,"column_end":40},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":7889},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":695290,"byte_end":695293,"line_start":1097,"line_end":1097,"column_start":30,"column_end":33},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":7889},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":696688,"byte_end":696691,"line_start":1143,"line_end":1143,"column_start":40,"column_end":43},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":7889},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":696976,"byte_end":696979,"line_start":1154,"line_end":1154,"column_start":29,"column_end":32},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":7889},"to":{"krate":0,"index":2550}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":697313,"byte_end":697316,"line_start":1169,"line_end":1169,"column_start":27,"column_end":30},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":7908},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":697677,"byte_end":697680,"line_start":1179,"line_end":1179,"column_start":27,"column_end":30},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":7908},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":699394,"byte_end":699397,"line_start":1239,"line_end":1239,"column_start":47,"column_end":50},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":7908},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":699666,"byte_end":699669,"line_start":1248,"line_end":1248,"column_start":34,"column_end":37},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":7908},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":699772,"byte_end":699775,"line_start":1253,"line_end":1253,"column_start":48,"column_end":51},"kind":{"Impl":{"id":669}},"from":{"krate":0,"index":7908},"to":{"krate":1,"index":1669}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":700090,"byte_end":700093,"line_start":1262,"line_end":1262,"column_start":50,"column_end":53},"kind":{"Impl":{"id":670}},"from":{"krate":0,"index":7908},"to":{"krate":0,"index":238}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":700379,"byte_end":700382,"line_start":1271,"line_end":1271,"column_start":35,"column_end":38},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":7908},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":700626,"byte_end":700629,"line_start":1282,"line_end":1282,"column_start":42,"column_end":45},"kind":{"Impl":{"id":672}},"from":{"krate":0,"index":7908},"to":{"krate":1,"index":6364}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":700860,"byte_end":700863,"line_start":1292,"line_end":1292,"column_start":37,"column_end":40},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":7908},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":701363,"byte_end":701366,"line_start":1309,"line_end":1309,"column_start":39,"column_end":42},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":7908},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":702059,"byte_end":702062,"line_start":1338,"line_end":1338,"column_start":44,"column_end":47},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":7908},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":702371,"byte_end":702374,"line_start":1352,"line_end":1352,"column_start":42,"column_end":45},"kind":{"Impl":{"id":676}},"from":{"krate":0,"index":7908},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":702602,"byte_end":702605,"line_start":1363,"line_end":1363,"column_start":34,"column_end":37},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":7908},"to":{"krate":0,"index":2550}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":702879,"byte_end":702886,"line_start":1374,"line_end":1374,"column_start":23,"column_end":30},"kind":{"Impl":{"id":678}},"from":{"krate":0,"index":7915},"to":{"krate":1,"index":4965}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":703512,"byte_end":703522,"line_start":1400,"line_end":1400,"column_start":45,"column_end":55},"kind":{"Impl":{"id":679}},"from":{"krate":0,"index":7922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":703694,"byte_end":703704,"line_start":1410,"line_end":1410,"column_start":6,"column_end":16},"kind":{"Impl":{"id":680}},"from":{"krate":0,"index":7922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":703808,"byte_end":703818,"line_start":1416,"line_end":1416,"column_start":30,"column_end":40},"kind":{"Impl":{"id":681}},"from":{"krate":0,"index":7922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc1035.rs","byte_start":705221,"byte_end":705231,"line_start":1457,"line_end":1457,"column_start":57,"column_end":67},"kind":{"Impl":{"id":682}},"from":{"krate":0,"index":7922},"to":{"krate":1,"index":1893}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2782.rs","byte_start":707790,"byte_end":707793,"line_start":32,"line_end":32,"column_start":9,"column_end":12},"kind":{"Impl":{"id":683}},"from":{"krate":0,"index":7932},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2782.rs","byte_start":708339,"byte_end":708342,"line_start":63,"line_end":63,"column_start":36,"column_end":39},"kind":{"Impl":{"id":684}},"from":{"krate":0,"index":7932},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2782.rs","byte_start":708615,"byte_end":708618,"line_start":73,"line_end":73,"column_start":25,"column_end":28},"kind":{"Impl":{"id":685}},"from":{"krate":0,"index":7932},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2782.rs","byte_start":708705,"byte_end":708708,"line_start":78,"line_end":78,"column_start":37,"column_end":40},"kind":{"Impl":{"id":686}},"from":{"krate":0,"index":7932},"to":{"krate":1,"index":1669}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2782.rs","byte_start":709313,"byte_end":709316,"line_start":97,"line_end":97,"column_start":26,"column_end":29},"kind":{"Impl":{"id":687}},"from":{"krate":0,"index":7932},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2782.rs","byte_start":709855,"byte_end":709858,"line_start":115,"line_end":115,"column_start":57,"column_end":60},"kind":{"Impl":{"id":688}},"from":{"krate":0,"index":7932},"to":{"krate":0,"index":238}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2782.rs","byte_start":710450,"byte_end":710453,"line_start":136,"line_end":136,"column_start":37,"column_end":40},"kind":{"Impl":{"id":689}},"from":{"krate":0,"index":7932},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2782.rs","byte_start":710944,"byte_end":710947,"line_start":154,"line_end":154,"column_start":30,"column_end":33},"kind":{"Impl":{"id":690}},"from":{"krate":0,"index":7932},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2782.rs","byte_start":711647,"byte_end":711650,"line_start":183,"line_end":183,"column_start":29,"column_end":32},"kind":{"Impl":{"id":691}},"from":{"krate":0,"index":7932},"to":{"krate":0,"index":2550}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2782.rs","byte_start":712061,"byte_end":712064,"line_start":199,"line_end":199,"column_start":40,"column_end":43},"kind":{"Impl":{"id":692}},"from":{"krate":0,"index":7932},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":713740,"byte_end":713744,"line_start":56,"line_end":56,"column_start":12,"column_end":16},"kind":{"Impl":{"id":693}},"from":{"krate":0,"index":7948},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":717053,"byte_end":717057,"line_start":170,"line_end":170,"column_start":48,"column_end":52},"kind":{"Impl":{"id":694}},"from":{"krate":0,"index":7948},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":717556,"byte_end":717560,"line_start":183,"line_end":183,"column_start":41,"column_end":45},"kind":{"Impl":{"id":695}},"from":{"krate":0,"index":7948},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":717662,"byte_end":717666,"line_start":188,"line_end":188,"column_start":49,"column_end":53},"kind":{"Impl":{"id":696}},"from":{"krate":0,"index":7948},"to":{"krate":1,"index":1669}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":718790,"byte_end":718794,"line_start":219,"line_end":219,"column_start":42,"column_end":46},"kind":{"Impl":{"id":697}},"from":{"krate":0,"index":7948},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":719756,"byte_end":719760,"line_start":249,"line_end":249,"column_start":51,"column_end":55},"kind":{"Impl":{"id":698}},"from":{"krate":0,"index":7948},"to":{"krate":0,"index":238}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":721125,"byte_end":721129,"line_start":291,"line_end":291,"column_start":52,"column_end":56},"kind":{"Impl":{"id":699}},"from":{"krate":0,"index":7948},"to":{"krate":1,"index":6364}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":721539,"byte_end":721543,"line_start":306,"line_end":306,"column_start":37,"column_end":41},"kind":{"Impl":{"id":700}},"from":{"krate":0,"index":7948},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":722681,"byte_end":722685,"line_start":336,"line_end":336,"column_start":46,"column_end":50},"kind":{"Impl":{"id":701}},"from":{"krate":0,"index":7948},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":723361,"byte_end":723365,"line_start":358,"line_end":358,"column_start":56,"column_end":60},"kind":{"Impl":{"id":702}},"from":{"krate":0,"index":7948},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":723742,"byte_end":723746,"line_start":368,"line_end":368,"column_start":52,"column_end":56},"kind":{"Impl":{"id":703}},"from":{"krate":0,"index":7948},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":724263,"byte_end":724267,"line_start":384,"line_end":384,"column_start":32,"column_end":36},"kind":{"Impl":{"id":704}},"from":{"krate":0,"index":7948},"to":{"krate":0,"index":2550}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":724525,"byte_end":724531,"line_start":395,"line_end":395,"column_start":6,"column_end":12},"kind":{"Impl":{"id":705}},"from":{"krate":0,"index":7962},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":726900,"byte_end":726906,"line_start":474,"line_end":474,"column_start":39,"column_end":45},"kind":{"Impl":{"id":707}},"from":{"krate":0,"index":7962},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":727209,"byte_end":727215,"line_start":486,"line_end":486,"column_start":18,"column_end":24},"kind":{"Impl":{"id":708}},"from":{"krate":0,"index":7962},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc2845.rs","byte_start":727418,"byte_end":727424,"line_start":498,"line_end":498,"column_start":23,"column_end":29},"kind":{"Impl":{"id":709}},"from":{"krate":0,"index":7962},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":728233,"byte_end":728237,"line_start":28,"line_end":28,"column_start":6,"column_end":10},"kind":{"Impl":{"id":710}},"from":{"krate":0,"index":7988},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":728479,"byte_end":728483,"line_start":40,"line_end":40,"column_start":25,"column_end":29},"kind":{"Impl":{"id":711}},"from":{"krate":0,"index":7988},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":728577,"byte_end":728585,"line_start":46,"line_end":46,"column_start":21,"column_end":29},"kind":{"Impl":{"id":712}},"from":{"krate":4,"index":6813},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":728701,"byte_end":728705,"line_start":53,"line_end":53,"column_start":29,"column_end":33},"kind":{"Impl":{"id":713}},"from":{"krate":0,"index":7988},"to":{"krate":1,"index":7699}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":728914,"byte_end":728918,"line_start":64,"line_end":64,"column_start":23,"column_end":27},"kind":{"Impl":{"id":714}},"from":{"krate":0,"index":7988},"to":{"krate":0,"index":238}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":729085,"byte_end":729089,"line_start":73,"line_end":73,"column_start":39,"column_end":43},"kind":{"Impl":{"id":715}},"from":{"krate":0,"index":7988},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":729338,"byte_end":729342,"line_start":83,"line_end":83,"column_start":18,"column_end":22},"kind":{"Impl":{"id":716}},"from":{"krate":0,"index":7988},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":729824,"byte_end":729828,"line_start":105,"line_end":105,"column_start":23,"column_end":27},"kind":{"Impl":{"id":717}},"from":{"krate":0,"index":7988},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":729968,"byte_end":729972,"line_start":114,"line_end":114,"column_start":26,"column_end":30},"kind":{"Impl":{"id":718}},"from":{"krate":0,"index":7988},"to":{"krate":0,"index":2550}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":730063,"byte_end":730067,"line_start":121,"line_end":121,"column_start":21,"column_end":25},"kind":{"Impl":{"id":719}},"from":{"krate":0,"index":7988},"to":{"krate":1,"index":2074}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":730189,"byte_end":730193,"line_start":129,"line_end":129,"column_start":24,"column_end":28},"kind":{"Impl":{"id":720}},"from":{"krate":0,"index":7988},"to":{"krate":1,"index":2087}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":730328,"byte_end":730332,"line_start":138,"line_end":138,"column_start":26,"column_end":30},"kind":{"Impl":{"id":721}},"from":{"krate":0,"index":7988},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc3596.rs","byte_start":730424,"byte_end":730428,"line_start":144,"line_end":144,"column_start":26,"column_end":30},"kind":{"Impl":{"id":722}},"from":{"krate":0,"index":7988},"to":{"krate":1,"index":1817}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":731639,"byte_end":731645,"line_start":38,"line_end":38,"column_start":14,"column_end":20},"kind":{"Impl":{"id":723}},"from":{"krate":0,"index":8012},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":735338,"byte_end":735344,"line_start":162,"line_end":162,"column_start":50,"column_end":56},"kind":{"Impl":{"id":724}},"from":{"krate":0,"index":8012},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":735681,"byte_end":735687,"line_start":172,"line_end":172,"column_start":34,"column_end":40},"kind":{"Impl":{"id":725}},"from":{"krate":0,"index":8012},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":735793,"byte_end":735799,"line_start":177,"line_end":177,"column_start":51,"column_end":57},"kind":{"Impl":{"id":726}},"from":{"krate":0,"index":8012},"to":{"krate":1,"index":1669}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":736029,"byte_end":736035,"line_start":184,"line_end":184,"column_start":53,"column_end":59},"kind":{"Impl":{"id":727}},"from":{"krate":0,"index":8012},"to":{"krate":0,"index":238}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":736651,"byte_end":736657,"line_start":203,"line_end":203,"column_start":35,"column_end":41},"kind":{"Impl":{"id":728}},"from":{"krate":0,"index":8012},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":736811,"byte_end":736817,"line_start":212,"line_end":212,"column_start":42,"column_end":48},"kind":{"Impl":{"id":729}},"from":{"krate":0,"index":8012},"to":{"krate":1,"index":6364}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":737101,"byte_end":737107,"line_start":224,"line_end":224,"column_start":37,"column_end":43},"kind":{"Impl":{"id":730}},"from":{"krate":0,"index":8012},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":737780,"byte_end":737786,"line_start":247,"line_end":247,"column_start":39,"column_end":45},"kind":{"Impl":{"id":731}},"from":{"krate":0,"index":8012},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":738538,"byte_end":738544,"line_start":278,"line_end":278,"column_start":44,"column_end":50},"kind":{"Impl":{"id":732}},"from":{"krate":0,"index":8012},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":738799,"byte_end":738805,"line_start":288,"line_end":288,"column_start":42,"column_end":48},"kind":{"Impl":{"id":733}},"from":{"krate":0,"index":8012},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":739193,"byte_end":739199,"line_start":302,"line_end":302,"column_start":34,"column_end":40},"kind":{"Impl":{"id":734}},"from":{"krate":0,"index":8012},"to":{"krate":0,"index":2550}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":739634,"byte_end":739644,"line_start":322,"line_end":322,"column_start":12,"column_end":22},"kind":{"Impl":{"id":735}},"from":{"krate":0,"index":8021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":740551,"byte_end":740561,"line_start":360,"line_end":360,"column_start":33,"column_end":43},"kind":{"Impl":{"id":736}},"from":{"krate":0,"index":8021},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":741932,"byte_end":741937,"line_start":411,"line_end":411,"column_start":20,"column_end":25},"kind":{"Impl":{"id":737}},"from":{"krate":0,"index":8034},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":743332,"byte_end":743337,"line_start":481,"line_end":481,"column_start":49,"column_end":54},"kind":{"Impl":{"id":738}},"from":{"krate":0,"index":8034},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":743973,"byte_end":743978,"line_start":496,"line_end":496,"column_start":27,"column_end":32},"kind":{"Impl":{"id":739}},"from":{"krate":0,"index":8034},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":744130,"byte_end":744135,"line_start":502,"line_end":502,"column_start":50,"column_end":55},"kind":{"Impl":{"id":740}},"from":{"krate":0,"index":8034},"to":{"krate":1,"index":1669}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":745581,"byte_end":745586,"line_start":541,"line_end":541,"column_start":52,"column_end":57},"kind":{"Impl":{"id":741}},"from":{"krate":0,"index":8034},"to":{"krate":0,"index":238}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":746938,"byte_end":746943,"line_start":580,"line_end":580,"column_start":42,"column_end":47},"kind":{"Impl":{"id":742}},"from":{"krate":0,"index":8034},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":747105,"byte_end":747110,"line_start":589,"line_end":589,"column_start":52,"column_end":57},"kind":{"Impl":{"id":743}},"from":{"krate":0,"index":8034},"to":{"krate":1,"index":6364}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":747602,"byte_end":747607,"line_start":606,"line_end":606,"column_start":37,"column_end":42},"kind":{"Impl":{"id":744}},"from":{"krate":0,"index":8034},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":748764,"byte_end":748769,"line_start":638,"line_end":638,"column_start":54,"column_end":59},"kind":{"Impl":{"id":745}},"from":{"krate":0,"index":8034},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":750508,"byte_end":750513,"line_start":696,"line_end":696,"column_start":37,"column_end":42},"kind":{"Impl":{"id":746}},"from":{"krate":0,"index":8034},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":750962,"byte_end":750967,"line_start":710,"line_end":710,"column_start":35,"column_end":40},"kind":{"Impl":{"id":747}},"from":{"krate":0,"index":8034},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":751671,"byte_end":751676,"line_start":730,"line_end":730,"column_start":40,"column_end":45},"kind":{"Impl":{"id":748}},"from":{"krate":0,"index":8034},"to":{"krate":0,"index":2550}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":751940,"byte_end":751944,"line_start":743,"line_end":743,"column_start":20,"column_end":24},"kind":{"Impl":{"id":749}},"from":{"krate":0,"index":8050},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":752390,"byte_end":752394,"line_start":764,"line_end":764,"column_start":48,"column_end":52},"kind":{"Impl":{"id":750}},"from":{"krate":0,"index":8050},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":752659,"byte_end":752663,"line_start":775,"line_end":775,"column_start":41,"column_end":45},"kind":{"Impl":{"id":751}},"from":{"krate":0,"index":8050},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":752765,"byte_end":752769,"line_start":780,"line_end":780,"column_start":49,"column_end":53},"kind":{"Impl":{"id":752}},"from":{"krate":0,"index":8050},"to":{"krate":1,"index":1669}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":753166,"byte_end":753170,"line_start":794,"line_end":794,"column_start":51,"column_end":55},"kind":{"Impl":{"id":753}},"from":{"krate":0,"index":8050},"to":{"krate":0,"index":238}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":753598,"byte_end":753602,"line_start":809,"line_end":809,"column_start":20,"column_end":24},"kind":{"Impl":{"id":754}},"from":{"krate":0,"index":8050},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":753944,"byte_end":753948,"line_start":823,"line_end":823,"column_start":60,"column_end":64},"kind":{"Impl":{"id":755}},"from":{"krate":0,"index":8050},"to":{"krate":1,"index":6364}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":754160,"byte_end":754164,"line_start":833,"line_end":833,"column_start":37,"column_end":41},"kind":{"Impl":{"id":756}},"from":{"krate":0,"index":8050},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":754585,"byte_end":754589,"line_start":847,"line_end":847,"column_start":54,"column_end":58},"kind":{"Impl":{"id":757}},"from":{"krate":0,"index":8050},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":755253,"byte_end":755257,"line_start":876,"line_end":876,"column_start":37,"column_end":41},"kind":{"Impl":{"id":758}},"from":{"krate":0,"index":8050},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":755492,"byte_end":755496,"line_start":886,"line_end":886,"column_start":35,"column_end":39},"kind":{"Impl":{"id":759}},"from":{"krate":0,"index":8050},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":755831,"byte_end":755835,"line_start":899,"line_end":899,"column_start":40,"column_end":44},"kind":{"Impl":{"id":760}},"from":{"krate":0,"index":8050},"to":{"krate":0,"index":2550}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":756119,"byte_end":756121,"line_start":914,"line_end":914,"column_start":14,"column_end":16},"kind":{"Impl":{"id":761}},"from":{"krate":0,"index":8059},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":756746,"byte_end":756748,"line_start":948,"line_end":948,"column_start":46,"column_end":48},"kind":{"Impl":{"id":762}},"from":{"krate":0,"index":8059},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":757083,"byte_end":757085,"line_start":958,"line_end":958,"column_start":34,"column_end":36},"kind":{"Impl":{"id":763}},"from":{"krate":0,"index":8059},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":757187,"byte_end":757189,"line_start":963,"line_end":963,"column_start":47,"column_end":49},"kind":{"Impl":{"id":764}},"from":{"krate":0,"index":8059},"to":{"krate":1,"index":1669}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":757872,"byte_end":757874,"line_start":982,"line_end":982,"column_start":49,"column_end":51},"kind":{"Impl":{"id":765}},"from":{"krate":0,"index":8059},"to":{"krate":0,"index":238}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":758487,"byte_end":758489,"line_start":1001,"line_end":1001,"column_start":35,"column_end":37},"kind":{"Impl":{"id":766}},"from":{"krate":0,"index":8059},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":758643,"byte_end":758645,"line_start":1010,"line_end":1010,"column_start":42,"column_end":44},"kind":{"Impl":{"id":767}},"from":{"krate":0,"index":8059},"to":{"krate":1,"index":6364}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":758930,"byte_end":758932,"line_start":1022,"line_end":1022,"column_start":37,"column_end":39},"kind":{"Impl":{"id":768}},"from":{"krate":0,"index":8059},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":759613,"byte_end":759615,"line_start":1045,"line_end":1045,"column_start":39,"column_end":41},"kind":{"Impl":{"id":769}},"from":{"krate":0,"index":8059},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":760367,"byte_end":760369,"line_start":1076,"line_end":1076,"column_start":44,"column_end":46},"kind":{"Impl":{"id":770}},"from":{"krate":0,"index":8059},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":760702,"byte_end":760704,"line_start":1090,"line_end":1090,"column_start":42,"column_end":44},"kind":{"Impl":{"id":771}},"from":{"krate":0,"index":8059},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":761090,"byte_end":761092,"line_start":1104,"line_end":1104,"column_start":34,"column_end":36},"kind":{"Impl":{"id":772}},"from":{"krate":0,"index":8059},"to":{"krate":0,"index":2550}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":761294,"byte_end":761305,"line_start":1114,"line_end":1114,"column_start":14,"column_end":25},"kind":{"Impl":{"id":773}},"from":{"krate":0,"index":8068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":762626,"byte_end":762637,"line_start":1156,"line_end":1156,"column_start":27,"column_end":38},"kind":{"Impl":{"id":774}},"from":{"krate":0,"index":8068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":763378,"byte_end":763389,"line_start":1184,"line_end":1184,"column_start":40,"column_end":51},"kind":{"Impl":{"id":775}},"from":{"krate":0,"index":8068},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":763530,"byte_end":763541,"line_start":1193,"line_end":1193,"column_start":44,"column_end":55},"kind":{"Impl":{"id":776}},"from":{"krate":0,"index":8068},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":763719,"byte_end":763730,"line_start":1200,"line_end":1200,"column_start":29,"column_end":40},"kind":{"Impl":{"id":777}},"from":{"krate":0,"index":8068},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":763825,"byte_end":763836,"line_start":1205,"line_end":1205,"column_start":45,"column_end":56},"kind":{"Impl":{"id":778}},"from":{"krate":0,"index":8068},"to":{"krate":1,"index":1669}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":764062,"byte_end":764073,"line_start":1212,"line_end":1212,"column_start":47,"column_end":58},"kind":{"Impl":{"id":779}},"from":{"krate":0,"index":8068},"to":{"krate":0,"index":238}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":764268,"byte_end":764279,"line_start":1219,"line_end":1219,"column_start":30,"column_end":41},"kind":{"Impl":{"id":780}},"from":{"krate":0,"index":8068},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":764435,"byte_end":764446,"line_start":1228,"line_end":1228,"column_start":37,"column_end":48},"kind":{"Impl":{"id":781}},"from":{"krate":0,"index":8068},"to":{"krate":1,"index":6364}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":764843,"byte_end":764854,"line_start":1249,"line_end":1249,"column_start":37,"column_end":48},"kind":{"Impl":{"id":782}},"from":{"krate":0,"index":8068},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":765224,"byte_end":765235,"line_start":1261,"line_end":1261,"column_start":39,"column_end":50},"kind":{"Impl":{"id":783}},"from":{"krate":0,"index":8068},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":765836,"byte_end":765847,"line_start":1286,"line_end":1286,"column_start":44,"column_end":55},"kind":{"Impl":{"id":784}},"from":{"krate":0,"index":8068},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":766186,"byte_end":766197,"line_start":1301,"line_end":1301,"column_start":42,"column_end":53},"kind":{"Impl":{"id":785}},"from":{"krate":0,"index":8068},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":767070,"byte_end":767088,"line_start":1326,"line_end":1326,"column_start":30,"column_end":48},"kind":{"Impl":{"id":786}},"from":{"krate":0,"index":8075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":767338,"byte_end":767356,"line_start":1337,"line_end":1337,"column_start":6,"column_end":24},"kind":{"Impl":{"id":787}},"from":{"krate":0,"index":8075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":767457,"byte_end":767475,"line_start":1343,"line_end":1343,"column_start":30,"column_end":48},"kind":{"Impl":{"id":788}},"from":{"krate":0,"index":8075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":769922,"byte_end":769940,"line_start":1418,"line_end":1418,"column_start":27,"column_end":45},"kind":{"Impl":{"id":789}},"from":{"krate":0,"index":8075},"to":{"krate":1,"index":1893}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":770662,"byte_end":770677,"line_start":1448,"line_end":1448,"column_start":10,"column_end":25},"kind":{"Impl":{"id":790}},"from":{"krate":0,"index":3955},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":771988,"byte_end":772003,"line_start":1495,"line_end":1495,"column_start":23,"column_end":38},"kind":{"Impl":{"id":791}},"from":{"krate":0,"index":3955},"to":{"krate":1,"index":4965}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":772545,"byte_end":772555,"line_start":1522,"line_end":1522,"column_start":33,"column_end":43},"kind":{"Impl":{"id":792}},"from":{"krate":0,"index":6299},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":772889,"byte_end":772905,"line_start":1536,"line_end":1536,"column_start":23,"column_end":39},"kind":{"Impl":{"id":793}},"from":{"krate":0,"index":8084},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc4034.rs","byte_start":773256,"byte_end":773272,"line_start":1548,"line_end":1548,"column_start":28,"column_end":44},"kind":{"Impl":{"id":794}},"from":{"krate":0,"index":8084},"to":{"krate":4,"index":1642}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":781173,"byte_end":781178,"line_start":36,"line_end":36,"column_start":14,"column_end":19},"kind":{"Impl":{"id":795}},"from":{"krate":0,"index":8161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":782084,"byte_end":782089,"line_start":80,"line_end":80,"column_start":49,"column_end":54},"kind":{"Impl":{"id":796}},"from":{"krate":0,"index":8161},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":782492,"byte_end":782497,"line_start":92,"line_end":92,"column_start":34,"column_end":39},"kind":{"Impl":{"id":797}},"from":{"krate":0,"index":8161},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":782602,"byte_end":782607,"line_start":97,"line_end":97,"column_start":50,"column_end":55},"kind":{"Impl":{"id":798}},"from":{"krate":0,"index":8161},"to":{"krate":1,"index":1669}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":783565,"byte_end":783570,"line_start":124,"line_end":124,"column_start":52,"column_end":57},"kind":{"Impl":{"id":799}},"from":{"krate":0,"index":8161},"to":{"krate":0,"index":238}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":784457,"byte_end":784462,"line_start":151,"line_end":151,"column_start":35,"column_end":40},"kind":{"Impl":{"id":800}},"from":{"krate":0,"index":8161},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":784616,"byte_end":784621,"line_start":160,"line_end":160,"column_start":42,"column_end":47},"kind":{"Impl":{"id":801}},"from":{"krate":0,"index":8161},"to":{"krate":1,"index":6364}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":784969,"byte_end":784974,"line_start":174,"line_end":174,"column_start":37,"column_end":42},"kind":{"Impl":{"id":802}},"from":{"krate":0,"index":8161},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":785746,"byte_end":785751,"line_start":197,"line_end":197,"column_start":39,"column_end":44},"kind":{"Impl":{"id":803}},"from":{"krate":0,"index":8161},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":787154,"byte_end":787159,"line_start":253,"line_end":253,"column_start":44,"column_end":49},"kind":{"Impl":{"id":804}},"from":{"krate":0,"index":8161},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":787500,"byte_end":787505,"line_start":264,"line_end":264,"column_start":42,"column_end":47},"kind":{"Impl":{"id":805}},"from":{"krate":0,"index":8161},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":787977,"byte_end":787982,"line_start":280,"line_end":280,"column_start":34,"column_end":39},"kind":{"Impl":{"id":806}},"from":{"krate":0,"index":8161},"to":{"krate":0,"index":2550}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":788279,"byte_end":788289,"line_start":296,"line_end":296,"column_start":14,"column_end":24},"kind":{"Impl":{"id":807}},"from":{"krate":0,"index":8172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":788879,"byte_end":788889,"line_start":326,"line_end":326,"column_start":54,"column_end":64},"kind":{"Impl":{"id":808}},"from":{"krate":0,"index":8172},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":789213,"byte_end":789223,"line_start":336,"line_end":336,"column_start":34,"column_end":44},"kind":{"Impl":{"id":809}},"from":{"krate":0,"index":8172},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":789333,"byte_end":789343,"line_start":341,"line_end":341,"column_start":55,"column_end":65},"kind":{"Impl":{"id":810}},"from":{"krate":0,"index":8172},"to":{"krate":1,"index":1669}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":790025,"byte_end":790035,"line_start":360,"line_end":360,"column_start":57,"column_end":67},"kind":{"Impl":{"id":811}},"from":{"krate":0,"index":8172},"to":{"krate":0,"index":238}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":790649,"byte_end":790659,"line_start":379,"line_end":379,"column_start":35,"column_end":45},"kind":{"Impl":{"id":812}},"from":{"krate":0,"index":8172},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":791214,"byte_end":791224,"line_start":400,"line_end":400,"column_start":42,"column_end":52},"kind":{"Impl":{"id":813}},"from":{"krate":0,"index":8172},"to":{"krate":1,"index":6364}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":791511,"byte_end":791521,"line_start":412,"line_end":412,"column_start":37,"column_end":47},"kind":{"Impl":{"id":814}},"from":{"krate":0,"index":8172},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":791960,"byte_end":791970,"line_start":428,"line_end":428,"column_start":39,"column_end":49},"kind":{"Impl":{"id":815}},"from":{"krate":0,"index":8172},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":792714,"byte_end":792724,"line_start":459,"line_end":459,"column_start":44,"column_end":54},"kind":{"Impl":{"id":816}},"from":{"krate":0,"index":8172},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":792974,"byte_end":792984,"line_start":468,"line_end":468,"column_start":42,"column_end":52},"kind":{"Impl":{"id":817}},"from":{"krate":0,"index":8172},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc5155.rs","byte_start":793369,"byte_end":793379,"line_start":482,"line_end":482,"column_start":34,"column_end":44},"kind":{"Impl":{"id":818}},"from":{"krate":0,"index":8172},"to":{"krate":0,"index":2550}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":794224,"byte_end":794231,"line_start":29,"line_end":29,"column_start":14,"column_end":21},"kind":{"Impl":{"id":819}},"from":{"krate":0,"index":8181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":794837,"byte_end":794844,"line_start":64,"line_end":64,"column_start":51,"column_end":58},"kind":{"Impl":{"id":820}},"from":{"krate":0,"index":8181},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":795182,"byte_end":795189,"line_start":74,"line_end":74,"column_start":34,"column_end":41},"kind":{"Impl":{"id":821}},"from":{"krate":0,"index":8181},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":795296,"byte_end":795303,"line_start":79,"line_end":79,"column_start":52,"column_end":59},"kind":{"Impl":{"id":822}},"from":{"krate":0,"index":8181},"to":{"krate":1,"index":1669}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":795535,"byte_end":795542,"line_start":86,"line_end":86,"column_start":54,"column_end":61},"kind":{"Impl":{"id":823}},"from":{"krate":0,"index":8181},"to":{"krate":0,"index":238}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":796159,"byte_end":796166,"line_start":105,"line_end":105,"column_start":35,"column_end":42},"kind":{"Impl":{"id":824}},"from":{"krate":0,"index":8181},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":796320,"byte_end":796327,"line_start":114,"line_end":114,"column_start":42,"column_end":49},"kind":{"Impl":{"id":825}},"from":{"krate":0,"index":8181},"to":{"krate":1,"index":6364}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":796614,"byte_end":796621,"line_start":126,"line_end":126,"column_start":37,"column_end":44},"kind":{"Impl":{"id":826}},"from":{"krate":0,"index":8181},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":797294,"byte_end":797301,"line_start":149,"line_end":149,"column_start":39,"column_end":46},"kind":{"Impl":{"id":827}},"from":{"krate":0,"index":8181},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":798054,"byte_end":798061,"line_start":180,"line_end":180,"column_start":44,"column_end":51},"kind":{"Impl":{"id":828}},"from":{"krate":0,"index":8181},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":798316,"byte_end":798323,"line_start":190,"line_end":190,"column_start":42,"column_end":49},"kind":{"Impl":{"id":829}},"from":{"krate":0,"index":8181},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":798707,"byte_end":798714,"line_start":204,"line_end":204,"column_start":34,"column_end":41},"kind":{"Impl":{"id":830}},"from":{"krate":0,"index":8181},"to":{"krate":0,"index":2550}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":798997,"byte_end":799000,"line_start":219,"line_end":219,"column_start":14,"column_end":17},"kind":{"Impl":{"id":831}},"from":{"krate":0,"index":8190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":799627,"byte_end":799630,"line_start":253,"line_end":253,"column_start":47,"column_end":50},"kind":{"Impl":{"id":832}},"from":{"krate":0,"index":8190},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":799966,"byte_end":799969,"line_start":263,"line_end":263,"column_start":34,"column_end":37},"kind":{"Impl":{"id":833}},"from":{"krate":0,"index":8190},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":800072,"byte_end":800075,"line_start":268,"line_end":268,"column_start":48,"column_end":51},"kind":{"Impl":{"id":834}},"from":{"krate":0,"index":8190},"to":{"krate":1,"index":1669}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":800760,"byte_end":800763,"line_start":287,"line_end":287,"column_start":50,"column_end":53},"kind":{"Impl":{"id":835}},"from":{"krate":0,"index":8190},"to":{"krate":0,"index":238}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":801377,"byte_end":801380,"line_start":306,"line_end":306,"column_start":35,"column_end":38},"kind":{"Impl":{"id":836}},"from":{"krate":0,"index":8190},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":801534,"byte_end":801537,"line_start":315,"line_end":315,"column_start":42,"column_end":45},"kind":{"Impl":{"id":837}},"from":{"krate":0,"index":8190},"to":{"krate":1,"index":6364}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":801822,"byte_end":801825,"line_start":327,"line_end":327,"column_start":37,"column_end":40},"kind":{"Impl":{"id":838}},"from":{"krate":0,"index":8190},"to":{"krate":0,"index":2261}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":802506,"byte_end":802509,"line_start":350,"line_end":350,"column_start":39,"column_end":42},"kind":{"Impl":{"id":839}},"from":{"krate":0,"index":8190},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":803262,"byte_end":803265,"line_start":381,"line_end":381,"column_start":44,"column_end":47},"kind":{"Impl":{"id":840}},"from":{"krate":0,"index":8190},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":803598,"byte_end":803601,"line_start":395,"line_end":395,"column_start":42,"column_end":45},"kind":{"Impl":{"id":841}},"from":{"krate":0,"index":8190},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/rdata/rfc7344.rs","byte_start":803988,"byte_end":803991,"line_start":409,"line_end":409,"column_start":34,"column_end":37},"kind":{"Impl":{"id":842}},"from":{"krate":0,"index":8190},"to":{"krate":0,"index":2550}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base32.rs","byte_start":894601,"byte_end":894608,"line_start":133,"line_end":133,"column_start":6,"column_end":13},"kind":{"Impl":{"id":843}},"from":{"krate":0,"index":4246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":905598,"byte_end":905605,"line_start":129,"line_end":129,"column_start":6,"column_end":13},"kind":{"Impl":{"id":844}},"from":{"krate":0,"index":4283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":908056,"byte_end":908063,"line_start":211,"line_end":211,"column_start":18,"column_end":25},"kind":{"Impl":{"id":845}},"from":{"krate":0,"index":4283},"to":{"krate":1,"index":1893}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":908703,"byte_end":908714,"line_start":238,"line_end":238,"column_start":23,"column_end":34},"kind":{"Impl":{"id":846}},"from":{"krate":0,"index":8717},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/domain-0.5.3/src/utils/base64.rs","byte_start":909146,"byte_end":909157,"line_start":252,"line_end":252,"column_start":28,"column_end":39},"kind":{"Impl":{"id":847}},"from":{"krate":0,"index":8717},"to":{"krate":4,"index":1642}}]}